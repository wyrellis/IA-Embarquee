
determination.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00014da8  08000200  08000200  00010200  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000024d0  08014fa8  08014fa8  00024fa8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08017478  08017478  0003089c  2**0
                  CONTENTS
  4 .ARM          00000008  08017478  08017478  00027478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08017480  08017480  0003089c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08017480  08017480  00027480  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08017484  08017484  00027484  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000089c  20000000  08017488  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000584  200008a0  08017d24  000308a0  2**3
                  ALLOC
 10 ._user_heap_stack 00002804  20000e24  08017d24  00030e24  2**0
                  ALLOC
 11 .ARM.attributes 00000032  00000000  00000000  0003089c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000194fe  00000000  00000000  000308ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000378f  00000000  00000000  00049dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000ef8  00000000  00000000  0004d560  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000df0  00000000  00000000  0004e458  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0002bf78  00000000  00000000  0004f248  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00010984  00000000  00000000  0007b1c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    001028e7  00000000  00000000  0008bb44  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      00008cad  00000000  00000000  0018e42b  2**0
                  CONTENTS, READONLY
 20 .iar.rtmodel  0000033e  00000000  00000000  001970d8  2**0
                  CONTENTS, READONLY
 21 .iar_vfe_header 00000034  00000000  00000000  00197418  2**2
                  CONTENTS, READONLY
 22 .debug_frame  0000a2a0  00000000  00000000  0019744c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000200 <__do_global_dtors_aux>:
 8000200:	b510      	push	{r4, lr}
 8000202:	4c05      	ldr	r4, [pc, #20]	; (8000218 <__do_global_dtors_aux+0x18>)
 8000204:	7823      	ldrb	r3, [r4, #0]
 8000206:	b933      	cbnz	r3, 8000216 <__do_global_dtors_aux+0x16>
 8000208:	4b04      	ldr	r3, [pc, #16]	; (800021c <__do_global_dtors_aux+0x1c>)
 800020a:	b113      	cbz	r3, 8000212 <__do_global_dtors_aux+0x12>
 800020c:	4804      	ldr	r0, [pc, #16]	; (8000220 <__do_global_dtors_aux+0x20>)
 800020e:	f3af 8000 	nop.w
 8000212:	2301      	movs	r3, #1
 8000214:	7023      	strb	r3, [r4, #0]
 8000216:	bd10      	pop	{r4, pc}
 8000218:	200008a0 	.word	0x200008a0
 800021c:	00000000 	.word	0x00000000
 8000220:	08014f90 	.word	0x08014f90

08000224 <frame_dummy>:
 8000224:	b508      	push	{r3, lr}
 8000226:	4b03      	ldr	r3, [pc, #12]	; (8000234 <frame_dummy+0x10>)
 8000228:	b11b      	cbz	r3, 8000232 <frame_dummy+0xe>
 800022a:	4903      	ldr	r1, [pc, #12]	; (8000238 <frame_dummy+0x14>)
 800022c:	4803      	ldr	r0, [pc, #12]	; (800023c <frame_dummy+0x18>)
 800022e:	f3af 8000 	nop.w
 8000232:	bd08      	pop	{r3, pc}
 8000234:	00000000 	.word	0x00000000
 8000238:	200008a4 	.word	0x200008a4
 800023c:	08014f90 	.word	0x08014f90

08000240 <ai_inspector_default_config>:
 8000240:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000244:	b084      	sub	sp, #16
 8000246:	2600      	movs	r6, #0
 8000248:	4669      	mov	r1, sp
 800024a:	2200      	movs	r2, #0
 800024c:	2300      	movs	r3, #0
 800024e:	2400      	movs	r4, #0
 8000250:	2500      	movs	r5, #0
 8000252:	f046 0601 	orr.w	r6, r6, #1
 8000256:	e881 003c 	stmia.w	r1, {r2, r3, r4, r5}
 800025a:	f88d 6000 	strb.w	r6, [sp]
 800025e:	e891 4380 	ldmia.w	r1, {r7, r8, r9, lr}
 8000262:	e880 4380 	stmia.w	r0, {r7, r8, r9, lr}
 8000266:	b004      	add	sp, #16
 8000268:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800026c <ai_inspector_create>:
 800026c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800026e:	0004      	movs	r4, r0
 8000270:	b081      	sub	sp, #4
 8000272:	bf08      	it	eq
 8000274:	2000      	moveq	r0, #0
 8000276:	d026      	beq.n	80002c6 <ai_inspector_create+0x5a>
 8000278:	4814      	ldr	r0, [pc, #80]	; (80002cc <.text_6>)
 800027a:	2200      	movs	r2, #0
 800027c:	2300      	movs	r3, #0
 800027e:	2500      	movs	r5, #0
 8000280:	c02c      	stmia	r0!, {r2, r3, r5}
 8000282:	c02c      	stmia	r0!, {r2, r3, r5}
 8000284:	c02c      	stmia	r0!, {r2, r3, r5}
 8000286:	3824      	subs	r0, #36	; 0x24
 8000288:	2601      	movs	r6, #1
 800028a:	f100 0c18 	add.w	ip, r0, #24
 800028e:	f100 0218 	add.w	r2, r0, #24
 8000292:	7286      	strb	r6, [r0, #10]
 8000294:	8406      	strh	r6, [r0, #32]
 8000296:	f8c0 c018 	str.w	ip, [r0, #24]
 800029a:	61c2      	str	r2, [r0, #28]
 800029c:	b131      	cbz	r1, 80002ac <ai_inspector_create+0x40>
 800029e:	780a      	ldrb	r2, [r1, #0]
 80002a0:	784b      	ldrb	r3, [r1, #1]
 80002a2:	788d      	ldrb	r5, [r1, #2]
 80002a4:	684e      	ldr	r6, [r1, #4]
 80002a6:	688f      	ldr	r7, [r1, #8]
 80002a8:	68c9      	ldr	r1, [r1, #12]
 80002aa:	e002      	b.n	80002b2 <ai_inspector_create+0x46>
 80002ac:	2201      	movs	r2, #1
 80002ae:	2600      	movs	r6, #0
 80002b0:	2700      	movs	r7, #0
 80002b2:	7202      	strb	r2, [r0, #8]
 80002b4:	7243      	strb	r3, [r0, #9]
 80002b6:	7285      	strb	r5, [r0, #10]
 80002b8:	60c6      	str	r6, [r0, #12]
 80002ba:	6107      	str	r7, [r0, #16]
 80002bc:	6141      	str	r1, [r0, #20]
 80002be:	f000 fb85 	bl	80009cc <ai_platform_context_release>
 80002c2:	6020      	str	r0, [r4, #0]
 80002c4:	2001      	movs	r0, #1
 80002c6:	b001      	add	sp, #4
 80002c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080002cc <.text_6>:
 80002cc:	200008bc 	.word	0x200008bc

080002d0 <ai_inspector_destroy>:
 80002d0:	b570      	push	{r4, r5, r6, lr}
 80002d2:	f000 fb26 	bl	8000922 <ai_platform_context_acquire>
 80002d6:	0004      	movs	r4, r0
 80002d8:	d101      	bne.n	80002de <ai_inspector_destroy+0xe>
 80002da:	2000      	movs	r0, #0
 80002dc:	bd70      	pop	{r4, r5, r6, pc}
 80002de:	69a0      	ldr	r0, [r4, #24]
 80002e0:	f1a0 053c 	sub.w	r5, r0, #60	; 0x3c
 80002e4:	f105 023c 	add.w	r2, r5, #60	; 0x3c
 80002e8:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 80002ea:	f104 0018 	add.w	r0, r4, #24
 80002ee:	4282      	cmp	r2, r0
 80002f0:	f1a1 063c 	sub.w	r6, r1, #60	; 0x3c
 80002f4:	d015      	beq.n	8000322 <ai_inspector_destroy+0x52>
 80002f6:	6828      	ldr	r0, [r5, #0]
 80002f8:	f001 fd24 	bl	8001d44 <ai_network_inspect_destroy>
 80002fc:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 80002fe:	6c28      	ldr	r0, [r5, #64]	; 0x40
 8000300:	6048      	str	r0, [r1, #4]
 8000302:	6c28      	ldr	r0, [r5, #64]	; 0x40
 8000304:	6bea      	ldr	r2, [r5, #60]	; 0x3c
 8000306:	6002      	str	r2, [r0, #0]
 8000308:	4628      	mov	r0, r5
 800030a:	f000 fff4 	bl	80012f6 <core_mem_free>
 800030e:	6bf1      	ldr	r1, [r6, #60]	; 0x3c
 8000310:	4635      	mov	r5, r6
 8000312:	f105 003c 	add.w	r0, r5, #60	; 0x3c
 8000316:	f104 0218 	add.w	r2, r4, #24
 800031a:	4290      	cmp	r0, r2
 800031c:	f1a1 063c 	sub.w	r6, r1, #60	; 0x3c
 8000320:	d1e9      	bne.n	80002f6 <ai_inspector_destroy+0x26>
 8000322:	2001      	movs	r0, #1
 8000324:	bd70      	pop	{r4, r5, r6, pc}

08000326 <ai_inspector_bind_network>:
 8000326:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800032a:	460c      	mov	r4, r1
 800032c:	f000 faf9 	bl	8000922 <ai_platform_context_acquire>
 8000330:	0005      	movs	r5, r0
 8000332:	bf18      	it	ne
 8000334:	2c00      	cmpne	r4, #0
 8000336:	d033      	beq.n	80003a0 <ai_inspector_bind_network+0x7a>
 8000338:	6820      	ldr	r0, [r4, #0]
 800033a:	b388      	cbz	r0, 80003a0 <ai_inspector_bind_network+0x7a>
 800033c:	2044      	movs	r0, #68	; 0x44
 800033e:	f000 ffcd 	bl	80012dc <core_mem_alloc>
 8000342:	0006      	movs	r6, r0
 8000344:	d02c      	beq.n	80003a0 <ai_inspector_bind_network+0x7a>
 8000346:	8c28      	ldrh	r0, [r5, #32]
 8000348:	1c41      	adds	r1, r0, #1
 800034a:	8429      	strh	r1, [r5, #32]
 800034c:	f105 0118 	add.w	r1, r5, #24
 8000350:	8730      	strh	r0, [r6, #56]	; 0x38
 8000352:	e8b4 518d 	ldmia.w	r4!, {r0, r2, r3, r7, r8, ip, lr}
 8000356:	e8a6 518d 	stmia.w	r6!, {r0, r2, r3, r7, r8, ip, lr}
 800035a:	e8b4 518d 	ldmia.w	r4!, {r0, r2, r3, r7, r8, ip, lr}
 800035e:	e8a6 518d 	stmia.w	r6!, {r0, r2, r3, r7, r8, ip, lr}
 8000362:	3e38      	subs	r6, #56	; 0x38
 8000364:	f106 043c 	add.w	r4, r6, #60	; 0x3c
 8000368:	6024      	str	r4, [r4, #0]
 800036a:	6434      	str	r4, [r6, #64]	; 0x40
 800036c:	69a8      	ldr	r0, [r5, #24]
 800036e:	6020      	str	r0, [r4, #0]
 8000370:	6061      	str	r1, [r4, #4]
 8000372:	f105 0108 	add.w	r1, r5, #8
 8000376:	6044      	str	r4, [r0, #4]
 8000378:	61ac      	str	r4, [r5, #24]
 800037a:	6830      	ldr	r0, [r6, #0]
 800037c:	f001 fc0a 	bl	8001b94 <ai_network_inspect_init>
 8000380:	b110      	cbz	r0, 8000388 <ai_inspector_bind_network+0x62>
 8000382:	8f30      	ldrh	r0, [r6, #56]	; 0x38
 8000384:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000388:	6821      	ldr	r1, [r4, #0]
 800038a:	6c30      	ldr	r0, [r6, #64]	; 0x40
 800038c:	6048      	str	r0, [r1, #4]
 800038e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8000390:	6822      	ldr	r2, [r4, #0]
 8000392:	4630      	mov	r0, r6
 8000394:	601a      	str	r2, [r3, #0]
 8000396:	f000 ffae 	bl	80012f6 <core_mem_free>
 800039a:	8c28      	ldrh	r0, [r5, #32]
 800039c:	1e41      	subs	r1, r0, #1
 800039e:	8429      	strh	r1, [r5, #32]
 80003a0:	2000      	movs	r0, #0
 80003a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080003a6 <ai_inspector_unbind_network>:
 80003a6:	b570      	push	{r4, r5, r6, lr}
 80003a8:	460d      	mov	r5, r1
 80003aa:	f000 faba 	bl	8000922 <ai_platform_context_acquire>
 80003ae:	2800      	cmp	r0, #0
 80003b0:	d03e      	beq.n	8000430 <ai_inspector_unbind_network+0x8a>
 80003b2:	0029      	movs	r1, r5
 80003b4:	d03c      	beq.n	8000430 <ai_inspector_unbind_network+0x8a>
 80003b6:	f850 1f18 	ldr.w	r1, [r0, #24]!
 80003ba:	f1a1 043c 	sub.w	r4, r1, #60	; 0x3c
 80003be:	e002      	b.n	80003c6 <ai_inspector_unbind_network+0x20>
 80003c0:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80003c2:	f1a2 043c 	sub.w	r4, r2, #60	; 0x3c
 80003c6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80003ca:	4281      	cmp	r1, r0
 80003cc:	d030      	beq.n	8000430 <ai_inspector_unbind_network+0x8a>
 80003ce:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80003d0:	42aa      	cmp	r2, r5
 80003d2:	d01d      	beq.n	8000410 <ai_inspector_unbind_network+0x6a>
 80003d4:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80003d6:	f1a1 043c 	sub.w	r4, r1, #60	; 0x3c
 80003da:	f104 063c 	add.w	r6, r4, #60	; 0x3c
 80003de:	4286      	cmp	r6, r0
 80003e0:	d026      	beq.n	8000430 <ai_inspector_unbind_network+0x8a>
 80003e2:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80003e4:	42aa      	cmp	r2, r5
 80003e6:	d013      	beq.n	8000410 <ai_inspector_unbind_network+0x6a>
 80003e8:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80003ea:	f1a1 043c 	sub.w	r4, r1, #60	; 0x3c
 80003ee:	f104 063c 	add.w	r6, r4, #60	; 0x3c
 80003f2:	4286      	cmp	r6, r0
 80003f4:	d01c      	beq.n	8000430 <ai_inspector_unbind_network+0x8a>
 80003f6:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80003f8:	42aa      	cmp	r2, r5
 80003fa:	d009      	beq.n	8000410 <ai_inspector_unbind_network+0x6a>
 80003fc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80003fe:	f1a1 043c 	sub.w	r4, r1, #60	; 0x3c
 8000402:	f104 063c 	add.w	r6, r4, #60	; 0x3c
 8000406:	4286      	cmp	r6, r0
 8000408:	d012      	beq.n	8000430 <ai_inspector_unbind_network+0x8a>
 800040a:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800040c:	42aa      	cmp	r2, r5
 800040e:	d1d7      	bne.n	80003c0 <ai_inspector_unbind_network+0x1a>
 8000410:	b174      	cbz	r4, 8000430 <ai_inspector_unbind_network+0x8a>
 8000412:	6820      	ldr	r0, [r4, #0]
 8000414:	f001 fc96 	bl	8001d44 <ai_network_inspect_destroy>
 8000418:	b158      	cbz	r0, 8000432 <ai_inspector_unbind_network+0x8c>
 800041a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 800041c:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800041e:	6048      	str	r0, [r1, #4]
 8000420:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8000422:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8000424:	6002      	str	r2, [r0, #0]
 8000426:	4620      	mov	r0, r4
 8000428:	f000 ff65 	bl	80012f6 <core_mem_free>
 800042c:	2001      	movs	r0, #1
 800042e:	bd70      	pop	{r4, r5, r6, pc}
 8000430:	2000      	movs	r0, #0
 8000432:	bd70      	pop	{r4, r5, r6, pc}

08000434 <ai_inspector_get_report>:
 8000434:	b530      	push	{r4, r5, lr}
 8000436:	b081      	sub	sp, #4
 8000438:	460d      	mov	r5, r1
 800043a:	4614      	mov	r4, r2
 800043c:	f000 fa71 	bl	8000922 <ai_platform_context_acquire>
 8000440:	2800      	cmp	r0, #0
 8000442:	bf18      	it	ne
 8000444:	2c00      	cmpne	r4, #0
 8000446:	d031      	beq.n	80004ac <ai_inspector_get_report+0x78>
 8000448:	f100 0118 	add.w	r1, r0, #24
 800044c:	6808      	ldr	r0, [r1, #0]
 800044e:	383c      	subs	r0, #60	; 0x3c
 8000450:	e002      	b.n	8000458 <ai_inspector_get_report+0x24>
 8000452:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8000454:	f1a2 003c 	sub.w	r0, r2, #60	; 0x3c
 8000458:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 800045c:	428b      	cmp	r3, r1
 800045e:	d025      	beq.n	80004ac <ai_inspector_get_report+0x78>
 8000460:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8000462:	42aa      	cmp	r2, r5
 8000464:	d01a      	beq.n	800049c <ai_inspector_get_report+0x68>
 8000466:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8000468:	383c      	subs	r0, #60	; 0x3c
 800046a:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 800046e:	428b      	cmp	r3, r1
 8000470:	d01c      	beq.n	80004ac <ai_inspector_get_report+0x78>
 8000472:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8000474:	42aa      	cmp	r2, r5
 8000476:	d011      	beq.n	800049c <ai_inspector_get_report+0x68>
 8000478:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800047a:	383c      	subs	r0, #60	; 0x3c
 800047c:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8000480:	428b      	cmp	r3, r1
 8000482:	d013      	beq.n	80004ac <ai_inspector_get_report+0x78>
 8000484:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8000486:	42aa      	cmp	r2, r5
 8000488:	d008      	beq.n	800049c <ai_inspector_get_report+0x68>
 800048a:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800048c:	383c      	subs	r0, #60	; 0x3c
 800048e:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8000492:	428b      	cmp	r3, r1
 8000494:	d00a      	beq.n	80004ac <ai_inspector_get_report+0x78>
 8000496:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8000498:	42aa      	cmp	r2, r5
 800049a:	d1da      	bne.n	8000452 <ai_inspector_get_report+0x1e>
 800049c:	b130      	cbz	r0, 80004ac <ai_inspector_get_report+0x78>
 800049e:	6800      	ldr	r0, [r0, #0]
 80004a0:	4621      	mov	r1, r4
 80004a2:	b001      	add	sp, #4
 80004a4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80004a8:	f001 bc34 	b.w	8001d14 <ai_network_inspect_get_report>
 80004ac:	2000      	movs	r0, #0
 80004ae:	b001      	add	sp, #4
 80004b0:	bd30      	pop	{r4, r5, pc}

080004b2 <ai_inspector_run>:
 80004b2:	b570      	push	{r4, r5, r6, lr}
 80004b4:	460e      	mov	r6, r1
 80004b6:	4614      	mov	r4, r2
 80004b8:	461d      	mov	r5, r3
 80004ba:	f000 fa32 	bl	8000922 <ai_platform_context_acquire>
 80004be:	2800      	cmp	r0, #0
 80004c0:	bf18      	it	ne
 80004c2:	2c00      	cmpne	r4, #0
 80004c4:	d031      	beq.n	800052a <ai_inspector_run+0x78>
 80004c6:	f100 0118 	add.w	r1, r0, #24
 80004ca:	6808      	ldr	r0, [r1, #0]
 80004cc:	383c      	subs	r0, #60	; 0x3c
 80004ce:	e002      	b.n	80004d6 <ai_inspector_run+0x24>
 80004d0:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80004d2:	f1a2 003c 	sub.w	r0, r2, #60	; 0x3c
 80004d6:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 80004da:	428b      	cmp	r3, r1
 80004dc:	d025      	beq.n	800052a <ai_inspector_run+0x78>
 80004de:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80004e0:	42b2      	cmp	r2, r6
 80004e2:	d01a      	beq.n	800051a <ai_inspector_run+0x68>
 80004e4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80004e6:	383c      	subs	r0, #60	; 0x3c
 80004e8:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 80004ec:	428b      	cmp	r3, r1
 80004ee:	d01c      	beq.n	800052a <ai_inspector_run+0x78>
 80004f0:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80004f2:	42b2      	cmp	r2, r6
 80004f4:	d011      	beq.n	800051a <ai_inspector_run+0x68>
 80004f6:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80004f8:	383c      	subs	r0, #60	; 0x3c
 80004fa:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 80004fe:	428b      	cmp	r3, r1
 8000500:	d013      	beq.n	800052a <ai_inspector_run+0x78>
 8000502:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8000504:	42b2      	cmp	r2, r6
 8000506:	d008      	beq.n	800051a <ai_inspector_run+0x68>
 8000508:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800050a:	383c      	subs	r0, #60	; 0x3c
 800050c:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8000510:	428b      	cmp	r3, r1
 8000512:	d00a      	beq.n	800052a <ai_inspector_run+0x78>
 8000514:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8000516:	42b2      	cmp	r2, r6
 8000518:	d1da      	bne.n	80004d0 <ai_inspector_run+0x1e>
 800051a:	b130      	cbz	r0, 800052a <ai_inspector_run+0x78>
 800051c:	462a      	mov	r2, r5
 800051e:	4621      	mov	r1, r4
 8000520:	6800      	ldr	r0, [r0, #0]
 8000522:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000526:	f000 bc95 	b.w	8000e54 <ai_platform_network_process>
 800052a:	2000      	movs	r0, #0
 800052c:	bd70      	pop	{r4, r5, r6, pc}
	...

08000530 <CRC_Lock>:
 8000530:	f8df 0904 	ldr.w	r0, [pc, #2308]	; 8000e38 <.text_19>
 8000534:	f240 4249 	movw	r2, #1097	; 0x449
 8000538:	6801      	ldr	r1, [r0, #0]
 800053a:	0849      	lsrs	r1, r1, #1
 800053c:	0049      	lsls	r1, r1, #1
 800053e:	6001      	str	r1, [r0, #0]
 8000540:	f8df 08f8 	ldr.w	r0, [pc, #2296]	; 8000e3c <.text_20>
 8000544:	6801      	ldr	r1, [r0, #0]
 8000546:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800054a:	4291      	cmp	r1, r2
 800054c:	d115      	bne.n	800057a <CRC_Lock+0x4a>
 800054e:	2001      	movs	r0, #1
 8000550:	2200      	movs	r2, #0
 8000552:	2100      	movs	r1, #0
 8000554:	4310      	orrs	r0, r2
 8000556:	4308      	orrs	r0, r1
 8000558:	d01d      	beq.n	8000596 <CRC_Lock+0x66>
 800055a:	f8df 18e4 	ldr.w	r1, [pc, #2276]	; 8000e40 <.text_21>
 800055e:	2201      	movs	r2, #1
 8000560:	608a      	str	r2, [r1, #8]
 8000562:	6888      	ldr	r0, [r1, #8]
 8000564:	2800      	cmp	r0, #0
 8000566:	d1fc      	bne.n	8000562 <CRC_Lock+0x32>
 8000568:	f8df 28d8 	ldr.w	r2, [pc, #2264]	; 8000e44 <.text_22>
 800056c:	f8df 38d8 	ldr.w	r3, [pc, #2264]	; 8000e48 <.text_23>
 8000570:	600a      	str	r2, [r1, #0]
 8000572:	6809      	ldr	r1, [r1, #0]
 8000574:	4299      	cmp	r1, r3
 8000576:	d026      	beq.n	80005c6 <CRC_Lock+0x96>
 8000578:	e7fe      	b.n	8000578 <CRC_Lock+0x48>
 800057a:	2000      	movs	r0, #0
 800057c:	f240 4c51 	movw	ip, #1105	; 0x451
 8000580:	4561      	cmp	r1, ip
 8000582:	bf08      	it	eq
 8000584:	2201      	moveq	r2, #1
 8000586:	d0e4      	beq.n	8000552 <CRC_Lock+0x22>
 8000588:	2200      	movs	r2, #0
 800058a:	f240 4352 	movw	r3, #1106	; 0x452
 800058e:	4299      	cmp	r1, r3
 8000590:	d1df      	bne.n	8000552 <CRC_Lock+0x22>
 8000592:	2101      	movs	r1, #1
 8000594:	e7de      	b.n	8000554 <CRC_Lock+0x24>
 8000596:	f8df 08b4 	ldr.w	r0, [pc, #2228]	; 8000e4c <.text_24>
 800059a:	6801      	ldr	r1, [r0, #0]
 800059c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80005a0:	f5b1 6f8a 	cmp.w	r1, #1104	; 0x450
 80005a4:	d10f      	bne.n	80005c6 <CRC_Lock+0x96>
 80005a6:	f8df 18a8 	ldr.w	r1, [pc, #2216]	; 8000e50 <.text_25>
 80005aa:	2201      	movs	r2, #1
 80005ac:	608a      	str	r2, [r1, #8]
 80005ae:	6888      	ldr	r0, [r1, #8]
 80005b0:	2800      	cmp	r0, #0
 80005b2:	d1fc      	bne.n	80005ae <CRC_Lock+0x7e>
 80005b4:	f8df 288c 	ldr.w	r2, [pc, #2188]	; 8000e44 <.text_22>
 80005b8:	f8df 388c 	ldr.w	r3, [pc, #2188]	; 8000e48 <.text_23>
 80005bc:	600a      	str	r2, [r1, #0]
 80005be:	6809      	ldr	r1, [r1, #0]
 80005c0:	4299      	cmp	r1, r3
 80005c2:	d000      	beq.n	80005c6 <CRC_Lock+0x96>
 80005c4:	e7fe      	b.n	80005c4 <CRC_Lock+0x94>
 80005c6:	4770      	bx	lr

080005c8 <_ai_platform_get_io_buffers_info>:
 80005c8:	e92d 4ff2 	stmdb	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80005cc:	2500      	movs	r5, #0
 80005ce:	46aa      	mov	sl, r5
 80005d0:	b082      	sub	sp, #8
 80005d2:	4607      	mov	r7, r0
 80005d4:	46ab      	mov	fp, r5
 80005d6:	46d0      	mov	r8, sl
 80005d8:	46d1      	mov	r9, sl
 80005da:	e028      	b.n	800062e <_ai_platform_get_io_buffers_info+0x66>
 80005dc:	2000      	movs	r0, #0
 80005de:	e01c      	b.n	800061a <_ai_platform_get_io_buffers_info+0x52>
 80005e0:	f850 400a 	ldr.w	r4, [r0, sl]
 80005e4:	b364      	cbz	r4, 8000640 <_ai_platform_get_io_buffers_info+0x78>
 80005e6:	68b8      	ldr	r0, [r7, #8]
 80005e8:	6882      	ldr	r2, [r0, #8]
 80005ea:	4442      	add	r2, r8
 80005ec:	6841      	ldr	r1, [r0, #4]
 80005ee:	9200      	str	r2, [sp, #0]
 80005f0:	69a3      	ldr	r3, [r4, #24]
 80005f2:	6818      	ldr	r0, [r3, #0]
 80005f4:	eb01 0609 	add.w	r6, r1, r9
 80005f8:	f006 f8d2 	bl	80067a0 <ai_array_to_buffer_fmt>
 80005fc:	2101      	movs	r1, #1
 80005fe:	6030      	str	r0, [r6, #0]
 8000600:	80b1      	strh	r1, [r6, #4]
 8000602:	68e0      	ldr	r0, [r4, #12]
 8000604:	68c2      	ldr	r2, [r0, #12]
 8000606:	80f2      	strh	r2, [r6, #6]
 8000608:	6881      	ldr	r1, [r0, #8]
 800060a:	8131      	strh	r1, [r6, #8]
 800060c:	6840      	ldr	r0, [r0, #4]
 800060e:	60f0      	str	r0, [r6, #12]
 8000610:	69a1      	ldr	r1, [r4, #24]
 8000612:	688a      	ldr	r2, [r1, #8]
 8000614:	6132      	str	r2, [r6, #16]
 8000616:	9800      	ldr	r0, [sp, #0]
 8000618:	b9e0      	cbnz	r0, 8000654 <_ai_platform_get_io_buffers_info+0x8c>
 800061a:	6170      	str	r0, [r6, #20]
 800061c:	1c6d      	adds	r5, r5, #1
 800061e:	f10b 0b01 	add.w	fp, fp, #1
 8000622:	f109 0918 	add.w	r9, r9, #24
 8000626:	f108 0808 	add.w	r8, r8, #8
 800062a:	f10a 0a04 	add.w	sl, sl, #4
 800062e:	2f00      	cmp	r7, #0
 8000630:	bf14      	ite	ne
 8000632:	8838      	ldrhne	r0, [r7, #0]
 8000634:	2000      	moveq	r0, #0
 8000636:	4583      	cmp	fp, r0
 8000638:	d202      	bcs.n	8000640 <_ai_platform_get_io_buffers_info+0x78>
 800063a:	6878      	ldr	r0, [r7, #4]
 800063c:	2800      	cmp	r0, #0
 800063e:	d1cf      	bne.n	80005e0 <_ai_platform_get_io_buffers_info+0x18>
 8000640:	b2a8      	uxth	r0, r5
 8000642:	b118      	cbz	r0, 800064c <_ai_platform_get_io_buffers_info+0x84>
 8000644:	68b9      	ldr	r1, [r7, #8]
 8000646:	9802      	ldr	r0, [sp, #8]
 8000648:	684a      	ldr	r2, [r1, #4]
 800064a:	6002      	str	r2, [r0, #0]
 800064c:	b2a8      	uxth	r0, r5
 800064e:	b003      	add	sp, #12
 8000650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000654:	9900      	ldr	r1, [sp, #0]
 8000656:	2000      	movs	r0, #0
 8000658:	6008      	str	r0, [r1, #0]
 800065a:	9a00      	ldr	r2, [sp, #0]
 800065c:	6820      	ldr	r0, [r4, #0]
 800065e:	2800      	cmp	r0, #0
 8000660:	6050      	str	r0, [r2, #4]
 8000662:	bf1c      	itt	ne
 8000664:	8840      	ldrhne	r0, [r0, #2]
 8000666:	2800      	cmpne	r0, #0
 8000668:	d0b8      	beq.n	80005dc <_ai_platform_get_io_buffers_info+0x14>
 800066a:	9a00      	ldr	r2, [sp, #0]
 800066c:	2101      	movs	r1, #1
 800066e:	6011      	str	r1, [r2, #0]
 8000670:	9800      	ldr	r0, [sp, #0]
 8000672:	e7d2      	b.n	800061a <_ai_platform_get_io_buffers_info+0x52>

08000674 <_platform_network_state_setup>:
 8000674:	b470      	push	{r4, r5, r6}
 8000676:	68d3      	ldr	r3, [r2, #12]
 8000678:	6955      	ldr	r5, [r2, #20]
 800067a:	68dc      	ldr	r4, [r3, #12]
 800067c:	68eb      	ldr	r3, [r5, #12]
 800067e:	435c      	muls	r4, r3
 8000680:	6084      	str	r4, [r0, #8]
 8000682:	888e      	ldrh	r6, [r1, #4]
 8000684:	4374      	muls	r4, r6
 8000686:	60c4      	str	r4, [r0, #12]
 8000688:	6909      	ldr	r1, [r1, #16]
 800068a:	68c3      	ldr	r3, [r0, #12]
 800068c:	6041      	str	r1, [r0, #4]
 800068e:	4419      	add	r1, r3
 8000690:	6001      	str	r1, [r0, #0]
 8000692:	6992      	ldr	r2, [r2, #24]
 8000694:	6814      	ldr	r4, [r2, #0]
 8000696:	00a5      	lsls	r5, r4, #2
 8000698:	d407      	bmi.n	80006aa <_platform_network_state_setup+0x36>
 800069a:	6894      	ldr	r4, [r2, #8]
 800069c:	68d1      	ldr	r1, [r2, #12]
 800069e:	6843      	ldr	r3, [r0, #4]
 80006a0:	1a64      	subs	r4, r4, r1
 80006a2:	1919      	adds	r1, r3, r4
 80006a4:	6091      	str	r1, [r2, #8]
 80006a6:	6840      	ldr	r0, [r0, #4]
 80006a8:	60d0      	str	r0, [r2, #12]
 80006aa:	bc70      	pop	{r4, r5, r6}
 80006ac:	4770      	bx	lr

080006ae <ai_platform_runtime_get_revision>:
 80006ae:	f8df 0788 	ldr.w	r0, [pc, #1928]	; 8000e38 <.text_19>
 80006b2:	f240 4249 	movw	r2, #1097	; 0x449
 80006b6:	6801      	ldr	r1, [r0, #0]
 80006b8:	0849      	lsrs	r1, r1, #1
 80006ba:	0049      	lsls	r1, r1, #1
 80006bc:	6001      	str	r1, [r0, #0]
 80006be:	f8df 077c 	ldr.w	r0, [pc, #1916]	; 8000e3c <.text_20>
 80006c2:	6801      	ldr	r1, [r0, #0]
 80006c4:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80006c8:	4291      	cmp	r1, r2
 80006ca:	d115      	bne.n	80006f8 <ai_platform_runtime_get_revision+0x4a>
 80006cc:	2001      	movs	r0, #1
 80006ce:	2200      	movs	r2, #0
 80006d0:	2100      	movs	r1, #0
 80006d2:	4310      	orrs	r0, r2
 80006d4:	4308      	orrs	r0, r1
 80006d6:	d01d      	beq.n	8000714 <ai_platform_runtime_get_revision+0x66>
 80006d8:	f8df 1764 	ldr.w	r1, [pc, #1892]	; 8000e40 <.text_21>
 80006dc:	2201      	movs	r2, #1
 80006de:	608a      	str	r2, [r1, #8]
 80006e0:	6888      	ldr	r0, [r1, #8]
 80006e2:	2800      	cmp	r0, #0
 80006e4:	d1fc      	bne.n	80006e0 <ai_platform_runtime_get_revision+0x32>
 80006e6:	f8df 275c 	ldr.w	r2, [pc, #1884]	; 8000e44 <.text_22>
 80006ea:	f8df 375c 	ldr.w	r3, [pc, #1884]	; 8000e48 <.text_23>
 80006ee:	600a      	str	r2, [r1, #0]
 80006f0:	6809      	ldr	r1, [r1, #0]
 80006f2:	4299      	cmp	r1, r3
 80006f4:	d026      	beq.n	8000744 <ai_platform_runtime_get_revision+0x96>
 80006f6:	e7fe      	b.n	80006f6 <ai_platform_runtime_get_revision+0x48>
 80006f8:	2000      	movs	r0, #0
 80006fa:	f240 4c51 	movw	ip, #1105	; 0x451
 80006fe:	4561      	cmp	r1, ip
 8000700:	bf08      	it	eq
 8000702:	2201      	moveq	r2, #1
 8000704:	d0e4      	beq.n	80006d0 <ai_platform_runtime_get_revision+0x22>
 8000706:	2200      	movs	r2, #0
 8000708:	f240 4352 	movw	r3, #1106	; 0x452
 800070c:	4299      	cmp	r1, r3
 800070e:	d1df      	bne.n	80006d0 <ai_platform_runtime_get_revision+0x22>
 8000710:	2101      	movs	r1, #1
 8000712:	e7de      	b.n	80006d2 <ai_platform_runtime_get_revision+0x24>
 8000714:	f8df 0734 	ldr.w	r0, [pc, #1844]	; 8000e4c <.text_24>
 8000718:	6801      	ldr	r1, [r0, #0]
 800071a:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800071e:	f5b1 6f8a 	cmp.w	r1, #1104	; 0x450
 8000722:	d10f      	bne.n	8000744 <ai_platform_runtime_get_revision+0x96>
 8000724:	f8df 1728 	ldr.w	r1, [pc, #1832]	; 8000e50 <.text_25>
 8000728:	2201      	movs	r2, #1
 800072a:	608a      	str	r2, [r1, #8]
 800072c:	6888      	ldr	r0, [r1, #8]
 800072e:	2800      	cmp	r0, #0
 8000730:	d1fc      	bne.n	800072c <ai_platform_runtime_get_revision+0x7e>
 8000732:	f8df 2710 	ldr.w	r2, [pc, #1808]	; 8000e44 <.text_22>
 8000736:	f8df 3710 	ldr.w	r3, [pc, #1808]	; 8000e48 <.text_23>
 800073a:	600a      	str	r2, [r1, #0]
 800073c:	6809      	ldr	r1, [r1, #0]
 800073e:	4299      	cmp	r1, r3
 8000740:	d000      	beq.n	8000744 <ai_platform_runtime_get_revision+0x96>
 8000742:	e7fe      	b.n	8000742 <ai_platform_runtime_get_revision+0x94>
 8000744:	a0a3      	add	r0, pc, #652	; (adr r0, 80009d4 <.text_11>)
 8000746:	4770      	bx	lr

08000748 <ai_platform_runtime_get_version>:
 8000748:	f8df 06ec 	ldr.w	r0, [pc, #1772]	; 8000e38 <.text_19>
 800074c:	f240 4249 	movw	r2, #1097	; 0x449
 8000750:	6801      	ldr	r1, [r0, #0]
 8000752:	0849      	lsrs	r1, r1, #1
 8000754:	0049      	lsls	r1, r1, #1
 8000756:	6001      	str	r1, [r0, #0]
 8000758:	f8df 06e0 	ldr.w	r0, [pc, #1760]	; 8000e3c <.text_20>
 800075c:	6801      	ldr	r1, [r0, #0]
 800075e:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000762:	4291      	cmp	r1, r2
 8000764:	d115      	bne.n	8000792 <ai_platform_runtime_get_version+0x4a>
 8000766:	2001      	movs	r0, #1
 8000768:	2200      	movs	r2, #0
 800076a:	2100      	movs	r1, #0
 800076c:	4310      	orrs	r0, r2
 800076e:	4308      	orrs	r0, r1
 8000770:	d01d      	beq.n	80007ae <ai_platform_runtime_get_version+0x66>
 8000772:	f8df 16cc 	ldr.w	r1, [pc, #1740]	; 8000e40 <.text_21>
 8000776:	2201      	movs	r2, #1
 8000778:	608a      	str	r2, [r1, #8]
 800077a:	6888      	ldr	r0, [r1, #8]
 800077c:	2800      	cmp	r0, #0
 800077e:	d1fc      	bne.n	800077a <ai_platform_runtime_get_version+0x32>
 8000780:	f8df 26c0 	ldr.w	r2, [pc, #1728]	; 8000e44 <.text_22>
 8000784:	f8df 36c0 	ldr.w	r3, [pc, #1728]	; 8000e48 <.text_23>
 8000788:	600a      	str	r2, [r1, #0]
 800078a:	6809      	ldr	r1, [r1, #0]
 800078c:	4299      	cmp	r1, r3
 800078e:	d026      	beq.n	80007de <ai_platform_runtime_get_version+0x96>
 8000790:	e7fe      	b.n	8000790 <ai_platform_runtime_get_version+0x48>
 8000792:	2000      	movs	r0, #0
 8000794:	f240 4c51 	movw	ip, #1105	; 0x451
 8000798:	4561      	cmp	r1, ip
 800079a:	bf08      	it	eq
 800079c:	2201      	moveq	r2, #1
 800079e:	d0e4      	beq.n	800076a <ai_platform_runtime_get_version+0x22>
 80007a0:	2200      	movs	r2, #0
 80007a2:	f240 4352 	movw	r3, #1106	; 0x452
 80007a6:	4299      	cmp	r1, r3
 80007a8:	d1df      	bne.n	800076a <ai_platform_runtime_get_version+0x22>
 80007aa:	2101      	movs	r1, #1
 80007ac:	e7de      	b.n	800076c <ai_platform_runtime_get_version+0x24>
 80007ae:	f8df 069c 	ldr.w	r0, [pc, #1692]	; 8000e4c <.text_24>
 80007b2:	6801      	ldr	r1, [r0, #0]
 80007b4:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80007b8:	f5b1 6f8a 	cmp.w	r1, #1104	; 0x450
 80007bc:	d10f      	bne.n	80007de <ai_platform_runtime_get_version+0x96>
 80007be:	f8df 1690 	ldr.w	r1, [pc, #1680]	; 8000e50 <.text_25>
 80007c2:	2201      	movs	r2, #1
 80007c4:	608a      	str	r2, [r1, #8]
 80007c6:	6888      	ldr	r0, [r1, #8]
 80007c8:	2800      	cmp	r0, #0
 80007ca:	d1fc      	bne.n	80007c6 <ai_platform_runtime_get_version+0x7e>
 80007cc:	f8df 2674 	ldr.w	r2, [pc, #1652]	; 8000e44 <.text_22>
 80007d0:	f8df 3674 	ldr.w	r3, [pc, #1652]	; 8000e48 <.text_23>
 80007d4:	600a      	str	r2, [r1, #0]
 80007d6:	6809      	ldr	r1, [r1, #0]
 80007d8:	4299      	cmp	r1, r3
 80007da:	d000      	beq.n	80007de <ai_platform_runtime_get_version+0x96>
 80007dc:	e7fe      	b.n	80007dc <ai_platform_runtime_get_version+0x94>
 80007de:	f60f 20b0 	addw	r0, pc, #2736	; 0xab0
 80007e2:	6800      	ldr	r0, [r0, #0]
 80007e4:	4770      	bx	lr

080007e6 <ai_platform_api_get_version>:
 80007e6:	f8df 0650 	ldr.w	r0, [pc, #1616]	; 8000e38 <.text_19>
 80007ea:	f240 4249 	movw	r2, #1097	; 0x449
 80007ee:	6801      	ldr	r1, [r0, #0]
 80007f0:	0849      	lsrs	r1, r1, #1
 80007f2:	0049      	lsls	r1, r1, #1
 80007f4:	6001      	str	r1, [r0, #0]
 80007f6:	f8df 0644 	ldr.w	r0, [pc, #1604]	; 8000e3c <.text_20>
 80007fa:	6801      	ldr	r1, [r0, #0]
 80007fc:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000800:	4291      	cmp	r1, r2
 8000802:	d115      	bne.n	8000830 <ai_platform_api_get_version+0x4a>
 8000804:	2001      	movs	r0, #1
 8000806:	2200      	movs	r2, #0
 8000808:	2100      	movs	r1, #0
 800080a:	4310      	orrs	r0, r2
 800080c:	4308      	orrs	r0, r1
 800080e:	d01d      	beq.n	800084c <ai_platform_api_get_version+0x66>
 8000810:	f8df 162c 	ldr.w	r1, [pc, #1580]	; 8000e40 <.text_21>
 8000814:	2201      	movs	r2, #1
 8000816:	608a      	str	r2, [r1, #8]
 8000818:	6888      	ldr	r0, [r1, #8]
 800081a:	2800      	cmp	r0, #0
 800081c:	d1fc      	bne.n	8000818 <ai_platform_api_get_version+0x32>
 800081e:	f8df 2624 	ldr.w	r2, [pc, #1572]	; 8000e44 <.text_22>
 8000822:	f8df 3624 	ldr.w	r3, [pc, #1572]	; 8000e48 <.text_23>
 8000826:	600a      	str	r2, [r1, #0]
 8000828:	6809      	ldr	r1, [r1, #0]
 800082a:	4299      	cmp	r1, r3
 800082c:	d026      	beq.n	800087c <ai_platform_api_get_version+0x96>
 800082e:	e7fe      	b.n	800082e <ai_platform_api_get_version+0x48>
 8000830:	2000      	movs	r0, #0
 8000832:	f240 4c51 	movw	ip, #1105	; 0x451
 8000836:	4561      	cmp	r1, ip
 8000838:	bf08      	it	eq
 800083a:	2201      	moveq	r2, #1
 800083c:	d0e4      	beq.n	8000808 <ai_platform_api_get_version+0x22>
 800083e:	2200      	movs	r2, #0
 8000840:	f240 4352 	movw	r3, #1106	; 0x452
 8000844:	4299      	cmp	r1, r3
 8000846:	d1df      	bne.n	8000808 <ai_platform_api_get_version+0x22>
 8000848:	2101      	movs	r1, #1
 800084a:	e7de      	b.n	800080a <ai_platform_api_get_version+0x24>
 800084c:	f8df 05fc 	ldr.w	r0, [pc, #1532]	; 8000e4c <.text_24>
 8000850:	6801      	ldr	r1, [r0, #0]
 8000852:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000856:	f5b1 6f8a 	cmp.w	r1, #1104	; 0x450
 800085a:	d10f      	bne.n	800087c <ai_platform_api_get_version+0x96>
 800085c:	f8df 15f0 	ldr.w	r1, [pc, #1520]	; 8000e50 <.text_25>
 8000860:	2201      	movs	r2, #1
 8000862:	608a      	str	r2, [r1, #8]
 8000864:	6888      	ldr	r0, [r1, #8]
 8000866:	2800      	cmp	r0, #0
 8000868:	d1fc      	bne.n	8000864 <ai_platform_api_get_version+0x7e>
 800086a:	f8df 25d8 	ldr.w	r2, [pc, #1496]	; 8000e44 <.text_22>
 800086e:	f8df 35d8 	ldr.w	r3, [pc, #1496]	; 8000e48 <.text_23>
 8000872:	600a      	str	r2, [r1, #0]
 8000874:	6809      	ldr	r1, [r1, #0]
 8000876:	4299      	cmp	r1, r3
 8000878:	d000      	beq.n	800087c <ai_platform_api_get_version+0x96>
 800087a:	e7fe      	b.n	800087a <ai_platform_api_get_version+0x94>
 800087c:	f60f 2014 	addw	r0, pc, #2580	; 0xa14
 8000880:	6800      	ldr	r0, [r0, #0]
 8000882:	4770      	bx	lr

08000884 <ai_platform_interface_api_get_version>:
 8000884:	f8df 05b0 	ldr.w	r0, [pc, #1456]	; 8000e38 <.text_19>
 8000888:	f240 4249 	movw	r2, #1097	; 0x449
 800088c:	6801      	ldr	r1, [r0, #0]
 800088e:	0849      	lsrs	r1, r1, #1
 8000890:	0049      	lsls	r1, r1, #1
 8000892:	6001      	str	r1, [r0, #0]
 8000894:	f8df 05a4 	ldr.w	r0, [pc, #1444]	; 8000e3c <.text_20>
 8000898:	6801      	ldr	r1, [r0, #0]
 800089a:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800089e:	4291      	cmp	r1, r2
 80008a0:	d115      	bne.n	80008ce <ai_platform_interface_api_get_version+0x4a>
 80008a2:	2001      	movs	r0, #1
 80008a4:	2200      	movs	r2, #0
 80008a6:	2100      	movs	r1, #0
 80008a8:	4310      	orrs	r0, r2
 80008aa:	4308      	orrs	r0, r1
 80008ac:	d01d      	beq.n	80008ea <ai_platform_interface_api_get_version+0x66>
 80008ae:	f8df 1590 	ldr.w	r1, [pc, #1424]	; 8000e40 <.text_21>
 80008b2:	2201      	movs	r2, #1
 80008b4:	608a      	str	r2, [r1, #8]
 80008b6:	6888      	ldr	r0, [r1, #8]
 80008b8:	2800      	cmp	r0, #0
 80008ba:	d1fc      	bne.n	80008b6 <ai_platform_interface_api_get_version+0x32>
 80008bc:	f8df 2584 	ldr.w	r2, [pc, #1412]	; 8000e44 <.text_22>
 80008c0:	f8df 3584 	ldr.w	r3, [pc, #1412]	; 8000e48 <.text_23>
 80008c4:	600a      	str	r2, [r1, #0]
 80008c6:	6809      	ldr	r1, [r1, #0]
 80008c8:	4299      	cmp	r1, r3
 80008ca:	d026      	beq.n	800091a <ai_platform_interface_api_get_version+0x96>
 80008cc:	e7fe      	b.n	80008cc <ai_platform_interface_api_get_version+0x48>
 80008ce:	2000      	movs	r0, #0
 80008d0:	f240 4c51 	movw	ip, #1105	; 0x451
 80008d4:	4561      	cmp	r1, ip
 80008d6:	bf08      	it	eq
 80008d8:	2201      	moveq	r2, #1
 80008da:	d0e4      	beq.n	80008a6 <ai_platform_interface_api_get_version+0x22>
 80008dc:	2200      	movs	r2, #0
 80008de:	f240 4352 	movw	r3, #1106	; 0x452
 80008e2:	4299      	cmp	r1, r3
 80008e4:	d1df      	bne.n	80008a6 <ai_platform_interface_api_get_version+0x22>
 80008e6:	2101      	movs	r1, #1
 80008e8:	e7de      	b.n	80008a8 <ai_platform_interface_api_get_version+0x24>
 80008ea:	f8df 0560 	ldr.w	r0, [pc, #1376]	; 8000e4c <.text_24>
 80008ee:	6801      	ldr	r1, [r0, #0]
 80008f0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80008f4:	f5b1 6f8a 	cmp.w	r1, #1104	; 0x450
 80008f8:	d10f      	bne.n	800091a <ai_platform_interface_api_get_version+0x96>
 80008fa:	f8df 1554 	ldr.w	r1, [pc, #1364]	; 8000e50 <.text_25>
 80008fe:	2201      	movs	r2, #1
 8000900:	608a      	str	r2, [r1, #8]
 8000902:	6888      	ldr	r0, [r1, #8]
 8000904:	2800      	cmp	r0, #0
 8000906:	d1fc      	bne.n	8000902 <ai_platform_interface_api_get_version+0x7e>
 8000908:	f8df 2538 	ldr.w	r2, [pc, #1336]	; 8000e44 <.text_22>
 800090c:	f8df 3538 	ldr.w	r3, [pc, #1336]	; 8000e48 <.text_23>
 8000910:	600a      	str	r2, [r1, #0]
 8000912:	6809      	ldr	r1, [r1, #0]
 8000914:	4299      	cmp	r1, r3
 8000916:	d000      	beq.n	800091a <ai_platform_interface_api_get_version+0x96>
 8000918:	e7fe      	b.n	8000918 <ai_platform_interface_api_get_version+0x94>
 800091a:	f60f 107c 	addw	r0, pc, #2428	; 0x97c
 800091e:	6800      	ldr	r0, [r0, #0]
 8000920:	4770      	bx	lr

08000922 <ai_platform_context_acquire>:
 8000922:	b430      	push	{r4, r5}
 8000924:	b120      	cbz	r0, 8000930 <ai_platform_context_acquire+0xe>
 8000926:	6801      	ldr	r1, [r0, #0]
 8000928:	f8df 2940 	ldr.w	r2, [pc, #2368]	; 800126c <.text_27>
 800092c:	4291      	cmp	r1, r2
 800092e:	d000      	beq.n	8000932 <ai_platform_context_acquire+0x10>
 8000930:	2000      	movs	r0, #0
 8000932:	f8df 1504 	ldr.w	r1, [pc, #1284]	; 8000e38 <.text_19>
 8000936:	f240 4449 	movw	r4, #1097	; 0x449
 800093a:	680b      	ldr	r3, [r1, #0]
 800093c:	085b      	lsrs	r3, r3, #1
 800093e:	005b      	lsls	r3, r3, #1
 8000940:	600b      	str	r3, [r1, #0]
 8000942:	f8df 14f8 	ldr.w	r1, [pc, #1272]	; 8000e3c <.text_20>
 8000946:	680a      	ldr	r2, [r1, #0]
 8000948:	f3c2 020a 	ubfx	r2, r2, #0, #11
 800094c:	42a2      	cmp	r2, r4
 800094e:	d115      	bne.n	800097c <ai_platform_context_acquire+0x5a>
 8000950:	2101      	movs	r1, #1
 8000952:	2300      	movs	r3, #0
 8000954:	2200      	movs	r2, #0
 8000956:	4319      	orrs	r1, r3
 8000958:	4311      	orrs	r1, r2
 800095a:	d01d      	beq.n	8000998 <ai_platform_context_acquire+0x76>
 800095c:	f8df 24e0 	ldr.w	r2, [pc, #1248]	; 8000e40 <.text_21>
 8000960:	2301      	movs	r3, #1
 8000962:	6093      	str	r3, [r2, #8]
 8000964:	6891      	ldr	r1, [r2, #8]
 8000966:	2900      	cmp	r1, #0
 8000968:	d1fc      	bne.n	8000964 <ai_platform_context_acquire+0x42>
 800096a:	f8df 34d8 	ldr.w	r3, [pc, #1240]	; 8000e44 <.text_22>
 800096e:	f8df 44d8 	ldr.w	r4, [pc, #1240]	; 8000e48 <.text_23>
 8000972:	6013      	str	r3, [r2, #0]
 8000974:	6812      	ldr	r2, [r2, #0]
 8000976:	42a2      	cmp	r2, r4
 8000978:	d026      	beq.n	80009c8 <ai_platform_context_acquire+0xa6>
 800097a:	e7fe      	b.n	800097a <ai_platform_context_acquire+0x58>
 800097c:	2100      	movs	r1, #0
 800097e:	f240 4551 	movw	r5, #1105	; 0x451
 8000982:	42aa      	cmp	r2, r5
 8000984:	bf08      	it	eq
 8000986:	2301      	moveq	r3, #1
 8000988:	d0e4      	beq.n	8000954 <ai_platform_context_acquire+0x32>
 800098a:	2300      	movs	r3, #0
 800098c:	f240 4452 	movw	r4, #1106	; 0x452
 8000990:	42a2      	cmp	r2, r4
 8000992:	d1df      	bne.n	8000954 <ai_platform_context_acquire+0x32>
 8000994:	2201      	movs	r2, #1
 8000996:	e7de      	b.n	8000956 <ai_platform_context_acquire+0x34>
 8000998:	f8df 14b0 	ldr.w	r1, [pc, #1200]	; 8000e4c <.text_24>
 800099c:	680a      	ldr	r2, [r1, #0]
 800099e:	f3c2 020a 	ubfx	r2, r2, #0, #11
 80009a2:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80009a6:	d10f      	bne.n	80009c8 <ai_platform_context_acquire+0xa6>
 80009a8:	f8df 24a4 	ldr.w	r2, [pc, #1188]	; 8000e50 <.text_25>
 80009ac:	2301      	movs	r3, #1
 80009ae:	6093      	str	r3, [r2, #8]
 80009b0:	6891      	ldr	r1, [r2, #8]
 80009b2:	2900      	cmp	r1, #0
 80009b4:	d1fc      	bne.n	80009b0 <ai_platform_context_acquire+0x8e>
 80009b6:	f8df 348c 	ldr.w	r3, [pc, #1164]	; 8000e44 <.text_22>
 80009ba:	f8df 448c 	ldr.w	r4, [pc, #1164]	; 8000e48 <.text_23>
 80009be:	6013      	str	r3, [r2, #0]
 80009c0:	6812      	ldr	r2, [r2, #0]
 80009c2:	42a2      	cmp	r2, r4
 80009c4:	d000      	beq.n	80009c8 <ai_platform_context_acquire+0xa6>
 80009c6:	e7fe      	b.n	80009c6 <ai_platform_context_acquire+0xa4>
 80009c8:	bc30      	pop	{r4, r5}
 80009ca:	4770      	bx	lr

080009cc <ai_platform_context_release>:
 80009cc:	f8df 189c 	ldr.w	r1, [pc, #2204]	; 800126c <.text_27>
 80009d0:	6001      	str	r1, [r0, #0]
 80009d2:	4770      	bx	lr

080009d4 <.text_11>:
 80009d4:	00000000 	.word	0x00000000

080009d8 <ai_platform_network_get_error>:
 80009d8:	b430      	push	{r4, r5}
 80009da:	b120      	cbz	r0, 80009e6 <ai_platform_network_get_error+0xe>
 80009dc:	6801      	ldr	r1, [r0, #0]
 80009de:	f8df 288c 	ldr.w	r2, [pc, #2188]	; 800126c <.text_27>
 80009e2:	4291      	cmp	r1, r2
 80009e4:	d000      	beq.n	80009e8 <ai_platform_network_get_error+0x10>
 80009e6:	2000      	movs	r0, #0
 80009e8:	f8df 144c 	ldr.w	r1, [pc, #1100]	; 8000e38 <.text_19>
 80009ec:	f240 4449 	movw	r4, #1097	; 0x449
 80009f0:	680b      	ldr	r3, [r1, #0]
 80009f2:	085b      	lsrs	r3, r3, #1
 80009f4:	005b      	lsls	r3, r3, #1
 80009f6:	600b      	str	r3, [r1, #0]
 80009f8:	f8df 1440 	ldr.w	r1, [pc, #1088]	; 8000e3c <.text_20>
 80009fc:	680a      	ldr	r2, [r1, #0]
 80009fe:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8000a02:	42a2      	cmp	r2, r4
 8000a04:	d115      	bne.n	8000a32 <ai_platform_network_get_error+0x5a>
 8000a06:	2101      	movs	r1, #1
 8000a08:	2300      	movs	r3, #0
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	4319      	orrs	r1, r3
 8000a0e:	4311      	orrs	r1, r2
 8000a10:	d01d      	beq.n	8000a4e <ai_platform_network_get_error+0x76>
 8000a12:	f8df 242c 	ldr.w	r2, [pc, #1068]	; 8000e40 <.text_21>
 8000a16:	2301      	movs	r3, #1
 8000a18:	6093      	str	r3, [r2, #8]
 8000a1a:	6891      	ldr	r1, [r2, #8]
 8000a1c:	2900      	cmp	r1, #0
 8000a1e:	d1fc      	bne.n	8000a1a <ai_platform_network_get_error+0x42>
 8000a20:	f8df 3420 	ldr.w	r3, [pc, #1056]	; 8000e44 <.text_22>
 8000a24:	f8df 4420 	ldr.w	r4, [pc, #1056]	; 8000e48 <.text_23>
 8000a28:	6013      	str	r3, [r2, #0]
 8000a2a:	6812      	ldr	r2, [r2, #0]
 8000a2c:	42a2      	cmp	r2, r4
 8000a2e:	d026      	beq.n	8000a7e <ai_platform_network_get_error+0xa6>
 8000a30:	e7fe      	b.n	8000a30 <ai_platform_network_get_error+0x58>
 8000a32:	2100      	movs	r1, #0
 8000a34:	f240 4551 	movw	r5, #1105	; 0x451
 8000a38:	42aa      	cmp	r2, r5
 8000a3a:	bf08      	it	eq
 8000a3c:	2301      	moveq	r3, #1
 8000a3e:	d0e4      	beq.n	8000a0a <ai_platform_network_get_error+0x32>
 8000a40:	2300      	movs	r3, #0
 8000a42:	f240 4452 	movw	r4, #1106	; 0x452
 8000a46:	42a2      	cmp	r2, r4
 8000a48:	d1df      	bne.n	8000a0a <ai_platform_network_get_error+0x32>
 8000a4a:	2201      	movs	r2, #1
 8000a4c:	e7de      	b.n	8000a0c <ai_platform_network_get_error+0x34>
 8000a4e:	f8df 13fc 	ldr.w	r1, [pc, #1020]	; 8000e4c <.text_24>
 8000a52:	680a      	ldr	r2, [r1, #0]
 8000a54:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8000a58:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8000a5c:	d10f      	bne.n	8000a7e <ai_platform_network_get_error+0xa6>
 8000a5e:	f8df 23f0 	ldr.w	r2, [pc, #1008]	; 8000e50 <.text_25>
 8000a62:	2301      	movs	r3, #1
 8000a64:	6093      	str	r3, [r2, #8]
 8000a66:	6891      	ldr	r1, [r2, #8]
 8000a68:	2900      	cmp	r1, #0
 8000a6a:	d1fc      	bne.n	8000a66 <ai_platform_network_get_error+0x8e>
 8000a6c:	f8df 33d4 	ldr.w	r3, [pc, #980]	; 8000e44 <.text_22>
 8000a70:	f8df 43d4 	ldr.w	r4, [pc, #980]	; 8000e48 <.text_23>
 8000a74:	6013      	str	r3, [r2, #0]
 8000a76:	6812      	ldr	r2, [r2, #0]
 8000a78:	42a2      	cmp	r2, r4
 8000a7a:	d000      	beq.n	8000a7e <ai_platform_network_get_error+0xa6>
 8000a7c:	e7fe      	b.n	8000a7c <ai_platform_network_get_error+0xa4>
 8000a7e:	b920      	cbnz	r0, 8000a8a <ai_platform_network_get_error+0xb2>
 8000a80:	f60f 0028 	addw	r0, pc, #2088	; 0x828
 8000a84:	6800      	ldr	r0, [r0, #0]
 8000a86:	bc30      	pop	{r4, r5}
 8000a88:	4770      	bx	lr
 8000a8a:	3010      	adds	r0, #16
 8000a8c:	bc30      	pop	{r4, r5}
 8000a8e:	f000 bc15 	b.w	80012bc <core_get_error>

08000a92 <ai_platform_network_set_error>:
 8000a92:	2800      	cmp	r0, #0
 8000a94:	bf1c      	itt	ne
 8000a96:	3010      	addne	r0, #16
 8000a98:	f000 bc15 	bne.w	80012c6 <core_set_error>
 8000a9c:	4770      	bx	lr

08000a9e <ai_platform_api_get_network_report>:
 8000a9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000aa2:	0004      	movs	r4, r0
 8000aa4:	b081      	sub	sp, #4
 8000aa6:	460d      	mov	r5, r1
 8000aa8:	d004      	beq.n	8000ab4 <ai_platform_api_get_network_report+0x16>
 8000aaa:	6820      	ldr	r0, [r4, #0]
 8000aac:	f8df 17bc 	ldr.w	r1, [pc, #1980]	; 800126c <.text_27>
 8000ab0:	4288      	cmp	r0, r1
 8000ab2:	d000      	beq.n	8000ab6 <ai_platform_api_get_network_report+0x18>
 8000ab4:	2400      	movs	r4, #0
 8000ab6:	f8df 0380 	ldr.w	r0, [pc, #896]	; 8000e38 <.text_19>
 8000aba:	f240 4349 	movw	r3, #1097	; 0x449
 8000abe:	6802      	ldr	r2, [r0, #0]
 8000ac0:	0852      	lsrs	r2, r2, #1
 8000ac2:	0052      	lsls	r2, r2, #1
 8000ac4:	6002      	str	r2, [r0, #0]
 8000ac6:	f8df 0374 	ldr.w	r0, [pc, #884]	; 8000e3c <.text_20>
 8000aca:	6801      	ldr	r1, [r0, #0]
 8000acc:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000ad0:	4299      	cmp	r1, r3
 8000ad2:	d115      	bne.n	8000b00 <ai_platform_api_get_network_report+0x62>
 8000ad4:	2001      	movs	r0, #1
 8000ad6:	2200      	movs	r2, #0
 8000ad8:	2100      	movs	r1, #0
 8000ada:	4310      	orrs	r0, r2
 8000adc:	4308      	orrs	r0, r1
 8000ade:	d01d      	beq.n	8000b1c <ai_platform_api_get_network_report+0x7e>
 8000ae0:	f8df 135c 	ldr.w	r1, [pc, #860]	; 8000e40 <.text_21>
 8000ae4:	2201      	movs	r2, #1
 8000ae6:	608a      	str	r2, [r1, #8]
 8000ae8:	6888      	ldr	r0, [r1, #8]
 8000aea:	2800      	cmp	r0, #0
 8000aec:	d1fc      	bne.n	8000ae8 <ai_platform_api_get_network_report+0x4a>
 8000aee:	f8df 2354 	ldr.w	r2, [pc, #852]	; 8000e44 <.text_22>
 8000af2:	f8df 3354 	ldr.w	r3, [pc, #852]	; 8000e48 <.text_23>
 8000af6:	600a      	str	r2, [r1, #0]
 8000af8:	6809      	ldr	r1, [r1, #0]
 8000afa:	4299      	cmp	r1, r3
 8000afc:	d026      	beq.n	8000b4c <ai_platform_api_get_network_report+0xae>
 8000afe:	e7fe      	b.n	8000afe <ai_platform_api_get_network_report+0x60>
 8000b00:	2000      	movs	r0, #0
 8000b02:	f240 4651 	movw	r6, #1105	; 0x451
 8000b06:	42b1      	cmp	r1, r6
 8000b08:	bf08      	it	eq
 8000b0a:	2201      	moveq	r2, #1
 8000b0c:	d0e4      	beq.n	8000ad8 <ai_platform_api_get_network_report+0x3a>
 8000b0e:	2200      	movs	r2, #0
 8000b10:	f240 4352 	movw	r3, #1106	; 0x452
 8000b14:	4299      	cmp	r1, r3
 8000b16:	d1df      	bne.n	8000ad8 <ai_platform_api_get_network_report+0x3a>
 8000b18:	2101      	movs	r1, #1
 8000b1a:	e7de      	b.n	8000ada <ai_platform_api_get_network_report+0x3c>
 8000b1c:	f8df 032c 	ldr.w	r0, [pc, #812]	; 8000e4c <.text_24>
 8000b20:	6801      	ldr	r1, [r0, #0]
 8000b22:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000b26:	f5b1 6f8a 	cmp.w	r1, #1104	; 0x450
 8000b2a:	d10f      	bne.n	8000b4c <ai_platform_api_get_network_report+0xae>
 8000b2c:	f8df 1320 	ldr.w	r1, [pc, #800]	; 8000e50 <.text_25>
 8000b30:	2201      	movs	r2, #1
 8000b32:	608a      	str	r2, [r1, #8]
 8000b34:	6888      	ldr	r0, [r1, #8]
 8000b36:	2800      	cmp	r0, #0
 8000b38:	d1fc      	bne.n	8000b34 <ai_platform_api_get_network_report+0x96>
 8000b3a:	f8df 2308 	ldr.w	r2, [pc, #776]	; 8000e44 <.text_22>
 8000b3e:	f8df 3308 	ldr.w	r3, [pc, #776]	; 8000e48 <.text_23>
 8000b42:	600a      	str	r2, [r1, #0]
 8000b44:	6809      	ldr	r1, [r1, #0]
 8000b46:	4299      	cmp	r1, r3
 8000b48:	d000      	beq.n	8000b4c <ai_platform_api_get_network_report+0xae>
 8000b4a:	e7fe      	b.n	8000b4a <ai_platform_api_get_network_report+0xac>
 8000b4c:	2c00      	cmp	r4, #0
 8000b4e:	bf18      	it	ne
 8000b50:	2d00      	cmpne	r5, #0
 8000b52:	d032      	beq.n	8000bba <ai_platform_api_get_network_report+0x11c>
 8000b54:	2000      	movs	r0, #0
 8000b56:	66e8      	str	r0, [r5, #108]	; 0x6c
 8000b58:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8000b5a:	b152      	cbz	r2, 8000b72 <ai_platform_api_get_network_report+0xd4>
 8000b5c:	e000      	b.n	8000b60 <ai_platform_api_get_network_report+0xc2>
 8000b5e:	4602      	mov	r2, r0
 8000b60:	6ee9      	ldr	r1, [r5, #108]	; 0x6c
 8000b62:	1c49      	adds	r1, r1, #1
 8000b64:	66e9      	str	r1, [r5, #108]	; 0x6c
 8000b66:	68d0      	ldr	r0, [r2, #12]
 8000b68:	4282      	cmp	r2, r0
 8000b6a:	bf18      	it	ne
 8000b6c:	2800      	cmpne	r0, #0
 8000b6e:	d1f6      	bne.n	8000b5e <ai_platform_api_get_network_report+0xc0>
 8000b70:	b911      	cbnz	r1, 8000b78 <ai_platform_api_get_network_report+0xda>
 8000b72:	2218      	movs	r2, #24
 8000b74:	2111      	movs	r1, #17
 8000b76:	e01c      	b.n	8000bb2 <ai_platform_api_get_network_report+0x114>
 8000b78:	f8b4 0048 	ldrh.w	r0, [r4, #72]	; 0x48
 8000b7c:	b100      	cbz	r0, 8000b80 <ai_platform_api_get_network_report+0xe2>
 8000b7e:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8000b80:	f105 0134 	add.w	r1, r5, #52	; 0x34
 8000b84:	f7ff fd20 	bl	80005c8 <_ai_platform_get_io_buffers_info>
 8000b88:	8628      	strh	r0, [r5, #48]	; 0x30
 8000b8a:	b910      	cbnz	r0, 8000b92 <ai_platform_api_get_network_report+0xf4>
 8000b8c:	2218      	movs	r2, #24
 8000b8e:	2112      	movs	r1, #18
 8000b90:	e00f      	b.n	8000bb2 <ai_platform_api_get_network_report+0x114>
 8000b92:	f8b4 0048 	ldrh.w	r0, [r4, #72]	; 0x48
 8000b96:	2802      	cmp	r0, #2
 8000b98:	bfa6      	itte	ge
 8000b9a:	6ce1      	ldrge	r1, [r4, #76]	; 0x4c
 8000b9c:	f101 000c 	addge.w	r0, r1, #12
 8000ba0:	2000      	movlt	r0, #0
 8000ba2:	f105 0138 	add.w	r1, r5, #56	; 0x38
 8000ba6:	f7ff fd0f 	bl	80005c8 <_ai_platform_get_io_buffers_info>
 8000baa:	8668      	strh	r0, [r5, #50]	; 0x32
 8000bac:	b948      	cbnz	r0, 8000bc2 <ai_platform_api_get_network_report+0x124>
 8000bae:	2218      	movs	r2, #24
 8000bb0:	2113      	movs	r1, #19
 8000bb2:	f104 0010 	add.w	r0, r4, #16
 8000bb6:	f000 fb86 	bl	80012c6 <core_set_error>
 8000bba:	2000      	movs	r0, #0
 8000bbc:	b001      	add	sp, #4
 8000bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000bc2:	6860      	ldr	r0, [r4, #4]
 8000bc4:	f104 0230 	add.w	r2, r4, #48	; 0x30
 8000bc8:	6728      	str	r0, [r5, #112]	; 0x70
 8000bca:	f105 013c 	add.w	r1, r5, #60	; 0x3c
 8000bce:	e892 51c8 	ldmia.w	r2, {r3, r6, r7, r8, ip, lr}
 8000bd2:	e881 51c8 	stmia.w	r1, {r3, r6, r7, r8, ip, lr}
 8000bd6:	3418      	adds	r4, #24
 8000bd8:	f105 0954 	add.w	r9, r5, #84	; 0x54
 8000bdc:	e894 0c0f 	ldmia.w	r4, {r0, r1, r2, r3, sl, fp}
 8000be0:	e889 0c0f 	stmia.w	r9, {r0, r1, r2, r3, sl, fp}
 8000be4:	f7ff fca4 	bl	8000530 <CRC_Lock>
 8000be8:	a092      	add	r0, pc, #584	; (adr r0, 8000e34 <.text_18>)
 8000bea:	6128      	str	r0, [r5, #16]
 8000bec:	f7ff fca0 	bl	8000530 <CRC_Lock>
 8000bf0:	f20f 619c 	addw	r1, pc, #1692	; 0x69c
 8000bf4:	680a      	ldr	r2, [r1, #0]
 8000bf6:	616a      	str	r2, [r5, #20]
 8000bf8:	f7ff fc9a 	bl	8000530 <CRC_Lock>
 8000bfc:	f20f 6094 	addw	r0, pc, #1684	; 0x694
 8000c00:	6801      	ldr	r1, [r0, #0]
 8000c02:	6269      	str	r1, [r5, #36]	; 0x24
 8000c04:	f7ff fc94 	bl	8000530 <CRC_Lock>
 8000c08:	f20f 628c 	addw	r2, pc, #1676	; 0x68c
 8000c0c:	6810      	ldr	r0, [r2, #0]
 8000c0e:	62a8      	str	r0, [r5, #40]	; 0x28
 8000c10:	2001      	movs	r0, #1
 8000c12:	b001      	add	sp, #4
 8000c14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000c18 <ai_platform_network_create>:
 8000c18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c1a:	b081      	sub	sp, #4
 8000c1c:	b2db      	uxtb	r3, r3
 8000c1e:	9d06      	ldr	r5, [sp, #24]
 8000c20:	4604      	mov	r4, r0
 8000c22:	9807      	ldr	r0, [sp, #28]
 8000c24:	4616      	mov	r6, r2
 8000c26:	042d      	lsls	r5, r5, #16
 8000c28:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
 8000c2c:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000c30:	f20f 607c 	addw	r0, pc, #1660	; 0x67c
 8000c34:	6807      	ldr	r7, [r0, #0]
 8000c36:	f7ff fc7b 	bl	8000530 <CRC_Lock>
 8000c3a:	b924      	cbnz	r4, 8000c46 <ai_platform_network_create+0x2e>
 8000c3c:	f20f 6074 	addw	r0, pc, #1652	; 0x674
 8000c40:	b001      	add	sp, #4
 8000c42:	6800      	ldr	r0, [r0, #0]
 8000c44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c46:	f8df 1624 	ldr.w	r1, [pc, #1572]	; 800126c <.text_27>
 8000c4a:	6031      	str	r1, [r6, #0]
 8000c4c:	6026      	str	r6, [r4, #0]
 8000c4e:	f000 fb33 	bl	80012b8 <core_init>
 8000c52:	b910      	cbnz	r0, 8000c5a <ai_platform_network_create+0x42>
 8000c54:	f20f 6044 	addw	r0, pc, #1604	; 0x644
 8000c58:	e00e      	b.n	8000c78 <ai_platform_network_create+0x60>
 8000c5a:	f8df 1614 	ldr.w	r1, [pc, #1556]	; 8001270 <.text_28>
 8000c5e:	428d      	cmp	r5, r1
 8000c60:	d303      	bcc.n	8000c6a <ai_platform_network_create+0x52>
 8000c62:	f20f 623c 	addw	r2, pc, #1596	; 0x63c
 8000c66:	6817      	ldr	r7, [r2, #0]
 8000c68:	e007      	b.n	8000c7a <ai_platform_network_create+0x62>
 8000c6a:	f20f 6038 	addw	r0, pc, #1592	; 0x638
 8000c6e:	f001 fa9b 	bl	80021a8 <ai_check_custom_types>
 8000c72:	b920      	cbnz	r0, 8000c7e <ai_platform_network_create+0x66>
 8000c74:	f20f 6030 	addw	r0, pc, #1584	; 0x630
 8000c78:	6807      	ldr	r7, [r0, #0]
 8000c7a:	2100      	movs	r1, #0
 8000c7c:	6021      	str	r1, [r4, #0]
 8000c7e:	4638      	mov	r0, r7
 8000c80:	b001      	add	sp, #4
 8000c82:	bdf0      	pop	{r4, r5, r6, r7, pc}

08000c84 <ai_platform_network_destroy>:
 8000c84:	b470      	push	{r4, r5, r6}
 8000c86:	b130      	cbz	r0, 8000c96 <ai_platform_network_destroy+0x12>
 8000c88:	6801      	ldr	r1, [r0, #0]
 8000c8a:	f8df 25e0 	ldr.w	r2, [pc, #1504]	; 800126c <.text_27>
 8000c8e:	4291      	cmp	r1, r2
 8000c90:	bf08      	it	eq
 8000c92:	4602      	moveq	r2, r0
 8000c94:	d000      	beq.n	8000c98 <ai_platform_network_destroy+0x14>
 8000c96:	2200      	movs	r2, #0
 8000c98:	4967      	ldr	r1, [pc, #412]	; (8000e38 <.text_19>)
 8000c9a:	f240 4449 	movw	r4, #1097	; 0x449
 8000c9e:	680b      	ldr	r3, [r1, #0]
 8000ca0:	085b      	lsrs	r3, r3, #1
 8000ca2:	005b      	lsls	r3, r3, #1
 8000ca4:	600b      	str	r3, [r1, #0]
 8000ca6:	4965      	ldr	r1, [pc, #404]	; (8000e3c <.text_20>)
 8000ca8:	680b      	ldr	r3, [r1, #0]
 8000caa:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000cae:	42a3      	cmp	r3, r4
 8000cb0:	d112      	bne.n	8000cd8 <ai_platform_network_destroy+0x54>
 8000cb2:	2101      	movs	r1, #1
 8000cb4:	2400      	movs	r4, #0
 8000cb6:	2300      	movs	r3, #0
 8000cb8:	4321      	orrs	r1, r4
 8000cba:	4319      	orrs	r1, r3
 8000cbc:	d01a      	beq.n	8000cf4 <ai_platform_network_destroy+0x70>
 8000cbe:	4b60      	ldr	r3, [pc, #384]	; (8000e40 <.text_21>)
 8000cc0:	2401      	movs	r4, #1
 8000cc2:	609c      	str	r4, [r3, #8]
 8000cc4:	6899      	ldr	r1, [r3, #8]
 8000cc6:	2900      	cmp	r1, #0
 8000cc8:	d1fc      	bne.n	8000cc4 <ai_platform_network_destroy+0x40>
 8000cca:	4c5e      	ldr	r4, [pc, #376]	; (8000e44 <.text_22>)
 8000ccc:	4d5e      	ldr	r5, [pc, #376]	; (8000e48 <.text_23>)
 8000cce:	601c      	str	r4, [r3, #0]
 8000cd0:	681b      	ldr	r3, [r3, #0]
 8000cd2:	42ab      	cmp	r3, r5
 8000cd4:	d022      	beq.n	8000d1c <ai_platform_network_destroy+0x98>
 8000cd6:	e7fe      	b.n	8000cd6 <ai_platform_network_destroy+0x52>
 8000cd8:	2100      	movs	r1, #0
 8000cda:	f240 4651 	movw	r6, #1105	; 0x451
 8000cde:	42b3      	cmp	r3, r6
 8000ce0:	bf08      	it	eq
 8000ce2:	2401      	moveq	r4, #1
 8000ce4:	d0e7      	beq.n	8000cb6 <ai_platform_network_destroy+0x32>
 8000ce6:	2400      	movs	r4, #0
 8000ce8:	f240 4552 	movw	r5, #1106	; 0x452
 8000cec:	42ab      	cmp	r3, r5
 8000cee:	d1e2      	bne.n	8000cb6 <ai_platform_network_destroy+0x32>
 8000cf0:	2301      	movs	r3, #1
 8000cf2:	e7e1      	b.n	8000cb8 <ai_platform_network_destroy+0x34>
 8000cf4:	4955      	ldr	r1, [pc, #340]	; (8000e4c <.text_24>)
 8000cf6:	680b      	ldr	r3, [r1, #0]
 8000cf8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000cfc:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8000d00:	d10c      	bne.n	8000d1c <ai_platform_network_destroy+0x98>
 8000d02:	4b53      	ldr	r3, [pc, #332]	; (8000e50 <.text_25>)
 8000d04:	2401      	movs	r4, #1
 8000d06:	609c      	str	r4, [r3, #8]
 8000d08:	6899      	ldr	r1, [r3, #8]
 8000d0a:	2900      	cmp	r1, #0
 8000d0c:	d1fc      	bne.n	8000d08 <ai_platform_network_destroy+0x84>
 8000d0e:	4c4d      	ldr	r4, [pc, #308]	; (8000e44 <.text_22>)
 8000d10:	4d4d      	ldr	r5, [pc, #308]	; (8000e48 <.text_23>)
 8000d12:	601c      	str	r4, [r3, #0]
 8000d14:	681b      	ldr	r3, [r3, #0]
 8000d16:	42ab      	cmp	r3, r5
 8000d18:	d000      	beq.n	8000d1c <ai_platform_network_destroy+0x98>
 8000d1a:	e7fe      	b.n	8000d1a <ai_platform_network_destroy+0x96>
 8000d1c:	b102      	cbz	r2, 8000d20 <ai_platform_network_destroy+0x9c>
 8000d1e:	2000      	movs	r0, #0
 8000d20:	bc70      	pop	{r4, r5, r6}
 8000d22:	4770      	bx	lr

08000d24 <ai_platform_network_init>:
 8000d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d28:	b081      	sub	sp, #4
 8000d2a:	460a      	mov	r2, r1
 8000d2c:	b120      	cbz	r0, 8000d38 <ai_platform_network_init+0x14>
 8000d2e:	6801      	ldr	r1, [r0, #0]
 8000d30:	f8df 3538 	ldr.w	r3, [pc, #1336]	; 800126c <.text_27>
 8000d34:	4299      	cmp	r1, r3
 8000d36:	d000      	beq.n	8000d3a <ai_platform_network_init+0x16>
 8000d38:	2000      	movs	r0, #0
 8000d3a:	493f      	ldr	r1, [pc, #252]	; (8000e38 <.text_19>)
 8000d3c:	f240 4549 	movw	r5, #1097	; 0x449
 8000d40:	680c      	ldr	r4, [r1, #0]
 8000d42:	0864      	lsrs	r4, r4, #1
 8000d44:	0064      	lsls	r4, r4, #1
 8000d46:	600c      	str	r4, [r1, #0]
 8000d48:	493c      	ldr	r1, [pc, #240]	; (8000e3c <.text_20>)
 8000d4a:	680b      	ldr	r3, [r1, #0]
 8000d4c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000d50:	42ab      	cmp	r3, r5
 8000d52:	d112      	bne.n	8000d7a <ai_platform_network_init+0x56>
 8000d54:	2101      	movs	r1, #1
 8000d56:	2400      	movs	r4, #0
 8000d58:	2300      	movs	r3, #0
 8000d5a:	4321      	orrs	r1, r4
 8000d5c:	4319      	orrs	r1, r3
 8000d5e:	d01a      	beq.n	8000d96 <ai_platform_network_init+0x72>
 8000d60:	4b37      	ldr	r3, [pc, #220]	; (8000e40 <.text_21>)
 8000d62:	2401      	movs	r4, #1
 8000d64:	609c      	str	r4, [r3, #8]
 8000d66:	6899      	ldr	r1, [r3, #8]
 8000d68:	2900      	cmp	r1, #0
 8000d6a:	d1fc      	bne.n	8000d66 <ai_platform_network_init+0x42>
 8000d6c:	4c35      	ldr	r4, [pc, #212]	; (8000e44 <.text_22>)
 8000d6e:	4d36      	ldr	r5, [pc, #216]	; (8000e48 <.text_23>)
 8000d70:	601c      	str	r4, [r3, #0]
 8000d72:	681b      	ldr	r3, [r3, #0]
 8000d74:	42ab      	cmp	r3, r5
 8000d76:	d022      	beq.n	8000dbe <ai_platform_network_init+0x9a>
 8000d78:	e7fe      	b.n	8000d78 <ai_platform_network_init+0x54>
 8000d7a:	2100      	movs	r1, #0
 8000d7c:	f240 4651 	movw	r6, #1105	; 0x451
 8000d80:	42b3      	cmp	r3, r6
 8000d82:	bf08      	it	eq
 8000d84:	2401      	moveq	r4, #1
 8000d86:	d0e7      	beq.n	8000d58 <ai_platform_network_init+0x34>
 8000d88:	2400      	movs	r4, #0
 8000d8a:	f240 4552 	movw	r5, #1106	; 0x452
 8000d8e:	42ab      	cmp	r3, r5
 8000d90:	d1e2      	bne.n	8000d58 <ai_platform_network_init+0x34>
 8000d92:	2301      	movs	r3, #1
 8000d94:	e7e1      	b.n	8000d5a <ai_platform_network_init+0x36>
 8000d96:	492d      	ldr	r1, [pc, #180]	; (8000e4c <.text_24>)
 8000d98:	680b      	ldr	r3, [r1, #0]
 8000d9a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000d9e:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8000da2:	d10c      	bne.n	8000dbe <ai_platform_network_init+0x9a>
 8000da4:	4b2a      	ldr	r3, [pc, #168]	; (8000e50 <.text_25>)
 8000da6:	2401      	movs	r4, #1
 8000da8:	609c      	str	r4, [r3, #8]
 8000daa:	6899      	ldr	r1, [r3, #8]
 8000dac:	2900      	cmp	r1, #0
 8000dae:	d1fc      	bne.n	8000daa <ai_platform_network_init+0x86>
 8000db0:	4c24      	ldr	r4, [pc, #144]	; (8000e44 <.text_22>)
 8000db2:	4d25      	ldr	r5, [pc, #148]	; (8000e48 <.text_23>)
 8000db4:	601c      	str	r4, [r3, #0]
 8000db6:	681b      	ldr	r3, [r3, #0]
 8000db8:	42ab      	cmp	r3, r5
 8000dba:	d000      	beq.n	8000dbe <ai_platform_network_init+0x9a>
 8000dbc:	e7fe      	b.n	8000dbc <ai_platform_network_init+0x98>
 8000dbe:	2800      	cmp	r0, #0
 8000dc0:	d035      	beq.n	8000e2e <ai_platform_network_init+0x10a>
 8000dc2:	b90a      	cbnz	r2, 8000dc8 <ai_platform_network_init+0xa4>
 8000dc4:	2211      	movs	r2, #17
 8000dc6:	e012      	b.n	8000dee <ai_platform_network_init+0xca>
 8000dc8:	6a91      	ldr	r1, [r2, #40]	; 0x28
 8000dca:	6913      	ldr	r3, [r2, #16]
 8000dcc:	b939      	cbnz	r1, 8000dde <ai_platform_network_init+0xba>
 8000dce:	8c14      	ldrh	r4, [r2, #32]
 8000dd0:	8bd5      	ldrh	r5, [r2, #30]
 8000dd2:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8000dd4:	436c      	muls	r4, r5
 8000dd6:	434c      	muls	r4, r1
 8000dd8:	bf18      	it	ne
 8000dda:	2213      	movne	r2, #19
 8000ddc:	d107      	bne.n	8000dee <ai_platform_network_init+0xca>
 8000dde:	b973      	cbnz	r3, 8000dfe <ai_platform_network_init+0xda>
 8000de0:	8911      	ldrh	r1, [r2, #8]
 8000de2:	88d4      	ldrh	r4, [r2, #6]
 8000de4:	68d3      	ldr	r3, [r2, #12]
 8000de6:	4361      	muls	r1, r4
 8000de8:	4359      	muls	r1, r3
 8000dea:	d008      	beq.n	8000dfe <ai_platform_network_init+0xda>
 8000dec:	2212      	movs	r2, #18
 8000dee:	2110      	movs	r1, #16
 8000df0:	3010      	adds	r0, #16
 8000df2:	f000 fa68 	bl	80012c6 <core_set_error>
 8000df6:	2000      	movs	r0, #0
 8000df8:	b001      	add	sp, #4
 8000dfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000dfe:	f100 0118 	add.w	r1, r0, #24
 8000e02:	f100 0e30 	add.w	lr, r0, #48	; 0x30
 8000e06:	e8b2 10f8 	ldmia.w	r2!, {r3, r4, r5, r6, r7, ip}
 8000e0a:	e881 10f8 	stmia.w	r1, {r3, r4, r5, r6, r7, ip}
 8000e0e:	e892 0f0a 	ldmia.w	r2, {r1, r3, r8, r9, sl, fp}
 8000e12:	e88e 0f0a 	stmia.w	lr, {r1, r3, r8, r9, sl, fp}
 8000e16:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8000e18:	2103      	movs	r1, #3
 8000e1a:	60c1      	str	r1, [r0, #12]
 8000e1c:	b13a      	cbz	r2, 8000e2e <ai_platform_network_init+0x10a>
 8000e1e:	e000      	b.n	8000e22 <ai_platform_network_init+0xfe>
 8000e20:	460a      	mov	r2, r1
 8000e22:	68d1      	ldr	r1, [r2, #12]
 8000e24:	6090      	str	r0, [r2, #8]
 8000e26:	428a      	cmp	r2, r1
 8000e28:	bf18      	it	ne
 8000e2a:	2900      	cmpne	r1, #0
 8000e2c:	d1f8      	bne.n	8000e20 <ai_platform_network_init+0xfc>
 8000e2e:	b001      	add	sp, #4
 8000e30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000e34 <.text_18>:
 8000e34:	00000000 	.word	0x00000000

08000e38 <.text_19>:
 8000e38:	e0002000 	.word	0xe0002000

08000e3c <.text_20>:
 8000e3c:	e0042000 	.word	0xe0042000

08000e40 <.text_21>:
 8000e40:	40023000 	.word	0x40023000

08000e44 <.text_22>:
 8000e44:	f407a5c2 	.word	0xf407a5c2

08000e48 <.text_23>:
 8000e48:	b5e8b5cd 	.word	0xb5e8b5cd

08000e4c <.text_24>:
 8000e4c:	5c001000 	.word	0x5c001000

08000e50 <.text_25>:
 8000e50:	58024c00 	.word	0x58024c00

08000e54 <ai_platform_network_process>:
 8000e54:	e92d 4ff4 	stmdb	sp!, {r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e58:	b082      	sub	sp, #8
 8000e5a:	460a      	mov	r2, r1
 8000e5c:	b120      	cbz	r0, 8000e68 <ai_platform_network_process+0x14>
 8000e5e:	6801      	ldr	r1, [r0, #0]
 8000e60:	f8df 3408 	ldr.w	r3, [pc, #1032]	; 800126c <.text_27>
 8000e64:	4299      	cmp	r1, r3
 8000e66:	d000      	beq.n	8000e6a <ai_platform_network_process+0x16>
 8000e68:	2000      	movs	r0, #0
 8000e6a:	f8df 1408 	ldr.w	r1, [pc, #1032]	; 8001274 <.text_29>
 8000e6e:	f240 4549 	movw	r5, #1097	; 0x449
 8000e72:	680c      	ldr	r4, [r1, #0]
 8000e74:	0864      	lsrs	r4, r4, #1
 8000e76:	0064      	lsls	r4, r4, #1
 8000e78:	600c      	str	r4, [r1, #0]
 8000e7a:	f8df 13fc 	ldr.w	r1, [pc, #1020]	; 8001278 <.text_30>
 8000e7e:	680b      	ldr	r3, [r1, #0]
 8000e80:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000e84:	42ab      	cmp	r3, r5
 8000e86:	d115      	bne.n	8000eb4 <ai_platform_network_process+0x60>
 8000e88:	2101      	movs	r1, #1
 8000e8a:	2400      	movs	r4, #0
 8000e8c:	2300      	movs	r3, #0
 8000e8e:	4321      	orrs	r1, r4
 8000e90:	4319      	orrs	r1, r3
 8000e92:	d01d      	beq.n	8000ed0 <ai_platform_network_process+0x7c>
 8000e94:	f8df 33e4 	ldr.w	r3, [pc, #996]	; 800127c <.text_31>
 8000e98:	2401      	movs	r4, #1
 8000e9a:	609c      	str	r4, [r3, #8]
 8000e9c:	6899      	ldr	r1, [r3, #8]
 8000e9e:	2900      	cmp	r1, #0
 8000ea0:	d1fc      	bne.n	8000e9c <ai_platform_network_process+0x48>
 8000ea2:	f8df 43dc 	ldr.w	r4, [pc, #988]	; 8001280 <.text_32>
 8000ea6:	f8df 53dc 	ldr.w	r5, [pc, #988]	; 8001284 <.text_33>
 8000eaa:	601c      	str	r4, [r3, #0]
 8000eac:	681b      	ldr	r3, [r3, #0]
 8000eae:	42ab      	cmp	r3, r5
 8000eb0:	d026      	beq.n	8000f00 <ai_platform_network_process+0xac>
 8000eb2:	e7fe      	b.n	8000eb2 <ai_platform_network_process+0x5e>
 8000eb4:	2100      	movs	r1, #0
 8000eb6:	f240 4a51 	movw	sl, #1105	; 0x451
 8000eba:	4553      	cmp	r3, sl
 8000ebc:	bf08      	it	eq
 8000ebe:	2401      	moveq	r4, #1
 8000ec0:	d0e4      	beq.n	8000e8c <ai_platform_network_process+0x38>
 8000ec2:	2400      	movs	r4, #0
 8000ec4:	f240 4552 	movw	r5, #1106	; 0x452
 8000ec8:	42ab      	cmp	r3, r5
 8000eca:	d1df      	bne.n	8000e8c <ai_platform_network_process+0x38>
 8000ecc:	2301      	movs	r3, #1
 8000ece:	e7de      	b.n	8000e8e <ai_platform_network_process+0x3a>
 8000ed0:	f8df 13b4 	ldr.w	r1, [pc, #948]	; 8001288 <.text_34>
 8000ed4:	680b      	ldr	r3, [r1, #0]
 8000ed6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000eda:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8000ede:	d10f      	bne.n	8000f00 <ai_platform_network_process+0xac>
 8000ee0:	f8df 33a8 	ldr.w	r3, [pc, #936]	; 800128c <.text_35>
 8000ee4:	2401      	movs	r4, #1
 8000ee6:	609c      	str	r4, [r3, #8]
 8000ee8:	6899      	ldr	r1, [r3, #8]
 8000eea:	2900      	cmp	r1, #0
 8000eec:	d1fc      	bne.n	8000ee8 <ai_platform_network_process+0x94>
 8000eee:	f8df 4390 	ldr.w	r4, [pc, #912]	; 8001280 <.text_32>
 8000ef2:	f8df 5390 	ldr.w	r5, [pc, #912]	; 8001284 <.text_33>
 8000ef6:	601c      	str	r4, [r3, #0]
 8000ef8:	681b      	ldr	r3, [r3, #0]
 8000efa:	42ab      	cmp	r3, r5
 8000efc:	d000      	beq.n	8000f00 <ai_platform_network_process+0xac>
 8000efe:	e7fe      	b.n	8000efe <ai_platform_network_process+0xaa>
 8000f00:	2800      	cmp	r0, #0
 8000f02:	f000 8114 	beq.w	800112e <ai_platform_network_process+0x2da>
 8000f06:	f8b0 1048 	ldrh.w	r1, [r0, #72]	; 0x48
 8000f0a:	b101      	cbz	r1, 8000f0e <ai_platform_network_process+0xba>
 8000f0c:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 8000f0e:	7b05      	ldrb	r5, [r0, #12]
 8000f10:	2300      	movs	r3, #0
 8000f12:	2400      	movs	r4, #0
 8000f14:	82c3      	strh	r3, [r0, #22]
 8000f16:	8284      	strh	r4, [r0, #20]
 8000f18:	f005 0503 	and.w	r5, r5, #3
 8000f1c:	2d03      	cmp	r5, #3
 8000f1e:	d002      	beq.n	8000f26 <ai_platform_network_process+0xd2>
 8000f20:	2230      	movs	r2, #48	; 0x30
 8000f22:	2111      	movs	r1, #17
 8000f24:	e100      	b.n	8001128 <ai_platform_network_process+0x2d4>
 8000f26:	2a00      	cmp	r2, #0
 8000f28:	bf1e      	ittt	ne
 8000f2a:	2900      	cmpne	r1, #0
 8000f2c:	880b      	ldrhne	r3, [r1, #0]
 8000f2e:	2b00      	cmpne	r3, #0
 8000f30:	f000 80f8 	beq.w	8001124 <ai_platform_network_process+0x2d0>
 8000f34:	f8b2 b004 	ldrh.w	fp, [r2, #4]
 8000f38:	46a0      	mov	r8, r4
 8000f3a:	46a1      	mov	r9, r4
 8000f3c:	2600      	movs	r6, #0
 8000f3e:	1d17      	adds	r7, r2, #4
 8000f40:	4682      	mov	sl, r0
 8000f42:	9100      	str	r1, [sp, #0]
 8000f44:	e014      	b.n	8000f70 <ai_platform_network_process+0x11c>
 8000f46:	68f8      	ldr	r0, [r7, #12]
 8000f48:	2800      	cmp	r0, #0
 8000f4a:	f000 80ea 	beq.w	8001122 <ai_platform_network_process+0x2ce>
 8000f4e:	8838      	ldrh	r0, [r7, #0]
 8000f50:	2800      	cmp	r0, #0
 8000f52:	d052      	beq.n	8000ffa <ai_platform_network_process+0x1a6>
 8000f54:	4558      	cmp	r0, fp
 8000f56:	4622      	mov	r2, r4
 8000f58:	f108 0801 	add.w	r8, r8, #1
 8000f5c:	f109 0904 	add.w	r9, r9, #4
 8000f60:	bf28      	it	cs
 8000f62:	4683      	movcs	fp, r0
 8000f64:	1f39      	subs	r1, r7, #4
 8000f66:	4628      	mov	r0, r5
 8000f68:	f7ff fb84 	bl	8000674 <_platform_network_state_setup>
 8000f6c:	3718      	adds	r7, #24
 8000f6e:	3610      	adds	r6, #16
 8000f70:	9800      	ldr	r0, [sp, #0]
 8000f72:	8801      	ldrh	r1, [r0, #0]
 8000f74:	4588      	cmp	r8, r1
 8000f76:	d24a      	bcs.n	800100e <ai_platform_network_process+0x1ba>
 8000f78:	4602      	mov	r2, r0
 8000f7a:	6850      	ldr	r0, [r2, #4]
 8000f7c:	2800      	cmp	r0, #0
 8000f7e:	bf1c      	itt	ne
 8000f80:	f850 4009 	ldrne.w	r4, [r0, r9]
 8000f84:	2c00      	cmpne	r4, #0
 8000f86:	d042      	beq.n	800100e <ai_platform_network_process+0x1ba>
 8000f88:	6891      	ldr	r1, [r2, #8]
 8000f8a:	680a      	ldr	r2, [r1, #0]
 8000f8c:	1995      	adds	r5, r2, r6
 8000f8e:	f000 80c8 	beq.w	8001122 <ai_platform_network_process+0x2ce>
 8000f92:	69a0      	ldr	r0, [r4, #24]
 8000f94:	887b      	ldrh	r3, [r7, #2]
 8000f96:	88ba      	ldrh	r2, [r7, #4]
 8000f98:	6841      	ldr	r1, [r0, #4]
 8000f9a:	68b8      	ldr	r0, [r7, #8]
 8000f9c:	fb03 fc02 	mul.w	ip, r3, r2
 8000fa0:	fb00 fc0c 	mul.w	ip, r0, ip
 8000fa4:	4561      	cmp	r1, ip
 8000fa6:	d32d      	bcc.n	8001004 <ai_platform_network_process+0x1b0>
 8000fa8:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 8000fac:	f8dc e00c 	ldr.w	lr, [ip, #12]
 8000fb0:	459e      	cmp	lr, r3
 8000fb2:	bf01      	itttt	eq
 8000fb4:	f8dc 3008 	ldreq.w	r3, [ip, #8]
 8000fb8:	4293      	cmpeq	r3, r2
 8000fba:	f8dc 2004 	ldreq.w	r2, [ip, #4]
 8000fbe:	4282      	cmpeq	r2, r0
 8000fc0:	d120      	bne.n	8001004 <ai_platform_network_process+0x1b0>
 8000fc2:	69a0      	ldr	r0, [r4, #24]
 8000fc4:	6800      	ldr	r0, [r0, #0]
 8000fc6:	f005 fcc3 	bl	8006950 <ai_array_get_byte_size>
 8000fca:	68e1      	ldr	r1, [r4, #12]
 8000fcc:	6963      	ldr	r3, [r4, #20]
 8000fce:	68ca      	ldr	r2, [r1, #12]
 8000fd0:	68d9      	ldr	r1, [r3, #12]
 8000fd2:	434a      	muls	r2, r1
 8000fd4:	4290      	cmp	r0, r2
 8000fd6:	d315      	bcc.n	8001004 <ai_platform_network_process+0x1b0>
 8000fd8:	69a0      	ldr	r0, [r4, #24]
 8000fda:	6800      	ldr	r0, [r0, #0]
 8000fdc:	f005 fbe0 	bl	80067a0 <ai_array_to_buffer_fmt>
 8000fe0:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8000fe4:	f020 407e 	bic.w	r0, r0, #4261412864	; 0xfe000000
 8000fe8:	f021 417e 	bic.w	r1, r1, #4261412864	; 0xfe000000
 8000fec:	4288      	cmp	r0, r1
 8000fee:	d0aa      	beq.n	8000f46 <ai_platform_network_process+0xf2>
 8000ff0:	2219      	movs	r2, #25
 8000ff2:	2112      	movs	r1, #18
 8000ff4:	f10a 0010 	add.w	r0, sl, #16
 8000ff8:	e097      	b.n	800112a <ai_platform_network_process+0x2d6>
 8000ffa:	2221      	movs	r2, #33	; 0x21
 8000ffc:	2112      	movs	r1, #18
 8000ffe:	f10a 0010 	add.w	r0, sl, #16
 8001002:	e092      	b.n	800112a <ai_platform_network_process+0x2d6>
 8001004:	2218      	movs	r2, #24
 8001006:	2112      	movs	r1, #18
 8001008:	f10a 0010 	add.w	r0, sl, #16
 800100c:	e08d      	b.n	800112a <ai_platform_network_process+0x2d6>
 800100e:	9902      	ldr	r1, [sp, #8]
 8001010:	4655      	mov	r5, sl
 8001012:	2900      	cmp	r1, #0
 8001014:	d076      	beq.n	8001104 <ai_platform_network_process+0x2b0>
 8001016:	f8b5 0048 	ldrh.w	r0, [r5, #72]	; 0x48
 800101a:	2802      	cmp	r0, #2
 800101c:	db7c      	blt.n	8001118 <ai_platform_network_process+0x2c4>
 800101e:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8001020:	f113 000c 	adds.w	r0, r3, #12
 8001024:	bf1c      	itt	ne
 8001026:	8802      	ldrhne	r2, [r0, #0]
 8001028:	2a00      	cmpne	r2, #0
 800102a:	d075      	beq.n	8001118 <ai_platform_network_process+0x2c4>
 800102c:	f04f 0800 	mov.w	r8, #0
 8001030:	46c1      	mov	r9, r8
 8001032:	2600      	movs	r6, #0
 8001034:	1d0f      	adds	r7, r1, #4
 8001036:	9000      	str	r0, [sp, #0]
 8001038:	e013      	b.n	8001062 <ai_platform_network_process+0x20e>
 800103a:	68f8      	ldr	r0, [r7, #12]
 800103c:	2800      	cmp	r0, #0
 800103e:	d059      	beq.n	80010f4 <ai_platform_network_process+0x2a0>
 8001040:	8838      	ldrh	r0, [r7, #0]
 8001042:	2800      	cmp	r0, #0
 8001044:	d051      	beq.n	80010ea <ai_platform_network_process+0x296>
 8001046:	4558      	cmp	r0, fp
 8001048:	4622      	mov	r2, r4
 800104a:	f108 0801 	add.w	r8, r8, #1
 800104e:	f109 0904 	add.w	r9, r9, #4
 8001052:	bf28      	it	cs
 8001054:	4683      	movcs	fp, r0
 8001056:	1f39      	subs	r1, r7, #4
 8001058:	4628      	mov	r0, r5
 800105a:	f7ff fb0b 	bl	8000674 <_platform_network_state_setup>
 800105e:	3718      	adds	r7, #24
 8001060:	3610      	adds	r6, #16
 8001062:	9800      	ldr	r0, [sp, #0]
 8001064:	8801      	ldrh	r1, [r0, #0]
 8001066:	4588      	cmp	r8, r1
 8001068:	d249      	bcs.n	80010fe <ai_platform_network_process+0x2aa>
 800106a:	4602      	mov	r2, r0
 800106c:	6850      	ldr	r0, [r2, #4]
 800106e:	2800      	cmp	r0, #0
 8001070:	bf1c      	itt	ne
 8001072:	f850 4009 	ldrne.w	r4, [r0, r9]
 8001076:	2c00      	cmpne	r4, #0
 8001078:	d041      	beq.n	80010fe <ai_platform_network_process+0x2aa>
 800107a:	6891      	ldr	r1, [r2, #8]
 800107c:	680a      	ldr	r2, [r1, #0]
 800107e:	1995      	adds	r5, r2, r6
 8001080:	d038      	beq.n	80010f4 <ai_platform_network_process+0x2a0>
 8001082:	69a0      	ldr	r0, [r4, #24]
 8001084:	887b      	ldrh	r3, [r7, #2]
 8001086:	88ba      	ldrh	r2, [r7, #4]
 8001088:	6841      	ldr	r1, [r0, #4]
 800108a:	68b8      	ldr	r0, [r7, #8]
 800108c:	fb03 fc02 	mul.w	ip, r3, r2
 8001090:	fb00 fc0c 	mul.w	ip, r0, ip
 8001094:	4561      	cmp	r1, ip
 8001096:	d33e      	bcc.n	8001116 <ai_platform_network_process+0x2c2>
 8001098:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 800109c:	f8dc e00c 	ldr.w	lr, [ip, #12]
 80010a0:	459e      	cmp	lr, r3
 80010a2:	bf01      	itttt	eq
 80010a4:	f8dc 3008 	ldreq.w	r3, [ip, #8]
 80010a8:	4293      	cmpeq	r3, r2
 80010aa:	f8dc 2004 	ldreq.w	r2, [ip, #4]
 80010ae:	4282      	cmpeq	r2, r0
 80010b0:	d131      	bne.n	8001116 <ai_platform_network_process+0x2c2>
 80010b2:	69a0      	ldr	r0, [r4, #24]
 80010b4:	6800      	ldr	r0, [r0, #0]
 80010b6:	f005 fc4b 	bl	8006950 <ai_array_get_byte_size>
 80010ba:	68e1      	ldr	r1, [r4, #12]
 80010bc:	6963      	ldr	r3, [r4, #20]
 80010be:	68ca      	ldr	r2, [r1, #12]
 80010c0:	68d9      	ldr	r1, [r3, #12]
 80010c2:	434a      	muls	r2, r1
 80010c4:	4290      	cmp	r0, r2
 80010c6:	d326      	bcc.n	8001116 <ai_platform_network_process+0x2c2>
 80010c8:	69a0      	ldr	r0, [r4, #24]
 80010ca:	6800      	ldr	r0, [r0, #0]
 80010cc:	f005 fb68 	bl	80067a0 <ai_array_to_buffer_fmt>
 80010d0:	f857 1c04 	ldr.w	r1, [r7, #-4]
 80010d4:	f020 407e 	bic.w	r0, r0, #4261412864	; 0xfe000000
 80010d8:	f021 417e 	bic.w	r1, r1, #4261412864	; 0xfe000000
 80010dc:	4288      	cmp	r0, r1
 80010de:	d0ac      	beq.n	800103a <ai_platform_network_process+0x1e6>
 80010e0:	2219      	movs	r2, #25
 80010e2:	2113      	movs	r1, #19
 80010e4:	f10a 0010 	add.w	r0, sl, #16
 80010e8:	e01f      	b.n	800112a <ai_platform_network_process+0x2d6>
 80010ea:	2221      	movs	r2, #33	; 0x21
 80010ec:	2113      	movs	r1, #19
 80010ee:	f10a 0010 	add.w	r0, sl, #16
 80010f2:	e01a      	b.n	800112a <ai_platform_network_process+0x2d6>
 80010f4:	2217      	movs	r2, #23
 80010f6:	2113      	movs	r1, #19
 80010f8:	f10a 0010 	add.w	r0, sl, #16
 80010fc:	e015      	b.n	800112a <ai_platform_network_process+0x2d6>
 80010fe:	4655      	mov	r5, sl
 8001100:	f8a5 b014 	strh.w	fp, [r5, #20]
 8001104:	f8b5 0048 	ldrh.w	r0, [r5, #72]	; 0x48
 8001108:	2800      	cmp	r0, #0
 800110a:	bf14      	ite	ne
 800110c:	f8d5 a04c 	ldrne.w	sl, [r5, #76]	; 0x4c
 8001110:	f04f 0a00 	moveq.w	sl, #0
 8001114:	e00f      	b.n	8001136 <ai_platform_network_process+0x2e2>
 8001116:	4655      	mov	r5, sl
 8001118:	2218      	movs	r2, #24
 800111a:	2113      	movs	r1, #19
 800111c:	f105 0010 	add.w	r0, r5, #16
 8001120:	e003      	b.n	800112a <ai_platform_network_process+0x2d6>
 8001122:	4650      	mov	r0, sl
 8001124:	2217      	movs	r2, #23
 8001126:	2112      	movs	r1, #18
 8001128:	3010      	adds	r0, #16
 800112a:	f000 f8cc 	bl	80012c6 <core_set_error>
 800112e:	2000      	movs	r0, #0
 8001130:	b003      	add	sp, #12
 8001132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001136:	2802      	cmp	r0, #2
 8001138:	8aa9      	ldrh	r1, [r5, #20]
 800113a:	bfa6      	itte	ge
 800113c:	6ce8      	ldrge	r0, [r5, #76]	; 0x4c
 800113e:	f100 0b0c 	addge.w	fp, r0, #12
 8001142:	f04f 0b00 	movlt.w	fp, #0
 8001146:	8ae8      	ldrh	r0, [r5, #22]
 8001148:	ebb0 0f01 	cmp.w	r0, r1
 800114c:	f080 8089 	bcs.w	8001262 <ai_platform_network_process+0x40e>
 8001150:	f04f 0800 	mov.w	r8, #0
 8001154:	4654      	mov	r4, sl
 8001156:	46c1      	mov	r9, r8
 8001158:	46c2      	mov	sl, r8
 800115a:	e018      	b.n	800118e <ai_platform_network_process+0x33a>
 800115c:	6882      	ldr	r2, [r0, #8]
 800115e:	68c3      	ldr	r3, [r0, #12]
 8001160:	6871      	ldr	r1, [r6, #4]
 8001162:	1ad2      	subs	r2, r2, r3
 8001164:	188b      	adds	r3, r1, r2
 8001166:	6083      	str	r3, [r0, #8]
 8001168:	6871      	ldr	r1, [r6, #4]
 800116a:	60c1      	str	r1, [r0, #12]
 800116c:	6870      	ldr	r0, [r6, #4]
 800116e:	68b1      	ldr	r1, [r6, #8]
 8001170:	4408      	add	r0, r1
 8001172:	6070      	str	r0, [r6, #4]
 8001174:	6831      	ldr	r1, [r6, #0]
 8001176:	4288      	cmp	r0, r1
 8001178:	d302      	bcc.n	8001180 <ai_platform_network_process+0x32c>
 800117a:	68f0      	ldr	r0, [r6, #12]
 800117c:	4240      	negs	r0, r0
 800117e:	4408      	add	r0, r1
 8001180:	6070      	str	r0, [r6, #4]
 8001182:	f10a 0a01 	add.w	sl, sl, #1
 8001186:	f109 0910 	add.w	r9, r9, #16
 800118a:	f108 0804 	add.w	r8, r8, #4
 800118e:	2c00      	cmp	r4, #0
 8001190:	bf14      	ite	ne
 8001192:	8820      	ldrhne	r0, [r4, #0]
 8001194:	2000      	moveq	r0, #0
 8001196:	4582      	cmp	sl, r0
 8001198:	d212      	bcs.n	80011c0 <ai_platform_network_process+0x36c>
 800119a:	6860      	ldr	r0, [r4, #4]
 800119c:	b180      	cbz	r0, 80011c0 <ai_platform_network_process+0x36c>
 800119e:	f850 0008 	ldr.w	r0, [r0, r8]
 80011a2:	b168      	cbz	r0, 80011c0 <ai_platform_network_process+0x36c>
 80011a4:	6980      	ldr	r0, [r0, #24]
 80011a6:	68a1      	ldr	r1, [r4, #8]
 80011a8:	6803      	ldr	r3, [r0, #0]
 80011aa:	680a      	ldr	r2, [r1, #0]
 80011ac:	0099      	lsls	r1, r3, #2
 80011ae:	eb02 0609 	add.w	r6, r2, r9
 80011b2:	d5d3      	bpl.n	800115c <ai_platform_network_process+0x308>
 80011b4:	68b2      	ldr	r2, [r6, #8]
 80011b6:	6871      	ldr	r1, [r6, #4]
 80011b8:	6880      	ldr	r0, [r0, #8]
 80011ba:	f00e fdc0 	bl	800fd3e <__aeabi_memcpy>
 80011be:	e7d5      	b.n	800116c <ai_platform_network_process+0x318>
 80011c0:	46a2      	mov	sl, r4
 80011c2:	4628      	mov	r0, r5
 80011c4:	f04f 0800 	mov.w	r8, #0
 80011c8:	465c      	mov	r4, fp
 80011ca:	f001 f897 	bl	80022fc <ai_layers_forward_all>
 80011ce:	46c1      	mov	r9, r8
 80011d0:	46c3      	mov	fp, r8
 80011d2:	e019      	b.n	8001208 <ai_platform_network_process+0x3b4>
 80011d4:	6871      	ldr	r1, [r6, #4]
 80011d6:	68b2      	ldr	r2, [r6, #8]
 80011d8:	4411      	add	r1, r2
 80011da:	6071      	str	r1, [r6, #4]
 80011dc:	6832      	ldr	r2, [r6, #0]
 80011de:	4291      	cmp	r1, r2
 80011e0:	d302      	bcc.n	80011e8 <ai_platform_network_process+0x394>
 80011e2:	68f1      	ldr	r1, [r6, #12]
 80011e4:	4249      	negs	r1, r1
 80011e6:	4411      	add	r1, r2
 80011e8:	6071      	str	r1, [r6, #4]
 80011ea:	460a      	mov	r2, r1
 80011ec:	6881      	ldr	r1, [r0, #8]
 80011ee:	68c3      	ldr	r3, [r0, #12]
 80011f0:	1ac9      	subs	r1, r1, r3
 80011f2:	1853      	adds	r3, r2, r1
 80011f4:	6083      	str	r3, [r0, #8]
 80011f6:	6872      	ldr	r2, [r6, #4]
 80011f8:	f8c0 200c 	str.w	r2, [r0, #12]
 80011fc:	f10b 0b01 	add.w	fp, fp, #1
 8001200:	f109 0910 	add.w	r9, r9, #16
 8001204:	f108 0804 	add.w	r8, r8, #4
 8001208:	2c00      	cmp	r4, #0
 800120a:	bf14      	ite	ne
 800120c:	8820      	ldrhne	r0, [r4, #0]
 800120e:	2000      	moveq	r0, #0
 8001210:	4583      	cmp	fp, r0
 8001212:	d21d      	bcs.n	8001250 <ai_platform_network_process+0x3fc>
 8001214:	6860      	ldr	r0, [r4, #4]
 8001216:	b1d8      	cbz	r0, 8001250 <ai_platform_network_process+0x3fc>
 8001218:	f850 0008 	ldr.w	r0, [r0, r8]
 800121c:	b1c0      	cbz	r0, 8001250 <ai_platform_network_process+0x3fc>
 800121e:	6980      	ldr	r0, [r0, #24]
 8001220:	68a1      	ldr	r1, [r4, #8]
 8001222:	6803      	ldr	r3, [r0, #0]
 8001224:	680a      	ldr	r2, [r1, #0]
 8001226:	0099      	lsls	r1, r3, #2
 8001228:	eb02 0609 	add.w	r6, r2, r9
 800122c:	d5d2      	bpl.n	80011d4 <ai_platform_network_process+0x380>
 800122e:	6881      	ldr	r1, [r0, #8]
 8001230:	68b2      	ldr	r2, [r6, #8]
 8001232:	6870      	ldr	r0, [r6, #4]
 8001234:	f00e fd83 	bl	800fd3e <__aeabi_memcpy>
 8001238:	6870      	ldr	r0, [r6, #4]
 800123a:	68b1      	ldr	r1, [r6, #8]
 800123c:	4408      	add	r0, r1
 800123e:	6070      	str	r0, [r6, #4]
 8001240:	6831      	ldr	r1, [r6, #0]
 8001242:	4288      	cmp	r0, r1
 8001244:	d302      	bcc.n	800124c <ai_platform_network_process+0x3f8>
 8001246:	68f0      	ldr	r0, [r6, #12]
 8001248:	4240      	negs	r0, r0
 800124a:	4408      	add	r0, r1
 800124c:	6070      	str	r0, [r6, #4]
 800124e:	e7d5      	b.n	80011fc <ai_platform_network_process+0x3a8>
 8001250:	8ae8      	ldrh	r0, [r5, #22]
 8001252:	8aa9      	ldrh	r1, [r5, #20]
 8001254:	46a3      	mov	fp, r4
 8001256:	1c40      	adds	r0, r0, #1
 8001258:	82e8      	strh	r0, [r5, #22]
 800125a:	b280      	uxth	r0, r0
 800125c:	4288      	cmp	r0, r1
 800125e:	f4ff af77 	bcc.w	8001150 <ai_platform_network_process+0x2fc>
 8001262:	8ae8      	ldrh	r0, [r5, #22]
 8001264:	b003      	add	sp, #12
 8001266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800126c <.text_27>:
 800126c:	a1c00100 	.word	0xa1c00100

08001270 <.text_28>:
 8001270:	01030001 	.word	0x01030001

08001274 <.text_29>:
 8001274:	e0002000 	.word	0xe0002000

08001278 <.text_30>:
 8001278:	e0042000 	.word	0xe0042000

0800127c <.text_31>:
 800127c:	40023000 	.word	0x40023000

08001280 <.text_32>:
 8001280:	f407a5c2 	.word	0xf407a5c2

08001284 <.text_33>:
 8001284:	b5e8b5cd 	.word	0xb5e8b5cd

08001288 <.text_34>:
 8001288:	5c001000 	.word	0x5c001000

0800128c <.text_35>:
 800128c:	58024c00 	.word	0x58024c00

08001290 <.text_36>:
 8001290:	00000104 	.word	0x00000104

08001294 <.text_37>:
 8001294:	00000101 	.word	0x00000101

08001298 <.text_38>:
 8001298:	00000301 	.word	0x00000301

0800129c <.text_39>:
 800129c:	00001030 	.word	0x00001030

080012a0 <.text_40>:
 80012a0:	00001001 	.word	0x00001001

080012a4 <_platform_network_sanity_check{5}::signatures>:
 80012a4:	84048403                                ....

080012a8 <.text_42>:
 80012a8:	00001002 	.word	0x00001002

080012ac <.text_43>:
 80012ac:	00001010 	.word	0x00001010

080012b0 <.text_44>:
 80012b0:	00000000 	.word	0x00000000

080012b4 <.text_45>:
 80012b4:	00001010 	.word	0x00001010

080012b8 <core_init>:
 80012b8:	2001      	movs	r0, #1
 80012ba:	4770      	bx	lr

080012bc <core_get_error>:
 80012bc:	4601      	mov	r1, r0
 80012be:	2200      	movs	r2, #0
 80012c0:	6808      	ldr	r0, [r1, #0]
 80012c2:	600a      	str	r2, [r1, #0]
 80012c4:	4770      	bx	lr

080012c6 <core_set_error>:
 80012c6:	7803      	ldrb	r3, [r0, #0]
 80012c8:	ea5f 6c03 	movs.w	ip, r3, lsl #24
 80012cc:	d104      	bne.n	80012d8 <core_set_error+0x12>
 80012ce:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 80012d2:	6001      	str	r1, [r0, #0]
 80012d4:	2001      	movs	r0, #1
 80012d6:	4770      	bx	lr
 80012d8:	2000      	movs	r0, #0
 80012da:	4770      	bx	lr

080012dc <core_mem_alloc>:
 80012dc:	2800      	cmp	r0, #0
 80012de:	d100      	bne.n	80012e2 <core_mem_alloc+0x6>
 80012e0:	4770      	bx	lr
 80012e2:	b500      	push	{lr}
 80012e4:	b081      	sub	sp, #4
 80012e6:	1d00      	adds	r0, r0, #4
 80012e8:	f00e fd56 	bl	800fd98 <malloc>
 80012ec:	b108      	cbz	r0, 80012f2 <core_mem_alloc+0x16>
 80012ee:	6000      	str	r0, [r0, #0]
 80012f0:	1d00      	adds	r0, r0, #4
 80012f2:	b001      	add	sp, #4
 80012f4:	bd00      	pop	{pc}

080012f6 <core_mem_free>:
 80012f6:	2800      	cmp	r0, #0
 80012f8:	d100      	bne.n	80012fc <core_mem_free+0x6>
 80012fa:	4770      	bx	lr
 80012fc:	b500      	push	{lr}
 80012fe:	b081      	sub	sp, #4
 8001300:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8001304:	1f01      	subs	r1, r0, #4
 8001306:	428a      	cmp	r2, r1
 8001308:	d106      	bne.n	8001318 <core_mem_free+0x22>
 800130a:	b129      	cbz	r1, 8001318 <core_mem_free+0x22>
 800130c:	2000      	movs	r0, #0
 800130e:	6008      	str	r0, [r1, #0]
 8001310:	4608      	mov	r0, r1
 8001312:	f00e fd49 	bl	800fda8 <free>
 8001316:	2000      	movs	r0, #0
 8001318:	b001      	add	sp, #4
 800131a:	bd00      	pop	{pc}

0800131c <core_mem_realloc>:
 800131c:	b500      	push	{lr}
 800131e:	b081      	sub	sp, #4
 8001320:	b920      	cbnz	r0, 800132c <core_mem_realloc+0x10>
 8001322:	b1c1      	cbz	r1, 8001356 <core_mem_realloc+0x3a>
 8001324:	1d08      	adds	r0, r1, #4
 8001326:	f00e fd37 	bl	800fd98 <malloc>
 800132a:	e00e      	b.n	800134a <core_mem_realloc+0x2e>
 800132c:	b919      	cbnz	r1, 8001336 <core_mem_realloc+0x1a>
 800132e:	b001      	add	sp, #4
 8001330:	f85d eb04 	ldr.w	lr, [sp], #4
 8001334:	e7df      	b.n	80012f6 <core_mem_free>
 8001336:	1f02      	subs	r2, r0, #4
 8001338:	f850 0c04 	ldr.w	r0, [r0, #-4]
 800133c:	4290      	cmp	r0, r2
 800133e:	d109      	bne.n	8001354 <core_mem_realloc+0x38>
 8001340:	b142      	cbz	r2, 8001354 <core_mem_realloc+0x38>
 8001342:	1d09      	adds	r1, r1, #4
 8001344:	4610      	mov	r0, r2
 8001346:	f00f fab7 	bl	80108b8 <realloc>
 800134a:	b120      	cbz	r0, 8001356 <core_mem_realloc+0x3a>
 800134c:	6000      	str	r0, [r0, #0]
 800134e:	1d00      	adds	r0, r0, #4
 8001350:	b001      	add	sp, #4
 8001352:	bd00      	pop	{pc}
 8001354:	2000      	movs	r0, #0
 8001356:	b001      	add	sp, #4
 8001358:	bd00      	pop	{pc}
	...

0800135c <_core_inspect_tensor_list>:
 800135c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800135e:	0004      	movs	r4, r0
 8001360:	460d      	mov	r5, r1
 8001362:	b081      	sub	sp, #4
 8001364:	bf14      	ite	ne
 8001366:	2d00      	cmpne	r5, #0
 8001368:	2000      	moveq	r0, #0
 800136a:	d025      	beq.n	80013b8 <_core_inspect_tensor_list+0x5c>
 800136c:	2000      	movs	r0, #0
 800136e:	2600      	movs	r6, #0
 8001370:	6028      	str	r0, [r5, #0]
 8001372:	2700      	movs	r7, #0
 8001374:	60a8      	str	r0, [r5, #8]
 8001376:	60e8      	str	r0, [r5, #12]
 8001378:	e017      	b.n	80013aa <_core_inspect_tensor_list+0x4e>
 800137a:	6841      	ldr	r1, [r0, #4]
 800137c:	4610      	mov	r0, r2
 800137e:	f005 fae7 	bl	8006950 <ai_array_get_byte_size>
 8001382:	e00a      	b.n	800139a <_core_inspect_tensor_list+0x3e>
 8001384:	59c0      	ldr	r0, [r0, r7]
 8001386:	2800      	cmp	r0, #0
 8001388:	d015      	beq.n	80013b6 <_core_inspect_tensor_list+0x5a>
 800138a:	bf1c      	itt	ne
 800138c:	6980      	ldrne	r0, [r0, #24]
 800138e:	2800      	cmpne	r0, #0
 8001390:	d006      	beq.n	80013a0 <_core_inspect_tensor_list+0x44>
 8001392:	6802      	ldr	r2, [r0, #0]
 8001394:	0051      	lsls	r1, r2, #1
 8001396:	d5f0      	bpl.n	800137a <_core_inspect_tensor_list+0x1e>
 8001398:	2000      	movs	r0, #0
 800139a:	68aa      	ldr	r2, [r5, #8]
 800139c:	1880      	adds	r0, r0, r2
 800139e:	60a8      	str	r0, [r5, #8]
 80013a0:	6828      	ldr	r0, [r5, #0]
 80013a2:	1c76      	adds	r6, r6, #1
 80013a4:	1d3f      	adds	r7, r7, #4
 80013a6:	1c40      	adds	r0, r0, #1
 80013a8:	6028      	str	r0, [r5, #0]
 80013aa:	8821      	ldrh	r1, [r4, #0]
 80013ac:	428e      	cmp	r6, r1
 80013ae:	d202      	bcs.n	80013b6 <_core_inspect_tensor_list+0x5a>
 80013b0:	6860      	ldr	r0, [r4, #4]
 80013b2:	2800      	cmp	r0, #0
 80013b4:	d1e6      	bne.n	8001384 <_core_inspect_tensor_list+0x28>
 80013b6:	6828      	ldr	r0, [r5, #0]
 80013b8:	b001      	add	sp, #4
 80013ba:	bdf0      	pop	{r4, r5, r6, r7, pc}

080013bc <_core_inspect_forward_validate>:
 80013bc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80013c0:	b090      	sub	sp, #64	; 0x40
 80013c2:	6882      	ldr	r2, [r0, #8]
 80013c4:	9810      	ldr	r0, [sp, #64]	; 0x40
 80013c6:	6891      	ldr	r1, [r2, #8]
 80013c8:	9100      	str	r1, [sp, #0]
 80013ca:	688e      	ldr	r6, [r1, #8]
 80013cc:	09f6      	lsrs	r6, r6, #7
 80013ce:	f006 0601 	and.w	r6, r6, #1
 80013d2:	f88d 6004 	strb.w	r6, [sp, #4]
 80013d6:	6943      	ldr	r3, [r0, #20]
 80013d8:	8818      	ldrh	r0, [r3, #0]
 80013da:	2800      	cmp	r0, #0
 80013dc:	bf19      	ittee	ne
 80013de:	685c      	ldrne	r4, [r3, #4]
 80013e0:	9408      	strne	r4, [sp, #32]
 80013e2:	2500      	moveq	r5, #0
 80013e4:	9508      	streq	r5, [sp, #32]
 80013e6:	2802      	cmp	r0, #2
 80013e8:	db04      	blt.n	80013f4 <_core_inspect_forward_validate+0x38>
 80013ea:	6859      	ldr	r1, [r3, #4]
 80013ec:	f101 030c 	add.w	r3, r1, #12
 80013f0:	9307      	str	r3, [sp, #28]
 80013f2:	e001      	b.n	80013f8 <_core_inspect_forward_validate+0x3c>
 80013f4:	2400      	movs	r4, #0
 80013f6:	9407      	str	r4, [sp, #28]
 80013f8:	8ad3      	ldrh	r3, [r2, #22]
 80013fa:	2500      	movs	r5, #0
 80013fc:	9910      	ldr	r1, [sp, #64]	; 0x40
 80013fe:	9306      	str	r3, [sp, #24]
 8001400:	8a94      	ldrh	r4, [r2, #20]
 8001402:	950d      	str	r5, [sp, #52]	; 0x34
 8001404:	940b      	str	r4, [sp, #44]	; 0x2c
 8001406:	6d10      	ldr	r0, [r2, #80]	; 0x50
 8001408:	4281      	cmp	r1, r0
 800140a:	f040 80f8 	bne.w	80015fe <_core_inspect_forward_validate+0x242>
 800140e:	9900      	ldr	r1, [sp, #0]
 8001410:	2200      	movs	r2, #0
 8001412:	614a      	str	r2, [r1, #20]
 8001414:	9b00      	ldr	r3, [sp, #0]
 8001416:	69d8      	ldr	r0, [r3, #28]
 8001418:	2800      	cmp	r0, #0
 800141a:	f040 80f0 	bne.w	80015fe <_core_inspect_forward_validate+0x242>
 800141e:	4618      	mov	r0, r3
 8001420:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8001422:	6983      	ldr	r3, [r0, #24]
 8001424:	2700      	movs	r7, #0
 8001426:	4690      	mov	r8, r2
 8001428:	2400      	movs	r4, #0
 800142a:	b333      	cbz	r3, 800147a <_core_inspect_forward_validate+0xbe>
 800142c:	07d9      	lsls	r1, r3, #31
 800142e:	d504      	bpl.n	800143a <_core_inspect_forward_validate+0x7e>
 8001430:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8001432:	2401      	movs	r4, #1
 8001434:	68cf      	ldr	r7, [r1, #12]
 8001436:	f8d1 801c 	ldr.w	r8, [r1, #28]
 800143a:	0858      	lsrs	r0, r3, #1
 800143c:	d01d      	beq.n	800147a <_core_inspect_forward_validate+0xbe>
 800143e:	9900      	ldr	r1, [sp, #0]
 8001440:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8001442:	fa1f fc84 	uxth.w	ip, r4
 8001446:	ebcc 0ecc 	rsb	lr, ip, ip, lsl #3
 800144a:	1c64      	adds	r4, r4, #1
 800144c:	eb02 0cce 	add.w	ip, r2, lr, lsl #3
 8001450:	f8dc 900c 	ldr.w	r9, [ip, #12]
 8001454:	444f      	add	r7, r9
 8001456:	f8dc a01c 	ldr.w	sl, [ip, #28]
 800145a:	fa1f fc84 	uxth.w	ip, r4
 800145e:	ebcc 0ecc 	rsb	lr, ip, ip, lsl #3
 8001462:	1c64      	adds	r4, r4, #1
 8001464:	eb02 02ce 	add.w	r2, r2, lr, lsl #3
 8001468:	1e40      	subs	r0, r0, #1
 800146a:	44d0      	add	r8, sl
 800146c:	f8d2 900c 	ldr.w	r9, [r2, #12]
 8001470:	69d2      	ldr	r2, [r2, #28]
 8001472:	444f      	add	r7, r9
 8001474:	4490      	add	r8, r2
 8001476:	d1e3      	bne.n	8001440 <_core_inspect_forward_validate+0x84>
 8001478:	9100      	str	r1, [sp, #0]
 800147a:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 800147e:	9a00      	ldr	r2, [sp, #0]
 8001480:	017f      	lsls	r7, r7, #5
 8001482:	ea4f 1848 	mov.w	r8, r8, lsl #5
 8001486:	00c9      	lsls	r1, r1, #3
 8001488:	9102      	str	r1, [sp, #8]
 800148a:	6bd0      	ldr	r0, [r2, #60]	; 0x3c
 800148c:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8001490:	eb01 1940 	add.w	r9, r1, r0, lsl #5
 8001494:	0030      	movs	r0, r6
 8001496:	fb0a 7a05 	mla	sl, sl, r5, r7
 800149a:	f109 093b 	add.w	r9, r9, #59	; 0x3b
 800149e:	ea4f 0999 	mov.w	r9, r9, lsr #2
 80014a2:	f10a 0a03 	add.w	sl, sl, #3
 80014a6:	ea4f 0a9a 	mov.w	sl, sl, lsr #2
 80014aa:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 80014ae:	d00a      	beq.n	80014c6 <_core_inspect_forward_validate+0x10a>
 80014b0:	9900      	ldr	r1, [sp, #0]
 80014b2:	eb0a 0b89 	add.w	fp, sl, r9, lsl #2
 80014b6:	6b88      	ldr	r0, [r1, #56]	; 0x38
 80014b8:	fb00 8005 	mla	r0, r0, r5, r8
 80014bc:	1cc0      	adds	r0, r0, #3
 80014be:	0880      	lsrs	r0, r0, #2
 80014c0:	eb0b 0b80 	add.w	fp, fp, r0, lsl #2
 80014c4:	e001      	b.n	80014ca <_core_inspect_forward_validate+0x10e>
 80014c6:	ea4f 0b89 	mov.w	fp, r9, lsl #2
 80014ca:	9900      	ldr	r1, [sp, #0]
 80014cc:	6a0c      	ldr	r4, [r1, #32]
 80014ce:	b15c      	cbz	r4, 80014e8 <_core_inspect_forward_validate+0x12c>
 80014d0:	4608      	mov	r0, r1
 80014d2:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80014d4:	b112      	cbz	r2, 80014dc <_core_inspect_forward_validate+0x120>
 80014d6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80014d8:	4621      	mov	r1, r4
 80014da:	4790      	blx	r2
 80014dc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80014de:	4559      	cmp	r1, fp
 80014e0:	d20a      	bcs.n	80014f8 <_core_inspect_forward_validate+0x13c>
 80014e2:	4620      	mov	r0, r4
 80014e4:	f7ff ff07 	bl	80012f6 <core_mem_free>
 80014e8:	4658      	mov	r0, fp
 80014ea:	f7ff fef7 	bl	80012dc <core_mem_alloc>
 80014ee:	0004      	movs	r4, r0
 80014f0:	f000 8085 	beq.w	80015fe <_core_inspect_forward_validate+0x242>
 80014f4:	f8c4 b034 	str.w	fp, [r4, #52]	; 0x34
 80014f8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80014fc:	f104 0138 	add.w	r1, r4, #56	; 0x38
 8001500:	61a0      	str	r0, [r4, #24]
 8001502:	9a02      	ldr	r2, [sp, #8]
 8001504:	1888      	adds	r0, r1, r2
 8001506:	61e0      	str	r0, [r4, #28]
 8001508:	9b00      	ldr	r3, [sp, #0]
 800150a:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800150c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8001510:	eb00 00c2 	add.w	r0, r0, r2, lsl #3
 8001514:	6220      	str	r0, [r4, #32]
 8001516:	b13e      	cbz	r6, 8001528 <_core_inspect_forward_validate+0x16c>
 8001518:	eb04 0089 	add.w	r0, r4, r9, lsl #2
 800151c:	eb00 010a 	add.w	r1, r0, sl
 8001520:	eb01 0308 	add.w	r3, r1, r8
 8001524:	19c2      	adds	r2, r0, r7
 8001526:	e003      	b.n	8001530 <_core_inspect_forward_validate+0x174>
 8001528:	2100      	movs	r1, #0
 800152a:	2000      	movs	r0, #0
 800152c:	2300      	movs	r3, #0
 800152e:	2200      	movs	r2, #0
 8001530:	6323      	str	r3, [r4, #48]	; 0x30
 8001532:	62e2      	str	r2, [r4, #44]	; 0x2c
 8001534:	f8df 2880 	ldr.w	r2, [pc, #2176]	; 8001db8 <.text_9>
 8001538:	62a1      	str	r1, [r4, #40]	; 0x28
 800153a:	6260      	str	r0, [r4, #36]	; 0x24
 800153c:	9800      	ldr	r0, [sp, #0]
 800153e:	6204      	str	r4, [r0, #32]
 8001540:	9900      	ldr	r1, [sp, #0]
 8001542:	61cd      	str	r5, [r1, #28]
 8001544:	9800      	ldr	r0, [sp, #0]
 8001546:	6813      	ldr	r3, [r2, #0]
 8001548:	6901      	ldr	r1, [r0, #16]
 800154a:	6023      	str	r3, [r4, #0]
 800154c:	2000      	movs	r0, #0
 800154e:	1c5b      	adds	r3, r3, #1
 8001550:	6013      	str	r3, [r2, #0]
 8001552:	6060      	str	r0, [r4, #4]
 8001554:	9b00      	ldr	r3, [sp, #0]
 8001556:	68dd      	ldr	r5, [r3, #12]
 8001558:	60a5      	str	r5, [r4, #8]
 800155a:	9a00      	ldr	r2, [sp, #0]
 800155c:	6993      	ldr	r3, [r2, #24]
 800155e:	69a2      	ldr	r2, [r4, #24]
 8001560:	60e3      	str	r3, [r4, #12]
 8001562:	6120      	str	r0, [r4, #16]
 8001564:	6162      	str	r2, [r4, #20]
 8001566:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8001568:	2a00      	cmp	r2, #0
 800156a:	d048      	beq.n	80015fe <_core_inspect_forward_validate+0x242>
 800156c:	900a      	str	r0, [sp, #40]	; 0x28
 800156e:	9203      	str	r2, [sp, #12]
 8001570:	e000      	b.n	8001574 <_core_inspect_forward_validate+0x1b8>
 8001572:	9003      	str	r0, [sp, #12]
 8001574:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001576:	9a00      	ldr	r2, [sp, #0]
 8001578:	9800      	ldr	r0, [sp, #0]
 800157a:	1c59      	adds	r1, r3, #1
 800157c:	910a      	str	r1, [sp, #40]	; 0x28
 800157e:	6a11      	ldr	r1, [r2, #32]
 8001580:	9104      	str	r1, [sp, #16]
 8001582:	9903      	ldr	r1, [sp, #12]
 8001584:	69c5      	ldr	r5, [r0, #28]
 8001586:	694a      	ldr	r2, [r1, #20]
 8001588:	8810      	ldrh	r0, [r2, #0]
 800158a:	2800      	cmp	r0, #0
 800158c:	bf14      	ite	ne
 800158e:	6851      	ldrne	r1, [r2, #4]
 8001590:	2100      	moveq	r1, #0
 8001592:	2802      	cmp	r0, #2
 8001594:	db04      	blt.n	80015a0 <_core_inspect_forward_validate+0x1e4>
 8001596:	6852      	ldr	r2, [r2, #4]
 8001598:	f102 040c 	add.w	r4, r2, #12
 800159c:	940c      	str	r4, [sp, #48]	; 0x30
 800159e:	e001      	b.n	80015a4 <_core_inspect_forward_validate+0x1e8>
 80015a0:	2600      	movs	r6, #0
 80015a2:	960c      	str	r6, [sp, #48]	; 0x30
 80015a4:	9a04      	ldr	r2, [sp, #16]
 80015a6:	9f00      	ldr	r7, [sp, #0]
 80015a8:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 80015ac:	9800      	ldr	r0, [sp, #0]
 80015ae:	6954      	ldr	r4, [r2, #20]
 80015b0:	f8d7 e024 	ldr.w	lr, [r7, #36]	; 0x24
 80015b4:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80015b8:	9e03      	ldr	r6, [sp, #12]
 80015ba:	ebc3 04c3 	rsb	r4, r3, r3, lsl #3
 80015be:	6880      	ldr	r0, [r0, #8]
 80015c0:	eb0e 03c4 	add.w	r3, lr, r4, lsl #3
 80015c4:	9302      	str	r3, [sp, #8]
 80015c6:	8837      	ldrh	r7, [r6, #0]
 80015c8:	2600      	movs	r6, #0
 80015ca:	09c0      	lsrs	r0, r0, #7
 80015cc:	8017      	strh	r7, [r2, #0]
 80015ce:	f000 0001 	and.w	r0, r0, #1
 80015d2:	9b03      	ldr	r3, [sp, #12]
 80015d4:	2800      	cmp	r0, #0
 80015d6:	885c      	ldrh	r4, [r3, #2]
 80015d8:	6096      	str	r6, [r2, #8]
 80015da:	8054      	strh	r4, [r2, #2]
 80015dc:	9b02      	ldr	r3, [sp, #8]
 80015de:	68dc      	ldr	r4, [r3, #12]
 80015e0:	8194      	strh	r4, [r2, #12]
 80015e2:	9e02      	ldr	r6, [sp, #8]
 80015e4:	69f3      	ldr	r3, [r6, #28]
 80015e6:	81d3      	strh	r3, [r2, #14]
 80015e8:	d147      	bne.n	800167a <_core_inspect_forward_validate+0x2be>
 80015ea:	2100      	movs	r1, #0
 80015ec:	6150      	str	r0, [r2, #20]
 80015ee:	6111      	str	r1, [r2, #16]
 80015f0:	9803      	ldr	r0, [sp, #12]
 80015f2:	9903      	ldr	r1, [sp, #12]
 80015f4:	68c0      	ldr	r0, [r0, #12]
 80015f6:	4281      	cmp	r1, r0
 80015f8:	bf18      	it	ne
 80015fa:	2800      	cmpne	r0, #0
 80015fc:	d1b9      	bne.n	8001572 <_core_inspect_forward_validate+0x1b6>
 80015fe:	9800      	ldr	r0, [sp, #0]
 8001600:	6a02      	ldr	r2, [r0, #32]
 8001602:	6941      	ldr	r1, [r0, #20]
 8001604:	9800      	ldr	r0, [sp, #0]
 8001606:	6953      	ldr	r3, [r2, #20]
 8001608:	eb01 0441 	add.w	r4, r1, r1, lsl #1
 800160c:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 8001610:	9403      	str	r4, [sp, #12]
 8001612:	69d5      	ldr	r5, [r2, #28]
 8001614:	9504      	str	r5, [sp, #16]
 8001616:	f8d2 b020 	ldr.w	fp, [r2, #32]
 800161a:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800161c:	ebc1 03c1 	rsb	r3, r1, r1, lsl #3
 8001620:	9806      	ldr	r0, [sp, #24]
 8001622:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8001626:	9102      	str	r1, [sp, #8]
 8001628:	9903      	ldr	r1, [sp, #12]
 800162a:	1c40      	adds	r0, r0, #1
 800162c:	8088      	strh	r0, [r1, #4]
 800162e:	9a03      	ldr	r2, [sp, #12]
 8001630:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8001632:	80d0      	strh	r0, [r2, #6]
 8001634:	9900      	ldr	r1, [sp, #0]
 8001636:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8001638:	69c8      	ldr	r0, [r1, #28]
 800163a:	4290      	cmp	r0, r2
 800163c:	d104      	bne.n	8001648 <_core_inspect_forward_validate+0x28c>
 800163e:	9902      	ldr	r1, [sp, #8]
 8001640:	f101 002c 	add.w	r0, r1, #44	; 0x2c
 8001644:	f005 fb67 	bl	8006d16 <core_timer_reset>
 8001648:	9800      	ldr	r0, [sp, #0]
 800164a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800164c:	6841      	ldr	r1, [r0, #4]
 800164e:	6890      	ldr	r0, [r2, #8]
 8001650:	6081      	str	r1, [r0, #8]
 8001652:	9902      	ldr	r1, [sp, #8]
 8001654:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001656:	684a      	ldr	r2, [r1, #4]
 8001658:	f042 0201 	orr.w	r2, r2, #1
 800165c:	611a      	str	r2, [r3, #16]
 800165e:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8001662:	2800      	cmp	r0, #0
 8001664:	f000 8105 	beq.w	8001872 <_core_inspect_forward_validate+0x4b6>
 8001668:	f04f 0900 	mov.w	r9, #0
 800166c:	46ca      	mov	sl, r9
 800166e:	9c08      	ldr	r4, [sp, #32]
 8001670:	9e06      	ldr	r6, [sp, #24]
 8001672:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8001674:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8001678:	e0ea      	b.n	8001850 <_core_inspect_forward_validate+0x494>
 800167a:	9804      	ldr	r0, [sp, #16]
 800167c:	9c02      	ldr	r4, [sp, #8]
 800167e:	f8b2 e00c 	ldrh.w	lr, [r2, #12]
 8001682:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8001684:	6920      	ldr	r0, [r4, #16]
 8001686:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 800168a:	6110      	str	r0, [r2, #16]
 800168c:	9b04      	ldr	r3, [sp, #16]
 800168e:	9e02      	ldr	r6, [sp, #8]
 8001690:	6a9c      	ldr	r4, [r3, #40]	; 0x28
 8001692:	6a33      	ldr	r3, [r6, #32]
 8001694:	eb04 1743 	add.w	r7, r4, r3, lsl #5
 8001698:	6157      	str	r7, [r2, #20]
 800169a:	9c04      	ldr	r4, [sp, #16]
 800169c:	9e02      	ldr	r6, [sp, #8]
 800169e:	2700      	movs	r7, #0
 80016a0:	46b8      	mov	r8, r7
 80016a2:	46ba      	mov	sl, r7
 80016a4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80016a6:	69b4      	ldr	r4, [r6, #24]
 80016a8:	9109      	str	r1, [sp, #36]	; 0x24
 80016aa:	9205      	str	r2, [sp, #20]
 80016ac:	436c      	muls	r4, r5
 80016ae:	191e      	adds	r6, r3, r4
 80016b0:	1d03      	adds	r3, r0, #4
 80016b2:	eb0e 044e 	add.w	r4, lr, lr, lsl #1
 80016b6:	eb03 09c4 	add.w	r9, r3, r4, lsl #3
 80016ba:	e021      	b.n	8001700 <_core_inspect_forward_validate+0x344>
 80016bc:	2000      	movs	r0, #0
 80016be:	f849 0c04 	str.w	r0, [r9, #-4]
 80016c2:	6820      	ldr	r0, [r4, #0]
 80016c4:	f8c9 0000 	str.w	r0, [r9]
 80016c8:	2800      	cmp	r0, #0
 80016ca:	bf1c      	itt	ne
 80016cc:	8840      	ldrhne	r0, [r0, #2]
 80016ce:	2800      	cmpne	r0, #0
 80016d0:	bf07      	ittee	eq
 80016d2:	2100      	moveq	r1, #0
 80016d4:	f849 1c04 	streq.w	r1, [r9, #-4]
 80016d8:	2201      	movne	r2, #1
 80016da:	f849 2c04 	strne.w	r2, [r9, #-4]
 80016de:	bf00      	nop
 80016e0:	f8cb 1014 	str.w	r1, [fp, #20]
 80016e4:	69a0      	ldr	r0, [r4, #24]
 80016e6:	1c7f      	adds	r7, r7, #1
 80016e8:	f10a 0a18 	add.w	sl, sl, #24
 80016ec:	f109 0908 	add.w	r9, r9, #8
 80016f0:	f108 0804 	add.w	r8, r8, #4
 80016f4:	6841      	ldr	r1, [r0, #4]
 80016f6:	6800      	ldr	r0, [r0, #0]
 80016f8:	f005 f92a 	bl	8006950 <ai_array_get_byte_size>
 80016fc:	4368      	muls	r0, r5
 80016fe:	4406      	add	r6, r0
 8001700:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001702:	b100      	cbz	r0, 8001706 <_core_inspect_forward_validate+0x34a>
 8001704:	8800      	ldrh	r0, [r0, #0]
 8001706:	4287      	cmp	r7, r0
 8001708:	d221      	bcs.n	800174e <_core_inspect_forward_validate+0x392>
 800170a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800170c:	6840      	ldr	r0, [r0, #4]
 800170e:	b1f0      	cbz	r0, 800174e <_core_inspect_forward_validate+0x392>
 8001710:	f850 4008 	ldr.w	r4, [r0, r8]
 8001714:	b1dc      	cbz	r4, 800174e <_core_inspect_forward_validate+0x392>
 8001716:	9805      	ldr	r0, [sp, #20]
 8001718:	69a2      	ldr	r2, [r4, #24]
 800171a:	6901      	ldr	r1, [r0, #16]
 800171c:	6810      	ldr	r0, [r2, #0]
 800171e:	eb01 0b0a 	add.w	fp, r1, sl
 8001722:	f005 f83d 	bl	80067a0 <ai_array_to_buffer_fmt>
 8001726:	f8cb 0000 	str.w	r0, [fp]
 800172a:	f8ab 5004 	strh.w	r5, [fp, #4]
 800172e:	68e0      	ldr	r0, [r4, #12]
 8001730:	68c1      	ldr	r1, [r0, #12]
 8001732:	f8ab 1006 	strh.w	r1, [fp, #6]
 8001736:	6882      	ldr	r2, [r0, #8]
 8001738:	f8ab 2008 	strh.w	r2, [fp, #8]
 800173c:	6840      	ldr	r0, [r0, #4]
 800173e:	f1b9 0104 	subs.w	r1, r9, #4
 8001742:	f8cb 000c 	str.w	r0, [fp, #12]
 8001746:	f8cb 6010 	str.w	r6, [fp, #16]
 800174a:	d1b7      	bne.n	80016bc <_core_inspect_forward_validate+0x300>
 800174c:	e7c8      	b.n	80016e0 <_core_inspect_forward_validate+0x324>
 800174e:	9804      	ldr	r0, [sp, #16]
 8001750:	9b02      	ldr	r3, [sp, #8]
 8001752:	9905      	ldr	r1, [sp, #20]
 8001754:	2700      	movs	r7, #0
 8001756:	46b8      	mov	r8, r7
 8001758:	46ba      	mov	sl, r7
 800175a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 800175c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 800175e:	89cc      	ldrh	r4, [r1, #14]
 8001760:	4368      	muls	r0, r5
 8001762:	1816      	adds	r6, r2, r0
 8001764:	694a      	ldr	r2, [r1, #20]
 8001766:	eb04 0e44 	add.w	lr, r4, r4, lsl #1
 800176a:	9502      	str	r5, [sp, #8]
 800176c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800176e:	9105      	str	r1, [sp, #20]
 8001770:	1d13      	adds	r3, r2, #4
 8001772:	eb03 09ce 	add.w	r9, r3, lr, lsl #3
 8001776:	e022      	b.n	80017be <_core_inspect_forward_validate+0x402>
 8001778:	2000      	movs	r0, #0
 800177a:	f849 0c04 	str.w	r0, [r9, #-4]
 800177e:	6828      	ldr	r0, [r5, #0]
 8001780:	f8c9 0000 	str.w	r0, [r9]
 8001784:	2800      	cmp	r0, #0
 8001786:	bf1c      	itt	ne
 8001788:	8840      	ldrhne	r0, [r0, #2]
 800178a:	2800      	cmpne	r0, #0
 800178c:	bf07      	ittee	eq
 800178e:	2100      	moveq	r1, #0
 8001790:	f849 1c04 	streq.w	r1, [r9, #-4]
 8001794:	2201      	movne	r2, #1
 8001796:	f849 2c04 	strne.w	r2, [r9, #-4]
 800179a:	bf00      	nop
 800179c:	f8cb 1014 	str.w	r1, [fp, #20]
 80017a0:	69a8      	ldr	r0, [r5, #24]
 80017a2:	9d02      	ldr	r5, [sp, #8]
 80017a4:	1c7f      	adds	r7, r7, #1
 80017a6:	f10a 0a18 	add.w	sl, sl, #24
 80017aa:	f109 0908 	add.w	r9, r9, #8
 80017ae:	6841      	ldr	r1, [r0, #4]
 80017b0:	6800      	ldr	r0, [r0, #0]
 80017b2:	f108 0804 	add.w	r8, r8, #4
 80017b6:	f005 f8cb 	bl	8006950 <ai_array_get_byte_size>
 80017ba:	4345      	muls	r5, r0
 80017bc:	442e      	add	r6, r5
 80017be:	2c00      	cmp	r4, #0
 80017c0:	bf14      	ite	ne
 80017c2:	8820      	ldrhne	r0, [r4, #0]
 80017c4:	2000      	moveq	r0, #0
 80017c6:	4287      	cmp	r7, r0
 80017c8:	f4bf af12 	bcs.w	80015f0 <_core_inspect_forward_validate+0x234>
 80017cc:	6860      	ldr	r0, [r4, #4]
 80017ce:	2800      	cmp	r0, #0
 80017d0:	bf1c      	itt	ne
 80017d2:	f850 5008 	ldrne.w	r5, [r0, r8]
 80017d6:	2d00      	cmpne	r5, #0
 80017d8:	f43f af0a 	beq.w	80015f0 <_core_inspect_forward_validate+0x234>
 80017dc:	9805      	ldr	r0, [sp, #20]
 80017de:	69aa      	ldr	r2, [r5, #24]
 80017e0:	6941      	ldr	r1, [r0, #20]
 80017e2:	6810      	ldr	r0, [r2, #0]
 80017e4:	eb01 0b0a 	add.w	fp, r1, sl
 80017e8:	f004 ffda 	bl	80067a0 <ai_array_to_buffer_fmt>
 80017ec:	f8cb 0000 	str.w	r0, [fp]
 80017f0:	9802      	ldr	r0, [sp, #8]
 80017f2:	f8ab 0004 	strh.w	r0, [fp, #4]
 80017f6:	68e8      	ldr	r0, [r5, #12]
 80017f8:	68c1      	ldr	r1, [r0, #12]
 80017fa:	f8ab 1006 	strh.w	r1, [fp, #6]
 80017fe:	6882      	ldr	r2, [r0, #8]
 8001800:	f8ab 2008 	strh.w	r2, [fp, #8]
 8001804:	6840      	ldr	r0, [r0, #4]
 8001806:	f1b9 0104 	subs.w	r1, r9, #4
 800180a:	f8cb 000c 	str.w	r0, [fp, #12]
 800180e:	f8cb 6010 	str.w	r6, [fp, #16]
 8001812:	d1b1      	bne.n	8001778 <_core_inspect_forward_validate+0x3bc>
 8001814:	e7c2      	b.n	800179c <_core_inspect_forward_validate+0x3e0>
 8001816:	69a9      	ldr	r1, [r5, #24]
 8001818:	6808      	ldr	r0, [r1, #0]
 800181a:	0042      	lsls	r2, r0, #1
 800181c:	d414      	bmi.n	8001848 <_core_inspect_forward_validate+0x48c>
 800181e:	6849      	ldr	r1, [r1, #4]
 8001820:	f005 f896 	bl	8006950 <ai_array_get_byte_size>
 8001824:	69ab      	ldr	r3, [r5, #24]
 8001826:	4602      	mov	r2, r0
 8001828:	f8d8 5010 	ldr.w	r5, [r8, #16]
 800182c:	4370      	muls	r0, r6
 800182e:	6899      	ldr	r1, [r3, #8]
 8001830:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 8001834:	f105 0c10 	add.w	ip, r5, #16
 8001838:	1c7f      	adds	r7, r7, #1
 800183a:	00db      	lsls	r3, r3, #3
 800183c:	f85c e003 	ldr.w	lr, [ip, r3]
 8001840:	eb0e 0000 	add.w	r0, lr, r0
 8001844:	f00e fa7b 	bl	800fd3e <__aeabi_memcpy>
 8001848:	f109 0901 	add.w	r9, r9, #1
 800184c:	f10a 0a04 	add.w	sl, sl, #4
 8001850:	2c00      	cmp	r4, #0
 8001852:	bf14      	ite	ne
 8001854:	8820      	ldrhne	r0, [r4, #0]
 8001856:	2000      	moveq	r0, #0
 8001858:	4581      	cmp	r9, r0
 800185a:	d206      	bcs.n	800186a <_core_inspect_forward_validate+0x4ae>
 800185c:	6860      	ldr	r0, [r4, #4]
 800185e:	2800      	cmp	r0, #0
 8001860:	bf1c      	itt	ne
 8001862:	f850 500a 	ldrne.w	r5, [r0, sl]
 8001866:	2d00      	cmpne	r5, #0
 8001868:	d1d5      	bne.n	8001816 <_core_inspect_forward_validate+0x45a>
 800186a:	9408      	str	r4, [sp, #32]
 800186c:	9606      	str	r6, [sp, #24]
 800186e:	f8cd 800c 	str.w	r8, [sp, #12]
 8001872:	9a00      	ldr	r2, [sp, #0]
 8001874:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8001876:	2800      	cmp	r0, #0
 8001878:	d06c      	beq.n	8001954 <_core_inspect_forward_validate+0x598>
 800187a:	9a03      	ldr	r2, [sp, #12]
 800187c:	a909      	add	r1, sp, #36	; 0x24
 800187e:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8001882:	e892 40f8 	ldmia.w	r2, {r3, r4, r5, r6, r7, lr}
 8001886:	e881 40f8 	stmia.w	r1, {r3, r4, r5, r6, r7, lr}
 800188a:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
 800188e:	2100      	movs	r1, #0
 8001890:	910e      	str	r1, [sp, #56]	; 0x38
 8001892:	2600      	movs	r6, #0
 8001894:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8001898:	2700      	movs	r7, #0
 800189a:	4688      	mov	r8, r1
 800189c:	9c08      	ldr	r4, [sp, #32]
 800189e:	e00b      	b.n	80018b8 <_core_inspect_forward_validate+0x4fc>
 80018a0:	2000      	movs	r0, #0
 80018a2:	e003      	b.n	80018ac <_core_inspect_forward_validate+0x4f0>
 80018a4:	000a      	movs	r2, r1
 80018a6:	f84b 1036 	str.w	r1, [fp, r6, lsl #3]
 80018aa:	d0f9      	beq.n	80018a0 <_core_inspect_forward_validate+0x4e4>
 80018ac:	f8c9 0014 	str.w	r0, [r9, #20]
 80018b0:	1c76      	adds	r6, r6, #1
 80018b2:	1c7f      	adds	r7, r7, #1
 80018b4:	f108 0804 	add.w	r8, r8, #4
 80018b8:	2c00      	cmp	r4, #0
 80018ba:	bf14      	ite	ne
 80018bc:	8820      	ldrhne	r0, [r4, #0]
 80018be:	2000      	moveq	r0, #0
 80018c0:	4287      	cmp	r7, r0
 80018c2:	d235      	bcs.n	8001930 <_core_inspect_forward_validate+0x574>
 80018c4:	6860      	ldr	r0, [r4, #4]
 80018c6:	b398      	cbz	r0, 8001930 <_core_inspect_forward_validate+0x574>
 80018c8:	f850 5008 	ldr.w	r5, [r0, r8]
 80018cc:	b385      	cbz	r5, 8001930 <_core_inspect_forward_validate+0x574>
 80018ce:	69a9      	ldr	r1, [r5, #24]
 80018d0:	6808      	ldr	r0, [r1, #0]
 80018d2:	0042      	lsls	r2, r0, #1
 80018d4:	d4ed      	bmi.n	80018b2 <_core_inspect_forward_validate+0x4f6>
 80018d6:	f8d1 a008 	ldr.w	sl, [r1, #8]
 80018da:	990d      	ldr	r1, [sp, #52]	; 0x34
 80018dc:	eb06 0246 	add.w	r2, r6, r6, lsl #1
 80018e0:	eb01 09c2 	add.w	r9, r1, r2, lsl #3
 80018e4:	f004 ff5c 	bl	80067a0 <ai_array_to_buffer_fmt>
 80018e8:	f8c9 0000 	str.w	r0, [r9]
 80018ec:	2001      	movs	r0, #1
 80018ee:	f8a9 0004 	strh.w	r0, [r9, #4]
 80018f2:	68e8      	ldr	r0, [r5, #12]
 80018f4:	68c1      	ldr	r1, [r0, #12]
 80018f6:	f8a9 1006 	strh.w	r1, [r9, #6]
 80018fa:	6882      	ldr	r2, [r0, #8]
 80018fc:	f8a9 2008 	strh.w	r2, [r9, #8]
 8001900:	6840      	ldr	r0, [r0, #4]
 8001902:	f8c9 000c 	str.w	r0, [r9, #12]
 8001906:	eb1b 00c6 	adds.w	r0, fp, r6, lsl #3
 800190a:	f8c9 a010 	str.w	sl, [r9, #16]
 800190e:	d0cd      	beq.n	80018ac <_core_inspect_forward_validate+0x4f0>
 8001910:	2100      	movs	r1, #0
 8001912:	f10b 0204 	add.w	r2, fp, #4
 8001916:	f84b 1036 	str.w	r1, [fp, r6, lsl #3]
 800191a:	6829      	ldr	r1, [r5, #0]
 800191c:	f842 1036 	str.w	r1, [r2, r6, lsl #3]
 8001920:	2900      	cmp	r1, #0
 8001922:	d0bf      	beq.n	80018a4 <_core_inspect_forward_validate+0x4e8>
 8001924:	8849      	ldrh	r1, [r1, #2]
 8001926:	1e49      	subs	r1, r1, #1
 8001928:	4189      	sbcs	r1, r1
 800192a:	43c9      	mvns	r1, r1
 800192c:	0fc9      	lsrs	r1, r1, #31
 800192e:	e7b9      	b.n	80018a4 <_core_inspect_forward_validate+0x4e8>
 8001930:	9802      	ldr	r0, [sp, #8]
 8001932:	eddf 0a97 	vldr	s1, [pc, #604]	; 8001b90 <.text_5>
 8001936:	9b00      	ldr	r3, [sp, #0]
 8001938:	2200      	movs	r2, #0
 800193a:	a909      	add	r1, sp, #36	; 0x24
 800193c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8001940:	9800      	ldr	r0, [sp, #0]
 8001942:	eeb8 0a40 	vcvt.f32.u32	s0, s0
 8001946:	ee60 0a20 	vmul.f32	s1, s0, s1
 800194a:	edcd 0a0b 	vstr	s1, [sp, #44]	; 0x2c
 800194e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8001950:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8001952:	47a0      	blx	r4
 8001954:	9810      	ldr	r0, [sp, #64]	; 0x40
 8001956:	f9b0 0000 	ldrsh.w	r0, [r0]
 800195a:	f000 fcc1 	bl	80022e0 <ai_layer_type_is_valid>
 800195e:	b148      	cbz	r0, 8001974 <_core_inspect_forward_validate+0x5b8>
 8001960:	9802      	ldr	r0, [sp, #8]
 8001962:	302c      	adds	r0, #44	; 0x2c
 8001964:	f005 f9dd 	bl	8006d22 <core_timer_start>
 8001968:	9810      	ldr	r0, [sp, #64]	; 0x40
 800196a:	6902      	ldr	r2, [r0, #16]
 800196c:	4790      	blx	r2
 800196e:	9802      	ldr	r0, [sp, #8]
 8001970:	302c      	adds	r0, #44	; 0x2c
 8001972:	e007      	b.n	8001984 <_core_inspect_forward_validate+0x5c8>
 8001974:	9902      	ldr	r1, [sp, #8]
 8001976:	f101 002c 	add.w	r0, r1, #44	; 0x2c
 800197a:	f005 f9d2 	bl	8006d22 <core_timer_start>
 800197e:	9a02      	ldr	r2, [sp, #8]
 8001980:	f102 002c 	add.w	r0, r2, #44	; 0x2c
 8001984:	f005 f9d7 	bl	8006d36 <core_timer_stop>
 8001988:	f89d 0004 	ldrb.w	r0, [sp, #4]
 800198c:	b3a0      	cbz	r0, 80019f8 <_core_inspect_forward_validate+0x63c>
 800198e:	2700      	movs	r7, #0
 8001990:	46b9      	mov	r9, r7
 8001992:	46ba      	mov	sl, r7
 8001994:	9c07      	ldr	r4, [sp, #28]
 8001996:	9e06      	ldr	r6, [sp, #24]
 8001998:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800199c:	e01c      	b.n	80019d8 <_core_inspect_forward_validate+0x61c>
 800199e:	69a9      	ldr	r1, [r5, #24]
 80019a0:	6808      	ldr	r0, [r1, #0]
 80019a2:	0042      	lsls	r2, r0, #1
 80019a4:	d414      	bmi.n	80019d0 <_core_inspect_forward_validate+0x614>
 80019a6:	6849      	ldr	r1, [r1, #4]
 80019a8:	f004 ffd2 	bl	8006950 <ai_array_get_byte_size>
 80019ac:	69ab      	ldr	r3, [r5, #24]
 80019ae:	4602      	mov	r2, r0
 80019b0:	f8d8 5014 	ldr.w	r5, [r8, #20]
 80019b4:	4370      	muls	r0, r6
 80019b6:	6899      	ldr	r1, [r3, #8]
 80019b8:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 80019bc:	f105 0c10 	add.w	ip, r5, #16
 80019c0:	1c7f      	adds	r7, r7, #1
 80019c2:	00db      	lsls	r3, r3, #3
 80019c4:	f85c e003 	ldr.w	lr, [ip, r3]
 80019c8:	eb0e 0000 	add.w	r0, lr, r0
 80019cc:	f00e f9b7 	bl	800fd3e <__aeabi_memcpy>
 80019d0:	f109 0901 	add.w	r9, r9, #1
 80019d4:	f10a 0a04 	add.w	sl, sl, #4
 80019d8:	2c00      	cmp	r4, #0
 80019da:	bf14      	ite	ne
 80019dc:	8820      	ldrhne	r0, [r4, #0]
 80019de:	2000      	moveq	r0, #0
 80019e0:	4581      	cmp	r9, r0
 80019e2:	d206      	bcs.n	80019f2 <_core_inspect_forward_validate+0x636>
 80019e4:	6860      	ldr	r0, [r4, #4]
 80019e6:	2800      	cmp	r0, #0
 80019e8:	bf1c      	itt	ne
 80019ea:	f850 500a 	ldrne.w	r5, [r0, sl]
 80019ee:	2d00      	cmpne	r5, #0
 80019f0:	d1d5      	bne.n	800199e <_core_inspect_forward_validate+0x5e2>
 80019f2:	9407      	str	r4, [sp, #28]
 80019f4:	f8cd 800c 	str.w	r8, [sp, #12]
 80019f8:	9a00      	ldr	r2, [sp, #0]
 80019fa:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80019fc:	2900      	cmp	r1, #0
 80019fe:	d06b      	beq.n	8001ad8 <_core_inspect_forward_validate+0x71c>
 8001a00:	9a03      	ldr	r2, [sp, #12]
 8001a02:	a808      	add	r0, sp, #32
 8001a04:	2100      	movs	r1, #0
 8001a06:	4688      	mov	r8, r1
 8001a08:	e892 40f8 	ldmia.w	r2, {r3, r4, r5, r6, r7, lr}
 8001a0c:	e880 40f8 	stmia.w	r0, {r3, r4, r5, r6, r7, lr}
 8001a10:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8001a14:	9904      	ldr	r1, [sp, #16]
 8001a16:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8001a1a:	2600      	movs	r6, #0
 8001a1c:	910d      	str	r1, [sp, #52]	; 0x34
 8001a1e:	2700      	movs	r7, #0
 8001a20:	9c07      	ldr	r4, [sp, #28]
 8001a22:	e00b      	b.n	8001a3c <_core_inspect_forward_validate+0x680>
 8001a24:	2000      	movs	r0, #0
 8001a26:	e003      	b.n	8001a30 <_core_inspect_forward_validate+0x674>
 8001a28:	000a      	movs	r2, r1
 8001a2a:	f84b 1036 	str.w	r1, [fp, r6, lsl #3]
 8001a2e:	d0f9      	beq.n	8001a24 <_core_inspect_forward_validate+0x668>
 8001a30:	f8c9 0014 	str.w	r0, [r9, #20]
 8001a34:	1c76      	adds	r6, r6, #1
 8001a36:	1c7f      	adds	r7, r7, #1
 8001a38:	f108 0804 	add.w	r8, r8, #4
 8001a3c:	2c00      	cmp	r4, #0
 8001a3e:	bf14      	ite	ne
 8001a40:	8820      	ldrhne	r0, [r4, #0]
 8001a42:	2000      	moveq	r0, #0
 8001a44:	4287      	cmp	r7, r0
 8001a46:	d235      	bcs.n	8001ab4 <_core_inspect_forward_validate+0x6f8>
 8001a48:	6860      	ldr	r0, [r4, #4]
 8001a4a:	b398      	cbz	r0, 8001ab4 <_core_inspect_forward_validate+0x6f8>
 8001a4c:	f850 5008 	ldr.w	r5, [r0, r8]
 8001a50:	b385      	cbz	r5, 8001ab4 <_core_inspect_forward_validate+0x6f8>
 8001a52:	69a9      	ldr	r1, [r5, #24]
 8001a54:	6808      	ldr	r0, [r1, #0]
 8001a56:	0042      	lsls	r2, r0, #1
 8001a58:	d4ed      	bmi.n	8001a36 <_core_inspect_forward_validate+0x67a>
 8001a5a:	f8d1 a008 	ldr.w	sl, [r1, #8]
 8001a5e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001a60:	eb06 0246 	add.w	r2, r6, r6, lsl #1
 8001a64:	eb01 09c2 	add.w	r9, r1, r2, lsl #3
 8001a68:	f004 fe9a 	bl	80067a0 <ai_array_to_buffer_fmt>
 8001a6c:	f8c9 0000 	str.w	r0, [r9]
 8001a70:	2001      	movs	r0, #1
 8001a72:	f8a9 0004 	strh.w	r0, [r9, #4]
 8001a76:	68e8      	ldr	r0, [r5, #12]
 8001a78:	68c1      	ldr	r1, [r0, #12]
 8001a7a:	f8a9 1006 	strh.w	r1, [r9, #6]
 8001a7e:	6882      	ldr	r2, [r0, #8]
 8001a80:	f8a9 2008 	strh.w	r2, [r9, #8]
 8001a84:	6840      	ldr	r0, [r0, #4]
 8001a86:	f8c9 000c 	str.w	r0, [r9, #12]
 8001a8a:	eb1b 00c6 	adds.w	r0, fp, r6, lsl #3
 8001a8e:	f8c9 a010 	str.w	sl, [r9, #16]
 8001a92:	d0cd      	beq.n	8001a30 <_core_inspect_forward_validate+0x674>
 8001a94:	2100      	movs	r1, #0
 8001a96:	f10b 0204 	add.w	r2, fp, #4
 8001a9a:	f84b 1036 	str.w	r1, [fp, r6, lsl #3]
 8001a9e:	6829      	ldr	r1, [r5, #0]
 8001aa0:	f842 1036 	str.w	r1, [r2, r6, lsl #3]
 8001aa4:	2900      	cmp	r1, #0
 8001aa6:	d0bf      	beq.n	8001a28 <_core_inspect_forward_validate+0x66c>
 8001aa8:	8849      	ldrh	r1, [r1, #2]
 8001aaa:	1e49      	subs	r1, r1, #1
 8001aac:	4189      	sbcs	r1, r1
 8001aae:	43c9      	mvns	r1, r1
 8001ab0:	0fc9      	lsrs	r1, r1, #31
 8001ab2:	e7b9      	b.n	8001a28 <_core_inspect_forward_validate+0x66c>
 8001ab4:	9802      	ldr	r0, [sp, #8]
 8001ab6:	eddf 0a36 	vldr	s1, [pc, #216]	; 8001b90 <.text_5>
 8001aba:	9b00      	ldr	r3, [sp, #0]
 8001abc:	2201      	movs	r2, #1
 8001abe:	a908      	add	r1, sp, #32
 8001ac0:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8001ac4:	9800      	ldr	r0, [sp, #0]
 8001ac6:	eeb8 0a40 	vcvt.f32.u32	s0, s0
 8001aca:	ee60 0a20 	vmul.f32	s1, s0, s1
 8001ace:	edcd 0a0a 	vstr	s1, [sp, #40]	; 0x28
 8001ad2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8001ad4:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8001ad6:	47a0      	blx	r4
 8001ad8:	9910      	ldr	r1, [sp, #64]	; 0x40
 8001ada:	9800      	ldr	r0, [sp, #0]
 8001adc:	688a      	ldr	r2, [r1, #8]
 8001ade:	6090      	str	r0, [r2, #8]
 8001ae0:	9802      	ldr	r0, [sp, #8]
 8001ae2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8001ae4:	6881      	ldr	r1, [r0, #8]
 8001ae6:	f041 0101 	orr.w	r1, r1, #1
 8001aea:	6111      	str	r1, [r2, #16]
 8001aec:	9810      	ldr	r0, [sp, #64]	; 0x40
 8001aee:	9910      	ldr	r1, [sp, #64]	; 0x40
 8001af0:	68c0      	ldr	r0, [r0, #12]
 8001af2:	4281      	cmp	r1, r0
 8001af4:	bf18      	it	ne
 8001af6:	2800      	cmpne	r0, #0
 8001af8:	d142      	bne.n	8001b80 <_core_inspect_forward_validate+0x7c4>
 8001afa:	9800      	ldr	r0, [sp, #0]
 8001afc:	68c2      	ldr	r2, [r0, #12]
 8001afe:	1c52      	adds	r2, r2, #1
 8001b00:	60c2      	str	r2, [r0, #12]
 8001b02:	9800      	ldr	r0, [sp, #0]
 8001b04:	9900      	ldr	r1, [sp, #0]
 8001b06:	69c0      	ldr	r0, [r0, #28]
 8001b08:	1e40      	subs	r0, r0, #1
 8001b0a:	61c8      	str	r0, [r1, #28]
 8001b0c:	d138      	bne.n	8001b80 <_core_inspect_forward_validate+0x7c4>
 8001b0e:	9800      	ldr	r0, [sp, #0]
 8001b10:	2400      	movs	r4, #0
 8001b12:	ed9f 0a1f 	vldr	s0, [pc, #124]	; 8001b90 <.text_5>
 8001b16:	6a03      	ldr	r3, [r0, #32]
 8001b18:	6880      	ldr	r0, [r0, #8]
 8001b1a:	6899      	ldr	r1, [r3, #8]
 8001b1c:	1a52      	subs	r2, r2, r1
 8001b1e:	609a      	str	r2, [r3, #8]
 8001b20:	2200      	movs	r2, #0
 8001b22:	611a      	str	r2, [r3, #16]
 8001b24:	09c0      	lsrs	r0, r0, #7
 8001b26:	9900      	ldr	r1, [sp, #0]
 8001b28:	f000 0001 	and.w	r0, r0, #1
 8001b2c:	698a      	ldr	r2, [r1, #24]
 8001b2e:	b33a      	cbz	r2, 8001b80 <_core_inspect_forward_validate+0x7c4>
 8001b30:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8001b32:	ebc4 06c4 	rsb	r6, r4, r4, lsl #3
 8001b36:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 8001b3a:	3534      	adds	r5, #52	; 0x34
 8001b3c:	eb05 06c6 	add.w	r6, r5, r6, lsl #3
 8001b40:	695d      	ldr	r5, [r3, #20]
 8001b42:	edd6 0a00 	vldr	s1, [r6]
 8001b46:	00fe      	lsls	r6, r7, #3
 8001b48:	eef8 0a60 	vcvt.f32.u32	s1, s1
 8001b4c:	f105 0c08 	add.w	ip, r5, #8
 8001b50:	44b4      	add	ip, r6
 8001b52:	ee60 0a80 	vmul.f32	s1, s1, s0
 8001b56:	edcc 0a00 	vstr	s1, [ip]
 8001b5a:	ed93 1a04 	vldr	s2, [r3, #16]
 8001b5e:	ee71 0a20 	vadd.f32	s1, s2, s1
 8001b62:	edc3 0a04 	vstr	s1, [r3, #16]
 8001b66:	b930      	cbnz	r0, 8001b76 <_core_inspect_forward_validate+0x7ba>
 8001b68:	2700      	movs	r7, #0
 8001b6a:	f105 0c14 	add.w	ip, r5, #20
 8001b6e:	f84c 7006 	str.w	r7, [ip, r6]
 8001b72:	3510      	adds	r5, #16
 8001b74:	51af      	str	r7, [r5, r6]
 8001b76:	1c64      	adds	r4, r4, #1
 8001b78:	b2a4      	uxth	r4, r4
 8001b7a:	4294      	cmp	r4, r2
 8001b7c:	d3d8      	bcc.n	8001b30 <_core_inspect_forward_validate+0x774>
 8001b7e:	9100      	str	r1, [sp, #0]
 8001b80:	9800      	ldr	r0, [sp, #0]
 8001b82:	6941      	ldr	r1, [r0, #20]
 8001b84:	1c49      	adds	r1, r1, #1
 8001b86:	6141      	str	r1, [r0, #20]
 8001b88:	b011      	add	sp, #68	; 0x44
 8001b8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08001b90 <.text_5>:
 8001b90:	3a83126f 	.word	0x3a83126f

08001b94 <ai_network_inspect_init>:
 8001b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001b98:	2600      	movs	r6, #0
 8001b9a:	b083      	sub	sp, #12
 8001b9c:	460c      	mov	r4, r1
 8001b9e:	f7fe fec0 	bl	8000922 <ai_platform_context_acquire>
 8001ba2:	2800      	cmp	r0, #0
 8001ba4:	9000      	str	r0, [sp, #0]
 8001ba6:	bf1c      	itt	ne
 8001ba8:	6d01      	ldrne	r1, [r0, #80]	; 0x50
 8001baa:	2900      	cmpne	r1, #0
 8001bac:	d010      	beq.n	8001bd0 <ai_network_inspect_init+0x3c>
 8001bae:	e000      	b.n	8001bb2 <ai_network_inspect_init+0x1e>
 8001bb0:	4601      	mov	r1, r0
 8001bb2:	68c8      	ldr	r0, [r1, #12]
 8001bb4:	1c76      	adds	r6, r6, #1
 8001bb6:	4281      	cmp	r1, r0
 8001bb8:	bf18      	it	ne
 8001bba:	2800      	cmpne	r0, #0
 8001bbc:	d1f8      	bne.n	8001bb0 <ai_network_inspect_init+0x1c>
 8001bbe:	b13e      	cbz	r6, 8001bd0 <ai_network_inspect_init+0x3c>
 8001bc0:	ebc6 00c6 	rsb	r0, r6, r6, lsl #3
 8001bc4:	00c0      	lsls	r0, r0, #3
 8001bc6:	3040      	adds	r0, #64	; 0x40
 8001bc8:	f7ff fb88 	bl	80012dc <core_mem_alloc>
 8001bcc:	0005      	movs	r5, r0
 8001bce:	d103      	bne.n	8001bd8 <ai_network_inspect_init+0x44>
 8001bd0:	2000      	movs	r0, #0
 8001bd2:	b003      	add	sp, #12
 8001bd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001bd8:	2c00      	cmp	r4, #0
 8001bda:	4978      	ldr	r1, [pc, #480]	; (8001dbc <.text_10>)
 8001bdc:	6001      	str	r1, [r0, #0]
 8001bde:	bf14      	ite	ne
 8001be0:	6861      	ldrne	r1, [r4, #4]
 8001be2:	2100      	moveq	r1, #0
 8001be4:	2c00      	cmp	r4, #0
 8001be6:	6281      	str	r1, [r0, #40]	; 0x28
 8001be8:	bf14      	ite	ne
 8001bea:	68a1      	ldrne	r1, [r4, #8]
 8001bec:	2100      	moveq	r1, #0
 8001bee:	2c00      	cmp	r4, #0
 8001bf0:	62c1      	str	r1, [r0, #44]	; 0x2c
 8001bf2:	bf14      	ite	ne
 8001bf4:	68e1      	ldrne	r1, [r4, #12]
 8001bf6:	2100      	moveq	r1, #0
 8001bf8:	2c00      	cmp	r4, #0
 8001bfa:	6301      	str	r1, [r0, #48]	; 0x30
 8001bfc:	bf14      	ite	ne
 8001bfe:	7821      	ldrbne	r1, [r4, #0]
 8001c00:	2101      	moveq	r1, #1
 8001c02:	6081      	str	r1, [r0, #8]
 8001c04:	9900      	ldr	r1, [sp, #0]
 8001c06:	2300      	movs	r3, #0
 8001c08:	688a      	ldr	r2, [r1, #8]
 8001c0a:	60c3      	str	r3, [r0, #12]
 8001c0c:	6042      	str	r2, [r0, #4]
 8001c0e:	9900      	ldr	r1, [sp, #0]
 8001c10:	6101      	str	r1, [r0, #16]
 8001c12:	2200      	movs	r2, #0
 8001c14:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8001c18:	6186      	str	r6, [r0, #24]
 8001c1a:	6142      	str	r2, [r0, #20]
 8001c1c:	4692      	mov	sl, r2
 8001c1e:	61c3      	str	r3, [r0, #28]
 8001c20:	4691      	mov	r9, r2
 8001c22:	6241      	str	r1, [r0, #36]	; 0x24
 8001c24:	4966      	ldr	r1, [pc, #408]	; (8001dc0 <.text_11>)
 8001c26:	6202      	str	r2, [r0, #32]
 8001c28:	9b00      	ldr	r3, [sp, #0]
 8001c2a:	f041 0101 	orr.w	r1, r1, #1
 8001c2e:	4690      	mov	r8, r2
 8001c30:	2600      	movs	r6, #0
 8001c32:	6098      	str	r0, [r3, #8]
 8001c34:	9102      	str	r1, [sp, #8]
 8001c36:	9a02      	ldr	r2, [sp, #8]
 8001c38:	9201      	str	r2, [sp, #4]
 8001c3a:	636e      	str	r6, [r5, #52]	; 0x34
 8001c3c:	63ae      	str	r6, [r5, #56]	; 0x38
 8001c3e:	9a00      	ldr	r2, [sp, #0]
 8001c40:	6d10      	ldr	r0, [r2, #80]	; 0x50
 8001c42:	2800      	cmp	r0, #0
 8001c44:	d054      	beq.n	8001cf0 <ai_network_inspect_init+0x15c>
 8001c46:	4607      	mov	r7, r0
 8001c48:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8001c4a:	ebca 01ca 	rsb	r1, sl, sl, lsl #3
 8001c4e:	9a01      	ldr	r2, [sp, #4]
 8001c50:	eb10 04c1 	adds.w	r4, r0, r1, lsl #3
 8001c54:	f10a 0a01 	add.w	sl, sl, #1
 8001c58:	60a2      	str	r2, [r4, #8]
 8001c5a:	bf08      	it	eq
 8001c5c:	f04f 0b00 	moveq.w	fp, #0
 8001c60:	d021      	beq.n	8001ca6 <ai_network_inspect_init+0x112>
 8001c62:	6878      	ldr	r0, [r7, #4]
 8001c64:	6020      	str	r0, [r4, #0]
 8001c66:	6939      	ldr	r1, [r7, #16]
 8001c68:	f041 0101 	orr.w	r1, r1, #1
 8001c6c:	6061      	str	r1, [r4, #4]
 8001c6e:	9a02      	ldr	r2, [sp, #8]
 8001c70:	f042 0201 	orr.w	r2, r2, #1
 8001c74:	613a      	str	r2, [r7, #16]
 8001c76:	6979      	ldr	r1, [r7, #20]
 8001c78:	8808      	ldrh	r0, [r1, #0]
 8001c7a:	b108      	cbz	r0, 8001c80 <ai_network_inspect_init+0xec>
 8001c7c:	f8d1 0004 	ldr.w	r0, [r1, #4]
 8001c80:	f104 010c 	add.w	r1, r4, #12
 8001c84:	f7ff fb6a 	bl	800135c <_core_inspect_tensor_list>
 8001c88:	4683      	mov	fp, r0
 8001c8a:	6978      	ldr	r0, [r7, #20]
 8001c8c:	8801      	ldrh	r1, [r0, #0]
 8001c8e:	2902      	cmp	r1, #2
 8001c90:	f104 011c 	add.w	r1, r4, #28
 8001c94:	bfa6      	itte	ge
 8001c96:	6840      	ldrge	r0, [r0, #4]
 8001c98:	300c      	addge	r0, #12
 8001c9a:	2000      	movlt	r0, #0
 8001c9c:	f7ff fb5e 	bl	800135c <_core_inspect_tensor_list>
 8001ca0:	4583      	cmp	fp, r0
 8001ca2:	bf38      	it	cc
 8001ca4:	4683      	movcc	fp, r0
 8001ca6:	68e0      	ldr	r0, [r4, #12]
 8001ca8:	f8c4 9010 	str.w	r9, [r4, #16]
 8001cac:	69e1      	ldr	r1, [r4, #28]
 8001cae:	f8c4 8020 	str.w	r8, [r4, #32]
 8001cb2:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 8001cb4:	45b3      	cmp	fp, r6
 8001cb6:	4481      	add	r9, r0
 8001cb8:	61a2      	str	r2, [r4, #24]
 8001cba:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8001cbc:	4488      	add	r8, r1
 8001cbe:	62a0      	str	r0, [r4, #40]	; 0x28
 8001cc0:	6b69      	ldr	r1, [r5, #52]	; 0x34
 8001cc2:	6962      	ldr	r2, [r4, #20]
 8001cc4:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8001cc6:	bf28      	it	cs
 8001cc8:	465e      	movcs	r6, fp
 8001cca:	1851      	adds	r1, r2, r1
 8001ccc:	6369      	str	r1, [r5, #52]	; 0x34
 8001cce:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001cd0:	1808      	adds	r0, r1, r0
 8001cd2:	63a8      	str	r0, [r5, #56]	; 0x38
 8001cd4:	f9b7 0000 	ldrsh.w	r0, [r7]
 8001cd8:	f000 fa7a 	bl	80021d0 <ai_layer_type_name>
 8001cdc:	4601      	mov	r1, r0
 8001cde:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001ce2:	f005 f803 	bl	8006cec <core_timer_init>
 8001ce6:	68f8      	ldr	r0, [r7, #12]
 8001ce8:	4287      	cmp	r7, r0
 8001cea:	bf18      	it	ne
 8001cec:	2800      	cmpne	r0, #0
 8001cee:	d1aa      	bne.n	8001c46 <ai_network_inspect_init+0xb2>
 8001cf0:	6b68      	ldr	r0, [r5, #52]	; 0x34
 8001cf2:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 8001cf4:	1cc0      	adds	r0, r0, #3
 8001cf6:	0880      	lsrs	r0, r0, #2
 8001cf8:	0080      	lsls	r0, r0, #2
 8001cfa:	63ee      	str	r6, [r5, #60]	; 0x3c
 8001cfc:	1cc9      	adds	r1, r1, #3
 8001cfe:	0889      	lsrs	r1, r1, #2
 8001d00:	0089      	lsls	r1, r1, #2
 8001d02:	6368      	str	r0, [r5, #52]	; 0x34
 8001d04:	63a9      	str	r1, [r5, #56]	; 0x38
 8001d06:	9800      	ldr	r0, [sp, #0]
 8001d08:	b003      	add	sp, #12
 8001d0a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001d0e:	1d01      	adds	r1, r0, #4
 8001d10:	f000 b90a 	b.w	8001f28 <core_utils_generate_network_signature>

08001d14 <ai_network_inspect_get_report>:
 8001d14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d16:	b081      	sub	sp, #4
 8001d18:	460c      	mov	r4, r1
 8001d1a:	f7fe fe02 	bl	8000922 <ai_platform_context_acquire>
 8001d1e:	2800      	cmp	r0, #0
 8001d20:	bf18      	it	ne
 8001d22:	2c00      	cmpne	r4, #0
 8001d24:	d002      	beq.n	8001d2c <ai_network_inspect_get_report+0x18>
 8001d26:	6881      	ldr	r1, [r0, #8]
 8001d28:	6a09      	ldr	r1, [r1, #32]
 8001d2a:	b911      	cbnz	r1, 8001d32 <ai_network_inspect_get_report+0x1e>
 8001d2c:	2000      	movs	r0, #0
 8001d2e:	b001      	add	sp, #4
 8001d30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d32:	e891 10ec 	ldmia.w	r1, {r2, r3, r5, r6, r7, ip}
 8001d36:	e884 10ec 	stmia.w	r4, {r2, r3, r5, r6, r7, ip}
 8001d3a:	6840      	ldr	r0, [r0, #4]
 8001d3c:	6060      	str	r0, [r4, #4]
 8001d3e:	2001      	movs	r0, #1
 8001d40:	b001      	add	sp, #4
 8001d42:	bdf0      	pop	{r4, r5, r6, r7, pc}

08001d44 <ai_network_inspect_destroy>:
 8001d44:	b570      	push	{r4, r5, r6, lr}
 8001d46:	f7fe fdec 	bl	8000922 <ai_platform_context_acquire>
 8001d4a:	4601      	mov	r1, r0
 8001d4c:	2300      	movs	r3, #0
 8001d4e:	2900      	cmp	r1, #0
 8001d50:	bf1c      	itt	ne
 8001d52:	688c      	ldrne	r4, [r1, #8]
 8001d54:	2c00      	cmpne	r4, #0
 8001d56:	d003      	beq.n	8001d60 <ai_network_inspect_destroy+0x1c>
 8001d58:	6820      	ldr	r0, [r4, #0]
 8001d5a:	4a18      	ldr	r2, [pc, #96]	; (8001dbc <.text_10>)
 8001d5c:	4290      	cmp	r0, r2
 8001d5e:	d001      	beq.n	8001d64 <ai_network_inspect_destroy+0x20>
 8001d60:	2000      	movs	r0, #0
 8001d62:	bd70      	pop	{r4, r5, r6, pc}
 8001d64:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8001d66:	b19a      	cbz	r2, 8001d90 <ai_network_inspect_destroy+0x4c>
 8001d68:	e000      	b.n	8001d6c <ai_network_inspect_destroy+0x28>
 8001d6a:	4602      	mov	r2, r0
 8001d6c:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001d6e:	ebc3 05c3 	rsb	r5, r3, r3, lsl #3
 8001d72:	1c5b      	adds	r3, r3, #1
 8001d74:	eb00 00c5 	add.w	r0, r0, r5, lsl #3
 8001d78:	b128      	cbz	r0, 8001d86 <ai_network_inspect_destroy+0x42>
 8001d7a:	6806      	ldr	r6, [r0, #0]
 8001d7c:	6056      	str	r6, [r2, #4]
 8001d7e:	6840      	ldr	r0, [r0, #4]
 8001d80:	f040 0001 	orr.w	r0, r0, #1
 8001d84:	6110      	str	r0, [r2, #16]
 8001d86:	68d0      	ldr	r0, [r2, #12]
 8001d88:	4282      	cmp	r2, r0
 8001d8a:	bf18      	it	ne
 8001d8c:	2800      	cmpne	r0, #0
 8001d8e:	d1ec      	bne.n	8001d6a <ai_network_inspect_destroy+0x26>
 8001d90:	6860      	ldr	r0, [r4, #4]
 8001d92:	6088      	str	r0, [r1, #8]
 8001d94:	6a21      	ldr	r1, [r4, #32]
 8001d96:	b921      	cbnz	r1, 8001da2 <ai_network_inspect_destroy+0x5e>
 8001d98:	4620      	mov	r0, r4
 8001d9a:	f7ff faac 	bl	80012f6 <core_mem_free>
 8001d9e:	2001      	movs	r0, #1
 8001da0:	bd70      	pop	{r4, r5, r6, pc}
 8001da2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8001da4:	b10a      	cbz	r2, 8001daa <ai_network_inspect_destroy+0x66>
 8001da6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8001da8:	4790      	blx	r2
 8001daa:	6a20      	ldr	r0, [r4, #32]
 8001dac:	f7ff faa3 	bl	80012f6 <core_mem_free>
 8001db0:	2000      	movs	r0, #0
 8001db2:	6220      	str	r0, [r4, #32]
 8001db4:	e7f0      	b.n	8001d98 <ai_network_inspect_destroy+0x54>
	...

08001db8 <.text_9>:
 8001db8:	20000000 	.word	0x20000000

08001dbc <.text_10>:
 8001dbc:	a1c00101 	.word	0xa1c00101

08001dc0 <.text_11>:
 8001dc0:	080013bd 	.word	0x080013bd

08001dc4 <serialize_signature_buffer_>:
 8001dc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001dc6:	460c      	mov	r4, r1
 8001dc8:	b081      	sub	sp, #4
 8001dca:	2100      	movs	r1, #0
 8001dcc:	9100      	str	r1, [sp, #0]
 8001dce:	b10c      	cbz	r4, 8001dd4 <serialize_signature_buffer_+0x10>
 8001dd0:	6801      	ldr	r1, [r0, #0]
 8001dd2:	6021      	str	r1, [r4, #0]
 8001dd4:	6d06      	ldr	r6, [r0, #80]	; 0x50
 8001dd6:	1d27      	adds	r7, r4, #4
 8001dd8:	2e00      	cmp	r6, #0
 8001dda:	d048      	beq.n	8001e6e <serialize_signature_buffer_+0xaa>
 8001ddc:	e000      	b.n	8001de0 <serialize_signature_buffer_+0x1c>
 8001dde:	4606      	mov	r6, r0
 8001de0:	6970      	ldr	r0, [r6, #20]
 8001de2:	8801      	ldrh	r1, [r0, #0]
 8001de4:	2902      	cmp	r1, #2
 8001de6:	bfa6      	itte	ge
 8001de8:	6840      	ldrge	r0, [r0, #4]
 8001dea:	3010      	addge	r0, #16
 8001dec:	2004      	movlt	r0, #4
 8001dee:	6800      	ldr	r0, [r0, #0]
 8001df0:	2800      	cmp	r0, #0
 8001df2:	bf14      	ite	ne
 8001df4:	6805      	ldrne	r5, [r0, #0]
 8001df6:	2500      	moveq	r5, #0
 8001df8:	9800      	ldr	r0, [sp, #0]
 8001dfa:	1c40      	adds	r0, r0, #1
 8001dfc:	9000      	str	r0, [sp, #0]
 8001dfe:	b90c      	cbnz	r4, 8001e04 <serialize_signature_buffer_+0x40>
 8001e00:	1cb8      	adds	r0, r7, #2
 8001e02:	e009      	b.n	8001e18 <serialize_signature_buffer_+0x54>
 8001e04:	7830      	ldrb	r0, [r6, #0]
 8001e06:	1cb1      	adds	r1, r6, #2
 8001e08:	7038      	strb	r0, [r7, #0]
 8001e0a:	7870      	ldrb	r0, [r6, #1]
 8001e0c:	7078      	strb	r0, [r7, #1]
 8001e0e:	780a      	ldrb	r2, [r1, #0]
 8001e10:	1cb8      	adds	r0, r7, #2
 8001e12:	7002      	strb	r2, [r0, #0]
 8001e14:	784a      	ldrb	r2, [r1, #1]
 8001e16:	7042      	strb	r2, [r0, #1]
 8001e18:	1c87      	adds	r7, r0, #2
 8001e1a:	b31d      	cbz	r5, 8001e64 <serialize_signature_buffer_+0xa0>
 8001e1c:	b194      	cbz	r4, 8001e44 <serialize_signature_buffer_+0x80>
 8001e1e:	69a8      	ldr	r0, [r5, #24]
 8001e20:	f105 0208 	add.w	r2, r5, #8
 8001e24:	6801      	ldr	r1, [r0, #0]
 8001e26:	1d38      	adds	r0, r7, #4
 8001e28:	6039      	str	r1, [r7, #0]
 8001e2a:	68e9      	ldr	r1, [r5, #12]
 8001e2c:	6813      	ldr	r3, [r2, #0]
 8001e2e:	6003      	str	r3, [r0, #0]
 8001e30:	6853      	ldr	r3, [r2, #4]
 8001e32:	6043      	str	r3, [r0, #4]
 8001e34:	68aa      	ldr	r2, [r5, #8]
 8001e36:	f107 000c 	add.w	r0, r7, #12
 8001e3a:	0a12      	lsrs	r2, r2, #8
 8001e3c:	0092      	lsls	r2, r2, #2
 8001e3e:	f00d ff7e 	bl	800fd3e <__aeabi_memcpy>
 8001e42:	bf00      	nop
 8001e44:	f107 030c 	add.w	r3, r7, #12
 8001e48:	68af      	ldr	r7, [r5, #8]
 8001e4a:	0a3f      	lsrs	r7, r7, #8
 8001e4c:	eb03 0087 	add.w	r0, r3, r7, lsl #2
 8001e50:	b134      	cbz	r4, 8001e60 <serialize_signature_buffer_+0x9c>
 8001e52:	f105 0110 	add.w	r1, r5, #16
 8001e56:	680a      	ldr	r2, [r1, #0]
 8001e58:	6002      	str	r2, [r0, #0]
 8001e5a:	684a      	ldr	r2, [r1, #4]
 8001e5c:	6042      	str	r2, [r0, #4]
 8001e5e:	bf00      	nop
 8001e60:	f100 0708 	add.w	r7, r0, #8
 8001e64:	68f0      	ldr	r0, [r6, #12]
 8001e66:	4286      	cmp	r6, r0
 8001e68:	bf18      	it	ne
 8001e6a:	2800      	cmpne	r0, #0
 8001e6c:	d1b7      	bne.n	8001dde <serialize_signature_buffer_+0x1a>
 8001e6e:	b10c      	cbz	r4, 8001e74 <serialize_signature_buffer_+0xb0>
 8001e70:	9900      	ldr	r1, [sp, #0]
 8001e72:	6039      	str	r1, [r7, #0]
 8001e74:	1d39      	adds	r1, r7, #4
 8001e76:	1b08      	subs	r0, r1, r4
 8001e78:	b001      	add	sp, #4
 8001e7a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08001e7c <core_utils_compute_crc32>:
 8001e7c:	b470      	push	{r4, r5, r6}
 8001e7e:	0849      	lsrs	r1, r1, #1
 8001e80:	2400      	movs	r4, #0
 8001e82:	2300      	movs	r3, #0
 8001e84:	f5b1 7fb4 	cmp.w	r1, #360	; 0x168
 8001e88:	4602      	mov	r2, r0
 8001e8a:	d32a      	bcc.n	8001ee2 <core_utils_compute_crc32+0x66>
 8001e8c:	f05f 002d 	movs.w	r0, #45	; 0x2d
 8001e90:	f832 5b02 	ldrh.w	r5, [r2], #2
 8001e94:	1964      	adds	r4, r4, r5
 8001e96:	f832 5b02 	ldrh.w	r5, [r2], #2
 8001e9a:	18e3      	adds	r3, r4, r3
 8001e9c:	1964      	adds	r4, r4, r5
 8001e9e:	f832 5b02 	ldrh.w	r5, [r2], #2
 8001ea2:	18e3      	adds	r3, r4, r3
 8001ea4:	1964      	adds	r4, r4, r5
 8001ea6:	f832 5b02 	ldrh.w	r5, [r2], #2
 8001eaa:	18e3      	adds	r3, r4, r3
 8001eac:	f832 6b02 	ldrh.w	r6, [r2], #2
 8001eb0:	1964      	adds	r4, r4, r5
 8001eb2:	18e3      	adds	r3, r4, r3
 8001eb4:	19a4      	adds	r4, r4, r6
 8001eb6:	f832 6b02 	ldrh.w	r6, [r2], #2
 8001eba:	18e3      	adds	r3, r4, r3
 8001ebc:	19a4      	adds	r4, r4, r6
 8001ebe:	f832 6b02 	ldrh.w	r6, [r2], #2
 8001ec2:	18e3      	adds	r3, r4, r3
 8001ec4:	19a4      	adds	r4, r4, r6
 8001ec6:	f832 6b02 	ldrh.w	r6, [r2], #2
 8001eca:	18e3      	adds	r3, r4, r3
 8001ecc:	19a4      	adds	r4, r4, r6
 8001ece:	18e3      	adds	r3, r4, r3
 8001ed0:	1e40      	subs	r0, r0, #1
 8001ed2:	d1dd      	bne.n	8001e90 <core_utils_compute_crc32+0x14>
 8001ed4:	f5a1 71b4 	sub.w	r1, r1, #360	; 0x168
 8001ed8:	f5b1 7fb4 	cmp.w	r1, #360	; 0x168
 8001edc:	b2a4      	uxth	r4, r4
 8001ede:	b29b      	uxth	r3, r3
 8001ee0:	d2d4      	bcs.n	8001e8c <core_utils_compute_crc32+0x10>
 8001ee2:	b1e9      	cbz	r1, 8001f20 <core_utils_compute_crc32+0xa4>
 8001ee4:	f011 0003 	ands.w	r0, r1, #3
 8001ee8:	f000 8006 	beq.w	8001ef8 <core_utils_compute_crc32+0x7c>
 8001eec:	f832 5b02 	ldrh.w	r5, [r2], #2
 8001ef0:	1964      	adds	r4, r4, r5
 8001ef2:	18e3      	adds	r3, r4, r3
 8001ef4:	1e40      	subs	r0, r0, #1
 8001ef6:	d1f9      	bne.n	8001eec <core_utils_compute_crc32+0x70>
 8001ef8:	0889      	lsrs	r1, r1, #2
 8001efa:	d011      	beq.n	8001f20 <core_utils_compute_crc32+0xa4>
 8001efc:	f832 0b02 	ldrh.w	r0, [r2], #2
 8001f00:	f832 5b02 	ldrh.w	r5, [r2], #2
 8001f04:	1820      	adds	r0, r4, r0
 8001f06:	18c3      	adds	r3, r0, r3
 8001f08:	f832 4b02 	ldrh.w	r4, [r2], #2
 8001f0c:	1940      	adds	r0, r0, r5
 8001f0e:	18c3      	adds	r3, r0, r3
 8001f10:	f832 5b02 	ldrh.w	r5, [r2], #2
 8001f14:	1900      	adds	r0, r0, r4
 8001f16:	18c3      	adds	r3, r0, r3
 8001f18:	1944      	adds	r4, r0, r5
 8001f1a:	18e3      	adds	r3, r4, r3
 8001f1c:	1e49      	subs	r1, r1, #1
 8001f1e:	d1ed      	bne.n	8001efc <core_utils_compute_crc32+0x80>
 8001f20:	eac4 4003 	pkhbt	r0, r4, r3, lsl #16
 8001f24:	bc70      	pop	{r4, r5, r6}
 8001f26:	4770      	bx	lr

08001f28 <core_utils_generate_network_signature>:
 8001f28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f2a:	0006      	movs	r6, r0
 8001f2c:	460d      	mov	r5, r1
 8001f2e:	b081      	sub	sp, #4
 8001f30:	bf18      	it	ne
 8001f32:	2d00      	cmpne	r5, #0
 8001f34:	d00a      	beq.n	8001f4c <core_utils_generate_network_signature+0x24>
 8001f36:	2100      	movs	r1, #0
 8001f38:	f7ff ff44 	bl	8001dc4 <serialize_signature_buffer_>
 8001f3c:	4607      	mov	r7, r0
 8001f3e:	2000      	movs	r0, #0
 8001f40:	6028      	str	r0, [r5, #0]
 8001f42:	4638      	mov	r0, r7
 8001f44:	f7ff f9ca 	bl	80012dc <core_mem_alloc>
 8001f48:	0004      	movs	r4, r0
 8001f4a:	d102      	bne.n	8001f52 <core_utils_generate_network_signature+0x2a>
 8001f4c:	2000      	movs	r0, #0
 8001f4e:	b001      	add	sp, #4
 8001f50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f52:	4621      	mov	r1, r4
 8001f54:	4630      	mov	r0, r6
 8001f56:	f7ff ff35 	bl	8001dc4 <serialize_signature_buffer_>
 8001f5a:	4639      	mov	r1, r7
 8001f5c:	4620      	mov	r0, r4
 8001f5e:	f7ff ff8d 	bl	8001e7c <core_utils_compute_crc32>
 8001f62:	6028      	str	r0, [r5, #0]
 8001f64:	4620      	mov	r0, r4
 8001f66:	f7ff f9c6 	bl	80012f6 <core_mem_free>
 8001f6a:	2001      	movs	r0, #1
 8001f6c:	b001      	add	sp, #4
 8001f6e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08001f70 <core_get_broadcasted_shape>:
 8001f70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f74:	4603      	mov	r3, r0
 8001f76:	6808      	ldr	r0, [r1, #0]
 8001f78:	681c      	ldr	r4, [r3, #0]
 8001f7a:	0a00      	lsrs	r0, r0, #8
 8001f7c:	f360 241f 	bfi	r4, r0, #8, #24
 8001f80:	601c      	str	r4, [r3, #0]
 8001f82:	0004      	movs	r4, r0
 8001f84:	d048      	beq.n	8002018 <core_get_broadcasted_shape+0xa8>
 8001f86:	6852      	ldr	r2, [r2, #4]
 8001f88:	684e      	ldr	r6, [r1, #4]
 8001f8a:	eb02 0584 	add.w	r5, r2, r4, lsl #2
 8001f8e:	685b      	ldr	r3, [r3, #4]
 8001f90:	eb06 0184 	add.w	r1, r6, r4, lsl #2
 8001f94:	eb03 0c84 	add.w	ip, r3, r4, lsl #2
 8001f98:	1f2d      	subs	r5, r5, #4
 8001f9a:	1f0f      	subs	r7, r1, #4
 8001f9c:	f010 0103 	ands.w	r1, r0, #3
 8001fa0:	f1ac 0c04 	sub.w	ip, ip, #4
 8001fa4:	f000 800f 	beq.w	8001fc6 <core_get_broadcasted_shape+0x56>
 8001fa8:	f8d7 e000 	ldr.w	lr, [r7]
 8001fac:	f8d5 8000 	ldr.w	r8, [r5]
 8001fb0:	1e64      	subs	r4, r4, #1
 8001fb2:	45f0      	cmp	r8, lr
 8001fb4:	bf28      	it	cs
 8001fb6:	46c6      	movcs	lr, r8
 8001fb8:	1e49      	subs	r1, r1, #1
 8001fba:	1f3f      	subs	r7, r7, #4
 8001fbc:	1f2d      	subs	r5, r5, #4
 8001fbe:	2900      	cmp	r1, #0
 8001fc0:	f84c e904 	str.w	lr, [ip], #-4
 8001fc4:	d1f0      	bne.n	8001fa8 <core_get_broadcasted_shape+0x38>
 8001fc6:	0880      	lsrs	r0, r0, #2
 8001fc8:	d026      	beq.n	8002018 <core_get_broadcasted_shape+0xa8>
 8001fca:	eb02 0184 	add.w	r1, r2, r4, lsl #2
 8001fce:	eb06 0284 	add.w	r2, r6, r4, lsl #2
 8001fd2:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8001fd6:	3910      	subs	r1, #16
 8001fd8:	3a10      	subs	r2, #16
 8001fda:	3b10      	subs	r3, #16
 8001fdc:	68d4      	ldr	r4, [r2, #12]
 8001fde:	68cd      	ldr	r5, [r1, #12]
 8001fe0:	42ac      	cmp	r4, r5
 8001fe2:	bf38      	it	cc
 8001fe4:	462c      	movcc	r4, r5
 8001fe6:	60dc      	str	r4, [r3, #12]
 8001fe8:	6894      	ldr	r4, [r2, #8]
 8001fea:	688d      	ldr	r5, [r1, #8]
 8001fec:	42ac      	cmp	r4, r5
 8001fee:	bf38      	it	cc
 8001ff0:	462c      	movcc	r4, r5
 8001ff2:	609c      	str	r4, [r3, #8]
 8001ff4:	6854      	ldr	r4, [r2, #4]
 8001ff6:	684d      	ldr	r5, [r1, #4]
 8001ff8:	42ac      	cmp	r4, r5
 8001ffa:	bf38      	it	cc
 8001ffc:	462c      	movcc	r4, r5
 8001ffe:	605c      	str	r4, [r3, #4]
 8002000:	6814      	ldr	r4, [r2, #0]
 8002002:	680d      	ldr	r5, [r1, #0]
 8002004:	42a5      	cmp	r5, r4
 8002006:	bf28      	it	cs
 8002008:	462c      	movcs	r4, r5
 800200a:	1e40      	subs	r0, r0, #1
 800200c:	3a10      	subs	r2, #16
 800200e:	3910      	subs	r1, #16
 8002010:	2800      	cmp	r0, #0
 8002012:	f843 4910 	str.w	r4, [r3], #-16
 8002016:	d1e1      	bne.n	8001fdc <core_get_broadcasted_shape+0x6c>
 8002018:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800201c <core_compute_offsets>:
 800201c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002020:	680b      	ldr	r3, [r1, #0]
 8002022:	6804      	ldr	r4, [r0, #0]
 8002024:	0a1b      	lsrs	r3, r3, #8
 8002026:	f363 241f 	bfi	r4, r3, #8, #24
 800202a:	6004      	str	r4, [r0, #0]
 800202c:	684f      	ldr	r7, [r1, #4]
 800202e:	f8d2 c004 	ldr.w	ip, [r2, #4]
 8002032:	6840      	ldr	r0, [r0, #4]
 8002034:	6839      	ldr	r1, [r7, #0]
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	f8d7 8008 	ldr.w	r8, [r7, #8]
 800203c:	f8dc 2000 	ldr.w	r2, [ip]
 8002040:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8002044:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8002048:	68ff      	ldr	r7, [r7, #12]
 800204a:	f8dc c00c 	ldr.w	ip, [ip, #12]
 800204e:	4291      	cmp	r1, r2
 8002050:	bf14      	ite	ne
 8002052:	2201      	movne	r2, #1
 8002054:	2200      	moveq	r2, #0
 8002056:	42a3      	cmp	r3, r4
 8002058:	bf14      	ite	ne
 800205a:	2401      	movne	r4, #1
 800205c:	2400      	moveq	r4, #0
 800205e:	45b0      	cmp	r8, r6
 8002060:	f084 0e01 	eor.w	lr, r4, #1
 8002064:	ea02 0e0e 	and.w	lr, r2, lr
 8002068:	bf14      	ite	ne
 800206a:	2601      	movne	r6, #1
 800206c:	2600      	moveq	r6, #0
 800206e:	4567      	cmp	r7, ip
 8002070:	f082 0c01 	eor.w	ip, r2, #1
 8002074:	f086 0501 	eor.w	r5, r6, #1
 8002078:	f8c0 c000 	str.w	ip, [r0]
 800207c:	bf14      	ite	ne
 800207e:	2701      	movne	r7, #1
 8002080:	2700      	moveq	r7, #0
 8002082:	434b      	muls	r3, r1
 8002084:	4025      	ands	r5, r4
 8002086:	4015      	ands	r5, r2
 8002088:	4361      	muls	r1, r4
 800208a:	fb08 f803 	mul.w	r8, r8, r3
 800208e:	4373      	muls	r3, r6
 8002090:	ebae 0e01 	sub.w	lr, lr, r1
 8002094:	f8c0 e004 	str.w	lr, [r0, #4]
 8002098:	1aed      	subs	r5, r5, r3
 800209a:	1949      	adds	r1, r1, r5
 800209c:	6081      	str	r1, [r0, #8]
 800209e:	f087 0101 	eor.w	r1, r7, #1
 80020a2:	400e      	ands	r6, r1
 80020a4:	4034      	ands	r4, r6
 80020a6:	4022      	ands	r2, r4
 80020a8:	fb08 2217 	mls	r2, r8, r7, r2
 80020ac:	189a      	adds	r2, r3, r2
 80020ae:	60c2      	str	r2, [r0, #12]
 80020b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080020b4 <core_tensor_clone>:
 80020b4:	b470      	push	{r4, r5, r6}
 80020b6:	680a      	ldr	r2, [r1, #0]
 80020b8:	6002      	str	r2, [r0, #0]
 80020ba:	684b      	ldr	r3, [r1, #4]
 80020bc:	6043      	str	r3, [r0, #4]
 80020be:	698c      	ldr	r4, [r1, #24]
 80020c0:	6184      	str	r4, [r0, #24]
 80020c2:	688a      	ldr	r2, [r1, #8]
 80020c4:	6883      	ldr	r3, [r0, #8]
 80020c6:	0a12      	lsrs	r2, r2, #8
 80020c8:	f362 231f 	bfi	r3, r2, #8, #24
 80020cc:	6083      	str	r3, [r0, #8]
 80020ce:	6882      	ldr	r2, [r0, #8]
 80020d0:	2300      	movs	r3, #0
 80020d2:	0a12      	lsrs	r2, r2, #8
 80020d4:	d025      	beq.n	8002122 <core_tensor_clone+0x6e>
 80020d6:	68cc      	ldr	r4, [r1, #12]
 80020d8:	68c2      	ldr	r2, [r0, #12]
 80020da:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 80020de:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 80020e2:	1c5b      	adds	r3, r3, #1
 80020e4:	6886      	ldr	r6, [r0, #8]
 80020e6:	ebb3 2f16 	cmp.w	r3, r6, lsr #8
 80020ea:	d21a      	bcs.n	8002122 <core_tensor_clone+0x6e>
 80020ec:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 80020f0:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 80020f4:	1c5b      	adds	r3, r3, #1
 80020f6:	6886      	ldr	r6, [r0, #8]
 80020f8:	ebb3 2f16 	cmp.w	r3, r6, lsr #8
 80020fc:	d211      	bcs.n	8002122 <core_tensor_clone+0x6e>
 80020fe:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 8002102:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 8002106:	1c5b      	adds	r3, r3, #1
 8002108:	6886      	ldr	r6, [r0, #8]
 800210a:	ebb3 2f16 	cmp.w	r3, r6, lsr #8
 800210e:	d208      	bcs.n	8002122 <core_tensor_clone+0x6e>
 8002110:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 8002114:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 8002118:	1c5b      	adds	r3, r3, #1
 800211a:	6882      	ldr	r2, [r0, #8]
 800211c:	ebb3 2f12 	cmp.w	r3, r2, lsr #8
 8002120:	d3d9      	bcc.n	80020d6 <core_tensor_clone+0x22>
 8002122:	690a      	ldr	r2, [r1, #16]
 8002124:	6903      	ldr	r3, [r0, #16]
 8002126:	0a12      	lsrs	r2, r2, #8
 8002128:	f362 231f 	bfi	r3, r2, #8, #24
 800212c:	6103      	str	r3, [r0, #16]
 800212e:	6902      	ldr	r2, [r0, #16]
 8002130:	2300      	movs	r3, #0
 8002132:	0a12      	lsrs	r2, r2, #8
 8002134:	d025      	beq.n	8002182 <core_tensor_clone+0xce>
 8002136:	694c      	ldr	r4, [r1, #20]
 8002138:	6942      	ldr	r2, [r0, #20]
 800213a:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 800213e:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 8002142:	1c5b      	adds	r3, r3, #1
 8002144:	6906      	ldr	r6, [r0, #16]
 8002146:	ebb3 2f16 	cmp.w	r3, r6, lsr #8
 800214a:	d21a      	bcs.n	8002182 <core_tensor_clone+0xce>
 800214c:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 8002150:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 8002154:	1c5b      	adds	r3, r3, #1
 8002156:	6906      	ldr	r6, [r0, #16]
 8002158:	ebb3 2f16 	cmp.w	r3, r6, lsr #8
 800215c:	d211      	bcs.n	8002182 <core_tensor_clone+0xce>
 800215e:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 8002162:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 8002166:	1c5b      	adds	r3, r3, #1
 8002168:	6906      	ldr	r6, [r0, #16]
 800216a:	ebb3 2f16 	cmp.w	r3, r6, lsr #8
 800216e:	d208      	bcs.n	8002182 <core_tensor_clone+0xce>
 8002170:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 8002174:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 8002178:	1c5b      	adds	r3, r3, #1
 800217a:	6902      	ldr	r2, [r0, #16]
 800217c:	ebb3 2f12 	cmp.w	r3, r2, lsr #8
 8002180:	d3d9      	bcc.n	8002136 <core_tensor_clone+0x82>
 8002182:	bc70      	pop	{r4, r5, r6}
 8002184:	4770      	bx	lr

08002186 <core_array_clone>:
 8002186:	b430      	push	{r4, r5}
 8002188:	e891 003c 	ldmia.w	r1, {r2, r3, r4, r5}
 800218c:	e880 003c 	stmia.w	r0, {r2, r3, r4, r5}
 8002190:	bc30      	pop	{r4, r5}
 8002192:	4770      	bx	lr

08002194 <ai_layers_forward_layer>:
 8002194:	b510      	push	{r4, lr}
 8002196:	4604      	mov	r4, r0
 8002198:	6921      	ldr	r1, [r4, #16]
 800219a:	4788      	blx	r1
 800219c:	68e0      	ldr	r0, [r4, #12]
 800219e:	42a0      	cmp	r0, r4
 80021a0:	bf08      	it	eq
 80021a2:	2000      	moveq	r0, #0
 80021a4:	bd10      	pop	{r4, pc}
	...

080021a8 <ai_check_custom_types>:
 80021a8:	b500      	push	{lr}
 80021aa:	b081      	sub	sp, #4
 80021ac:	b160      	cbz	r0, 80021c8 <ai_check_custom_types+0x20>
 80021ae:	7801      	ldrb	r1, [r0, #0]
 80021b0:	2903      	cmp	r1, #3
 80021b2:	d109      	bne.n	80021c8 <ai_check_custom_types+0x20>
 80021b4:	f05f 0204 	movs.w	r2, #4
 80021b8:	a18d      	add	r1, pc, #564	; (adr r1, 80023f0 <ai_check_custom_types::ref_signatures>)
 80021ba:	f00d fdfd 	bl	800fdb8 <memcmp>
 80021be:	1e40      	subs	r0, r0, #1
 80021c0:	4180      	sbcs	r0, r0
 80021c2:	0fc0      	lsrs	r0, r0, #31
 80021c4:	b001      	add	sp, #4
 80021c6:	bd00      	pop	{pc}
 80021c8:	2000      	movs	r0, #0
 80021ca:	b001      	add	sp, #4
 80021cc:	bd00      	pop	{pc}
	...

080021d0 <ai_layer_type_name>:
 80021d0:	f242 7211 	movw	r2, #10001	; 0x2711
 80021d4:	1a81      	subs	r1, r0, r2
 80021d6:	2901      	cmp	r1, #1
 80021d8:	bf81      	itttt	hi
 80021da:	1ec9      	subhi	r1, r1, #3
 80021dc:	290d      	cmphi	r1, #13
 80021de:	390f      	subhi	r1, #15
 80021e0:	2909      	cmphi	r1, #9
 80021e2:	f200 806b 	bhi.w	80022bc <ai_layer_type_name+0xec>
 80021e6:	1a80      	subs	r0, r0, r2
 80021e8:	d033      	beq.n	8002252 <ai_layer_type_name+0x82>
 80021ea:	1e40      	subs	r0, r0, #1
 80021ec:	d033      	beq.n	8002256 <ai_layer_type_name+0x86>
 80021ee:	1e80      	subs	r0, r0, #2
 80021f0:	d033      	beq.n	800225a <ai_layer_type_name+0x8a>
 80021f2:	1e40      	subs	r0, r0, #1
 80021f4:	d034      	beq.n	8002260 <ai_layer_type_name+0x90>
 80021f6:	1e40      	subs	r0, r0, #1
 80021f8:	d034      	beq.n	8002264 <ai_layer_type_name+0x94>
 80021fa:	1e40      	subs	r0, r0, #1
 80021fc:	d034      	beq.n	8002268 <ai_layer_type_name+0x98>
 80021fe:	1e40      	subs	r0, r0, #1
 8002200:	d034      	beq.n	800226c <ai_layer_type_name+0x9c>
 8002202:	1e40      	subs	r0, r0, #1
 8002204:	d034      	beq.n	8002270 <ai_layer_type_name+0xa0>
 8002206:	1e40      	subs	r0, r0, #1
 8002208:	d034      	beq.n	8002274 <ai_layer_type_name+0xa4>
 800220a:	1e40      	subs	r0, r0, #1
 800220c:	d034      	beq.n	8002278 <ai_layer_type_name+0xa8>
 800220e:	1e40      	subs	r0, r0, #1
 8002210:	d034      	beq.n	800227c <ai_layer_type_name+0xac>
 8002212:	1e40      	subs	r0, r0, #1
 8002214:	d034      	beq.n	8002280 <ai_layer_type_name+0xb0>
 8002216:	1e40      	subs	r0, r0, #1
 8002218:	d034      	beq.n	8002284 <ai_layer_type_name+0xb4>
 800221a:	1e40      	subs	r0, r0, #1
 800221c:	d034      	beq.n	8002288 <ai_layer_type_name+0xb8>
 800221e:	1e40      	subs	r0, r0, #1
 8002220:	d034      	beq.n	800228c <ai_layer_type_name+0xbc>
 8002222:	1e40      	subs	r0, r0, #1
 8002224:	d034      	beq.n	8002290 <ai_layer_type_name+0xc0>
 8002226:	1e80      	subs	r0, r0, #2
 8002228:	d034      	beq.n	8002294 <ai_layer_type_name+0xc4>
 800222a:	1e40      	subs	r0, r0, #1
 800222c:	d034      	beq.n	8002298 <ai_layer_type_name+0xc8>
 800222e:	1e40      	subs	r0, r0, #1
 8002230:	d034      	beq.n	800229c <ai_layer_type_name+0xcc>
 8002232:	1e40      	subs	r0, r0, #1
 8002234:	d034      	beq.n	80022a0 <ai_layer_type_name+0xd0>
 8002236:	1e40      	subs	r0, r0, #1
 8002238:	d034      	beq.n	80022a4 <ai_layer_type_name+0xd4>
 800223a:	1e40      	subs	r0, r0, #1
 800223c:	d034      	beq.n	80022a8 <ai_layer_type_name+0xd8>
 800223e:	1e40      	subs	r0, r0, #1
 8002240:	d034      	beq.n	80022ac <ai_layer_type_name+0xdc>
 8002242:	1e40      	subs	r0, r0, #1
 8002244:	d034      	beq.n	80022b0 <ai_layer_type_name+0xe0>
 8002246:	1e40      	subs	r0, r0, #1
 8002248:	d034      	beq.n	80022b4 <ai_layer_type_name+0xe4>
 800224a:	1e40      	subs	r0, r0, #1
 800224c:	d034      	beq.n	80022b8 <ai_layer_type_name+0xe8>
 800224e:	a01c      	add	r0, pc, #112	; (adr r0, 80022c0 <.text_5>)
 8002250:	4770      	bx	lr
 8002252:	a01c      	add	r0, pc, #112	; (adr r0, 80022c4 <.text_6>)
 8002254:	4770      	bx	lr
 8002256:	a01c      	add	r0, pc, #112	; (adr r0, 80022c8 <.text_7>)
 8002258:	4770      	bx	lr
 800225a:	bf00      	nop
 800225c:	a031      	add	r0, pc, #196	; (adr r0, 8002324 <.text_15>)
 800225e:	4770      	bx	lr
 8002260:	a032      	add	r0, pc, #200	; (adr r0, 800232c <.text_16>)
 8002262:	4770      	bx	lr
 8002264:	a019      	add	r0, pc, #100	; (adr r0, 80022cc <.text_8>)
 8002266:	4770      	bx	lr
 8002268:	a019      	add	r0, pc, #100	; (adr r0, 80022d0 <.text_9>)
 800226a:	4770      	bx	lr
 800226c:	a031      	add	r0, pc, #196	; (adr r0, 8002334 <.text_17>)
 800226e:	4770      	bx	lr
 8002270:	a018      	add	r0, pc, #96	; (adr r0, 80022d4 <.text_10>)
 8002272:	4770      	bx	lr
 8002274:	a031      	add	r0, pc, #196	; (adr r0, 800233c <.text_18>)
 8002276:	4770      	bx	lr
 8002278:	a032      	add	r0, pc, #200	; (adr r0, 8002344 <.text_19>)
 800227a:	4770      	bx	lr
 800227c:	a036      	add	r0, pc, #216	; (adr r0, 8002358 <.text_20>)
 800227e:	4770      	bx	lr
 8002280:	a038      	add	r0, pc, #224	; (adr r0, 8002364 <.text_21>)
 8002282:	4770      	bx	lr
 8002284:	a014      	add	r0, pc, #80	; (adr r0, 80022d8 <.text_11>)
 8002286:	4770      	bx	lr
 8002288:	a038      	add	r0, pc, #224	; (adr r0, 800236c <.text_22>)
 800228a:	4770      	bx	lr
 800228c:	a039      	add	r0, pc, #228	; (adr r0, 8002374 <.text_23>)
 800228e:	4770      	bx	lr
 8002290:	a03b      	add	r0, pc, #236	; (adr r0, 8002380 <.text_24>)
 8002292:	4770      	bx	lr
 8002294:	a03f      	add	r0, pc, #252	; (adr r0, 8002394 <.text_25>)
 8002296:	4770      	bx	lr
 8002298:	a040      	add	r0, pc, #256	; (adr r0, 800239c <.text_26>)
 800229a:	4770      	bx	lr
 800229c:	a041      	add	r0, pc, #260	; (adr r0, 80023a4 <.text_27>)
 800229e:	4770      	bx	lr
 80022a0:	a043      	add	r0, pc, #268	; (adr r0, 80023b0 <.text_28>)
 80022a2:	4770      	bx	lr
 80022a4:	a044      	add	r0, pc, #272	; (adr r0, 80023b8 <.text_29>)
 80022a6:	4770      	bx	lr
 80022a8:	a045      	add	r0, pc, #276	; (adr r0, 80023c0 <.text_30>)
 80022aa:	4770      	bx	lr
 80022ac:	a00b      	add	r0, pc, #44	; (adr r0, 80022dc <.text_12>)
 80022ae:	4770      	bx	lr
 80022b0:	a049      	add	r0, pc, #292	; (adr r0, 80023d8 <.text_31>)
 80022b2:	4770      	bx	lr
 80022b4:	a04a      	add	r0, pc, #296	; (adr r0, 80023e0 <.text_32>)
 80022b6:	4770      	bx	lr
 80022b8:	a04b      	add	r0, pc, #300	; (adr r0, 80023e8 <.text_33>)
 80022ba:	4770      	bx	lr
 80022bc:	a000      	add	r0, pc, #0	; (adr r0, 80022c0 <.text_5>)
 80022be:	4770      	bx	lr

080022c0 <.text_5>:
 80022c0:	00000000 	.word	0x00000000

080022c4 <.text_6>:
 80022c4:	00444441 	.word	0x00444441

080022c8 <.text_7>:
 80022c8:	00004e42 	.word	0x00004e42

080022cc <.text_8>:
 80022cc:	00555247 	.word	0x00555247

080022d0 <.text_9>:
 80022d0:	004e524c 	.word	0x004e524c

080022d4 <.text_10>:
 80022d4:	00004c4e 	.word	0x00004c4e

080022d8 <.text_11>:
 80022d8:	00004d53 	.word	0x00004d53

080022dc <.text_12>:
 80022dc:	00444150 	.word	0x00444150

080022e0 <ai_layer_type_is_valid>:
 80022e0:	f242 7111 	movw	r1, #10001	; 0x2711
 80022e4:	1a40      	subs	r0, r0, r1
 80022e6:	2801      	cmp	r0, #1
 80022e8:	bf81      	itttt	hi
 80022ea:	1ec0      	subhi	r0, r0, #3
 80022ec:	280d      	cmphi	r0, #13
 80022ee:	380f      	subhi	r0, #15
 80022f0:	2809      	cmphi	r0, #9
 80022f2:	d801      	bhi.n	80022f8 <ai_layer_type_is_valid+0x18>
 80022f4:	2001      	movs	r0, #1
 80022f6:	4770      	bx	lr
 80022f8:	2000      	movs	r0, #0
 80022fa:	4770      	bx	lr

080022fc <ai_layers_forward_all>:
 80022fc:	b530      	push	{r4, r5, lr}
 80022fe:	b081      	sub	sp, #4
 8002300:	4604      	mov	r4, r0
 8002302:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8002304:	b158      	cbz	r0, 800231e <ai_layers_forward_all+0x22>
 8002306:	6560      	str	r0, [r4, #84]	; 0x54
 8002308:	6d65      	ldr	r5, [r4, #84]	; 0x54
 800230a:	6929      	ldr	r1, [r5, #16]
 800230c:	4628      	mov	r0, r5
 800230e:	4788      	blx	r1
 8002310:	68e8      	ldr	r0, [r5, #12]
 8002312:	42a8      	cmp	r0, r5
 8002314:	bf08      	it	eq
 8002316:	2000      	moveq	r0, #0
 8002318:	2800      	cmp	r0, #0
 800231a:	6560      	str	r0, [r4, #84]	; 0x54
 800231c:	d1f4      	bne.n	8002308 <ai_layers_forward_all+0xc>
 800231e:	b001      	add	sp, #4
 8002320:	bd30      	pop	{r4, r5, pc}
	...

08002324 <.text_15>:
 8002324:	564e4f43 	.word	0x564e4f43
 8002328:	00004432 	.word	0x00004432

0800232c <.text_16>:
 800232c:	534e4544 	.word	0x534e4544
 8002330:	0045      	.short	0x0045
	...

08002334 <.text_17>:
 8002334:	4d54534c 	.word	0x4d54534c
 8002338:	00          	.byte	0x00
 8002339:	00          	.byte	0x00
	...

0800233c <.text_18>:
 800233c:	4d524f4e 	.word	0x4d524f4e
 8002340:	00          	.byte	0x00
 8002341:	00          	.byte	0x00
	...

08002344 <.text_19>:
 8002344:	4954504f 	.word	0x4954504f
 8002348:	455a494d 	.word	0x455a494d
 800234c:	4f435f44 	.word	0x4f435f44
 8002350:	4432564e 	.word	0x4432564e
 8002354:	00          	.byte	0x00
 8002355:	00          	.byte	0x00
	...

08002358 <.text_20>:
 8002358:	4e415254 	.word	0x4e415254
 800235c:	534f5053 	.word	0x534f5053
 8002360:	0045      	.short	0x0045
	...

08002364 <.text_21>:
 8002364:	4c4f4f50 	.word	0x4c4f4f50
 8002368:	00          	.byte	0x00
 8002369:	00          	.byte	0x00
	...

0800236c <.text_22>:
 800236c:	494c5053 	.word	0x494c5053
 8002370:	0054      	.short	0x0054
	...

08002374 <.text_23>:
 8002374:	454d4954 	.word	0x454d4954
 8002378:	4c45445f 	.word	0x4c45445f
 800237c:	00005941 	.word	0x00005941

08002380 <.text_24>:
 8002380:	454d4954 	.word	0x454d4954
 8002384:	5349445f 	.word	0x5349445f
 8002388:	42495254 	.word	0x42495254
 800238c:	44455455 	.word	0x44455455
 8002390:	00          	.byte	0x00
 8002391:	00          	.byte	0x00
	...

08002394 <.text_25>:
 8002394:	434e4f43 	.word	0x434e4f43
 8002398:	00005441 	.word	0x00005441

0800239c <.text_26>:
 800239c:	4d4d4547 	.word	0x4d4d4547
 80023a0:	00          	.byte	0x00
 80023a1:	00          	.byte	0x00
	...

080023a4 <.text_27>:
 80023a4:	41535055 	.word	0x41535055
 80023a8:	454c504d 	.word	0x454c504d
 80023ac:	00          	.byte	0x00
 80023ad:	00          	.byte	0x00
	...

080023b0 <.text_28>:
 80023b0:	57544c45 	.word	0x57544c45
 80023b4:	00455349 	.word	0x00455349

080023b8 <.text_29>:
 80023b8:	454e4547 	.word	0x454e4547
 80023bc:	00434952 	.word	0x00434952

080023c0 <.text_30>:
 80023c0:	54534e49 	.word	0x54534e49
 80023c4:	45434e41 	.word	0x45434e41
 80023c8:	4d524f4e 	.word	0x4d524f4e
 80023cc:	5a494c41 	.word	0x5a494c41
 80023d0:	4f495441 	.word	0x4f495441
 80023d4:	004e      	.short	0x004e
	...

080023d8 <.text_31>:
 80023d8:	43494c53 	.word	0x43494c53
 80023dc:	0045      	.short	0x0045
	...

080023e0 <.text_32>:
 80023e0:	454c4954 	.word	0x454c4954
 80023e4:	00          	.byte	0x00
 80023e5:	00          	.byte	0x00
	...

080023e8 <.text_33>:
 80023e8:	55444552 	.word	0x55444552
 80023ec:	00004543 	.word	0x00004543

080023f0 <ai_check_custom_types::ref_signatures>:
 80023f0:	84048403                                ....

080023f4 <ai_conv2d_stripe_f32>:
 80023f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023f8:	b098      	sub	sp, #96	; 0x60
 80023fa:	9825      	ldr	r0, [sp, #148]	; 0x94
 80023fc:	2800      	cmp	r0, #0
 80023fe:	f000 82e3 	beq.w	80029c8 <ai_conv2d_stripe_f32+0x5d4>
 8002402:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 8002404:	f8dd e090 	ldr.w	lr, [sp, #144]	; 0x90
 8002408:	9e2c      	ldr	r6, [sp, #176]	; 0xb0
 800240a:	9004      	str	r0, [sp, #16]
 800240c:	982a      	ldr	r0, [sp, #168]	; 0xa8
 800240e:	f9bd a0c0 	ldrsh.w	sl, [sp, #192]	; 0xc0
 8002412:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8002414:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8002418:	fb0e 6707 	mla	r7, lr, r7, r6
 800241c:	f9bd 60c0 	ldrsh.w	r6, [sp, #192]	; 0xc0
 8002420:	9705      	str	r7, [sp, #20]
 8002422:	9f2a      	ldr	r7, [sp, #168]	; 0xa8
 8002424:	9100      	str	r1, [sp, #0]
 8002426:	9217      	str	r2, [sp, #92]	; 0x5c
 8002428:	fb0e f707 	mul.w	r7, lr, r7
 800242c:	1986      	adds	r6, r0, r6
 800242e:	9826      	ldr	r0, [sp, #152]	; 0x98
 8002430:	1e76      	subs	r6, r6, #1
 8002432:	fb96 fafa 	sdiv	sl, r6, sl
 8002436:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8002438:	f9bd e0c0 	ldrsh.w	lr, [sp, #192]	; 0xc0
 800243c:	fb0a fa00 	mul.w	sl, sl, r0
 8002440:	9306      	str	r3, [sp, #24]
 8002442:	f8cd a058 	str.w	sl, [sp, #88]	; 0x58
 8002446:	f8dd a0a8 	ldr.w	sl, [sp, #168]	; 0xa8
 800244a:	4377      	muls	r7, r6
 800244c:	970b      	str	r7, [sp, #44]	; 0x2c
 800244e:	f9bd 70bc 	ldrsh.w	r7, [sp, #188]	; 0xbc
 8002452:	4377      	muls	r7, r6
 8002454:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8002456:	9715      	str	r7, [sp, #84]	; 0x54
 8002458:	f9bd 70c0 	ldrsh.w	r7, [sp, #192]	; 0xc0
 800245c:	eba7 070a 	sub.w	r7, r7, sl
 8002460:	9713      	str	r7, [sp, #76]	; 0x4c
 8002462:	4657      	mov	r7, sl
 8002464:	4347      	muls	r7, r0
 8002466:	9711      	str	r7, [sp, #68]	; 0x44
 8002468:	fb06 fe0e 	mul.w	lr, r6, lr
 800246c:	f9bd 60bc 	ldrsh.w	r6, [sp, #188]	; 0xbc
 8002470:	f8cd e050 	str.w	lr, [sp, #80]	; 0x50
 8002474:	f9bd 70c0 	ldrsh.w	r7, [sp, #192]	; 0xc0
 8002478:	fb00 fe0a 	mul.w	lr, r0, sl
 800247c:	f8dd a08c 	ldr.w	sl, [sp, #140]	; 0x8c
 8002480:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
 8002484:	f8dd e088 	ldr.w	lr, [sp, #136]	; 0x88
 8002488:	fb16 f707 	smulbb	r7, r6, r7
 800248c:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 800248e:	970a      	str	r7, [sp, #40]	; 0x28
 8002490:	9f22      	ldr	r7, [sp, #136]	; 0x88
 8002492:	fb00 fe0e 	mul.w	lr, r0, lr
 8002496:	fbba f6f6 	udiv	r6, sl, r6
 800249a:	9610      	str	r6, [sp, #64]	; 0x40
 800249c:	f8dd a0a4 	ldr.w	sl, [sp, #164]	; 0xa4
 80024a0:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80024a2:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80024a6:	fbb7 fafa 	udiv	sl, r7, sl
 80024aa:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 80024ae:	fbb6 f7f7 	udiv	r7, r6, r7
 80024b2:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 80024b4:	970e      	str	r7, [sp, #56]	; 0x38
 80024b6:	1bad      	subs	r5, r5, r6
 80024b8:	950c      	str	r5, [sp, #48]	; 0x30
 80024ba:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80024bc:	9924      	ldr	r1, [sp, #144]	; 0x90
 80024be:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80024c0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80024c2:	4264      	negs	r4, r4
 80024c4:	bfd8      	it	le
 80024c6:	2400      	movle	r4, #0
 80024c8:	1a09      	subs	r1, r1, r0
 80024ca:	4291      	cmp	r1, r2
 80024cc:	bf3a      	itte	cc
 80024ce:	9924      	ldrcc	r1, [sp, #144]	; 0x90
 80024d0:	1a0e      	subcc	r6, r1, r0
 80024d2:	4616      	movcs	r6, r2
 80024d4:	9a05      	ldr	r2, [sp, #20]
 80024d6:	9922      	ldr	r1, [sp, #136]	; 0x88
 80024d8:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80024da:	18a2      	adds	r2, r4, r2
 80024dc:	434a      	muls	r2, r1
 80024de:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80024e2:	9821      	ldr	r0, [sp, #132]	; 0x84
 80024e4:	b900      	cbnz	r0, 80024e8 <ai_conv2d_stripe_f32+0xf4>
 80024e6:	9800      	ldr	r0, [sp, #0]
 80024e8:	9001      	str	r0, [sp, #4]
 80024ea:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80024ec:	1b36      	subs	r6, r6, r4
 80024ee:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80024f0:	2801      	cmp	r0, #1
 80024f2:	bf04      	itt	eq
 80024f4:	990a      	ldreq	r1, [sp, #40]	; 0x28
 80024f6:	2901      	cmpeq	r1, #1
 80024f8:	f040 80ad 	bne.w	8002656 <ai_conv2d_stripe_f32+0x262>
 80024fc:	f8dd a090 	ldr.w	sl, [sp, #144]	; 0x90
 8002500:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002502:	9822      	ldr	r0, [sp, #136]	; 0x88
 8002504:	f8dd c034 	ldr.w	ip, [sp, #52]	; 0x34
 8002508:	ebaa 0a06 	sub.w	sl, sl, r6
 800250c:	9f11      	ldr	r7, [sp, #68]	; 0x44
 800250e:	1b9b      	subs	r3, r3, r6
 8002510:	f8dd e000 	ldr.w	lr, [sp]
 8002514:	fb0a fa00 	mul.w	sl, sl, r0
 8002518:	fb03 f100 	mul.w	r1, r3, r0
 800251c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 800251e:	9b06      	ldr	r3, [sp, #24]
 8002520:	19e4      	adds	r4, r4, r7
 8002522:	1b40      	subs	r0, r0, r5
 8002524:	fb00 fc0c 	mul.w	ip, r0, ip
 8002528:	9822      	ldr	r0, [sp, #136]	; 0x88
 800252a:	4344      	muls	r4, r0
 800252c:	4370      	muls	r0, r6
 800252e:	eb03 0784 	add.w	r7, r3, r4, lsl #2
 8002532:	9e01      	ldr	r6, [sp, #4]
 8002534:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002536:	eb02 0983 	add.w	r9, r2, r3, lsl #2
 800253a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800253c:	4576      	cmp	r6, lr
 800253e:	bf0c      	ite	eq
 8002540:	eddf 0ab0 	vldreq	s1, [pc, #704]	; 8002804 <ai_conv2d_stripe_f32+0x410>
 8002544:	eef0 0a40 	vmovne.f32	s1, s0
 8002548:	2a00      	cmp	r2, #0
 800254a:	f000 8229 	beq.w	80029a0 <ai_conv2d_stripe_f32+0x5ac>
 800254e:	46b0      	mov	r8, r6
 8002550:	4613      	mov	r3, r2
 8002552:	462e      	mov	r6, r5
 8002554:	463a      	mov	r2, r7
 8002556:	f8cd c008 	str.w	ip, [sp, #8]
 800255a:	461d      	mov	r5, r3
 800255c:	4607      	mov	r7, r0
 800255e:	f8cd 9004 	str.w	r9, [sp, #4]
 8002562:	46c4      	mov	ip, r8
 8002564:	9b00      	ldr	r3, [sp, #0]
 8002566:	f027 0403 	bic.w	r4, r7, #3
 800256a:	2e00      	cmp	r6, #0
 800256c:	ed9c 1a00 	vldr	s2, [ip]
 8002570:	ee21 1a20 	vmul.f32	s2, s2, s1
 8002574:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8002578:	dd60      	ble.n	800263c <ai_conv2d_stripe_f32+0x248>
 800257a:	4630      	mov	r0, r6
 800257c:	2c00      	cmp	r4, #0
 800257e:	f04f 0900 	mov.w	r9, #0
 8002582:	dd1e      	ble.n	80025c2 <ai_conv2d_stripe_f32+0x1ce>
 8002584:	edd2 4a00 	vldr	s9, [r2]
 8002588:	f109 0904 	add.w	r9, r9, #4
 800258c:	ed98 5a00 	vldr	s10, [r8]
 8002590:	edd2 3a01 	vldr	s7, [r2, #4]
 8002594:	ed98 4a01 	vldr	s8, [r8, #4]
 8002598:	ee04 1a85 	vmla.f32	s2, s9, s10
 800259c:	edd2 2a02 	vldr	s5, [r2, #8]
 80025a0:	ed98 3a02 	vldr	s6, [r8, #8]
 80025a4:	ee03 1a84 	vmla.f32	s2, s7, s8
 80025a8:	edd2 1a03 	vldr	s3, [r2, #12]
 80025ac:	3210      	adds	r2, #16
 80025ae:	45a1      	cmp	r9, r4
 80025b0:	ed98 2a03 	vldr	s4, [r8, #12]
 80025b4:	ee02 1a83 	vmla.f32	s2, s5, s6
 80025b8:	f108 0810 	add.w	r8, r8, #16
 80025bc:	ee01 1a82 	vmla.f32	s2, s3, s4
 80025c0:	dbe0      	blt.n	8002584 <ai_conv2d_stripe_f32+0x190>
 80025c2:	45b9      	cmp	r9, r7
 80025c4:	f280 8034 	bge.w	8002630 <ai_conv2d_stripe_f32+0x23c>
 80025c8:	f109 0901 	add.w	r9, r9, #1
 80025cc:	edd2 2a00 	vldr	s5, [r2]
 80025d0:	1d12      	adds	r2, r2, #4
 80025d2:	edd8 1a00 	vldr	s3, [r8]
 80025d6:	45b9      	cmp	r9, r7
 80025d8:	ee02 1aa1 	vmla.f32	s2, s5, s3
 80025dc:	f108 0804 	add.w	r8, r8, #4
 80025e0:	da26      	bge.n	8002630 <ai_conv2d_stripe_f32+0x23c>
 80025e2:	f109 0901 	add.w	r9, r9, #1
 80025e6:	ed92 3a00 	vldr	s6, [r2]
 80025ea:	1d12      	adds	r2, r2, #4
 80025ec:	ed98 2a00 	vldr	s4, [r8]
 80025f0:	45b9      	cmp	r9, r7
 80025f2:	ee03 1a02 	vmla.f32	s2, s6, s4
 80025f6:	f108 0804 	add.w	r8, r8, #4
 80025fa:	da19      	bge.n	8002630 <ai_conv2d_stripe_f32+0x23c>
 80025fc:	f109 0901 	add.w	r9, r9, #1
 8002600:	edd2 2a00 	vldr	s5, [r2]
 8002604:	1d12      	adds	r2, r2, #4
 8002606:	edd8 1a00 	vldr	s3, [r8]
 800260a:	45b9      	cmp	r9, r7
 800260c:	ee02 1aa1 	vmla.f32	s2, s5, s3
 8002610:	f108 0804 	add.w	r8, r8, #4
 8002614:	da0c      	bge.n	8002630 <ai_conv2d_stripe_f32+0x23c>
 8002616:	f109 0901 	add.w	r9, r9, #1
 800261a:	ed92 2a00 	vldr	s4, [r2]
 800261e:	1d12      	adds	r2, r2, #4
 8002620:	ed98 3a00 	vldr	s6, [r8]
 8002624:	45b9      	cmp	r9, r7
 8002626:	ee02 1a03 	vmla.f32	s2, s4, s6
 800262a:	f108 0804 	add.w	r8, r8, #4
 800262e:	dbcb      	blt.n	80025c8 <ai_conv2d_stripe_f32+0x1d4>
 8002630:	1e40      	subs	r0, r0, #1
 8002632:	eb08 088a 	add.w	r8, r8, sl, lsl #2
 8002636:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 800263a:	d19f      	bne.n	800257c <ai_conv2d_stripe_f32+0x188>
 800263c:	1e6d      	subs	r5, r5, #1
 800263e:	9802      	ldr	r0, [sp, #8]
 8002640:	ed8e 1a00 	vstr	s2, [lr]
 8002644:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 8002648:	f10e 0e04 	add.w	lr, lr, #4
 800264c:	f10c 0c04 	add.w	ip, ip, #4
 8002650:	d18b      	bne.n	800256a <ai_conv2d_stripe_f32+0x176>
 8002652:	9300      	str	r3, [sp, #0]
 8002654:	e1a4      	b.n	80029a0 <ai_conv2d_stripe_f32+0x5ac>
 8002656:	9922      	ldr	r1, [sp, #136]	; 0x88
 8002658:	4288      	cmp	r0, r1
 800265a:	bf04      	itt	eq
 800265c:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
 800265e:	2b01      	cmpeq	r3, #1
 8002660:	f040 80d2 	bne.w	8002808 <ai_conv2d_stripe_f32+0x414>
 8002664:	9f24      	ldr	r7, [sp, #144]	; 0x90
 8002666:	9822      	ldr	r0, [sp, #136]	; 0x88
 8002668:	990e      	ldr	r1, [sp, #56]	; 0x38
 800266a:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
 800266e:	9102      	str	r1, [sp, #8]
 8002670:	9926      	ldr	r1, [sp, #152]	; 0x98
 8002672:	1bbf      	subs	r7, r7, r6
 8002674:	9b06      	ldr	r3, [sp, #24]
 8002676:	4347      	muls	r7, r0
 8002678:	9827      	ldr	r0, [sp, #156]	; 0x9c
 800267a:	4454      	add	r4, sl
 800267c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8002680:	f8dd c098 	ldr.w	ip, [sp, #152]	; 0x98
 8002684:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 8002688:	1b40      	subs	r0, r0, r5
 800268a:	4341      	muls	r1, r0
 800268c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8002690:	9b00      	ldr	r3, [sp, #0]
 8002692:	ebac 0c06 	sub.w	ip, ip, r6
 8002696:	459e      	cmp	lr, r3
 8002698:	eb02 0e8a 	add.w	lr, r2, sl, lsl #2
 800269c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800269e:	f04f 0a00 	mov.w	sl, #0
 80026a2:	eb0e 0883 	add.w	r8, lr, r3, lsl #2
 80026a6:	bf0c      	ite	eq
 80026a8:	eddf 0a56 	vldreq	s1, [pc, #344]	; 8002804 <ai_conv2d_stripe_f32+0x410>
 80026ac:	eef0 0a40 	vmovne.f32	s1, s0
 80026b0:	f8cd 800c 	str.w	r8, [sp, #12]
 80026b4:	45c6      	cmp	lr, r8
 80026b6:	f080 8173 	bcs.w	80029a0 <ai_conv2d_stripe_f32+0x5ac>
 80026ba:	9b00      	ldr	r3, [sp, #0]
 80026bc:	9a02      	ldr	r2, [sp, #8]
 80026be:	2a00      	cmp	r2, #0
 80026c0:	f000 8099 	beq.w	80027f6 <ai_conv2d_stripe_f32+0x402>
 80026c4:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80026c8:	9500      	str	r5, [sp, #0]
 80026ca:	f8dd 9004 	ldr.w	r9, [sp, #4]
 80026ce:	f8dd b008 	ldr.w	fp, [sp, #8]
 80026d2:	9108      	str	r1, [sp, #32]
 80026d4:	eb09 048a 	add.w	r4, r9, sl, lsl #2
 80026d8:	f8cd e01c 	str.w	lr, [sp, #28]
 80026dc:	4615      	mov	r5, r2
 80026de:	9a00      	ldr	r2, [sp, #0]
 80026e0:	ed94 1a00 	vldr	s2, [r4]
 80026e4:	ee21 1a20 	vmul.f32	s2, s2, s1
 80026e8:	9907      	ldr	r1, [sp, #28]
 80026ea:	2a00      	cmp	r2, #0
 80026ec:	f340 8072 	ble.w	80027d4 <ai_conv2d_stripe_f32+0x3e0>
 80026f0:	f026 0e03 	bic.w	lr, r6, #3
 80026f4:	f1be 0f00 	cmp.w	lr, #0
 80026f8:	f04f 0900 	mov.w	r9, #0
 80026fc:	f340 8029 	ble.w	8002752 <ai_conv2d_stripe_f32+0x35e>
 8002700:	f8dd 8088 	ldr.w	r8, [sp, #136]	; 0x88
 8002704:	edd0 1a00 	vldr	s3, [r0]
 8002708:	f109 0904 	add.w	r9, r9, #4
 800270c:	ed91 2a00 	vldr	s4, [r1]
 8002710:	eb01 0188 	add.w	r1, r1, r8, lsl #2
 8002714:	ee01 1a82 	vmla.f32	s2, s3, s4
 8002718:	edd0 2a01 	vldr	s5, [r0, #4]
 800271c:	edd0 1a02 	vldr	s3, [r0, #8]
 8002720:	ed91 3a00 	vldr	s6, [r1]
 8002724:	eb01 0188 	add.w	r1, r1, r8, lsl #2
 8002728:	ee02 1a83 	vmla.f32	s2, s5, s6
 800272c:	edd0 2a03 	vldr	s5, [r0, #12]
 8002730:	3010      	adds	r0, #16
 8002732:	45f1      	cmp	r9, lr
 8002734:	ed91 2a00 	vldr	s4, [r1]
 8002738:	eb01 0188 	add.w	r1, r1, r8, lsl #2
 800273c:	ee01 1a82 	vmla.f32	s2, s3, s4
 8002740:	ed91 3a00 	vldr	s6, [r1]
 8002744:	eb01 0188 	add.w	r1, r1, r8, lsl #2
 8002748:	ee02 1a83 	vmla.f32	s2, s5, s6
 800274c:	dbda      	blt.n	8002704 <ai_conv2d_stripe_f32+0x310>
 800274e:	f8cd 8088 	str.w	r8, [sp, #136]	; 0x88
 8002752:	45b1      	cmp	r9, r6
 8002754:	f280 8038 	bge.w	80027c8 <ai_conv2d_stripe_f32+0x3d4>
 8002758:	f8dd e088 	ldr.w	lr, [sp, #136]	; 0x88
 800275c:	f109 0901 	add.w	r9, r9, #1
 8002760:	edd0 1a00 	vldr	s3, [r0]
 8002764:	1d00      	adds	r0, r0, #4
 8002766:	ed91 2a00 	vldr	s4, [r1]
 800276a:	45b1      	cmp	r9, r6
 800276c:	ee01 1a82 	vmla.f32	s2, s3, s4
 8002770:	eb01 018e 	add.w	r1, r1, lr, lsl #2
 8002774:	da26      	bge.n	80027c4 <ai_conv2d_stripe_f32+0x3d0>
 8002776:	f109 0901 	add.w	r9, r9, #1
 800277a:	ed90 2a00 	vldr	s4, [r0]
 800277e:	1d00      	adds	r0, r0, #4
 8002780:	edd1 1a00 	vldr	s3, [r1]
 8002784:	45b1      	cmp	r9, r6
 8002786:	ee02 1a21 	vmla.f32	s2, s4, s3
 800278a:	eb01 018e 	add.w	r1, r1, lr, lsl #2
 800278e:	da19      	bge.n	80027c4 <ai_conv2d_stripe_f32+0x3d0>
 8002790:	f109 0901 	add.w	r9, r9, #1
 8002794:	edd0 1a00 	vldr	s3, [r0]
 8002798:	1d00      	adds	r0, r0, #4
 800279a:	ed91 2a00 	vldr	s4, [r1]
 800279e:	45b1      	cmp	r9, r6
 80027a0:	ee01 1a82 	vmla.f32	s2, s3, s4
 80027a4:	eb01 018e 	add.w	r1, r1, lr, lsl #2
 80027a8:	da0c      	bge.n	80027c4 <ai_conv2d_stripe_f32+0x3d0>
 80027aa:	f109 0901 	add.w	r9, r9, #1
 80027ae:	ed90 2a00 	vldr	s4, [r0]
 80027b2:	1d00      	adds	r0, r0, #4
 80027b4:	edd1 1a00 	vldr	s3, [r1]
 80027b8:	45b1      	cmp	r9, r6
 80027ba:	ee02 1a21 	vmla.f32	s2, s4, s3
 80027be:	eb01 018e 	add.w	r1, r1, lr, lsl #2
 80027c2:	dbcb      	blt.n	800275c <ai_conv2d_stripe_f32+0x368>
 80027c4:	f8cd e088 	str.w	lr, [sp, #136]	; 0x88
 80027c8:	1e52      	subs	r2, r2, #1
 80027ca:	eb01 0187 	add.w	r1, r1, r7, lsl #2
 80027ce:	eb00 008c 	add.w	r0, r0, ip, lsl #2
 80027d2:	d18d      	bne.n	80026f0 <ai_conv2d_stripe_f32+0x2fc>
 80027d4:	1d24      	adds	r4, r4, #4
 80027d6:	9908      	ldr	r1, [sp, #32]
 80027d8:	ed85 1a00 	vstr	s2, [r5]
 80027dc:	1d2d      	adds	r5, r5, #4
 80027de:	f1bb 0b01 	subs.w	fp, fp, #1
 80027e2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 80027e6:	f10a 0a01 	add.w	sl, sl, #1
 80027ea:	f47f af78 	bne.w	80026de <ai_conv2d_stripe_f32+0x2ea>
 80027ee:	9d00      	ldr	r5, [sp, #0]
 80027f0:	9908      	ldr	r1, [sp, #32]
 80027f2:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80027f6:	9a03      	ldr	r2, [sp, #12]
 80027f8:	f10e 0e04 	add.w	lr, lr, #4
 80027fc:	4596      	cmp	lr, r2
 80027fe:	f4bf af28 	bcs.w	8002652 <ai_conv2d_stripe_f32+0x25e>
 8002802:	e75b      	b.n	80026bc <ai_conv2d_stripe_f32+0x2c8>
 8002804:	00000000 	.word	0x00000000
 8002808:	f9bd 10bc 	ldrsh.w	r1, [sp, #188]	; 0xbc
 800280c:	f8dd c04c 	ldr.w	ip, [sp, #76]	; 0x4c
 8002810:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
 8002814:	f8dd e098 	ldr.w	lr, [sp, #152]	; 0x98
 8002818:	f8dd 8098 	ldr.w	r8, [sp, #152]	; 0x98
 800281c:	4608      	mov	r0, r1
 800281e:	1b0b      	subs	r3, r1, r4
 8002820:	1876      	adds	r6, r6, r1
 8002822:	fb94 faf0 	sdiv	sl, r4, r0
 8002826:	fb00 300a 	mla	r0, r0, sl, r3
 800282a:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 800282e:	1e76      	subs	r6, r6, #1
 8002830:	1864      	adds	r4, r4, r1
 8002832:	1e64      	subs	r4, r4, #1
 8002834:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8002838:	fb90 f7f1 	sdiv	r7, r0, r1
 800283c:	fb01 0717 	mls	r7, r1, r7, r0
 8002840:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8002842:	fb90 f0f3 	sdiv	r0, r0, r3
 8002846:	fb03 c000 	mla	r0, r3, r0, ip
 800284a:	1bf6      	subs	r6, r6, r7
 800284c:	fb90 fbf3 	sdiv	fp, r0, r3
 8002850:	fb03 0b1b 	mls	fp, r3, fp, r0
 8002854:	fb96 f0f1 	sdiv	r0, r6, r1
 8002858:	9e10      	ldr	r6, [sp, #64]	; 0x40
 800285a:	fb00 9911 	mls	r9, r0, r1, r9
 800285e:	9609      	str	r6, [sp, #36]	; 0x24
 8002860:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8002862:	fb94 f1f1 	sdiv	r1, r4, r1
 8002866:	9c00      	ldr	r4, [sp, #0]
 8002868:	eba5 050b 	sub.w	r5, r5, fp
 800286c:	195d      	adds	r5, r3, r5
 800286e:	1e6d      	subs	r5, r5, #1
 8002870:	fb95 fcf3 	sdiv	ip, r5, r3
 8002874:	9d22      	ldr	r5, [sp, #136]	; 0x88
 8002876:	eba6 060c 	sub.w	r6, r6, ip
 800287a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800287c:	eba8 0800 	sub.w	r8, r8, r0
 8002880:	fb05 f909 	mul.w	r9, r5, r9
 8002884:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8002886:	fb0e fe03 	mul.w	lr, lr, r3
 800288a:	ebaa 0a03 	sub.w	sl, sl, r3
 800288e:	fb08 f803 	mul.w	r8, r8, r3
 8002892:	194d      	adds	r5, r1, r5
 8002894:	fb06 fe0e 	mul.w	lr, r6, lr
 8002898:	9e06      	ldr	r6, [sp, #24]
 800289a:	435d      	muls	r5, r3
 800289c:	eb06 0185 	add.w	r1, r6, r5, lsl #2
 80028a0:	9d01      	ldr	r5, [sp, #4]
 80028a2:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 80028a4:	42a5      	cmp	r5, r4
 80028a6:	9c24      	ldr	r4, [sp, #144]	; 0x90
 80028a8:	9d22      	ldr	r5, [sp, #136]	; 0x88
 80028aa:	44b3      	add	fp, r6
 80028ac:	fb04 770b 	mla	r7, r4, fp, r7
 80028b0:	bf0c      	ite	eq
 80028b2:	eddf 0a47 	vldreq	s1, [pc, #284]	; 80029d0 <.text_3>
 80028b6:	eef0 0a40 	vmovne.f32	s1, s0
 80028ba:	436f      	muls	r7, r5
 80028bc:	eb02 0487 	add.w	r4, r2, r7, lsl #2
 80028c0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80028c2:	2500      	movs	r5, #0
 80028c4:	2a00      	cmp	r2, #0
 80028c6:	d06b      	beq.n	80029a0 <ai_conv2d_stripe_f32+0x5ac>
 80028c8:	9202      	str	r2, [sp, #8]
 80028ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80028cc:	2a00      	cmp	r2, #0
 80028ce:	d061      	beq.n	8002994 <ai_conv2d_stripe_f32+0x5a0>
 80028d0:	9a00      	ldr	r2, [sp, #0]
 80028d2:	9e01      	ldr	r6, [sp, #4]
 80028d4:	f8cd c00c 	str.w	ip, [sp, #12]
 80028d8:	eb02 0785 	add.w	r7, r2, r5, lsl #2
 80028dc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80028de:	f8cd e020 	str.w	lr, [sp, #32]
 80028e2:	eb06 0685 	add.w	r6, r6, r5, lsl #2
 80028e6:	9407      	str	r4, [sp, #28]
 80028e8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80028ec:	ed96 1a00 	vldr	s2, [r6]
 80028f0:	ee21 1a20 	vmul.f32	s2, s2, s1
 80028f4:	9c07      	ldr	r4, [sp, #28]
 80028f6:	f1be 0f00 	cmp.w	lr, #0
 80028fa:	dd3b      	ble.n	8002974 <ai_conv2d_stripe_f32+0x580>
 80028fc:	2800      	cmp	r0, #0
 80028fe:	dd32      	ble.n	8002966 <ai_conv2d_stripe_f32+0x572>
 8002900:	ea4f 0c00 	mov.w	ip, r0
 8002904:	eb04 0b83 	add.w	fp, r4, r3, lsl #2
 8002908:	455c      	cmp	r4, fp
 800290a:	d227      	bcs.n	800295c <ai_conv2d_stripe_f32+0x568>
 800290c:	edd1 2a00 	vldr	s5, [r1]
 8002910:	1d09      	adds	r1, r1, #4
 8002912:	edd4 1a00 	vldr	s3, [r4]
 8002916:	1d24      	adds	r4, r4, #4
 8002918:	455c      	cmp	r4, fp
 800291a:	ee02 1aa1 	vmla.f32	s2, s5, s3
 800291e:	d21d      	bcs.n	800295c <ai_conv2d_stripe_f32+0x568>
 8002920:	ed91 3a00 	vldr	s6, [r1]
 8002924:	1d09      	adds	r1, r1, #4
 8002926:	ed94 2a00 	vldr	s4, [r4]
 800292a:	1d24      	adds	r4, r4, #4
 800292c:	455c      	cmp	r4, fp
 800292e:	ee03 1a02 	vmla.f32	s2, s6, s4
 8002932:	d213      	bcs.n	800295c <ai_conv2d_stripe_f32+0x568>
 8002934:	edd1 2a00 	vldr	s5, [r1]
 8002938:	1d09      	adds	r1, r1, #4
 800293a:	edd4 1a00 	vldr	s3, [r4]
 800293e:	1d24      	adds	r4, r4, #4
 8002940:	455c      	cmp	r4, fp
 8002942:	ee02 1aa1 	vmla.f32	s2, s5, s3
 8002946:	d209      	bcs.n	800295c <ai_conv2d_stripe_f32+0x568>
 8002948:	ed91 2a00 	vldr	s4, [r1]
 800294c:	1d09      	adds	r1, r1, #4
 800294e:	ed94 3a00 	vldr	s6, [r4]
 8002952:	1d24      	adds	r4, r4, #4
 8002954:	455c      	cmp	r4, fp
 8002956:	ee02 1a03 	vmla.f32	s2, s4, s6
 800295a:	d3d7      	bcc.n	800290c <ai_conv2d_stripe_f32+0x518>
 800295c:	f1bc 0c01 	subs.w	ip, ip, #1
 8002960:	eb04 048a 	add.w	r4, r4, sl, lsl #2
 8002964:	d1ce      	bne.n	8002904 <ai_conv2d_stripe_f32+0x510>
 8002966:	f1be 0e01 	subs.w	lr, lr, #1
 800296a:	eb04 0489 	add.w	r4, r4, r9, lsl #2
 800296e:	eb01 0188 	add.w	r1, r1, r8, lsl #2
 8002972:	d1c3      	bne.n	80028fc <ai_conv2d_stripe_f32+0x508>
 8002974:	1c6d      	adds	r5, r5, #1
 8002976:	f8dd c020 	ldr.w	ip, [sp, #32]
 800297a:	ed87 1a00 	vstr	s2, [r7]
 800297e:	1d3f      	adds	r7, r7, #4
 8002980:	1d36      	adds	r6, r6, #4
 8002982:	1e52      	subs	r2, r2, #1
 8002984:	eb01 018c 	add.w	r1, r1, ip, lsl #2
 8002988:	d1ae      	bne.n	80028e8 <ai_conv2d_stripe_f32+0x4f4>
 800298a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800298e:	f8dd e020 	ldr.w	lr, [sp, #32]
 8002992:	9c07      	ldr	r4, [sp, #28]
 8002994:	9f02      	ldr	r7, [sp, #8]
 8002996:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800299a:	1e7f      	subs	r7, r7, #1
 800299c:	9702      	str	r7, [sp, #8]
 800299e:	d194      	bne.n	80028ca <ai_conv2d_stripe_f32+0x4d6>
 80029a0:	9900      	ldr	r1, [sp, #0]
 80029a2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80029a4:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 80029a8:	f8bd 20a0 	ldrh.w	r2, [sp, #160]	; 0xa0
 80029ac:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80029ae:	9300      	str	r3, [sp, #0]
 80029b0:	9b05      	ldr	r3, [sp, #20]
 80029b2:	188a      	adds	r2, r1, r2
 80029b4:	f8bd 10a0 	ldrh.w	r1, [sp, #160]	; 0xa0
 80029b8:	922c      	str	r2, [sp, #176]	; 0xb0
 80029ba:	9a04      	ldr	r2, [sp, #16]
 80029bc:	1859      	adds	r1, r3, r1
 80029be:	9105      	str	r1, [sp, #20]
 80029c0:	1e52      	subs	r2, r2, #1
 80029c2:	9204      	str	r2, [sp, #16]
 80029c4:	f47f ad79 	bne.w	80024ba <ai_conv2d_stripe_f32+0xc6>
 80029c8:	b018      	add	sp, #96	; 0x60
 80029ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080029d0 <.text_3>:
 80029d0:	00000000 	.word	0x00000000

080029d4 <func_dummy>:
 80029d4:	4770      	bx	lr
	...

080029d8 <ai_dict8_dot_array_f32>:
 80029d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80029da:	4604      	mov	r4, r0
 80029dc:	9805      	ldr	r0, [sp, #20]
 80029de:	eb03 0580 	add.w	r5, r3, r0, lsl #2
 80029e2:	ed9f 0ab4 	vldr	s0, [pc, #720]	; 8002cb4 <.text_6>
 80029e6:	3d20      	subs	r5, #32
 80029e8:	2808      	cmp	r0, #8
 80029ea:	d231      	bcs.n	8002a50 <ai_dict8_dot_array_f32+0x78>
 80029ec:	3520      	adds	r5, #32
 80029ee:	42ab      	cmp	r3, r5
 80029f0:	f080 8159 	bcs.w	8002ca6 <ai_dict8_dot_array_f32+0x2ce>
 80029f4:	780e      	ldrb	r6, [r1, #0]
 80029f6:	edd3 0a00 	vldr	s1, [r3]
 80029fa:	eb02 0086 	add.w	r0, r2, r6, lsl #2
 80029fe:	ed90 1a00 	vldr	s2, [r0]
 8002a02:	1d18      	adds	r0, r3, #4
 8002a04:	42a8      	cmp	r0, r5
 8002a06:	ee01 0a20 	vmla.f32	s0, s2, s1
 8002a0a:	f080 814c 	bcs.w	8002ca6 <ai_dict8_dot_array_f32+0x2ce>
 8002a0e:	784e      	ldrb	r6, [r1, #1]
 8002a10:	edd0 0a00 	vldr	s1, [r0]
 8002a14:	eb02 0386 	add.w	r3, r2, r6, lsl #2
 8002a18:	1d00      	adds	r0, r0, #4
 8002a1a:	42a8      	cmp	r0, r5
 8002a1c:	ed93 1a00 	vldr	s2, [r3]
 8002a20:	ee01 0a20 	vmla.f32	s0, s2, s1
 8002a24:	f080 813f 	bcs.w	8002ca6 <ai_dict8_dot_array_f32+0x2ce>
 8002a28:	788e      	ldrb	r6, [r1, #2]
 8002a2a:	1cc9      	adds	r1, r1, #3
 8002a2c:	eb02 0386 	add.w	r3, r2, r6, lsl #2
 8002a30:	edd0 0a00 	vldr	s1, [r0]
 8002a34:	ed93 1a00 	vldr	s2, [r3]
 8002a38:	1d03      	adds	r3, r0, #4
 8002a3a:	42ab      	cmp	r3, r5
 8002a3c:	ee01 0a20 	vmla.f32	s0, s2, s1
 8002a40:	d3d8      	bcc.n	80029f4 <ai_dict8_dot_array_f32+0x1c>
 8002a42:	edd4 0a00 	vldr	s1, [r4]
 8002a46:	ee30 0a80 	vadd.f32	s0, s1, s0
 8002a4a:	ed84 0a00 	vstr	s0, [r4]
 8002a4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002a50:	f001 0003 	and.w	r0, r1, #3
 8002a54:	2803      	cmp	r0, #3
 8002a56:	f200 8126 	bhi.w	8002ca6 <ai_dict8_dot_array_f32+0x2ce>
 8002a5a:	e8df f010 	tbh	[pc, r0, lsl #1]
 8002a5e:	0004      	.short	0x0004
 8002a60:	00940089 	.word	0x00940089
 8002a64:	009f      	.short	0x009f
 8002a66:	429d      	cmp	r5, r3
 8002a68:	d231      	bcs.n	8002ace <ai_dict8_dot_array_f32+0xf6>
 8002a6a:	3520      	adds	r5, #32
 8002a6c:	42ab      	cmp	r3, r5
 8002a6e:	f080 811a 	bcs.w	8002ca6 <ai_dict8_dot_array_f32+0x2ce>
 8002a72:	780e      	ldrb	r6, [r1, #0]
 8002a74:	edd3 0a00 	vldr	s1, [r3]
 8002a78:	eb02 0086 	add.w	r0, r2, r6, lsl #2
 8002a7c:	ed90 1a00 	vldr	s2, [r0]
 8002a80:	1d18      	adds	r0, r3, #4
 8002a82:	42a8      	cmp	r0, r5
 8002a84:	ee01 0a20 	vmla.f32	s0, s2, s1
 8002a88:	f080 810d 	bcs.w	8002ca6 <ai_dict8_dot_array_f32+0x2ce>
 8002a8c:	784e      	ldrb	r6, [r1, #1]
 8002a8e:	edd0 0a00 	vldr	s1, [r0]
 8002a92:	eb02 0386 	add.w	r3, r2, r6, lsl #2
 8002a96:	1d00      	adds	r0, r0, #4
 8002a98:	42a8      	cmp	r0, r5
 8002a9a:	ed93 1a00 	vldr	s2, [r3]
 8002a9e:	ee01 0a20 	vmla.f32	s0, s2, s1
 8002aa2:	f080 8100 	bcs.w	8002ca6 <ai_dict8_dot_array_f32+0x2ce>
 8002aa6:	788e      	ldrb	r6, [r1, #2]
 8002aa8:	1cc9      	adds	r1, r1, #3
 8002aaa:	eb02 0386 	add.w	r3, r2, r6, lsl #2
 8002aae:	edd0 0a00 	vldr	s1, [r0]
 8002ab2:	ed93 1a00 	vldr	s2, [r3]
 8002ab6:	1d03      	adds	r3, r0, #4
 8002ab8:	42ab      	cmp	r3, r5
 8002aba:	ee01 0a20 	vmla.f32	s0, s2, s1
 8002abe:	d3d8      	bcc.n	8002a72 <ai_dict8_dot_array_f32+0x9a>
 8002ac0:	edd4 0a00 	vldr	s1, [r4]
 8002ac4:	ee30 0a80 	vadd.f32	s0, s1, s0
 8002ac8:	ed84 0a00 	vstr	s0, [r4]
 8002acc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002ace:	78cf      	ldrb	r7, [r1, #3]
 8002ad0:	f891 e000 	ldrb.w	lr, [r1]
 8002ad4:	eb02 0c87 	add.w	ip, r2, r7, lsl #2
 8002ad8:	788f      	ldrb	r7, [r1, #2]
 8002ada:	f103 0010 	add.w	r0, r3, #16
 8002ade:	ed93 4a00 	vldr	s8, [r3]
 8002ae2:	ed93 3a01 	vldr	s6, [r3, #4]
 8002ae6:	ed93 2a02 	vldr	s4, [r3, #8]
 8002aea:	eddc 0a00 	vldr	s1, [ip]
 8002aee:	eb02 0c87 	add.w	ip, r2, r7, lsl #2
 8002af2:	784f      	ldrb	r7, [r1, #1]
 8002af4:	ed93 1a03 	vldr	s2, [r3, #12]
 8002af8:	790b      	ldrb	r3, [r1, #4]
 8002afa:	eddc 1a00 	vldr	s3, [ip]
 8002afe:	eb02 0c87 	add.w	ip, r2, r7, lsl #2
 8002b02:	eb02 078e 	add.w	r7, r2, lr, lsl #2
 8002b06:	edd7 3a00 	vldr	s7, [r7]
 8002b0a:	794f      	ldrb	r7, [r1, #5]
 8002b0c:	ee03 0a84 	vmla.f32	s0, s7, s8
 8002b10:	eb02 0e87 	add.w	lr, r2, r7, lsl #2
 8002b14:	eddc 2a00 	vldr	s5, [ip]
 8002b18:	eb02 0c83 	add.w	ip, r2, r3, lsl #2
 8002b1c:	ee02 0a83 	vmla.f32	s0, s5, s6
 8002b20:	798b      	ldrb	r3, [r1, #6]
 8002b22:	ee01 0a82 	vmla.f32	s0, s3, s4
 8002b26:	79cf      	ldrb	r7, [r1, #7]
 8002b28:	ee00 0a81 	vmla.f32	s0, s1, s2
 8002b2c:	3108      	adds	r1, #8
 8002b2e:	eddc 0a00 	vldr	s1, [ip]
 8002b32:	eb02 0c83 	add.w	ip, r2, r3, lsl #2
 8002b36:	ed9e 1a00 	vldr	s2, [lr]
 8002b3a:	eb02 0e87 	add.w	lr, r2, r7, lsl #2
 8002b3e:	ed90 4a00 	vldr	s8, [r0]
 8002b42:	f100 0310 	add.w	r3, r0, #16
 8002b46:	edd0 3a01 	vldr	s7, [r0, #4]
 8002b4a:	429d      	cmp	r5, r3
 8002b4c:	ee00 0a84 	vmla.f32	s0, s1, s8
 8002b50:	eddc 1a00 	vldr	s3, [ip]
 8002b54:	ed90 3a02 	vldr	s6, [r0, #8]
 8002b58:	ee01 0a23 	vmla.f32	s0, s2, s7
 8002b5c:	ed9e 2a00 	vldr	s4, [lr]
 8002b60:	edd0 2a03 	vldr	s5, [r0, #12]
 8002b64:	ee01 0a83 	vmla.f32	s0, s3, s6
 8002b68:	ee02 0a22 	vmla.f32	s0, s4, s5
 8002b6c:	d2af      	bcs.n	8002ace <ai_dict8_dot_array_f32+0xf6>
 8002b6e:	e77c      	b.n	8002a6a <ai_dict8_dot_array_f32+0x92>
 8002b70:	f811 0b01 	ldrb.w	r0, [r1], #1
 8002b74:	edd3 0a00 	vldr	s1, [r3]
 8002b78:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 8002b7c:	1d1b      	adds	r3, r3, #4
 8002b7e:	ed96 0a00 	vldr	s0, [r6]
 8002b82:	ee20 0a20 	vmul.f32	s0, s0, s1
 8002b86:	f811 0b01 	ldrb.w	r0, [r1], #1
 8002b8a:	edd3 0a00 	vldr	s1, [r3]
 8002b8e:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 8002b92:	1d1b      	adds	r3, r3, #4
 8002b94:	ed96 1a00 	vldr	s2, [r6]
 8002b98:	ee01 0a20 	vmla.f32	s0, s2, s1
 8002b9c:	f811 0b01 	ldrb.w	r0, [r1], #1
 8002ba0:	edd3 0a00 	vldr	s1, [r3]
 8002ba4:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 8002ba8:	1d1b      	adds	r3, r3, #4
 8002baa:	429d      	cmp	r5, r3
 8002bac:	ed96 1a00 	vldr	s2, [r6]
 8002bb0:	ee01 0a20 	vmla.f32	s0, s2, s1
 8002bb4:	d34f      	bcc.n	8002c56 <ai_dict8_dot_array_f32+0x27e>
 8002bb6:	78cf      	ldrb	r7, [r1, #3]
 8002bb8:	f891 e000 	ldrb.w	lr, [r1]
 8002bbc:	eb02 0c87 	add.w	ip, r2, r7, lsl #2
 8002bc0:	788f      	ldrb	r7, [r1, #2]
 8002bc2:	f103 0010 	add.w	r0, r3, #16
 8002bc6:	ed93 4a00 	vldr	s8, [r3]
 8002bca:	ed93 3a01 	vldr	s6, [r3, #4]
 8002bce:	ed93 2a02 	vldr	s4, [r3, #8]
 8002bd2:	eddc 0a00 	vldr	s1, [ip]
 8002bd6:	eb02 0c87 	add.w	ip, r2, r7, lsl #2
 8002bda:	784f      	ldrb	r7, [r1, #1]
 8002bdc:	ed93 1a03 	vldr	s2, [r3, #12]
 8002be0:	790b      	ldrb	r3, [r1, #4]
 8002be2:	eddc 1a00 	vldr	s3, [ip]
 8002be6:	eb02 0c87 	add.w	ip, r2, r7, lsl #2
 8002bea:	eb02 078e 	add.w	r7, r2, lr, lsl #2
 8002bee:	edd7 3a00 	vldr	s7, [r7]
 8002bf2:	794f      	ldrb	r7, [r1, #5]
 8002bf4:	ee03 0a84 	vmla.f32	s0, s7, s8
 8002bf8:	eb02 0e87 	add.w	lr, r2, r7, lsl #2
 8002bfc:	eddc 2a00 	vldr	s5, [ip]
 8002c00:	eb02 0c83 	add.w	ip, r2, r3, lsl #2
 8002c04:	ee02 0a83 	vmla.f32	s0, s5, s6
 8002c08:	798b      	ldrb	r3, [r1, #6]
 8002c0a:	ee01 0a82 	vmla.f32	s0, s3, s4
 8002c0e:	79cf      	ldrb	r7, [r1, #7]
 8002c10:	ee00 0a81 	vmla.f32	s0, s1, s2
 8002c14:	3108      	adds	r1, #8
 8002c16:	eddc 0a00 	vldr	s1, [ip]
 8002c1a:	eb02 0c83 	add.w	ip, r2, r3, lsl #2
 8002c1e:	ed9e 1a00 	vldr	s2, [lr]
 8002c22:	eb02 0e87 	add.w	lr, r2, r7, lsl #2
 8002c26:	ed90 4a00 	vldr	s8, [r0]
 8002c2a:	f100 0310 	add.w	r3, r0, #16
 8002c2e:	edd0 3a01 	vldr	s7, [r0, #4]
 8002c32:	429d      	cmp	r5, r3
 8002c34:	ee00 0a84 	vmla.f32	s0, s1, s8
 8002c38:	eddc 1a00 	vldr	s3, [ip]
 8002c3c:	ed90 3a02 	vldr	s6, [r0, #8]
 8002c40:	ee01 0a23 	vmla.f32	s0, s2, s7
 8002c44:	ed9e 2a00 	vldr	s4, [lr]
 8002c48:	edd0 2a03 	vldr	s5, [r0, #12]
 8002c4c:	ee01 0a83 	vmla.f32	s0, s3, s6
 8002c50:	ee02 0a22 	vmla.f32	s0, s4, s5
 8002c54:	d2af      	bcs.n	8002bb6 <ai_dict8_dot_array_f32+0x1de>
 8002c56:	3520      	adds	r5, #32
 8002c58:	42ab      	cmp	r3, r5
 8002c5a:	d224      	bcs.n	8002ca6 <ai_dict8_dot_array_f32+0x2ce>
 8002c5c:	780e      	ldrb	r6, [r1, #0]
 8002c5e:	edd3 0a00 	vldr	s1, [r3]
 8002c62:	eb02 0086 	add.w	r0, r2, r6, lsl #2
 8002c66:	ed90 1a00 	vldr	s2, [r0]
 8002c6a:	1d18      	adds	r0, r3, #4
 8002c6c:	42a8      	cmp	r0, r5
 8002c6e:	ee01 0a20 	vmla.f32	s0, s2, s1
 8002c72:	d218      	bcs.n	8002ca6 <ai_dict8_dot_array_f32+0x2ce>
 8002c74:	784e      	ldrb	r6, [r1, #1]
 8002c76:	edd0 0a00 	vldr	s1, [r0]
 8002c7a:	eb02 0386 	add.w	r3, r2, r6, lsl #2
 8002c7e:	1d00      	adds	r0, r0, #4
 8002c80:	42a8      	cmp	r0, r5
 8002c82:	ed93 1a00 	vldr	s2, [r3]
 8002c86:	ee01 0a20 	vmla.f32	s0, s2, s1
 8002c8a:	d20c      	bcs.n	8002ca6 <ai_dict8_dot_array_f32+0x2ce>
 8002c8c:	788e      	ldrb	r6, [r1, #2]
 8002c8e:	1cc9      	adds	r1, r1, #3
 8002c90:	eb02 0386 	add.w	r3, r2, r6, lsl #2
 8002c94:	edd0 0a00 	vldr	s1, [r0]
 8002c98:	ed93 1a00 	vldr	s2, [r3]
 8002c9c:	1d03      	adds	r3, r0, #4
 8002c9e:	42ab      	cmp	r3, r5
 8002ca0:	ee01 0a20 	vmla.f32	s0, s2, s1
 8002ca4:	d3da      	bcc.n	8002c5c <ai_dict8_dot_array_f32+0x284>
 8002ca6:	edd4 0a00 	vldr	s1, [r4]
 8002caa:	ee30 0a80 	vadd.f32	s0, s1, s0
 8002cae:	ed84 0a00 	vstr	s0, [r4]
 8002cb2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002cb4 <.text_6>:
 8002cb4:	00000000 	.word	0x00000000

08002cb8 <ai_dict4_dot_array_f32>:
 8002cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002cbc:	4680      	mov	r8, r0
 8002cbe:	461e      	mov	r6, r3
 8002cc0:	ed2d 8b02 	vpush	{d8}
 8002cc4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8002cc8:	460c      	mov	r4, r1
 8002cca:	4615      	mov	r5, r2
 8002ccc:	ed9f 0a53 	vldr	s0, [pc, #332]	; 8002e1c <.text_8>
 8002cd0:	ea4f 005c 	mov.w	r0, ip, lsr #1
 8002cd4:	0040      	lsls	r0, r0, #1
 8002cd6:	ea5f 03dc 	movs.w	r3, ip, lsr #3
 8002cda:	eb06 0e80 	add.w	lr, r6, r0, lsl #2
 8002cde:	d053      	beq.n	8002d88 <ai_dict4_dot_array_f32+0xd0>
 8002ce0:	ed96 8a00 	vldr	s16, [r6]
 8002ce4:	7820      	ldrb	r0, [r4, #0]
 8002ce6:	ed96 7a01 	vldr	s14, [r6, #4]
 8002cea:	7861      	ldrb	r1, [r4, #1]
 8002cec:	ed96 6a02 	vldr	s12, [r6, #8]
 8002cf0:	78a2      	ldrb	r2, [r4, #2]
 8002cf2:	ed96 5a03 	vldr	s10, [r6, #12]
 8002cf6:	78e7      	ldrb	r7, [r4, #3]
 8002cf8:	ed96 4a04 	vldr	s8, [r6, #16]
 8002cfc:	1d24      	adds	r4, r4, #4
 8002cfe:	ed96 3a05 	vldr	s6, [r6, #20]
 8002d02:	ed96 2a06 	vldr	s4, [r6, #24]
 8002d06:	f007 090f 	and.w	r9, r7, #15
 8002d0a:	093f      	lsrs	r7, r7, #4
 8002d0c:	eb05 0787 	add.w	r7, r5, r7, lsl #2
 8002d10:	ed96 1a07 	vldr	s2, [r6, #28]
 8002d14:	eb05 0a89 	add.w	sl, r5, r9, lsl #2
 8002d18:	f002 090f 	and.w	r9, r2, #15
 8002d1c:	0912      	lsrs	r2, r2, #4
 8002d1e:	3620      	adds	r6, #32
 8002d20:	eb05 0282 	add.w	r2, r5, r2, lsl #2
 8002d24:	edd7 1a00 	vldr	s3, [r7]
 8002d28:	f001 070f 	and.w	r7, r1, #15
 8002d2c:	0909      	lsrs	r1, r1, #4
 8002d2e:	edda 0a00 	vldr	s1, [sl]
 8002d32:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8002d36:	edd2 3a00 	vldr	s7, [r2]
 8002d3a:	f000 020f 	and.w	r2, r0, #15
 8002d3e:	0900      	lsrs	r0, r0, #4
 8002d40:	eb05 0a89 	add.w	sl, r5, r9, lsl #2
 8002d44:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8002d48:	1e5b      	subs	r3, r3, #1
 8002d4a:	eb05 0987 	add.w	r9, r5, r7, lsl #2
 8002d4e:	edd1 5a00 	vldr	s11, [r1]
 8002d52:	eb05 0782 	add.w	r7, r5, r2, lsl #2
 8002d56:	edda 2a00 	vldr	s5, [sl]
 8002d5a:	edd0 7a00 	vldr	s15, [r0]
 8002d5e:	ee07 0a88 	vmla.f32	s0, s15, s16
 8002d62:	edd7 6a00 	vldr	s13, [r7]
 8002d66:	ee06 0a87 	vmla.f32	s0, s13, s14
 8002d6a:	edd9 4a00 	vldr	s9, [r9]
 8002d6e:	ee05 0a86 	vmla.f32	s0, s11, s12
 8002d72:	ee04 0a85 	vmla.f32	s0, s9, s10
 8002d76:	ee03 0a84 	vmla.f32	s0, s7, s8
 8002d7a:	ee02 0a83 	vmla.f32	s0, s5, s6
 8002d7e:	ee01 0a82 	vmla.f32	s0, s3, s4
 8002d82:	ee00 0a81 	vmla.f32	s0, s1, s2
 8002d86:	d1ab      	bne.n	8002ce0 <ai_dict4_dot_array_f32+0x28>
 8002d88:	4576      	cmp	r6, lr
 8002d8a:	d22f      	bcs.n	8002dec <ai_dict4_dot_array_f32+0x134>
 8002d8c:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002d90:	edd6 1a00 	vldr	s3, [r6]
 8002d94:	edd6 0a01 	vldr	s1, [r6, #4]
 8002d98:	3608      	adds	r6, #8
 8002d9a:	f000 010f 	and.w	r1, r0, #15
 8002d9e:	0900      	lsrs	r0, r0, #4
 8002da0:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8002da4:	4576      	cmp	r6, lr
 8002da6:	eb05 0281 	add.w	r2, r5, r1, lsl #2
 8002daa:	ed90 2a00 	vldr	s4, [r0]
 8002dae:	ee02 0a21 	vmla.f32	s0, s4, s3
 8002db2:	ed92 1a00 	vldr	s2, [r2]
 8002db6:	ee01 0a20 	vmla.f32	s0, s2, s1
 8002dba:	d217      	bcs.n	8002dec <ai_dict4_dot_array_f32+0x134>
 8002dbc:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002dc0:	ed96 1a00 	vldr	s2, [r6]
 8002dc4:	ed96 2a01 	vldr	s4, [r6, #4]
 8002dc8:	3608      	adds	r6, #8
 8002dca:	f000 010f 	and.w	r1, r0, #15
 8002dce:	0900      	lsrs	r0, r0, #4
 8002dd0:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8002dd4:	4576      	cmp	r6, lr
 8002dd6:	eb05 0281 	add.w	r2, r5, r1, lsl #2
 8002dda:	edd0 1a00 	vldr	s3, [r0]
 8002dde:	ee01 0a81 	vmla.f32	s0, s3, s2
 8002de2:	edd2 0a00 	vldr	s1, [r2]
 8002de6:	ee00 0a82 	vmla.f32	s0, s1, s4
 8002dea:	d3cf      	bcc.n	8002d8c <ai_dict4_dot_array_f32+0xd4>
 8002dec:	ea5f 70cc 	movs.w	r0, ip, lsl #31
 8002df0:	d509      	bpl.n	8002e06 <ai_dict4_dot_array_f32+0x14e>
 8002df2:	7821      	ldrb	r1, [r4, #0]
 8002df4:	ed96 1a00 	vldr	s2, [r6]
 8002df8:	0909      	lsrs	r1, r1, #4
 8002dfa:	eb05 0281 	add.w	r2, r5, r1, lsl #2
 8002dfe:	edd2 0a00 	vldr	s1, [r2]
 8002e02:	ee00 0a81 	vmla.f32	s0, s1, s2
 8002e06:	edd8 1a00 	vldr	s3, [r8]
 8002e0a:	ee31 0a80 	vadd.f32	s0, s3, s0
 8002e0e:	ed88 0a00 	vstr	s0, [r8]
 8002e12:	ecbd 8b02 	vpop	{d8}
 8002e16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08002e1c <.text_8>:
 8002e1c:	00000000 	.word	0x00000000

08002e20 <ai_dict_decompress_f32>:
 8002e20:	b4f0      	push	{r4, r5, r6, r7}
 8002e22:	4604      	mov	r4, r0
 8002e24:	2b04      	cmp	r3, #4
 8002e26:	9805      	ldr	r0, [sp, #20]
 8002e28:	9e04      	ldr	r6, [sp, #16]
 8002e2a:	eb04 0580 	add.w	r5, r4, r0, lsl #2
 8002e2e:	d003      	beq.n	8002e38 <ai_dict_decompress_f32+0x18>
 8002e30:	2b08      	cmp	r3, #8
 8002e32:	d03f      	beq.n	8002eb4 <ai_dict_decompress_f32+0x94>
 8002e34:	bcf0      	pop	{r4, r5, r6, r7}
 8002e36:	4770      	bx	lr
 8002e38:	42ac      	cmp	r4, r5
 8002e3a:	d25a      	bcs.n	8002ef2 <ai_dict_decompress_f32+0xd2>
 8002e3c:	0870      	lsrs	r0, r6, #1
 8002e3e:	d02f      	beq.n	8002ea0 <ai_dict_decompress_f32+0x80>
 8002e40:	07c3      	lsls	r3, r0, #31
 8002e42:	d50d      	bpl.n	8002e60 <ai_dict_decompress_f32+0x40>
 8002e44:	780f      	ldrb	r7, [r1, #0]
 8002e46:	093f      	lsrs	r7, r7, #4
 8002e48:	f852 c027 	ldr.w	ip, [r2, r7, lsl #2]
 8002e4c:	f8c4 c000 	str.w	ip, [r4]
 8002e50:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002e54:	f003 030f 	and.w	r3, r3, #15
 8002e58:	f852 7023 	ldr.w	r7, [r2, r3, lsl #2]
 8002e5c:	6067      	str	r7, [r4, #4]
 8002e5e:	3408      	adds	r4, #8
 8002e60:	0840      	lsrs	r0, r0, #1
 8002e62:	d01d      	beq.n	8002ea0 <ai_dict_decompress_f32+0x80>
 8002e64:	780b      	ldrb	r3, [r1, #0]
 8002e66:	091b      	lsrs	r3, r3, #4
 8002e68:	f852 7023 	ldr.w	r7, [r2, r3, lsl #2]
 8002e6c:	6027      	str	r7, [r4, #0]
 8002e6e:	f811 cb01 	ldrb.w	ip, [r1], #1
 8002e72:	f00c 0c0f 	and.w	ip, ip, #15
 8002e76:	f852 302c 	ldr.w	r3, [r2, ip, lsl #2]
 8002e7a:	6063      	str	r3, [r4, #4]
 8002e7c:	f104 0308 	add.w	r3, r4, #8
 8002e80:	780c      	ldrb	r4, [r1, #0]
 8002e82:	0924      	lsrs	r4, r4, #4
 8002e84:	1e40      	subs	r0, r0, #1
 8002e86:	f852 7024 	ldr.w	r7, [r2, r4, lsl #2]
 8002e8a:	601f      	str	r7, [r3, #0]
 8002e8c:	f811 cb01 	ldrb.w	ip, [r1], #1
 8002e90:	f00c 0c0f 	and.w	ip, ip, #15
 8002e94:	f852 402c 	ldr.w	r4, [r2, ip, lsl #2]
 8002e98:	605c      	str	r4, [r3, #4]
 8002e9a:	f103 0408 	add.w	r4, r3, #8
 8002e9e:	d1e1      	bne.n	8002e64 <ai_dict_decompress_f32+0x44>
 8002ea0:	07f0      	lsls	r0, r6, #31
 8002ea2:	d5c9      	bpl.n	8002e38 <ai_dict_decompress_f32+0x18>
 8002ea4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002ea8:	091b      	lsrs	r3, r3, #4
 8002eaa:	f852 7023 	ldr.w	r7, [r2, r3, lsl #2]
 8002eae:	f844 7b04 	str.w	r7, [r4], #4
 8002eb2:	e7c1      	b.n	8002e38 <ai_dict_decompress_f32+0x18>
 8002eb4:	42ac      	cmp	r4, r5
 8002eb6:	d21c      	bcs.n	8002ef2 <ai_dict_decompress_f32+0xd2>
 8002eb8:	7808      	ldrb	r0, [r1, #0]
 8002eba:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8002ebe:	6020      	str	r0, [r4, #0]
 8002ec0:	1d20      	adds	r0, r4, #4
 8002ec2:	42a8      	cmp	r0, r5
 8002ec4:	bf3f      	itttt	cc
 8002ec6:	784c      	ldrbcc	r4, [r1, #1]
 8002ec8:	f852 3024 	ldrcc.w	r3, [r2, r4, lsl #2]
 8002ecc:	f840 3b04 	strcc.w	r3, [r0], #4
 8002ed0:	42a8      	cmpcc	r0, r5
 8002ed2:	d20e      	bcs.n	8002ef2 <ai_dict_decompress_f32+0xd2>
 8002ed4:	788b      	ldrb	r3, [r1, #2]
 8002ed6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002eda:	f840 3b04 	str.w	r3, [r0], #4
 8002ede:	42a8      	cmp	r0, r5
 8002ee0:	d207      	bcs.n	8002ef2 <ai_dict_decompress_f32+0xd2>
 8002ee2:	78cc      	ldrb	r4, [r1, #3]
 8002ee4:	1d09      	adds	r1, r1, #4
 8002ee6:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
 8002eea:	1d04      	adds	r4, r0, #4
 8002eec:	42ac      	cmp	r4, r5
 8002eee:	6003      	str	r3, [r0, #0]
 8002ef0:	d3e2      	bcc.n	8002eb8 <ai_dict_decompress_f32+0x98>
 8002ef2:	bcf0      	pop	{r4, r5, r6, r7}
 8002ef4:	4770      	bx	lr

08002ef6 <forward_conv2d>:
 8002ef6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002efa:	b0a9      	sub	sp, #164	; 0xa4
 8002efc:	4605      	mov	r5, r0
 8002efe:	696b      	ldr	r3, [r5, #20]
 8002f00:	8819      	ldrh	r1, [r3, #0]
 8002f02:	2900      	cmp	r1, #0
 8002f04:	bf1a      	itte	ne
 8002f06:	6858      	ldrne	r0, [r3, #4]
 8002f08:	1d00      	addne	r0, r0, #4
 8002f0a:	2004      	moveq	r0, #4
 8002f0c:	6800      	ldr	r0, [r0, #0]
 8002f0e:	2800      	cmp	r0, #0
 8002f10:	bf14      	ite	ne
 8002f12:	6802      	ldrne	r2, [r0, #0]
 8002f14:	2200      	moveq	r2, #0
 8002f16:	2901      	cmp	r1, #1
 8002f18:	bfc6      	itte	gt
 8002f1a:	6858      	ldrgt	r0, [r3, #4]
 8002f1c:	3010      	addgt	r0, #16
 8002f1e:	2004      	movle	r0, #4
 8002f20:	6800      	ldr	r0, [r0, #0]
 8002f22:	2800      	cmp	r0, #0
 8002f24:	bf14      	ite	ne
 8002f26:	f8d0 a000 	ldrne.w	sl, [r0]
 8002f2a:	f04f 0a00 	moveq.w	sl, #0
 8002f2e:	2902      	cmp	r1, #2
 8002f30:	bfc6      	itte	gt
 8002f32:	6858      	ldrgt	r0, [r3, #4]
 8002f34:	f100 091c 	addgt.w	r9, r0, #28
 8002f38:	f04f 0904 	movle.w	r9, #4
 8002f3c:	f8d9 0000 	ldr.w	r0, [r9]
 8002f40:	2800      	cmp	r0, #0
 8002f42:	bf14      	ite	ne
 8002f44:	6806      	ldrne	r6, [r0, #0]
 8002f46:	2600      	moveq	r6, #0
 8002f48:	2902      	cmp	r1, #2
 8002f4a:	dd0a      	ble.n	8002f62 <forward_conv2d+0x6c>
 8002f4c:	685b      	ldr	r3, [r3, #4]
 8002f4e:	f113 0118 	adds.w	r1, r3, #24
 8002f52:	d006      	beq.n	8002f62 <forward_conv2d+0x6c>
 8002f54:	8b1f      	ldrh	r7, [r3, #24]
 8002f56:	2f01      	cmp	r7, #1
 8002f58:	dd03      	ble.n	8002f62 <forward_conv2d+0x6c>
 8002f5a:	69d9      	ldr	r1, [r3, #28]
 8002f5c:	b109      	cbz	r1, 8002f62 <forward_conv2d+0x6c>
 8002f5e:	6849      	ldr	r1, [r1, #4]
 8002f60:	e000      	b.n	8002f64 <forward_conv2d+0x6e>
 8002f62:	2100      	movs	r1, #0
 8002f64:	b100      	cbz	r0, 8002f68 <forward_conv2d+0x72>
 8002f66:	6880      	ldr	r0, [r0, #8]
 8002f68:	68d7      	ldr	r7, [r2, #12]
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	931b      	str	r3, [sp, #108]	; 0x6c
 8002f6e:	f8da c00c 	ldr.w	ip, [sl, #12]
 8002f72:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8002f76:	f8cd 9010 	str.w	r9, [sp, #16]
 8002f7a:	f8dc 900c 	ldr.w	r9, [ip, #12]
 8002f7e:	f8dc e008 	ldr.w	lr, [ip, #8]
 8002f82:	f8cd e050 	str.w	lr, [sp, #80]	; 0x50
 8002f86:	f8d7 800c 	ldr.w	r8, [r7, #12]
 8002f8a:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 8002f8e:	68bf      	ldr	r7, [r7, #8]
 8002f90:	9720      	str	r7, [sp, #128]	; 0x80
 8002f92:	f8d5 e024 	ldr.w	lr, [r5, #36]	; 0x24
 8002f96:	f8ad e040 	strh.w	lr, [sp, #64]	; 0x40
 8002f9a:	8d2f      	ldrh	r7, [r5, #40]	; 0x28
 8002f9c:	971f      	str	r7, [sp, #124]	; 0x7c
 8002f9e:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8002fa0:	f8d5 e02c 	ldr.w	lr, [r5, #44]	; 0x2c
 8002fa4:	681f      	ldr	r7, [r3, #0]
 8002fa6:	f8b3 8004 	ldrh.w	r8, [r3, #4]
 8002faa:	f8cd e064 	str.w	lr, [sp, #100]	; 0x64
 8002fae:	6b2c      	ldr	r4, [r5, #48]	; 0x30
 8002fb0:	9418      	str	r4, [sp, #96]	; 0x60
 8002fb2:	68f3      	ldr	r3, [r6, #12]
 8002fb4:	f8d3 e008 	ldr.w	lr, [r3, #8]
 8002fb8:	f8cd e04c 	str.w	lr, [sp, #76]	; 0x4c
 8002fbc:	685c      	ldr	r4, [r3, #4]
 8002fbe:	9412      	str	r4, [sp, #72]	; 0x48
 8002fc0:	f8d5 e018 	ldr.w	lr, [r5, #24]
 8002fc4:	f8cd e078 	str.w	lr, [sp, #120]	; 0x78
 8002fc8:	6994      	ldr	r4, [r2, #24]
 8002fca:	68a3      	ldr	r3, [r4, #8]
 8002fcc:	931d      	str	r3, [sp, #116]	; 0x74
 8002fce:	f8d6 c018 	ldr.w	ip, [r6, #24]
 8002fd2:	f8dc 4008 	ldr.w	r4, [ip, #8]
 8002fd6:	b119      	cbz	r1, 8002fe0 <forward_conv2d+0xea>
 8002fd8:	698a      	ldr	r2, [r1, #24]
 8002fda:	6893      	ldr	r3, [r2, #8]
 8002fdc:	9317      	str	r3, [sp, #92]	; 0x5c
 8002fde:	e003      	b.n	8002fe8 <forward_conv2d+0xf2>
 8002fe0:	f04f 0e00 	mov.w	lr, #0
 8002fe4:	f8cd e05c 	str.w	lr, [sp, #92]	; 0x5c
 8002fe8:	f8da 1018 	ldr.w	r1, [sl, #24]
 8002fec:	688a      	ldr	r2, [r1, #8]
 8002fee:	9203      	str	r2, [sp, #12]
 8002ff0:	69e9      	ldr	r1, [r5, #28]
 8002ff2:	b118      	cbz	r0, 8002ffc <forward_conv2d+0x106>
 8002ff4:	6981      	ldr	r1, [r0, #24]
 8002ff6:	688a      	ldr	r2, [r1, #8]
 8002ff8:	9215      	str	r2, [sp, #84]	; 0x54
 8002ffa:	e005      	b.n	8003008 <forward_conv2d+0x112>
 8002ffc:	b111      	cbz	r1, 8003004 <forward_conv2d+0x10e>
 8002ffe:	688a      	ldr	r2, [r1, #8]
 8003000:	9215      	str	r2, [sp, #84]	; 0x54
 8003002:	e001      	b.n	8003008 <forward_conv2d+0x112>
 8003004:	2300      	movs	r3, #0
 8003006:	9315      	str	r3, [sp, #84]	; 0x54
 8003008:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800300a:	9202      	str	r2, [sp, #8]
 800300c:	b920      	cbnz	r0, 8003018 <forward_conv2d+0x122>
 800300e:	2100      	movs	r1, #0
 8003010:	2201      	movs	r2, #1
 8003012:	9124      	str	r1, [sp, #144]	; 0x90
 8003014:	9223      	str	r2, [sp, #140]	; 0x8c
 8003016:	e008      	b.n	800302a <forward_conv2d+0x134>
 8003018:	6941      	ldr	r1, [r0, #20]
 800301a:	688a      	ldr	r2, [r1, #8]
 800301c:	9224      	str	r2, [sp, #144]	; 0x90
 800301e:	6980      	ldr	r0, [r0, #24]
 8003020:	6841      	ldr	r1, [r0, #4]
 8003022:	6800      	ldr	r0, [r0, #0]
 8003024:	f003 fc94 	bl	8006950 <ai_array_get_byte_size>
 8003028:	9023      	str	r0, [sp, #140]	; 0x8c
 800302a:	6a28      	ldr	r0, [r5, #32]
 800302c:	2800      	cmp	r0, #0
 800302e:	bf12      	itee	ne
 8003030:	9022      	strne	r0, [sp, #136]	; 0x88
 8003032:	f8df 1d7c 	ldreq.w	r1, [pc, #3452]	; 8003db0 <.text_16>
 8003036:	9122      	streq	r1, [sp, #136]	; 0x88
 8003038:	a818      	add	r0, sp, #96	; 0x60
 800303a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800303c:	8803      	ldrh	r3, [r0, #0]
 800303e:	1e51      	subs	r1, r2, #1
 8003040:	1e5b      	subs	r3, r3, #1
 8003042:	fb03 2201 	mla	r2, r3, r1, r2
 8003046:	9912      	ldr	r1, [sp, #72]	; 0x48
 8003048:	9216      	str	r2, [sp, #88]	; 0x58
 800304a:	aa19      	add	r2, sp, #100	; 0x64
 800304c:	8813      	ldrh	r3, [r2, #0]
 800304e:	2200      	movs	r2, #0
 8003050:	1e48      	subs	r0, r1, #1
 8003052:	1e5b      	subs	r3, r3, #1
 8003054:	fb03 1100 	mla	r1, r3, r0, r1
 8003058:	2000      	movs	r0, #0
 800305a:	911c      	str	r1, [sp, #112]	; 0x70
 800305c:	69b6      	ldr	r6, [r6, #24]
 800305e:	4683      	mov	fp, r0
 8003060:	6831      	ldr	r1, [r6, #0]
 8003062:	11cb      	asrs	r3, r1, #7
 8003064:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8003068:	ea4f 5c61 	mov.w	ip, r1, asr #21
 800306c:	1449      	asrs	r1, r1, #17
 800306e:	f001 010f 	and.w	r1, r1, #15
 8003072:	f00c 0c03 	and.w	ip, ip, #3
 8003076:	2904      	cmp	r1, #4
 8003078:	fa23 f30c 	lsr.w	r3, r3, ip
 800307c:	bf14      	ite	ne
 800307e:	2908      	cmpne	r1, #8
 8003080:	68f2      	ldreq	r2, [r6, #12]
 8003082:	b1da      	cbz	r2, 80030bc <forward_conv2d+0x1c6>
 8003084:	6969      	ldr	r1, [r5, #20]
 8003086:	880d      	ldrh	r5, [r1, #0]
 8003088:	2d04      	cmp	r5, #4
 800308a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800308c:	bfa6      	itte	ge
 800308e:	6849      	ldrge	r1, [r1, #4]
 8003090:	3128      	addge	r1, #40	; 0x28
 8003092:	2104      	movlt	r1, #4
 8003094:	6809      	ldr	r1, [r1, #0]
 8003096:	2900      	cmp	r1, #0
 8003098:	bf1f      	itttt	ne
 800309a:	6808      	ldrne	r0, [r1, #0]
 800309c:	2800      	cmpne	r0, #0
 800309e:	6981      	ldrne	r1, [r0, #24]
 80030a0:	f8d1 b008 	ldrne.w	fp, [r1, #8]
 80030a4:	6980      	ldr	r0, [r0, #24]
 80030a6:	6841      	ldr	r1, [r0, #4]
 80030a8:	9500      	str	r5, [sp, #0]
 80030aa:	9101      	str	r1, [sp, #4]
 80030ac:	68b1      	ldr	r1, [r6, #8]
 80030ae:	4658      	mov	r0, fp
 80030b0:	f7ff feb6 	bl	8002e20 <ai_dict_decompress_f32>
 80030b4:	f1bb 0f00 	cmp.w	fp, #0
 80030b8:	bf18      	it	ne
 80030ba:	465c      	movne	r4, fp
 80030bc:	b2bf      	uxth	r7, r7
 80030be:	427f      	negs	r7, r7
 80030c0:	f1b9 0f00 	cmp.w	r9, #0
 80030c4:	d06f      	beq.n	80031a6 <forward_conv2d+0x2b0>
 80030c6:	464a      	mov	r2, r9
 80030c8:	f1c8 0800 	rsb	r8, r8, #0
 80030cc:	f8cd 8098 	str.w	r8, [sp, #152]	; 0x98
 80030d0:	f8dd 9010 	ldr.w	r9, [sp, #16]
 80030d4:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80030d8:	9427      	str	r4, [sp, #156]	; 0x9c
 80030da:	9711      	str	r7, [sp, #68]	; 0x44
 80030dc:	9e02      	ldr	r6, [sp, #8]
 80030de:	9221      	str	r2, [sp, #132]	; 0x84
 80030e0:	9826      	ldr	r0, [sp, #152]	; 0x98
 80030e2:	991a      	ldr	r1, [sp, #104]	; 0x68
 80030e4:	9025      	str	r0, [sp, #148]	; 0x94
 80030e6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80030e8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80030ea:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80030ec:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 80030ee:	f8cd 9008 	str.w	r9, [sp, #8]
 80030f2:	4240      	negs	r0, r0
 80030f4:	950d      	str	r5, [sp, #52]	; 0x34
 80030f6:	bfd8      	it	le
 80030f8:	2000      	movle	r0, #0
 80030fa:	1a89      	subs	r1, r1, r2
 80030fc:	4299      	cmp	r1, r3
 80030fe:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8003100:	9009      	str	r0, [sp, #36]	; 0x24
 8003102:	bf28      	it	cs
 8003104:	4619      	movcs	r1, r3
 8003106:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003108:	910a      	str	r1, [sp, #40]	; 0x28
 800310a:	b212      	sxth	r2, r2
 800310c:	981e      	ldr	r0, [sp, #120]	; 0x78
 800310e:	920f      	str	r2, [sp, #60]	; 0x3c
 8003110:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8003112:	920c      	str	r2, [sp, #48]	; 0x30
 8003114:	f8bd 1040 	ldrh.w	r1, [sp, #64]	; 0x40
 8003118:	b21b      	sxth	r3, r3
 800311a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800311c:	930e      	str	r3, [sp, #56]	; 0x38
 800311e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8003120:	9008      	str	r0, [sp, #32]
 8003122:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003124:	9107      	str	r1, [sp, #28]
 8003126:	9914      	ldr	r1, [sp, #80]	; 0x50
 8003128:	9206      	str	r2, [sp, #24]
 800312a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800312c:	930b      	str	r3, [sp, #44]	; 0x2c
 800312e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003130:	9005      	str	r0, [sp, #20]
 8003132:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003134:	9104      	str	r1, [sp, #16]
 8003136:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8003138:	9203      	str	r2, [sp, #12]
 800313a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800313c:	9001      	str	r0, [sp, #4]
 800313e:	2000      	movs	r0, #0
 8003140:	9100      	str	r1, [sp, #0]
 8003142:	4659      	mov	r1, fp
 8003144:	f7ff f956 	bl	80023f4 <ai_conv2d_stripe_f32>
 8003148:	9814      	ldr	r0, [sp, #80]	; 0x50
 800314a:	b300      	cbz	r0, 800318e <forward_conv2d+0x298>
 800314c:	f8cd a000 	str.w	sl, [sp]
 8003150:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8003152:	9f24      	ldr	r7, [sp, #144]	; 0x90
 8003154:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
 8003158:	9c22      	ldr	r4, [sp, #136]	; 0x88
 800315a:	4682      	mov	sl, r0
 800315c:	9800      	ldr	r0, [sp, #0]
 800315e:	462b      	mov	r3, r5
 8003160:	464a      	mov	r2, r9
 8003162:	443d      	add	r5, r7
 8003164:	6981      	ldr	r1, [r0, #24]
 8003166:	f8c1 b008 	str.w	fp, [r1, #8]
 800316a:	eb0b 0b89 	add.w	fp, fp, r9, lsl #2
 800316e:	4608      	mov	r0, r1
 8003170:	47a0      	blx	r4
 8003172:	1ba9      	subs	r1, r5, r6
 8003174:	4541      	cmp	r1, r8
 8003176:	bfa8      	it	ge
 8003178:	4635      	movge	r5, r6
 800317a:	f1ba 0a01 	subs.w	sl, sl, #1
 800317e:	d1ed      	bne.n	800315c <forward_conv2d+0x266>
 8003180:	f8dd a000 	ldr.w	sl, [sp]
 8003184:	9515      	str	r5, [sp, #84]	; 0x54
 8003186:	9724      	str	r7, [sp, #144]	; 0x90
 8003188:	f8cd 808c 	str.w	r8, [sp, #140]	; 0x8c
 800318c:	9422      	str	r4, [sp, #136]	; 0x88
 800318e:	f8da 0018 	ldr.w	r0, [sl, #24]
 8003192:	68c1      	ldr	r1, [r0, #12]
 8003194:	6081      	str	r1, [r0, #8]
 8003196:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8003198:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800319a:	9921      	ldr	r1, [sp, #132]	; 0x84
 800319c:	189a      	adds	r2, r3, r2
 800319e:	9211      	str	r2, [sp, #68]	; 0x44
 80031a0:	1e49      	subs	r1, r1, #1
 80031a2:	9121      	str	r1, [sp, #132]	; 0x84
 80031a4:	d19c      	bne.n	80030e0 <forward_conv2d+0x1ea>
 80031a6:	b029      	add	sp, #164	; 0xa4
 80031a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080031ac <forward_conv2d_nl_pool>:
 80031ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031b0:	b0b9      	sub	sp, #228	; 0xe4
 80031b2:	4604      	mov	r4, r0
 80031b4:	6963      	ldr	r3, [r4, #20]
 80031b6:	8819      	ldrh	r1, [r3, #0]
 80031b8:	2900      	cmp	r1, #0
 80031ba:	bf1a      	itte	ne
 80031bc:	6858      	ldrne	r0, [r3, #4]
 80031be:	1d00      	addne	r0, r0, #4
 80031c0:	2004      	moveq	r0, #4
 80031c2:	6800      	ldr	r0, [r0, #0]
 80031c4:	2800      	cmp	r0, #0
 80031c6:	bf14      	ite	ne
 80031c8:	6802      	ldrne	r2, [r0, #0]
 80031ca:	2200      	moveq	r2, #0
 80031cc:	2901      	cmp	r1, #1
 80031ce:	bfc6      	itte	gt
 80031d0:	6858      	ldrgt	r0, [r3, #4]
 80031d2:	3010      	addgt	r0, #16
 80031d4:	2004      	movle	r0, #4
 80031d6:	6800      	ldr	r0, [r0, #0]
 80031d8:	2800      	cmp	r0, #0
 80031da:	bf14      	ite	ne
 80031dc:	f8d0 a000 	ldrne.w	sl, [r0]
 80031e0:	f04f 0a00 	moveq.w	sl, #0
 80031e4:	2902      	cmp	r1, #2
 80031e6:	bfc6      	itte	gt
 80031e8:	6858      	ldrgt	r0, [r3, #4]
 80031ea:	f100 071c 	addgt.w	r7, r0, #28
 80031ee:	2704      	movle	r7, #4
 80031f0:	6838      	ldr	r0, [r7, #0]
 80031f2:	2800      	cmp	r0, #0
 80031f4:	bf14      	ite	ne
 80031f6:	6806      	ldrne	r6, [r0, #0]
 80031f8:	2600      	moveq	r6, #0
 80031fa:	2902      	cmp	r1, #2
 80031fc:	dd0c      	ble.n	8003218 <forward_conv2d_nl_pool+0x6c>
 80031fe:	685b      	ldr	r3, [r3, #4]
 8003200:	f113 0118 	adds.w	r1, r3, #24
 8003204:	d008      	beq.n	8003218 <forward_conv2d_nl_pool+0x6c>
 8003206:	f8b3 c018 	ldrh.w	ip, [r3, #24]
 800320a:	f1bc 0f01 	cmp.w	ip, #1
 800320e:	dd03      	ble.n	8003218 <forward_conv2d_nl_pool+0x6c>
 8003210:	69d9      	ldr	r1, [r3, #28]
 8003212:	b109      	cbz	r1, 8003218 <forward_conv2d_nl_pool+0x6c>
 8003214:	6849      	ldr	r1, [r1, #4]
 8003216:	e000      	b.n	800321a <forward_conv2d_nl_pool+0x6e>
 8003218:	2100      	movs	r1, #0
 800321a:	b100      	cbz	r0, 800321e <forward_conv2d_nl_pool+0x72>
 800321c:	6880      	ldr	r0, [r0, #8]
 800321e:	68d7      	ldr	r7, [r2, #12]
 8003220:	f8d7 c004 	ldr.w	ip, [r7, #4]
 8003224:	f8cd c08c 	str.w	ip, [sp, #140]	; 0x8c
 8003228:	f8da e00c 	ldr.w	lr, [sl, #12]
 800322c:	f8de 8004 	ldr.w	r8, [lr, #4]
 8003230:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8003234:	f8de 900c 	ldr.w	r9, [lr, #12]
 8003238:	f8cd 9088 	str.w	r9, [sp, #136]	; 0x88
 800323c:	f8de e008 	ldr.w	lr, [lr, #8]
 8003240:	f8cd e084 	str.w	lr, [sp, #132]	; 0x84
 8003244:	f8d7 800c 	ldr.w	r8, [r7, #12]
 8003248:	f8cd 806c 	str.w	r8, [sp, #108]	; 0x6c
 800324c:	68bf      	ldr	r7, [r7, #8]
 800324e:	972d      	str	r7, [sp, #180]	; 0xb4
 8003250:	f8d4 e024 	ldr.w	lr, [r4, #36]	; 0x24
 8003254:	f8ad e04c 	strh.w	lr, [sp, #76]	; 0x4c
 8003258:	8d27      	ldrh	r7, [r4, #40]	; 0x28
 800325a:	9720      	str	r7, [sp, #128]	; 0x80
 800325c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800325e:	f8d4 e018 	ldr.w	lr, [r4, #24]
 8003262:	881f      	ldrh	r7, [r3, #0]
 8003264:	f8b3 8004 	ldrh.w	r8, [r3, #4]
 8003268:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800326c:	f8cd e0b0 	str.w	lr, [sp, #176]	; 0xb0
 8003270:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 8003272:	951f      	str	r5, [sp, #124]	; 0x7c
 8003274:	f8d4 e030 	ldr.w	lr, [r4, #48]	; 0x30
 8003278:	f8cd e078 	str.w	lr, [sp, #120]	; 0x78
 800327c:	68f3      	ldr	r3, [r6, #12]
 800327e:	685d      	ldr	r5, [r3, #4]
 8003280:	951a      	str	r5, [sp, #104]	; 0x68
 8003282:	f8d3 e008 	ldr.w	lr, [r3, #8]
 8003286:	f8cd e064 	str.w	lr, [sp, #100]	; 0x64
 800328a:	6be5      	ldr	r5, [r4, #60]	; 0x3c
 800328c:	952b      	str	r5, [sp, #172]	; 0xac
 800328e:	f8d4 e044 	ldr.w	lr, [r4, #68]	; 0x44
 8003292:	f8cd e0a8 	str.w	lr, [sp, #168]	; 0xa8
 8003296:	6ca5      	ldr	r5, [r4, #72]	; 0x48
 8003298:	9511      	str	r5, [sp, #68]	; 0x44
 800329a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800329c:	681d      	ldr	r5, [r3, #0]
 800329e:	685b      	ldr	r3, [r3, #4]
 80032a0:	9329      	str	r3, [sp, #164]	; 0xa4
 80032a2:	f8d2 e018 	ldr.w	lr, [r2, #24]
 80032a6:	f8de b008 	ldr.w	fp, [lr, #8]
 80032aa:	f8cd b0a0 	str.w	fp, [sp, #160]	; 0xa0
 80032ae:	69b3      	ldr	r3, [r6, #24]
 80032b0:	f8d3 b008 	ldr.w	fp, [r3, #8]
 80032b4:	b119      	cbz	r1, 80032be <forward_conv2d_nl_pool+0x112>
 80032b6:	698a      	ldr	r2, [r1, #24]
 80032b8:	6893      	ldr	r3, [r2, #8]
 80032ba:	931d      	str	r3, [sp, #116]	; 0x74
 80032bc:	e003      	b.n	80032c6 <forward_conv2d_nl_pool+0x11a>
 80032be:	f04f 0e00 	mov.w	lr, #0
 80032c2:	f8cd e074 	str.w	lr, [sp, #116]	; 0x74
 80032c6:	69e1      	ldr	r1, [r4, #28]
 80032c8:	b118      	cbz	r0, 80032d2 <forward_conv2d_nl_pool+0x126>
 80032ca:	6981      	ldr	r1, [r0, #24]
 80032cc:	688a      	ldr	r2, [r1, #8]
 80032ce:	921c      	str	r2, [sp, #112]	; 0x70
 80032d0:	e005      	b.n	80032de <forward_conv2d_nl_pool+0x132>
 80032d2:	b111      	cbz	r1, 80032da <forward_conv2d_nl_pool+0x12e>
 80032d4:	688a      	ldr	r2, [r1, #8]
 80032d6:	921c      	str	r2, [sp, #112]	; 0x70
 80032d8:	e001      	b.n	80032de <forward_conv2d_nl_pool+0x132>
 80032da:	2300      	movs	r3, #0
 80032dc:	931c      	str	r3, [sp, #112]	; 0x70
 80032de:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80032e0:	9202      	str	r2, [sp, #8]
 80032e2:	b920      	cbnz	r0, 80032ee <forward_conv2d_nl_pool+0x142>
 80032e4:	2100      	movs	r1, #0
 80032e6:	2201      	movs	r2, #1
 80032e8:	9116      	str	r1, [sp, #88]	; 0x58
 80032ea:	9215      	str	r2, [sp, #84]	; 0x54
 80032ec:	e008      	b.n	8003300 <forward_conv2d_nl_pool+0x154>
 80032ee:	6941      	ldr	r1, [r0, #20]
 80032f0:	688a      	ldr	r2, [r1, #8]
 80032f2:	9216      	str	r2, [sp, #88]	; 0x58
 80032f4:	6980      	ldr	r0, [r0, #24]
 80032f6:	6841      	ldr	r1, [r0, #4]
 80032f8:	6800      	ldr	r0, [r0, #0]
 80032fa:	f003 fb29 	bl	8006950 <ai_array_get_byte_size>
 80032fe:	9015      	str	r0, [sp, #84]	; 0x54
 8003300:	6a20      	ldr	r0, [r4, #32]
 8003302:	2800      	cmp	r0, #0
 8003304:	bf12      	itee	ne
 8003306:	9030      	strne	r0, [sp, #192]	; 0xc0
 8003308:	f8df 1aa4 	ldreq.w	r1, [pc, #2724]	; 8003db0 <.text_16>
 800330c:	9130      	streq	r1, [sp, #192]	; 0xc0
 800330e:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8003310:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003312:	9227      	str	r2, [sp, #156]	; 0x9c
 8003314:	aa1e      	add	r2, sp, #120	; 0x78
 8003316:	8813      	ldrh	r3, [r2, #0]
 8003318:	1e41      	subs	r1, r0, #1
 800331a:	1e5b      	subs	r3, r3, #1
 800331c:	fb03 0001 	mla	r0, r3, r1, r0
 8003320:	ab1f      	add	r3, sp, #124	; 0x7c
 8003322:	f8b3 e000 	ldrh.w	lr, [r3]
 8003326:	9018      	str	r0, [sp, #96]	; 0x60
 8003328:	991a      	ldr	r1, [sp, #104]	; 0x68
 800332a:	9818      	ldr	r0, [sp, #96]	; 0x60
 800332c:	1e4a      	subs	r2, r1, #1
 800332e:	f1ae 0e01 	sub.w	lr, lr, #1
 8003332:	fb0e 1102 	mla	r1, lr, r2, r1
 8003336:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8003338:	9126      	str	r1, [sp, #152]	; 0x98
 800333a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800333c:	9112      	str	r1, [sp, #72]	; 0x48
 800333e:	9920      	ldr	r1, [sp, #128]	; 0x80
 8003340:	1a12      	subs	r2, r2, r0
 8003342:	18ba      	adds	r2, r7, r2
 8003344:	fa12 f089 	uxtah	r0, r2, r9
 8003348:	2200      	movs	r2, #0
 800334a:	fbb0 f1f1 	udiv	r1, r0, r1
 800334e:	1c49      	adds	r1, r1, #1
 8003350:	2000      	movs	r0, #0
 8003352:	9114      	str	r1, [sp, #80]	; 0x50
 8003354:	69b6      	ldr	r6, [r6, #24]
 8003356:	4681      	mov	r9, r0
 8003358:	6831      	ldr	r1, [r6, #0]
 800335a:	11cb      	asrs	r3, r1, #7
 800335c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8003360:	ea4f 5c61 	mov.w	ip, r1, asr #21
 8003364:	1449      	asrs	r1, r1, #17
 8003366:	f001 010f 	and.w	r1, r1, #15
 800336a:	f00c 0c03 	and.w	ip, ip, #3
 800336e:	2904      	cmp	r1, #4
 8003370:	fa23 f30c 	lsr.w	r3, r3, ip
 8003374:	bf14      	ite	ne
 8003376:	2908      	cmpne	r1, #8
 8003378:	68f2      	ldreq	r2, [r6, #12]
 800337a:	b302      	cbz	r2, 80033be <forward_conv2d_nl_pool+0x212>
 800337c:	6961      	ldr	r1, [r4, #20]
 800337e:	f8b1 c000 	ldrh.w	ip, [r1]
 8003382:	f1bc 0f04 	cmp.w	ip, #4
 8003386:	f8dd c08c 	ldr.w	ip, [sp, #140]	; 0x8c
 800338a:	bfa6      	itte	ge
 800338c:	6849      	ldrge	r1, [r1, #4]
 800338e:	3128      	addge	r1, #40	; 0x28
 8003390:	2104      	movlt	r1, #4
 8003392:	6809      	ldr	r1, [r1, #0]
 8003394:	2900      	cmp	r1, #0
 8003396:	bf1f      	itttt	ne
 8003398:	6848      	ldrne	r0, [r1, #4]
 800339a:	2800      	cmpne	r0, #0
 800339c:	6981      	ldrne	r1, [r0, #24]
 800339e:	f8d1 9008 	ldrne.w	r9, [r1, #8]
 80033a2:	6980      	ldr	r0, [r0, #24]
 80033a4:	6841      	ldr	r1, [r0, #4]
 80033a6:	f8cd c000 	str.w	ip, [sp]
 80033aa:	9101      	str	r1, [sp, #4]
 80033ac:	68b1      	ldr	r1, [r6, #8]
 80033ae:	4648      	mov	r0, r9
 80033b0:	f7ff fd36 	bl	8002e20 <ai_dict_decompress_f32>
 80033b4:	f1b9 0f00 	cmp.w	r9, #0
 80033b8:	bf18      	it	ne
 80033ba:	4648      	movne	r0, r9
 80033bc:	d100      	bne.n	80033c0 <forward_conv2d_nl_pool+0x214>
 80033be:	4658      	mov	r0, fp
 80033c0:	6963      	ldr	r3, [r4, #20]
 80033c2:	2600      	movs	r6, #0
 80033c4:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80033c8:	f8da 1018 	ldr.w	r1, [sl, #24]
 80033cc:	b22d      	sxth	r5, r5
 80033ce:	f1c8 0800 	rsb	r8, r8, #0
 80033d2:	881c      	ldrh	r4, [r3, #0]
 80033d4:	46aa      	mov	sl, r5
 80033d6:	2c04      	cmp	r4, #4
 80033d8:	bfa6      	itte	ge
 80033da:	685b      	ldrge	r3, [r3, #4]
 80033dc:	3328      	addge	r3, #40	; 0x28
 80033de:	2304      	movlt	r3, #4
 80033e0:	681b      	ldr	r3, [r3, #0]
 80033e2:	2b00      	cmp	r3, #0
 80033e4:	bf14      	ite	ne
 80033e6:	f8d3 9000 	ldrne.w	r9, [r3]
 80033ea:	46b1      	moveq	r9, r6
 80033ec:	f8d9 4018 	ldr.w	r4, [r9, #24]
 80033f0:	f8d9 300c 	ldr.w	r3, [r9, #12]
 80033f4:	427f      	negs	r7, r7
 80033f6:	f8d4 b008 	ldr.w	fp, [r4, #8]
 80033fa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80033fc:	689b      	ldr	r3, [r3, #8]
 80033fe:	f8cd 80c8 	str.w	r8, [sp, #200]	; 0xc8
 8003402:	435c      	muls	r4, r3
 8003404:	fb0e f404 	mul.w	r4, lr, r4
 8003408:	f8dd e084 	ldr.w	lr, [sp, #132]	; 0x84
 800340c:	9437      	str	r4, [sp, #220]	; 0xdc
 800340e:	ac11      	add	r4, sp, #68	; 0x44
 8003410:	f9b4 c000 	ldrsh.w	ip, [r4]
 8003414:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8003416:	fb0e f404 	mul.w	r4, lr, r4
 800341a:	9435      	str	r4, [sp, #212]	; 0xd4
 800341c:	ac12      	add	r4, sp, #72	; 0x48
 800341e:	f8cd c0d8 	str.w	ip, [sp, #216]	; 0xd8
 8003422:	f9b4 c000 	ldrsh.w	ip, [r4]
 8003426:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8003428:	f8cd c0d0 	str.w	ip, [sp, #208]	; 0xd0
 800342c:	435c      	muls	r4, r3
 800342e:	9433      	str	r4, [sp, #204]	; 0xcc
 8003430:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8003432:	2c00      	cmp	r4, #0
 8003434:	f000 812d 	beq.w	8003692 <forward_conv2d_nl_pool+0x4e6>
 8003438:	9038      	str	r0, [sp, #224]	; 0xe0
 800343a:	462c      	mov	r4, r5
 800343c:	9125      	str	r1, [sp, #148]	; 0x94
 800343e:	962f      	str	r6, [sp, #188]	; 0xbc
 8003440:	962e      	str	r6, [sp, #184]	; 0xb8
 8003442:	9324      	str	r3, [sp, #144]	; 0x90
 8003444:	9717      	str	r7, [sp, #92]	; 0x5c
 8003446:	9d02      	ldr	r5, [sp, #8]
 8003448:	9814      	ldr	r0, [sp, #80]	; 0x50
 800344a:	2800      	cmp	r0, #0
 800344c:	dd68      	ble.n	8003520 <forward_conv2d_nl_pool+0x374>
 800344e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003450:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8003452:	9131      	str	r1, [sp, #196]	; 0xc4
 8003454:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003456:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8003458:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800345a:	4240      	negs	r0, r0
 800345c:	9e26      	ldr	r6, [sp, #152]	; 0x98
 800345e:	960d      	str	r6, [sp, #52]	; 0x34
 8003460:	bfd8      	it	le
 8003462:	2000      	movle	r0, #0
 8003464:	1a89      	subs	r1, r1, r2
 8003466:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8003468:	4299      	cmp	r1, r3
 800346a:	9009      	str	r0, [sp, #36]	; 0x24
 800346c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800346e:	b212      	sxth	r2, r2
 8003470:	9008      	str	r0, [sp, #32]
 8003472:	920f      	str	r2, [sp, #60]	; 0x3c
 8003474:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8003476:	bf28      	it	cs
 8003478:	4619      	movcs	r1, r3
 800347a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800347c:	920c      	str	r2, [sp, #48]	; 0x30
 800347e:	910a      	str	r1, [sp, #40]	; 0x28
 8003480:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8003482:	f8bd 104c 	ldrh.w	r1, [sp, #76]	; 0x4c
 8003486:	9206      	str	r2, [sp, #24]
 8003488:	b21b      	sxth	r3, r3
 800348a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800348c:	930e      	str	r3, [sp, #56]	; 0x38
 800348e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8003490:	9107      	str	r1, [sp, #28]
 8003492:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003494:	9203      	str	r2, [sp, #12]
 8003496:	9924      	ldr	r1, [sp, #144]	; 0x90
 8003498:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800349a:	930b      	str	r3, [sp, #44]	; 0x2c
 800349c:	9005      	str	r0, [sp, #20]
 800349e:	9810      	ldr	r0, [sp, #64]	; 0x40
 80034a0:	9104      	str	r1, [sp, #16]
 80034a2:	9923      	ldr	r1, [sp, #140]	; 0x8c
 80034a4:	9200      	str	r2, [sp, #0]
 80034a6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80034a8:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80034aa:	9002      	str	r0, [sp, #8]
 80034ac:	9101      	str	r1, [sp, #4]
 80034ae:	4659      	mov	r1, fp
 80034b0:	2000      	movs	r0, #0
 80034b2:	f7fe ff9f 	bl	80023f4 <ai_conv2d_stripe_f32>
 80034b6:	9824      	ldr	r0, [sp, #144]	; 0x90
 80034b8:	b350      	cbz	r0, 8003510 <forward_conv2d_nl_pool+0x364>
 80034ba:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80034bc:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80034be:	9502      	str	r5, [sp, #8]
 80034c0:	f8dd 80c0 	ldr.w	r8, [sp, #192]	; 0xc0
 80034c4:	ea4f 0500 	mov.w	r5, r0
 80034c8:	f8d9 1018 	ldr.w	r1, [r9, #24]
 80034cc:	463b      	mov	r3, r7
 80034ce:	4632      	mov	r2, r6
 80034d0:	f8c1 b008 	str.w	fp, [r1, #8]
 80034d4:	eb0b 0b86 	add.w	fp, fp, r6, lsl #2
 80034d8:	4608      	mov	r0, r1
 80034da:	47c0      	blx	r8
 80034dc:	9816      	ldr	r0, [sp, #88]	; 0x58
 80034de:	9902      	ldr	r1, [sp, #8]
 80034e0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80034e2:	4407      	add	r7, r0
 80034e4:	f8d9 0018 	ldr.w	r0, [r9, #24]
 80034e8:	1a79      	subs	r1, r7, r1
 80034ea:	4291      	cmp	r1, r2
 80034ec:	6841      	ldr	r1, [r0, #4]
 80034ee:	68c0      	ldr	r0, [r0, #12]
 80034f0:	eb00 0281 	add.w	r2, r0, r1, lsl #2
 80034f4:	bfa8      	it	ge
 80034f6:	9f02      	ldrge	r7, [sp, #8]
 80034f8:	4593      	cmp	fp, r2
 80034fa:	d302      	bcc.n	8003502 <forward_conv2d_nl_pool+0x356>
 80034fc:	0089      	lsls	r1, r1, #2
 80034fe:	4249      	negs	r1, r1
 8003500:	448b      	add	fp, r1
 8003502:	1e6d      	subs	r5, r5, #1
 8003504:	d1e0      	bne.n	80034c8 <forward_conv2d_nl_pool+0x31c>
 8003506:	9610      	str	r6, [sp, #64]	; 0x40
 8003508:	971c      	str	r7, [sp, #112]	; 0x70
 800350a:	9d02      	ldr	r5, [sp, #8]
 800350c:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
 8003510:	f8d9 0018 	ldr.w	r0, [r9, #24]
 8003514:	f10a 0a01 	add.w	sl, sl, #1
 8003518:	fa0f fa8a 	sxth.w	sl, sl
 800351c:	68c1      	ldr	r1, [r0, #12]
 800351e:	6081      	str	r1, [r0, #8]
 8003520:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003522:	1e40      	subs	r0, r0, #1
 8003524:	9014      	str	r0, [sp, #80]	; 0x50
 8003526:	d56d      	bpl.n	8003604 <forward_conv2d_nl_pool+0x458>
 8003528:	9833      	ldr	r0, [sp, #204]	; 0xcc
 800352a:	4659      	mov	r1, fp
 800352c:	fb00 f00a 	mul.w	r0, r0, sl
 8003530:	0080      	lsls	r0, r0, #2
 8003532:	4240      	negs	r0, r0
 8003534:	eb0b 0200 	add.w	r2, fp, r0
 8003538:	f8d9 0018 	ldr.w	r0, [r9, #24]
 800353c:	68c3      	ldr	r3, [r0, #12]
 800353e:	429a      	cmp	r2, r3
 8003540:	bf3c      	itt	cc
 8003542:	6847      	ldrcc	r7, [r0, #4]
 8003544:	eb02 0287 	addcc.w	r2, r2, r7, lsl #2
 8003548:	4293      	cmp	r3, r2
 800354a:	d237      	bcs.n	80035bc <forward_conv2d_nl_pool+0x410>
 800354c:	9e34      	ldr	r6, [sp, #208]	; 0xd0
 800354e:	45b2      	cmp	sl, r6
 8003550:	d034      	beq.n	80035bc <forward_conv2d_nl_pool+0x410>
 8003552:	f8d0 c004 	ldr.w	ip, [r0, #4]
 8003556:	eb03 038c 	add.w	r3, r3, ip, lsl #2
 800355a:	429a      	cmp	r2, r3
 800355c:	f080 802e 	bcs.w	80035bc <forward_conv2d_nl_pool+0x410>
 8003560:	ed92 0a00 	vldr	s0, [r2]
 8003564:	1d12      	adds	r2, r2, #4
 8003566:	ed8b 0a00 	vstr	s0, [fp]
 800356a:	68c6      	ldr	r6, [r0, #12]
 800356c:	6843      	ldr	r3, [r0, #4]
 800356e:	eb06 0783 	add.w	r7, r6, r3, lsl #2
 8003572:	42ba      	cmp	r2, r7
 8003574:	d222      	bcs.n	80035bc <forward_conv2d_nl_pool+0x410>
 8003576:	edd2 0a00 	vldr	s1, [r2]
 800357a:	1d12      	adds	r2, r2, #4
 800357c:	edcb 0a01 	vstr	s1, [fp, #4]
 8003580:	68c3      	ldr	r3, [r0, #12]
 8003582:	6846      	ldr	r6, [r0, #4]
 8003584:	eb03 0786 	add.w	r7, r3, r6, lsl #2
 8003588:	42ba      	cmp	r2, r7
 800358a:	d217      	bcs.n	80035bc <forward_conv2d_nl_pool+0x410>
 800358c:	ed92 0a00 	vldr	s0, [r2]
 8003590:	1d12      	adds	r2, r2, #4
 8003592:	ed8b 0a02 	vstr	s0, [fp, #8]
 8003596:	68c3      	ldr	r3, [r0, #12]
 8003598:	6846      	ldr	r6, [r0, #4]
 800359a:	eb03 0786 	add.w	r7, r3, r6, lsl #2
 800359e:	42ba      	cmp	r2, r7
 80035a0:	d20c      	bcs.n	80035bc <forward_conv2d_nl_pool+0x410>
 80035a2:	edd2 0a00 	vldr	s1, [r2]
 80035a6:	1d12      	adds	r2, r2, #4
 80035a8:	edcb 0a03 	vstr	s1, [fp, #12]
 80035ac:	68c3      	ldr	r3, [r0, #12]
 80035ae:	6846      	ldr	r6, [r0, #4]
 80035b0:	f10b 0b10 	add.w	fp, fp, #16
 80035b4:	eb03 0786 	add.w	r7, r3, r6, lsl #2
 80035b8:	42ba      	cmp	r2, r7
 80035ba:	d3d1      	bcc.n	8003560 <forward_conv2d_nl_pool+0x3b4>
 80035bc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80035be:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80035c0:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80035c2:	189a      	adds	r2, r3, r2
 80035c4:	eba2 020a 	sub.w	r2, r2, sl
 80035c8:	922f      	str	r2, [sp, #188]	; 0xbc
 80035ca:	9a37      	ldr	r2, [sp, #220]	; 0xdc
 80035cc:	eb01 0b82 	add.w	fp, r1, r2, lsl #2
 80035d0:	68c1      	ldr	r1, [r0, #12]
 80035d2:	6843      	ldr	r3, [r0, #4]
 80035d4:	44b2      	add	sl, r6
 80035d6:	eb01 0283 	add.w	r2, r1, r3, lsl #2
 80035da:	fa0f fa8a 	sxth.w	sl, sl
 80035de:	460b      	mov	r3, r1
 80035e0:	4593      	cmp	fp, r2
 80035e2:	d30f      	bcc.n	8003604 <forward_conv2d_nl_pool+0x458>
 80035e4:	6841      	ldr	r1, [r0, #4]
 80035e6:	008a      	lsls	r2, r1, #2
 80035e8:	4252      	negs	r2, r2
 80035ea:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 80035ee:	4493      	add	fp, r2
 80035f0:	458b      	cmp	fp, r1
 80035f2:	bf24      	itt	cs
 80035f4:	4493      	addcs	fp, r2
 80035f6:	458b      	cmpcs	fp, r1
 80035f8:	bf21      	itttt	cs
 80035fa:	4493      	addcs	fp, r2
 80035fc:	458b      	cmpcs	fp, r1
 80035fe:	4493      	addcs	fp, r2
 8003600:	458b      	cmpcs	fp, r1
 8003602:	d2ef      	bcs.n	80035e4 <forward_conv2d_nl_pool+0x438>
 8003604:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003606:	4582      	cmp	sl, r0
 8003608:	d339      	bcc.n	800367e <forward_conv2d_nl_pool+0x4d2>
 800360a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 800360c:	9825      	ldr	r0, [sp, #148]	; 0x94
 800360e:	9008      	str	r0, [sp, #32]
 8003610:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8003612:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003614:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8003616:	1c52      	adds	r2, r2, #1
 8003618:	9911      	ldr	r1, [sp, #68]	; 0x44
 800361a:	922e      	str	r2, [sp, #184]	; 0xb8
 800361c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800361e:	b280      	uxth	r0, r0
 8003620:	b29b      	uxth	r3, r3
 8003622:	9004      	str	r0, [sp, #16]
 8003624:	b2a0      	uxth	r0, r4
 8003626:	b292      	uxth	r2, r2
 8003628:	9003      	str	r0, [sp, #12]
 800362a:	9206      	str	r2, [sp, #24]
 800362c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800362e:	982b      	ldr	r0, [sp, #172]	; 0xac
 8003630:	9305      	str	r3, [sp, #20]
 8003632:	b292      	uxth	r2, r2
 8003634:	ebaa 0a01 	sub.w	sl, sl, r1
 8003638:	2101      	movs	r1, #1
 800363a:	9201      	str	r2, [sp, #4]
 800363c:	9107      	str	r1, [sp, #28]
 800363e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8003640:	b280      	uxth	r0, r0
 8003642:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003644:	9000      	str	r0, [sp, #0]
 8003646:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8003648:	b289      	uxth	r1, r1
 800364a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800364c:	9102      	str	r1, [sp, #8]
 800364e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8003650:	1a12      	subs	r2, r2, r0
 8003652:	f8d9 0018 	ldr.w	r0, [r9, #24]
 8003656:	b29b      	uxth	r3, r3
 8003658:	b292      	uxth	r2, r2
 800365a:	b289      	uxth	r1, r1
 800365c:	fa0f fa8a 	sxth.w	sl, sl
 8003660:	47b0      	blx	r6
 8003662:	9825      	ldr	r0, [sp, #148]	; 0x94
 8003664:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8003666:	6881      	ldr	r1, [r0, #8]
 8003668:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 800366c:	6083      	str	r3, [r0, #8]
 800366e:	9936      	ldr	r1, [sp, #216]	; 0xd8
 8003670:	1a61      	subs	r1, r4, r1
 8003672:	2900      	cmp	r1, #0
 8003674:	bfc3      	ittte	gt
 8003676:	9811      	ldrgt	r0, [sp, #68]	; 0x44
 8003678:	1a24      	subgt	r4, r4, r0
 800367a:	b224      	sxthgt	r4, r4
 800367c:	2400      	movle	r4, #0
 800367e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8003680:	9820      	ldr	r0, [sp, #128]	; 0x80
 8003682:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8003684:	1841      	adds	r1, r0, r1
 8003686:	9117      	str	r1, [sp, #92]	; 0x5c
 8003688:	9922      	ldr	r1, [sp, #136]	; 0x88
 800368a:	428a      	cmp	r2, r1
 800368c:	f4ff aedc 	bcc.w	8003448 <forward_conv2d_nl_pool+0x29c>
 8003690:	9925      	ldr	r1, [sp, #148]	; 0x94
 8003692:	f8d9 0018 	ldr.w	r0, [r9, #24]
 8003696:	68c2      	ldr	r2, [r0, #12]
 8003698:	6082      	str	r2, [r0, #8]
 800369a:	68c8      	ldr	r0, [r1, #12]
 800369c:	6088      	str	r0, [r1, #8]
 800369e:	b039      	add	sp, #228	; 0xe4
 80036a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080036a4 <forward_dense>:
 80036a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036a8:	b081      	sub	sp, #4
 80036aa:	ed2d 8b02 	vpush	{d8}
 80036ae:	b088      	sub	sp, #32
 80036b0:	6944      	ldr	r4, [r0, #20]
 80036b2:	8820      	ldrh	r0, [r4, #0]
 80036b4:	2800      	cmp	r0, #0
 80036b6:	bf1a      	itte	ne
 80036b8:	6861      	ldrne	r1, [r4, #4]
 80036ba:	1d09      	addne	r1, r1, #4
 80036bc:	2104      	moveq	r1, #4
 80036be:	6809      	ldr	r1, [r1, #0]
 80036c0:	2900      	cmp	r1, #0
 80036c2:	bf14      	ite	ne
 80036c4:	680a      	ldrne	r2, [r1, #0]
 80036c6:	2200      	moveq	r2, #0
 80036c8:	2802      	cmp	r0, #2
 80036ca:	bfa6      	itte	ge
 80036cc:	6861      	ldrge	r1, [r4, #4]
 80036ce:	3110      	addge	r1, #16
 80036d0:	2104      	movlt	r1, #4
 80036d2:	6809      	ldr	r1, [r1, #0]
 80036d4:	2900      	cmp	r1, #0
 80036d6:	bf14      	ite	ne
 80036d8:	680f      	ldrne	r7, [r1, #0]
 80036da:	2700      	moveq	r7, #0
 80036dc:	2802      	cmp	r0, #2
 80036de:	bfc6      	itte	gt
 80036e0:	6861      	ldrgt	r1, [r4, #4]
 80036e2:	311c      	addgt	r1, #28
 80036e4:	2104      	movle	r1, #4
 80036e6:	6809      	ldr	r1, [r1, #0]
 80036e8:	2900      	cmp	r1, #0
 80036ea:	bf14      	ite	ne
 80036ec:	680b      	ldrne	r3, [r1, #0]
 80036ee:	2300      	moveq	r3, #0
 80036f0:	2802      	cmp	r0, #2
 80036f2:	dd0b      	ble.n	800370c <forward_dense+0x68>
 80036f4:	6861      	ldr	r1, [r4, #4]
 80036f6:	f111 0018 	adds.w	r0, r1, #24
 80036fa:	d007      	beq.n	800370c <forward_dense+0x68>
 80036fc:	8b0c      	ldrh	r4, [r1, #24]
 80036fe:	2c02      	cmp	r4, #2
 8003700:	db04      	blt.n	800370c <forward_dense+0x68>
 8003702:	69c8      	ldr	r0, [r1, #28]
 8003704:	b110      	cbz	r0, 800370c <forward_dense+0x68>
 8003706:	f8d0 a004 	ldr.w	sl, [r0, #4]
 800370a:	e001      	b.n	8003710 <forward_dense+0x6c>
 800370c:	f04f 0a00 	mov.w	sl, #0
 8003710:	68d0      	ldr	r0, [r2, #12]
 8003712:	699e      	ldr	r6, [r3, #24]
 8003714:	6992      	ldr	r2, [r2, #24]
 8003716:	6844      	ldr	r4, [r0, #4]
 8003718:	68f8      	ldr	r0, [r7, #12]
 800371a:	f8d0 c004 	ldr.w	ip, [r0, #4]
 800371e:	f8d6 e000 	ldr.w	lr, [r6]
 8003722:	69bf      	ldr	r7, [r7, #24]
 8003724:	6881      	ldr	r1, [r0, #8]
 8003726:	68c0      	ldr	r0, [r0, #12]
 8003728:	ea4f 19ee 	mov.w	r9, lr, asr #7
 800372c:	ea4f 586e 	mov.w	r8, lr, asr #21
 8003730:	ea4f 4e6e 	mov.w	lr, lr, asr #17
 8003734:	f00e 0e0f 	and.w	lr, lr, #15
 8003738:	4341      	muls	r1, r0
 800373a:	f009 097f 	and.w	r9, r9, #127	; 0x7f
 800373e:	f008 0803 	and.w	r8, r8, #3
 8003742:	fa29 f908 	lsr.w	r9, r9, r8
 8003746:	2000      	movs	r0, #0
 8003748:	f1be 0f04 	cmp.w	lr, #4
 800374c:	68bf      	ldr	r7, [r7, #8]
 800374e:	f8d2 8008 	ldr.w	r8, [r2, #8]
 8003752:	bf14      	ite	ne
 8003754:	f1be 0f08 	cmpne.w	lr, #8
 8003758:	68f0      	ldreq	r0, [r6, #12]
 800375a:	695e      	ldr	r6, [r3, #20]
 800375c:	2900      	cmp	r1, #0
 800375e:	eb07 028c 	add.w	r2, r7, ip, lsl #2
 8003762:	6876      	ldr	r6, [r6, #4]
 8003764:	f000 80ee 	beq.w	8003944 <forward_dense+0x2a0>
 8003768:	9307      	str	r3, [sp, #28]
 800376a:	f8cd a014 	str.w	sl, [sp, #20]
 800376e:	f8cd c018 	str.w	ip, [sp, #24]
 8003772:	9201      	str	r2, [sp, #4]
 8003774:	9104      	str	r1, [sp, #16]
 8003776:	9907      	ldr	r1, [sp, #28]
 8003778:	698b      	ldr	r3, [r1, #24]
 800377a:	9905      	ldr	r1, [sp, #20]
 800377c:	2900      	cmp	r1, #0
 800377e:	bf1a      	itte	ne
 8003780:	6989      	ldrne	r1, [r1, #24]
 8003782:	688a      	ldrne	r2, [r1, #8]
 8003784:	2200      	moveq	r2, #0
 8003786:	2800      	cmp	r0, #0
 8003788:	f8d3 b008 	ldr.w	fp, [r3, #8]
 800378c:	9b01      	ldr	r3, [sp, #4]
 800378e:	f040 80ab 	bne.w	80038e8 <forward_dense+0x244>
 8003792:	429f      	cmp	r7, r3
 8003794:	f080 80c9 	bcs.w	800392a <forward_dense+0x286>
 8003798:	9003      	str	r0, [sp, #12]
 800379a:	2a00      	cmp	r2, #0
 800379c:	4620      	mov	r0, r4
 800379e:	46c6      	mov	lr, r8
 80037a0:	46dc      	mov	ip, fp
 80037a2:	eddf 0a6b 	vldr	s1, [pc, #428]	; 8003950 <.text_13>
 80037a6:	bf0e      	itee	eq
 80037a8:	ed9f 0a69 	vldreq	s0, [pc, #420]	; 8003950 <.text_13>
 80037ac:	ed92 0a00 	vldrne	s0, [r2]
 80037b0:	1d12      	addne	r2, r2, #4
 80037b2:	2c04      	cmp	r4, #4
 80037b4:	d35d      	bcc.n	8003872 <forward_dense+0x1ce>
 80037b6:	08a1      	lsrs	r1, r4, #2
 80037b8:	07cd      	lsls	r5, r1, #31
 80037ba:	d51c      	bpl.n	80037f6 <forward_dense+0x152>
 80037bc:	ed9c 4a00 	vldr	s8, [ip]
 80037c0:	1f00      	subs	r0, r0, #4
 80037c2:	edde 4a00 	vldr	s9, [lr]
 80037c6:	ed9c 3a01 	vldr	s6, [ip, #4]
 80037ca:	edde 3a01 	vldr	s7, [lr, #4]
 80037ce:	ee44 0a24 	vmla.f32	s1, s8, s9
 80037d2:	ed9c 2a02 	vldr	s4, [ip, #8]
 80037d6:	edde 2a02 	vldr	s5, [lr, #8]
 80037da:	ee43 0a23 	vmla.f32	s1, s6, s7
 80037de:	ed9c 1a03 	vldr	s2, [ip, #12]
 80037e2:	f10c 0c10 	add.w	ip, ip, #16
 80037e6:	edde 1a03 	vldr	s3, [lr, #12]
 80037ea:	f10e 0e10 	add.w	lr, lr, #16
 80037ee:	ee42 0a22 	vmla.f32	s1, s4, s5
 80037f2:	ee41 0a21 	vmla.f32	s1, s2, s3
 80037f6:	0849      	lsrs	r1, r1, #1
 80037f8:	f000 803b 	beq.w	8003872 <forward_dense+0x1ce>
 80037fc:	ed9c 1a03 	vldr	s2, [ip, #12]
 8003800:	3808      	subs	r0, #8
 8003802:	edde 1a03 	vldr	s3, [lr, #12]
 8003806:	1e49      	subs	r1, r1, #1
 8003808:	ed9c 2a02 	vldr	s4, [ip, #8]
 800380c:	edde 2a02 	vldr	s5, [lr, #8]
 8003810:	ed9c 3a01 	vldr	s6, [ip, #4]
 8003814:	edde 3a01 	vldr	s7, [lr, #4]
 8003818:	ed9c 4a00 	vldr	s8, [ip]
 800381c:	f10c 0c10 	add.w	ip, ip, #16
 8003820:	edde 4a00 	vldr	s9, [lr]
 8003824:	f10e 0e10 	add.w	lr, lr, #16
 8003828:	ee44 0a24 	vmla.f32	s1, s8, s9
 800382c:	ee43 0a23 	vmla.f32	s1, s6, s7
 8003830:	ee42 0a22 	vmla.f32	s1, s4, s5
 8003834:	ed9c 8a00 	vldr	s16, [ip]
 8003838:	edde 8a00 	vldr	s17, [lr]
 800383c:	ee41 0a21 	vmla.f32	s1, s2, s3
 8003840:	ed9c 7a01 	vldr	s14, [ip, #4]
 8003844:	edde 7a01 	vldr	s15, [lr, #4]
 8003848:	ee48 0a28 	vmla.f32	s1, s16, s17
 800384c:	ed9c 6a02 	vldr	s12, [ip, #8]
 8003850:	edde 6a02 	vldr	s13, [lr, #8]
 8003854:	ee47 0a27 	vmla.f32	s1, s14, s15
 8003858:	ed9c 5a03 	vldr	s10, [ip, #12]
 800385c:	f10c 0c10 	add.w	ip, ip, #16
 8003860:	edde 5a03 	vldr	s11, [lr, #12]
 8003864:	f10e 0e10 	add.w	lr, lr, #16
 8003868:	ee46 0a26 	vmla.f32	s1, s12, s13
 800386c:	ee45 0a25 	vmla.f32	s1, s10, s11
 8003870:	d1c4      	bne.n	80037fc <forward_dense+0x158>
 8003872:	b378      	cbz	r0, 80038d4 <forward_dense+0x230>
 8003874:	f010 0103 	ands.w	r1, r0, #3
 8003878:	d00b      	beq.n	8003892 <forward_dense+0x1ee>
 800387a:	1e49      	subs	r1, r1, #1
 800387c:	ed9c 1a00 	vldr	s2, [ip]
 8003880:	edde 1a00 	vldr	s3, [lr]
 8003884:	f10e 0e04 	add.w	lr, lr, #4
 8003888:	ee41 0a21 	vmla.f32	s1, s2, s3
 800388c:	f10c 0c04 	add.w	ip, ip, #4
 8003890:	d1f3      	bne.n	800387a <forward_dense+0x1d6>
 8003892:	0880      	lsrs	r0, r0, #2
 8003894:	f000 801e 	beq.w	80038d4 <forward_dense+0x230>
 8003898:	ed9c 2a00 	vldr	s4, [ip]
 800389c:	1e40      	subs	r0, r0, #1
 800389e:	ed9e 1a00 	vldr	s2, [lr]
 80038a2:	eddc 1a01 	vldr	s3, [ip, #4]
 80038a6:	edde 2a01 	vldr	s5, [lr, #4]
 80038aa:	ee42 0a01 	vmla.f32	s1, s4, s2
 80038ae:	ee41 0aa2 	vmla.f32	s1, s3, s5
 80038b2:	ed9c 2a02 	vldr	s4, [ip, #8]
 80038b6:	ed9e 1a02 	vldr	s2, [lr, #8]
 80038ba:	eddc 1a03 	vldr	s3, [ip, #12]
 80038be:	f10c 0c10 	add.w	ip, ip, #16
 80038c2:	edde 2a03 	vldr	s5, [lr, #12]
 80038c6:	f10e 0e10 	add.w	lr, lr, #16
 80038ca:	ee42 0a01 	vmla.f32	s1, s4, s2
 80038ce:	ee41 0aa2 	vmla.f32	s1, s3, s5
 80038d2:	d1e1      	bne.n	8003898 <forward_dense+0x1f4>
 80038d4:	ee30 0a20 	vadd.f32	s0, s0, s1
 80038d8:	44b3      	add	fp, r6
 80038da:	ed87 0a00 	vstr	s0, [r7]
 80038de:	1d3f      	adds	r7, r7, #4
 80038e0:	429f      	cmp	r7, r3
 80038e2:	f4ff af5a 	bcc.w	800379a <forward_dense+0xf6>
 80038e6:	e01f      	b.n	8003928 <forward_dense+0x284>
 80038e8:	429f      	cmp	r7, r3
 80038ea:	d21e      	bcs.n	800392a <forward_dense+0x286>
 80038ec:	469a      	mov	sl, r3
 80038ee:	9003      	str	r0, [sp, #12]
 80038f0:	4615      	mov	r5, r2
 80038f2:	2d00      	cmp	r5, #0
 80038f4:	a802      	add	r0, sp, #8
 80038f6:	bf19      	ittee	ne
 80038f8:	f855 1b04 	ldrne.w	r1, [r5], #4
 80038fc:	9102      	strne	r1, [sp, #8]
 80038fe:	2300      	moveq	r3, #0
 8003900:	9302      	streq	r3, [sp, #8]
 8003902:	f1b9 0f04 	cmp.w	r9, #4
 8003906:	9400      	str	r4, [sp, #0]
 8003908:	4643      	mov	r3, r8
 800390a:	9a03      	ldr	r2, [sp, #12]
 800390c:	4659      	mov	r1, fp
 800390e:	d103      	bne.n	8003918 <forward_dense+0x274>
 8003910:	f7ff f9d2 	bl	8002cb8 <ai_dict4_dot_array_f32>
 8003914:	e002      	b.n	800391c <forward_dense+0x278>
 8003916:	bf00      	nop
 8003918:	f7ff f85e 	bl	80029d8 <ai_dict8_dot_array_f32>
 800391c:	9802      	ldr	r0, [sp, #8]
 800391e:	44b3      	add	fp, r6
 8003920:	f847 0b04 	str.w	r0, [r7], #4
 8003924:	4557      	cmp	r7, sl
 8003926:	d3e4      	bcc.n	80038f2 <forward_dense+0x24e>
 8003928:	9803      	ldr	r0, [sp, #12]
 800392a:	9a01      	ldr	r2, [sp, #4]
 800392c:	9b06      	ldr	r3, [sp, #24]
 800392e:	eb08 0884 	add.w	r8, r8, r4, lsl #2
 8003932:	eb02 0e83 	add.w	lr, r2, r3, lsl #2
 8003936:	9a04      	ldr	r2, [sp, #16]
 8003938:	f8cd e004 	str.w	lr, [sp, #4]
 800393c:	1e52      	subs	r2, r2, #1
 800393e:	9204      	str	r2, [sp, #16]
 8003940:	f47f af19 	bne.w	8003776 <forward_dense+0xd2>
 8003944:	b008      	add	sp, #32
 8003946:	ecbd 8b02 	vpop	{d8}
 800394a:	b001      	add	sp, #4
 800394c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003950 <.text_13>:
 8003950:	00000000 	.word	0x00000000

08003954 <forward_gemm>:
 8003954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003958:	b091      	sub	sp, #68	; 0x44
 800395a:	4604      	mov	r4, r0
 800395c:	6961      	ldr	r1, [r4, #20]
 800395e:	6963      	ldr	r3, [r4, #20]
 8003960:	8808      	ldrh	r0, [r1, #0]
 8003962:	2800      	cmp	r0, #0
 8003964:	bf1a      	itte	ne
 8003966:	6849      	ldrne	r1, [r1, #4]
 8003968:	1d0a      	addne	r2, r1, #4
 800396a:	2204      	moveq	r2, #4
 800396c:	6810      	ldr	r0, [r2, #0]
 800396e:	8819      	ldrh	r1, [r3, #0]
 8003970:	2800      	cmp	r0, #0
 8003972:	bf14      	ite	ne
 8003974:	6805      	ldrne	r5, [r0, #0]
 8003976:	2500      	moveq	r5, #0
 8003978:	2900      	cmp	r1, #0
 800397a:	bf1d      	ittte	ne
 800397c:	6858      	ldrne	r0, [r3, #4]
 800397e:	2800      	cmpne	r0, #0
 8003980:	f8b0 c000 	ldrhne.w	ip, [r0]
 8003984:	f04f 0c00 	moveq.w	ip, #0
 8003988:	2902      	cmp	r1, #2
 800398a:	bfa6      	itte	ge
 800398c:	6858      	ldrge	r0, [r3, #4]
 800398e:	3010      	addge	r0, #16
 8003990:	2004      	movlt	r0, #4
 8003992:	6800      	ldr	r0, [r0, #0]
 8003994:	2800      	cmp	r0, #0
 8003996:	bf14      	ite	ne
 8003998:	6801      	ldrne	r1, [r0, #0]
 800399a:	2100      	moveq	r1, #0
 800399c:	2600      	movs	r6, #0
 800399e:	2700      	movs	r7, #0
 80039a0:	f1bc 0f03 	cmp.w	ip, #3
 80039a4:	d106      	bne.n	80039b4 <forward_gemm+0x60>
 80039a6:	6810      	ldr	r0, [r2, #0]
 80039a8:	2800      	cmp	r0, #0
 80039aa:	d023      	beq.n	80039f4 <forward_gemm+0xa0>
 80039ac:	6846      	ldr	r6, [r0, #4]
 80039ae:	d021      	beq.n	80039f4 <forward_gemm+0xa0>
 80039b0:	6887      	ldr	r7, [r0, #8]
 80039b2:	e01f      	b.n	80039f4 <forward_gemm+0xa0>
 80039b4:	f1bc 0f02 	cmp.w	ip, #2
 80039b8:	d10c      	bne.n	80039d4 <forward_gemm+0x80>
 80039ba:	6810      	ldr	r0, [r2, #0]
 80039bc:	b100      	cbz	r0, 80039c0 <forward_gemm+0x6c>
 80039be:	6846      	ldr	r6, [r0, #4]
 80039c0:	881a      	ldrh	r2, [r3, #0]
 80039c2:	2a02      	cmp	r2, #2
 80039c4:	bfc6      	itte	gt
 80039c6:	6858      	ldrgt	r0, [r3, #4]
 80039c8:	301c      	addgt	r0, #28
 80039ca:	2004      	movle	r0, #4
 80039cc:	6800      	ldr	r0, [r0, #0]
 80039ce:	b188      	cbz	r0, 80039f4 <forward_gemm+0xa0>
 80039d0:	6807      	ldr	r7, [r0, #0]
 80039d2:	e00f      	b.n	80039f4 <forward_gemm+0xa0>
 80039d4:	f1bc 0f01 	cmp.w	ip, #1
 80039d8:	d10c      	bne.n	80039f4 <forward_gemm+0xa0>
 80039da:	881a      	ldrh	r2, [r3, #0]
 80039dc:	2a02      	cmp	r2, #2
 80039de:	bfc6      	itte	gt
 80039e0:	6858      	ldrgt	r0, [r3, #4]
 80039e2:	f100 021c 	addgt.w	r2, r0, #28
 80039e6:	2204      	movle	r2, #4
 80039e8:	6810      	ldr	r0, [r2, #0]
 80039ea:	2800      	cmp	r0, #0
 80039ec:	d002      	beq.n	80039f4 <forward_gemm+0xa0>
 80039ee:	6806      	ldr	r6, [r0, #0]
 80039f0:	bf18      	it	ne
 80039f2:	6847      	ldrne	r7, [r0, #4]
 80039f4:	68c8      	ldr	r0, [r1, #12]
 80039f6:	6989      	ldr	r1, [r1, #24]
 80039f8:	688b      	ldr	r3, [r1, #8]
 80039fa:	68c1      	ldr	r1, [r0, #12]
 80039fc:	6842      	ldr	r2, [r0, #4]
 80039fe:	a806      	add	r0, sp, #24
 8003a00:	b292      	uxth	r2, r2
 8003a02:	b289      	uxth	r1, r1
 8003a04:	f003 f96a 	bl	8006cdc <arm_mat_init_f32>
 8003a08:	69a9      	ldr	r1, [r5, #24]
 8003a0a:	68e8      	ldr	r0, [r5, #12]
 8003a0c:	688b      	ldr	r3, [r1, #8]
 8003a0e:	6842      	ldr	r2, [r0, #4]
 8003a10:	68c1      	ldr	r1, [r0, #12]
 8003a12:	a804      	add	r0, sp, #16
 8003a14:	b292      	uxth	r2, r2
 8003a16:	b289      	uxth	r1, r1
 8003a18:	f003 f960 	bl	8006cdc <arm_mat_init_f32>
 8003a1c:	69b1      	ldr	r1, [r6, #24]
 8003a1e:	68f0      	ldr	r0, [r6, #12]
 8003a20:	688b      	ldr	r3, [r1, #8]
 8003a22:	6842      	ldr	r2, [r0, #4]
 8003a24:	68c1      	ldr	r1, [r0, #12]
 8003a26:	a802      	add	r0, sp, #8
 8003a28:	b292      	uxth	r2, r2
 8003a2a:	b289      	uxth	r1, r1
 8003a2c:	f003 f956 	bl	8006cdc <arm_mat_init_f32>
 8003a30:	69b9      	ldr	r1, [r7, #24]
 8003a32:	68f8      	ldr	r0, [r7, #12]
 8003a34:	688b      	ldr	r3, [r1, #8]
 8003a36:	6842      	ldr	r2, [r0, #4]
 8003a38:	68c1      	ldr	r1, [r0, #12]
 8003a3a:	4668      	mov	r0, sp
 8003a3c:	b292      	uxth	r2, r2
 8003a3e:	b289      	uxth	r1, r1
 8003a40:	f003 f94c 	bl	8006cdc <arm_mat_init_f32>
 8003a44:	9b01      	ldr	r3, [sp, #4]
 8003a46:	f8bd e010 	ldrh.w	lr, [sp, #16]
 8003a4a:	f994 5021 	ldrsb.w	r5, [r4, #33]	; 0x21
 8003a4e:	f994 0020 	ldrsb.w	r0, [r4, #32]
 8003a52:	ed94 0a07 	vldr	s0, [r4, #28]
 8003a56:	9a05      	ldr	r2, [sp, #20]
 8003a58:	edd4 0a06 	vldr	s1, [r4, #24]
 8003a5c:	9308      	str	r3, [sp, #32]
 8003a5e:	920b      	str	r2, [sp, #44]	; 0x2c
 8003a60:	2300      	movs	r3, #0
 8003a62:	f8bd 8012 	ldrh.w	r8, [sp, #18]
 8003a66:	f8bd a002 	ldrh.w	sl, [sp, #2]
 8003a6a:	0002      	movs	r2, r0
 8003a6c:	f8dd 900c 	ldr.w	r9, [sp, #12]
 8003a70:	f8bd c000 	ldrh.w	ip, [sp]
 8003a74:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8003a78:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8003a7c:	9c07      	ldr	r4, [sp, #28]
 8003a7e:	bf0c      	ite	eq
 8003a80:	4672      	moveq	r2, lr
 8003a82:	4642      	movne	r2, r8
 8003a84:	f1ba 0f01 	cmp.w	sl, #1
 8003a88:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8003a8c:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8003a90:	f8bd 6018 	ldrh.w	r6, [sp, #24]
 8003a94:	f8bd b01a 	ldrh.w	fp, [sp, #26]
 8003a98:	bf0c      	ite	eq
 8003a9a:	4699      	moveq	r9, r3
 8003a9c:	f04f 0904 	movne.w	r9, #4
 8003aa0:	f1bc 0f01 	cmp.w	ip, #1
 8003aa4:	d105      	bne.n	8003ab2 <forward_gemm+0x15e>
 8003aa6:	f1ba 0f01 	cmp.w	sl, #1
 8003aaa:	d005      	beq.n	8003ab8 <forward_gemm+0x164>
 8003aac:	f1cb 0a00 	rsb	sl, fp, #0
 8003ab0:	e003      	b.n	8003aba <forward_gemm+0x166>
 8003ab2:	f1ba 0f01 	cmp.w	sl, #1
 8003ab6:	d000      	beq.n	8003aba <forward_gemm+0x166>
 8003ab8:	469a      	mov	sl, r3
 8003aba:	2800      	cmp	r0, #0
 8003abc:	fa0f fa8a 	sxth.w	sl, sl
 8003ac0:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8003ac4:	bf0c      	ite	eq
 8003ac6:	46f4      	moveq	ip, lr
 8003ac8:	46c4      	movne	ip, r8
 8003aca:	45b4      	cmp	ip, r6
 8003acc:	f040 808d 	bne.w	8003bea <forward_gemm+0x296>
 8003ad0:	2d00      	cmp	r5, #0
 8003ad2:	bf0c      	ite	eq
 8003ad4:	9109      	streq	r1, [sp, #36]	; 0x24
 8003ad6:	9709      	strne	r7, [sp, #36]	; 0x24
 8003ad8:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 8003adc:	45dc      	cmp	ip, fp
 8003ade:	f040 8084 	bne.w	8003bea <forward_gemm+0x296>
 8003ae2:	2800      	cmp	r0, #0
 8003ae4:	bf0c      	ite	eq
 8003ae6:	46c4      	moveq	ip, r8
 8003ae8:	46f4      	movne	ip, lr
 8003aea:	2d00      	cmp	r5, #0
 8003aec:	bf0c      	ite	eq
 8003aee:	46ba      	moveq	sl, r7
 8003af0:	468a      	movne	sl, r1
 8003af2:	45d4      	cmp	ip, sl
 8003af4:	d179      	bne.n	8003bea <forward_gemm+0x296>
 8003af6:	9e08      	ldr	r6, [sp, #32]
 8003af8:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 8003afc:	9410      	str	r4, [sp, #64]	; 0x40
 8003afe:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8003b02:	f8ad 2020 	strh.w	r2, [sp, #32]
 8003b06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003b08:	f8bd 4022 	ldrh.w	r4, [sp, #34]	; 0x22
 8003b0c:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 8003b10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003b12:	eb02 0a84 	add.w	sl, r2, r4, lsl #2
 8003b16:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003b18:	ea4f 0488 	mov.w	r4, r8, lsl #2
 8003b1c:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 8003b20:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8003b24:	f8dd c034 	ldr.w	ip, [sp, #52]	; 0x34
 8003b28:	2800      	cmp	r0, #0
 8003b2a:	ed9f 1aa2 	vldr	s2, [pc, #648]	; 8003db4 <.text_17>
 8003b2e:	f8dd e02c 	ldr.w	lr, [sp, #44]	; 0x2c
 8003b32:	bf0c      	ite	eq
 8003b34:	f8dd 803c 	ldreq.w	r8, [sp, #60]	; 0x3c
 8003b38:	f8bd 8028 	ldrhne.w	r8, [sp, #40]	; 0x28
 8003b3c:	fa1f fb88 	uxth.w	fp, r8
 8003b40:	f1bb 0f00 	cmp.w	fp, #0
 8003b44:	d019      	beq.n	8003b7a <forward_gemm+0x226>
 8003b46:	2800      	cmp	r0, #0
 8003b48:	f1a8 0801 	sub.w	r8, r8, #1
 8003b4c:	edde 1a00 	vldr	s3, [lr]
 8003b50:	ed93 2a00 	vldr	s4, [r3]
 8003b54:	bf0c      	ite	eq
 8003b56:	f04f 0b04 	moveq.w	fp, #4
 8003b5a:	46a3      	movne	fp, r4
 8003b5c:	2d00      	cmp	r5, #0
 8003b5e:	44de      	add	lr, fp
 8003b60:	ee01 1a82 	vmla.f32	s2, s3, s4
 8003b64:	bf0c      	ite	eq
 8003b66:	ea4f 0b81 	moveq.w	fp, r1, lsl #2
 8003b6a:	f04f 0b04 	movne.w	fp, #4
 8003b6e:	445b      	add	r3, fp
 8003b70:	fa1f fb88 	uxth.w	fp, r8
 8003b74:	f1bb 0f00 	cmp.w	fp, #0
 8003b78:	d1e5      	bne.n	8003b46 <forward_gemm+0x1f2>
 8003b7a:	1e52      	subs	r2, r2, #1
 8003b7c:	b292      	uxth	r2, r2
 8003b7e:	002b      	movs	r3, r5
 8003b80:	ee20 1a81 	vmul.f32	s2, s1, s2
 8003b84:	edd6 1a00 	vldr	s3, [r6]
 8003b88:	444e      	add	r6, r9
 8003b8a:	ee00 1a21 	vmla.f32	s2, s0, s3
 8003b8e:	ed8a 1a00 	vstr	s2, [sl]
 8003b92:	f10a 0a04 	add.w	sl, sl, #4
 8003b96:	bf0e      	itee	eq
 8003b98:	1a8b      	subeq	r3, r1, r2
 8003b9a:	1abb      	subne	r3, r7, r2
 8003b9c:	434b      	mulne	r3, r1
 8003b9e:	2a00      	cmp	r2, #0
 8003ba0:	eb0c 0383 	add.w	r3, ip, r3, lsl #2
 8003ba4:	d1c0      	bne.n	8003b28 <forward_gemm+0x1d4>
 8003ba6:	f8bd a022 	ldrh.w	sl, [sp, #34]	; 0x22
 8003baa:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8003bae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003bb0:	f8bd e028 	ldrh.w	lr, [sp, #40]	; 0x28
 8003bb4:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
 8003bb8:	f8cd c034 	str.w	ip, [sp, #52]	; 0x34
 8003bbc:	44da      	add	sl, fp
 8003bbe:	f8ad a022 	strh.w	sl, [sp, #34]	; 0x22
 8003bc2:	b100      	cbz	r0, 8003bc6 <forward_gemm+0x272>
 8003bc4:	2404      	movs	r4, #4
 8003bc6:	eb02 0c04 	add.w	ip, r2, r4
 8003bca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003bcc:	f8bd 4020 	ldrh.w	r4, [sp, #32]
 8003bd0:	eb06 0682 	add.w	r6, r6, r2, lsl #2
 8003bd4:	f1a4 0a01 	sub.w	sl, r4, #1
 8003bd8:	f8ad a020 	strh.w	sl, [sp, #32]
 8003bdc:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8003be0:	2a00      	cmp	r2, #0
 8003be2:	d190      	bne.n	8003b06 <forward_gemm+0x1b2>
 8003be4:	b011      	add	sp, #68	; 0x44
 8003be6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003bea:	fb0b f606 	mul.w	r6, fp, r6
 8003bee:	2e00      	cmp	r6, #0
 8003bf0:	ddf8      	ble.n	8003be4 <forward_gemm+0x290>
 8003bf2:	f016 0003 	ands.w	r0, r6, #3
 8003bf6:	d003      	beq.n	8003c00 <forward_gemm+0x2ac>
 8003bf8:	1e40      	subs	r0, r0, #1
 8003bfa:	f844 3b04 	str.w	r3, [r4], #4
 8003bfe:	d1fb      	bne.n	8003bf8 <forward_gemm+0x2a4>
 8003c00:	08b1      	lsrs	r1, r6, #2
 8003c02:	d0ef      	beq.n	8003be4 <forward_gemm+0x290>
 8003c04:	6023      	str	r3, [r4, #0]
 8003c06:	6063      	str	r3, [r4, #4]
 8003c08:	60a3      	str	r3, [r4, #8]
 8003c0a:	60e3      	str	r3, [r4, #12]
 8003c0c:	3410      	adds	r4, #16
 8003c0e:	1e49      	subs	r1, r1, #1
 8003c10:	d1f8      	bne.n	8003c04 <forward_gemm+0x2b0>
 8003c12:	b011      	add	sp, #68	; 0x44
 8003c14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003c18 <forward_matmul>:
 8003c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c1c:	b08b      	sub	sp, #44	; 0x2c
 8003c1e:	6944      	ldr	r4, [r0, #20]
 8003c20:	8822      	ldrh	r2, [r4, #0]
 8003c22:	2a00      	cmp	r2, #0
 8003c24:	bf1a      	itte	ne
 8003c26:	6860      	ldrne	r0, [r4, #4]
 8003c28:	1d03      	addne	r3, r0, #4
 8003c2a:	2304      	moveq	r3, #4
 8003c2c:	6819      	ldr	r1, [r3, #0]
 8003c2e:	2900      	cmp	r1, #0
 8003c30:	bf14      	ite	ne
 8003c32:	6808      	ldrne	r0, [r1, #0]
 8003c34:	2000      	moveq	r0, #0
 8003c36:	2900      	cmp	r1, #0
 8003c38:	bf14      	ite	ne
 8003c3a:	f8d1 b004 	ldrne.w	fp, [r1, #4]
 8003c3e:	f04f 0b00 	moveq.w	fp, #0
 8003c42:	2a02      	cmp	r2, #2
 8003c44:	bfa6      	itte	ge
 8003c46:	6861      	ldrge	r1, [r4, #4]
 8003c48:	3110      	addge	r1, #16
 8003c4a:	2104      	movlt	r1, #4
 8003c4c:	6809      	ldr	r1, [r1, #0]
 8003c4e:	2900      	cmp	r1, #0
 8003c50:	bf14      	ite	ne
 8003c52:	680b      	ldrne	r3, [r1, #0]
 8003c54:	2300      	moveq	r3, #0
 8003c56:	f1bb 0f00 	cmp.w	fp, #0
 8003c5a:	d108      	bne.n	8003c6e <forward_matmul+0x56>
 8003c5c:	2a02      	cmp	r2, #2
 8003c5e:	bfc6      	itte	gt
 8003c60:	6861      	ldrgt	r1, [r4, #4]
 8003c62:	311c      	addgt	r1, #28
 8003c64:	2104      	movle	r1, #4
 8003c66:	6809      	ldr	r1, [r1, #0]
 8003c68:	b109      	cbz	r1, 8003c6e <forward_matmul+0x56>
 8003c6a:	f8d1 b000 	ldr.w	fp, [r1]
 8003c6e:	68dd      	ldr	r5, [r3, #12]
 8003c70:	68c4      	ldr	r4, [r0, #12]
 8003c72:	f8db 900c 	ldr.w	r9, [fp, #12]
 8003c76:	686e      	ldr	r6, [r5, #4]
 8003c78:	f8d4 e000 	ldr.w	lr, [r4]
 8003c7c:	f8d5 a000 	ldr.w	sl, [r5]
 8003c80:	f8d9 2000 	ldr.w	r2, [r9]
 8003c84:	68a1      	ldr	r1, [r4, #8]
 8003c86:	f8d9 8008 	ldr.w	r8, [r9, #8]
 8003c8a:	f8d5 c008 	ldr.w	ip, [r5, #8]
 8003c8e:	68ef      	ldr	r7, [r5, #12]
 8003c90:	9706      	str	r7, [sp, #24]
 8003c92:	68e7      	ldr	r7, [r4, #12]
 8003c94:	699b      	ldr	r3, [r3, #24]
 8003c96:	fb01 f50e 	mul.w	r5, r1, lr
 8003c9a:	434f      	muls	r7, r1
 8003c9c:	689b      	ldr	r3, [r3, #8]
 8003c9e:	fb0e f707 	mul.w	r7, lr, r7
 8003ca2:	970a      	str	r7, [sp, #40]	; 0x28
 8003ca4:	f8d9 400c 	ldr.w	r4, [r9, #12]
 8003ca8:	fb08 f404 	mul.w	r4, r8, r4
 8003cac:	fb08 f802 	mul.w	r8, r8, r2
 8003cb0:	4354      	muls	r4, r2
 8003cb2:	9409      	str	r4, [sp, #36]	; 0x24
 8003cb4:	2e00      	cmp	r6, #0
 8003cb6:	d077      	beq.n	8003da8 <forward_matmul+0x190>
 8003cb8:	2400      	movs	r4, #0
 8003cba:	46a1      	mov	r9, r4
 8003cbc:	9602      	str	r6, [sp, #8]
 8003cbe:	9e06      	ldr	r6, [sp, #24]
 8003cc0:	2e00      	cmp	r6, #0
 8003cc2:	d067      	beq.n	8003d94 <forward_matmul+0x17c>
 8003cc4:	9f06      	ldr	r7, [sp, #24]
 8003cc6:	2600      	movs	r6, #0
 8003cc8:	9701      	str	r7, [sp, #4]
 8003cca:	f8cd c00c 	str.w	ip, [sp, #12]
 8003cce:	9505      	str	r5, [sp, #20]
 8003cd0:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8003cd4:	f1bc 0f00 	cmp.w	ip, #0
 8003cd8:	d051      	beq.n	8003d7e <forward_matmul+0x166>
 8003cda:	f8cd a010 	str.w	sl, [sp, #16]
 8003cde:	f04f 0a00 	mov.w	sl, #0
 8003ce2:	f8cd c000 	str.w	ip, [sp]
 8003ce6:	9207      	str	r2, [sp, #28]
 8003ce8:	9a04      	ldr	r2, [sp, #16]
 8003cea:	2a00      	cmp	r2, #0
 8003cec:	d03e      	beq.n	8003d6c <forward_matmul+0x154>
 8003cee:	f04f 0c00 	mov.w	ip, #0
 8003cf2:	9008      	str	r0, [sp, #32]
 8003cf4:	9808      	ldr	r0, [sp, #32]
 8003cf6:	ed9f 0a2f 	vldr	s0, [pc, #188]	; 8003db4 <.text_17>
 8003cfa:	6987      	ldr	r7, [r0, #24]
 8003cfc:	f8db 0018 	ldr.w	r0, [fp, #24]
 8003d00:	68bd      	ldr	r5, [r7, #8]
 8003d02:	6887      	ldr	r7, [r0, #8]
 8003d04:	192d      	adds	r5, r5, r4
 8003d06:	19ad      	adds	r5, r5, r6
 8003d08:	4465      	add	r5, ip
 8003d0a:	444f      	add	r7, r9
 8003d0c:	4457      	add	r7, sl
 8003d0e:	4467      	add	r7, ip
 8003d10:	b321      	cbz	r1, 8003d5c <forward_matmul+0x144>
 8003d12:	07c8      	lsls	r0, r1, #31
 8003d14:	d509      	bpl.n	8003d2a <forward_matmul+0x112>
 8003d16:	edd5 0a00 	vldr	s1, [r5]
 8003d1a:	eb05 058e 	add.w	r5, r5, lr, lsl #2
 8003d1e:	ed97 1a00 	vldr	s2, [r7]
 8003d22:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8003d26:	ee00 0a81 	vmla.f32	s0, s1, s2
 8003d2a:	0848      	lsrs	r0, r1, #1
 8003d2c:	f000 8016 	beq.w	8003d5c <forward_matmul+0x144>
 8003d30:	edd5 0a00 	vldr	s1, [r5]
 8003d34:	eb05 058e 	add.w	r5, r5, lr, lsl #2
 8003d38:	ed97 1a00 	vldr	s2, [r7]
 8003d3c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8003d40:	1e40      	subs	r0, r0, #1
 8003d42:	ee00 0a81 	vmla.f32	s0, s1, s2
 8003d46:	edd5 1a00 	vldr	s3, [r5]
 8003d4a:	eb05 058e 	add.w	r5, r5, lr, lsl #2
 8003d4e:	ed97 2a00 	vldr	s4, [r7]
 8003d52:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8003d56:	ee01 0a82 	vmla.f32	s0, s3, s4
 8003d5a:	d1e9      	bne.n	8003d30 <forward_matmul+0x118>
 8003d5c:	ed83 0a00 	vstr	s0, [r3]
 8003d60:	1d1b      	adds	r3, r3, #4
 8003d62:	1e52      	subs	r2, r2, #1
 8003d64:	f10c 0c04 	add.w	ip, ip, #4
 8003d68:	d1c4      	bne.n	8003cf4 <forward_matmul+0xdc>
 8003d6a:	9808      	ldr	r0, [sp, #32]
 8003d6c:	9d00      	ldr	r5, [sp, #0]
 8003d6e:	9a07      	ldr	r2, [sp, #28]
 8003d70:	eb0a 0a82 	add.w	sl, sl, r2, lsl #2
 8003d74:	1e6d      	subs	r5, r5, #1
 8003d76:	9500      	str	r5, [sp, #0]
 8003d78:	d1b6      	bne.n	8003ce8 <forward_matmul+0xd0>
 8003d7a:	f8dd a010 	ldr.w	sl, [sp, #16]
 8003d7e:	9f01      	ldr	r7, [sp, #4]
 8003d80:	f8dd c014 	ldr.w	ip, [sp, #20]
 8003d84:	eb06 068c 	add.w	r6, r6, ip, lsl #2
 8003d88:	1e7f      	subs	r7, r7, #1
 8003d8a:	9701      	str	r7, [sp, #4]
 8003d8c:	d1a0      	bne.n	8003cd0 <forward_matmul+0xb8>
 8003d8e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8003d92:	9d05      	ldr	r5, [sp, #20]
 8003d94:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8003d96:	eb09 0986 	add.w	r9, r9, r6, lsl #2
 8003d9a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8003d9c:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 8003da0:	9e02      	ldr	r6, [sp, #8]
 8003da2:	1e76      	subs	r6, r6, #1
 8003da4:	9602      	str	r6, [sp, #8]
 8003da6:	d18a      	bne.n	8003cbe <forward_matmul+0xa6>
 8003da8:	b00b      	add	sp, #44	; 0x2c
 8003daa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08003db0 <.text_16>:
 8003db0:	080029d5 	.word	0x080029d5

08003db4 <.text_17>:
 8003db4:	00000000 	.word	0x00000000

08003db8 <ai_shape_get_size>:
 8003db8:	b470      	push	{r4, r5, r6}
 8003dba:	4601      	mov	r1, r0
 8003dbc:	f04f 0201 	mov.w	r2, #1
 8003dc0:	680b      	ldr	r3, [r1, #0]
 8003dc2:	0a1b      	lsrs	r3, r3, #8
 8003dc4:	d01e      	beq.n	8003e04 <ai_shape_get_size+0x4c>
 8003dc6:	684c      	ldr	r4, [r1, #4]
 8003dc8:	4618      	mov	r0, r3
 8003dca:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8003dce:	1f0d      	subs	r5, r1, #4
 8003dd0:	f010 0103 	ands.w	r1, r0, #3
 8003dd4:	f000 8006 	beq.w	8003de4 <ai_shape_get_size+0x2c>
 8003dd8:	f855 6904 	ldr.w	r6, [r5], #-4
 8003ddc:	1e5b      	subs	r3, r3, #1
 8003dde:	4372      	muls	r2, r6
 8003de0:	1e49      	subs	r1, r1, #1
 8003de2:	d1f9      	bne.n	8003dd8 <ai_shape_get_size+0x20>
 8003de4:	0880      	lsrs	r0, r0, #2
 8003de6:	d00d      	beq.n	8003e04 <ai_shape_get_size+0x4c>
 8003de8:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8003dec:	3910      	subs	r1, #16
 8003dee:	68cb      	ldr	r3, [r1, #12]
 8003df0:	688c      	ldr	r4, [r1, #8]
 8003df2:	684d      	ldr	r5, [r1, #4]
 8003df4:	f851 6910 	ldr.w	r6, [r1], #-16
 8003df8:	4363      	muls	r3, r4
 8003dfa:	436b      	muls	r3, r5
 8003dfc:	4373      	muls	r3, r6
 8003dfe:	435a      	muls	r2, r3
 8003e00:	1e40      	subs	r0, r0, #1
 8003e02:	d1f4      	bne.n	8003dee <ai_shape_get_size+0x36>
 8003e04:	4610      	mov	r0, r2
 8003e06:	bc70      	pop	{r4, r5, r6}
 8003e08:	4770      	bx	lr
	...

08003e0c <nl_func_acos_array_f32>:
 8003e0c:	b570      	push	{r4, r5, r6, lr}
 8003e0e:	688c      	ldr	r4, [r1, #8]
 8003e10:	6880      	ldr	r0, [r0, #8]
 8003e12:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8003e16:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8003e1a:	1f0d      	subs	r5, r1, #4
 8003e1c:	1f16      	subs	r6, r2, #4
 8003e1e:	42a5      	cmp	r5, r4
 8003e20:	f0c0 800a 	bcc.w	8003e38 <nl_func_acos_array_f32+0x2c>
 8003e24:	ed95 0a00 	vldr	s0, [r5]
 8003e28:	1f2d      	subs	r5, r5, #4
 8003e2a:	f00f fb25 	bl	8013478 <acosf>
 8003e2e:	ed86 0a00 	vstr	s0, [r6]
 8003e32:	1f36      	subs	r6, r6, #4
 8003e34:	42a5      	cmp	r5, r4
 8003e36:	d2f5      	bcs.n	8003e24 <nl_func_acos_array_f32+0x18>
 8003e38:	bd70      	pop	{r4, r5, r6, pc}
	...

08003e3c <forward_acos>:
 8003e3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003e3e:	b081      	sub	sp, #4
 8003e40:	6942      	ldr	r2, [r0, #20]
 8003e42:	f04f 0501 	mov.w	r5, #1
 8003e46:	8811      	ldrh	r1, [r2, #0]
 8003e48:	2900      	cmp	r1, #0
 8003e4a:	bf1a      	itte	ne
 8003e4c:	6850      	ldrne	r0, [r2, #4]
 8003e4e:	1d00      	addne	r0, r0, #4
 8003e50:	2004      	moveq	r0, #4
 8003e52:	6800      	ldr	r0, [r0, #0]
 8003e54:	2800      	cmp	r0, #0
 8003e56:	bf14      	ite	ne
 8003e58:	6803      	ldrne	r3, [r0, #0]
 8003e5a:	2300      	moveq	r3, #0
 8003e5c:	2902      	cmp	r1, #2
 8003e5e:	bfa6      	itte	ge
 8003e60:	6850      	ldrge	r0, [r2, #4]
 8003e62:	3010      	addge	r0, #16
 8003e64:	2004      	movlt	r0, #4
 8003e66:	6800      	ldr	r0, [r0, #0]
 8003e68:	2800      	cmp	r0, #0
 8003e6a:	bf19      	ittee	ne
 8003e6c:	6800      	ldrne	r0, [r0, #0]
 8003e6e:	f100 0418 	addne.w	r4, r0, #24
 8003e72:	2100      	moveq	r1, #0
 8003e74:	f101 0418 	addeq.w	r4, r1, #24
 8003e78:	f103 0108 	add.w	r1, r3, #8
 8003e7c:	680a      	ldr	r2, [r1, #0]
 8003e7e:	0a12      	lsrs	r2, r2, #8
 8003e80:	d01f      	beq.n	8003ec2 <forward_acos+0x86>
 8003e82:	684e      	ldr	r6, [r1, #4]
 8003e84:	4610      	mov	r0, r2
 8003e86:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8003e8a:	1f0f      	subs	r7, r1, #4
 8003e8c:	f010 0103 	ands.w	r1, r0, #3
 8003e90:	d006      	beq.n	8003ea0 <forward_acos+0x64>
 8003e92:	1e52      	subs	r2, r2, #1
 8003e94:	f857 c904 	ldr.w	ip, [r7], #-4
 8003e98:	1e49      	subs	r1, r1, #1
 8003e9a:	fb0c f505 	mul.w	r5, ip, r5
 8003e9e:	d1f8      	bne.n	8003e92 <forward_acos+0x56>
 8003ea0:	0880      	lsrs	r0, r0, #2
 8003ea2:	d00e      	beq.n	8003ec2 <forward_acos+0x86>
 8003ea4:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8003ea8:	3910      	subs	r1, #16
 8003eaa:	68ca      	ldr	r2, [r1, #12]
 8003eac:	688e      	ldr	r6, [r1, #8]
 8003eae:	684f      	ldr	r7, [r1, #4]
 8003eb0:	f851 c910 	ldr.w	ip, [r1], #-16
 8003eb4:	4372      	muls	r2, r6
 8003eb6:	437a      	muls	r2, r7
 8003eb8:	fb0c f202 	mul.w	r2, ip, r2
 8003ebc:	4355      	muls	r5, r2
 8003ebe:	1e40      	subs	r0, r0, #1
 8003ec0:	d1f3      	bne.n	8003eaa <forward_acos+0x6e>
 8003ec2:	6998      	ldr	r0, [r3, #24]
 8003ec4:	6821      	ldr	r1, [r4, #0]
 8003ec6:	6886      	ldr	r6, [r0, #8]
 8003ec8:	688a      	ldr	r2, [r1, #8]
 8003eca:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 8003ece:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 8003ed2:	1f07      	subs	r7, r0, #4
 8003ed4:	1f1c      	subs	r4, r3, #4
 8003ed6:	42b7      	cmp	r7, r6
 8003ed8:	f0c0 800a 	bcc.w	8003ef0 <forward_acos+0xb4>
 8003edc:	ed97 0a00 	vldr	s0, [r7]
 8003ee0:	1f3f      	subs	r7, r7, #4
 8003ee2:	f00f fac9 	bl	8013478 <acosf>
 8003ee6:	ed84 0a00 	vstr	s0, [r4]
 8003eea:	1f24      	subs	r4, r4, #4
 8003eec:	42b7      	cmp	r7, r6
 8003eee:	d2f5      	bcs.n	8003edc <forward_acos+0xa0>
 8003ef0:	b001      	add	sp, #4
 8003ef2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003ef4 <nl_func_acosh_array_f32>:
 8003ef4:	b570      	push	{r4, r5, r6, lr}
 8003ef6:	688c      	ldr	r4, [r1, #8]
 8003ef8:	6880      	ldr	r0, [r0, #8]
 8003efa:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8003efe:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8003f02:	1f0d      	subs	r5, r1, #4
 8003f04:	1f16      	subs	r6, r2, #4
 8003f06:	42a5      	cmp	r5, r4
 8003f08:	f0c0 800a 	bcc.w	8003f20 <nl_func_acosh_array_f32+0x2c>
 8003f0c:	ed95 0a00 	vldr	s0, [r5]
 8003f10:	1f2d      	subs	r5, r5, #4
 8003f12:	f00f fb05 	bl	8013520 <acoshf>
 8003f16:	ed86 0a00 	vstr	s0, [r6]
 8003f1a:	1f36      	subs	r6, r6, #4
 8003f1c:	42a5      	cmp	r5, r4
 8003f1e:	d2f5      	bcs.n	8003f0c <nl_func_acosh_array_f32+0x18>
 8003f20:	bd70      	pop	{r4, r5, r6, pc}
	...

08003f24 <forward_acosh>:
 8003f24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003f26:	b081      	sub	sp, #4
 8003f28:	6942      	ldr	r2, [r0, #20]
 8003f2a:	f04f 0501 	mov.w	r5, #1
 8003f2e:	8811      	ldrh	r1, [r2, #0]
 8003f30:	2900      	cmp	r1, #0
 8003f32:	bf1a      	itte	ne
 8003f34:	6850      	ldrne	r0, [r2, #4]
 8003f36:	1d00      	addne	r0, r0, #4
 8003f38:	2004      	moveq	r0, #4
 8003f3a:	6800      	ldr	r0, [r0, #0]
 8003f3c:	2800      	cmp	r0, #0
 8003f3e:	bf14      	ite	ne
 8003f40:	6803      	ldrne	r3, [r0, #0]
 8003f42:	2300      	moveq	r3, #0
 8003f44:	2902      	cmp	r1, #2
 8003f46:	bfa6      	itte	ge
 8003f48:	6850      	ldrge	r0, [r2, #4]
 8003f4a:	3010      	addge	r0, #16
 8003f4c:	2004      	movlt	r0, #4
 8003f4e:	6800      	ldr	r0, [r0, #0]
 8003f50:	2800      	cmp	r0, #0
 8003f52:	bf19      	ittee	ne
 8003f54:	6800      	ldrne	r0, [r0, #0]
 8003f56:	f100 0418 	addne.w	r4, r0, #24
 8003f5a:	2100      	moveq	r1, #0
 8003f5c:	f101 0418 	addeq.w	r4, r1, #24
 8003f60:	f103 0108 	add.w	r1, r3, #8
 8003f64:	680a      	ldr	r2, [r1, #0]
 8003f66:	0a12      	lsrs	r2, r2, #8
 8003f68:	d01f      	beq.n	8003faa <forward_acosh+0x86>
 8003f6a:	684e      	ldr	r6, [r1, #4]
 8003f6c:	4610      	mov	r0, r2
 8003f6e:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8003f72:	1f0f      	subs	r7, r1, #4
 8003f74:	f010 0103 	ands.w	r1, r0, #3
 8003f78:	d006      	beq.n	8003f88 <forward_acosh+0x64>
 8003f7a:	1e52      	subs	r2, r2, #1
 8003f7c:	f857 c904 	ldr.w	ip, [r7], #-4
 8003f80:	1e49      	subs	r1, r1, #1
 8003f82:	fb0c f505 	mul.w	r5, ip, r5
 8003f86:	d1f8      	bne.n	8003f7a <forward_acosh+0x56>
 8003f88:	0880      	lsrs	r0, r0, #2
 8003f8a:	d00e      	beq.n	8003faa <forward_acosh+0x86>
 8003f8c:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8003f90:	3910      	subs	r1, #16
 8003f92:	68ca      	ldr	r2, [r1, #12]
 8003f94:	688e      	ldr	r6, [r1, #8]
 8003f96:	684f      	ldr	r7, [r1, #4]
 8003f98:	f851 c910 	ldr.w	ip, [r1], #-16
 8003f9c:	4372      	muls	r2, r6
 8003f9e:	437a      	muls	r2, r7
 8003fa0:	fb0c f202 	mul.w	r2, ip, r2
 8003fa4:	4355      	muls	r5, r2
 8003fa6:	1e40      	subs	r0, r0, #1
 8003fa8:	d1f3      	bne.n	8003f92 <forward_acosh+0x6e>
 8003faa:	6998      	ldr	r0, [r3, #24]
 8003fac:	6821      	ldr	r1, [r4, #0]
 8003fae:	6886      	ldr	r6, [r0, #8]
 8003fb0:	688a      	ldr	r2, [r1, #8]
 8003fb2:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 8003fb6:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 8003fba:	1f07      	subs	r7, r0, #4
 8003fbc:	1f1c      	subs	r4, r3, #4
 8003fbe:	42b7      	cmp	r7, r6
 8003fc0:	f0c0 800a 	bcc.w	8003fd8 <forward_acosh+0xb4>
 8003fc4:	ed97 0a00 	vldr	s0, [r7]
 8003fc8:	1f3f      	subs	r7, r7, #4
 8003fca:	f00f faa9 	bl	8013520 <acoshf>
 8003fce:	ed84 0a00 	vstr	s0, [r4]
 8003fd2:	1f24      	subs	r4, r4, #4
 8003fd4:	42b7      	cmp	r7, r6
 8003fd6:	d2f5      	bcs.n	8003fc4 <forward_acosh+0xa0>
 8003fd8:	b001      	add	sp, #4
 8003fda:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003fdc <nl_func_asin_array_f32>:
 8003fdc:	b570      	push	{r4, r5, r6, lr}
 8003fde:	688c      	ldr	r4, [r1, #8]
 8003fe0:	6880      	ldr	r0, [r0, #8]
 8003fe2:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8003fe6:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8003fea:	1f0d      	subs	r5, r1, #4
 8003fec:	1f16      	subs	r6, r2, #4
 8003fee:	42a5      	cmp	r5, r4
 8003ff0:	f0c0 800a 	bcc.w	8004008 <nl_func_asin_array_f32+0x2c>
 8003ff4:	ed95 0a00 	vldr	s0, [r5]
 8003ff8:	1f2d      	subs	r5, r5, #4
 8003ffa:	f00f fae1 	bl	80135c0 <asinf>
 8003ffe:	ed86 0a00 	vstr	s0, [r6]
 8004002:	1f36      	subs	r6, r6, #4
 8004004:	42a5      	cmp	r5, r4
 8004006:	d2f5      	bcs.n	8003ff4 <nl_func_asin_array_f32+0x18>
 8004008:	bd70      	pop	{r4, r5, r6, pc}
	...

0800400c <forward_asin>:
 800400c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800400e:	b081      	sub	sp, #4
 8004010:	6942      	ldr	r2, [r0, #20]
 8004012:	f04f 0501 	mov.w	r5, #1
 8004016:	8811      	ldrh	r1, [r2, #0]
 8004018:	2900      	cmp	r1, #0
 800401a:	bf1a      	itte	ne
 800401c:	6850      	ldrne	r0, [r2, #4]
 800401e:	1d00      	addne	r0, r0, #4
 8004020:	2004      	moveq	r0, #4
 8004022:	6800      	ldr	r0, [r0, #0]
 8004024:	2800      	cmp	r0, #0
 8004026:	bf14      	ite	ne
 8004028:	6803      	ldrne	r3, [r0, #0]
 800402a:	2300      	moveq	r3, #0
 800402c:	2902      	cmp	r1, #2
 800402e:	bfa6      	itte	ge
 8004030:	6850      	ldrge	r0, [r2, #4]
 8004032:	3010      	addge	r0, #16
 8004034:	2004      	movlt	r0, #4
 8004036:	6800      	ldr	r0, [r0, #0]
 8004038:	2800      	cmp	r0, #0
 800403a:	bf19      	ittee	ne
 800403c:	6800      	ldrne	r0, [r0, #0]
 800403e:	f100 0418 	addne.w	r4, r0, #24
 8004042:	2100      	moveq	r1, #0
 8004044:	f101 0418 	addeq.w	r4, r1, #24
 8004048:	f103 0108 	add.w	r1, r3, #8
 800404c:	680a      	ldr	r2, [r1, #0]
 800404e:	0a12      	lsrs	r2, r2, #8
 8004050:	d01f      	beq.n	8004092 <forward_asin+0x86>
 8004052:	684e      	ldr	r6, [r1, #4]
 8004054:	4610      	mov	r0, r2
 8004056:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 800405a:	1f0f      	subs	r7, r1, #4
 800405c:	f010 0103 	ands.w	r1, r0, #3
 8004060:	d006      	beq.n	8004070 <forward_asin+0x64>
 8004062:	1e52      	subs	r2, r2, #1
 8004064:	f857 c904 	ldr.w	ip, [r7], #-4
 8004068:	1e49      	subs	r1, r1, #1
 800406a:	fb0c f505 	mul.w	r5, ip, r5
 800406e:	d1f8      	bne.n	8004062 <forward_asin+0x56>
 8004070:	0880      	lsrs	r0, r0, #2
 8004072:	d00e      	beq.n	8004092 <forward_asin+0x86>
 8004074:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004078:	3910      	subs	r1, #16
 800407a:	68ca      	ldr	r2, [r1, #12]
 800407c:	688e      	ldr	r6, [r1, #8]
 800407e:	684f      	ldr	r7, [r1, #4]
 8004080:	f851 c910 	ldr.w	ip, [r1], #-16
 8004084:	4372      	muls	r2, r6
 8004086:	437a      	muls	r2, r7
 8004088:	fb0c f202 	mul.w	r2, ip, r2
 800408c:	4355      	muls	r5, r2
 800408e:	1e40      	subs	r0, r0, #1
 8004090:	d1f3      	bne.n	800407a <forward_asin+0x6e>
 8004092:	6998      	ldr	r0, [r3, #24]
 8004094:	6821      	ldr	r1, [r4, #0]
 8004096:	6886      	ldr	r6, [r0, #8]
 8004098:	688a      	ldr	r2, [r1, #8]
 800409a:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 800409e:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 80040a2:	1f07      	subs	r7, r0, #4
 80040a4:	1f1c      	subs	r4, r3, #4
 80040a6:	42b7      	cmp	r7, r6
 80040a8:	f0c0 800a 	bcc.w	80040c0 <forward_asin+0xb4>
 80040ac:	ed97 0a00 	vldr	s0, [r7]
 80040b0:	1f3f      	subs	r7, r7, #4
 80040b2:	f00f fa85 	bl	80135c0 <asinf>
 80040b6:	ed84 0a00 	vstr	s0, [r4]
 80040ba:	1f24      	subs	r4, r4, #4
 80040bc:	42b7      	cmp	r7, r6
 80040be:	d2f5      	bcs.n	80040ac <forward_asin+0xa0>
 80040c0:	b001      	add	sp, #4
 80040c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080040c4 <nl_func_asinh_array_f32>:
 80040c4:	b570      	push	{r4, r5, r6, lr}
 80040c6:	688c      	ldr	r4, [r1, #8]
 80040c8:	6880      	ldr	r0, [r0, #8]
 80040ca:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 80040ce:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80040d2:	1f0d      	subs	r5, r1, #4
 80040d4:	1f16      	subs	r6, r2, #4
 80040d6:	42a5      	cmp	r5, r4
 80040d8:	f0c0 800a 	bcc.w	80040f0 <nl_func_asinh_array_f32+0x2c>
 80040dc:	ed95 0a00 	vldr	s0, [r5]
 80040e0:	1f2d      	subs	r5, r5, #4
 80040e2:	f00e f9bf 	bl	8012464 <asinhf>
 80040e6:	ed86 0a00 	vstr	s0, [r6]
 80040ea:	1f36      	subs	r6, r6, #4
 80040ec:	42a5      	cmp	r5, r4
 80040ee:	d2f5      	bcs.n	80040dc <nl_func_asinh_array_f32+0x18>
 80040f0:	bd70      	pop	{r4, r5, r6, pc}
	...

080040f4 <forward_asinh>:
 80040f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80040f6:	b081      	sub	sp, #4
 80040f8:	6942      	ldr	r2, [r0, #20]
 80040fa:	f04f 0501 	mov.w	r5, #1
 80040fe:	8811      	ldrh	r1, [r2, #0]
 8004100:	2900      	cmp	r1, #0
 8004102:	bf1a      	itte	ne
 8004104:	6850      	ldrne	r0, [r2, #4]
 8004106:	1d00      	addne	r0, r0, #4
 8004108:	2004      	moveq	r0, #4
 800410a:	6800      	ldr	r0, [r0, #0]
 800410c:	2800      	cmp	r0, #0
 800410e:	bf14      	ite	ne
 8004110:	6803      	ldrne	r3, [r0, #0]
 8004112:	2300      	moveq	r3, #0
 8004114:	2902      	cmp	r1, #2
 8004116:	bfa6      	itte	ge
 8004118:	6850      	ldrge	r0, [r2, #4]
 800411a:	3010      	addge	r0, #16
 800411c:	2004      	movlt	r0, #4
 800411e:	6800      	ldr	r0, [r0, #0]
 8004120:	2800      	cmp	r0, #0
 8004122:	bf19      	ittee	ne
 8004124:	6800      	ldrne	r0, [r0, #0]
 8004126:	f100 0418 	addne.w	r4, r0, #24
 800412a:	2100      	moveq	r1, #0
 800412c:	f101 0418 	addeq.w	r4, r1, #24
 8004130:	f103 0108 	add.w	r1, r3, #8
 8004134:	680a      	ldr	r2, [r1, #0]
 8004136:	0a12      	lsrs	r2, r2, #8
 8004138:	d01f      	beq.n	800417a <forward_asinh+0x86>
 800413a:	684e      	ldr	r6, [r1, #4]
 800413c:	4610      	mov	r0, r2
 800413e:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004142:	1f0f      	subs	r7, r1, #4
 8004144:	f010 0103 	ands.w	r1, r0, #3
 8004148:	d006      	beq.n	8004158 <forward_asinh+0x64>
 800414a:	1e52      	subs	r2, r2, #1
 800414c:	f857 c904 	ldr.w	ip, [r7], #-4
 8004150:	1e49      	subs	r1, r1, #1
 8004152:	fb0c f505 	mul.w	r5, ip, r5
 8004156:	d1f8      	bne.n	800414a <forward_asinh+0x56>
 8004158:	0880      	lsrs	r0, r0, #2
 800415a:	d00e      	beq.n	800417a <forward_asinh+0x86>
 800415c:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004160:	3910      	subs	r1, #16
 8004162:	68ca      	ldr	r2, [r1, #12]
 8004164:	688e      	ldr	r6, [r1, #8]
 8004166:	684f      	ldr	r7, [r1, #4]
 8004168:	f851 c910 	ldr.w	ip, [r1], #-16
 800416c:	4372      	muls	r2, r6
 800416e:	437a      	muls	r2, r7
 8004170:	fb0c f202 	mul.w	r2, ip, r2
 8004174:	4355      	muls	r5, r2
 8004176:	1e40      	subs	r0, r0, #1
 8004178:	d1f3      	bne.n	8004162 <forward_asinh+0x6e>
 800417a:	6998      	ldr	r0, [r3, #24]
 800417c:	6821      	ldr	r1, [r4, #0]
 800417e:	6886      	ldr	r6, [r0, #8]
 8004180:	688a      	ldr	r2, [r1, #8]
 8004182:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 8004186:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 800418a:	1f07      	subs	r7, r0, #4
 800418c:	1f1c      	subs	r4, r3, #4
 800418e:	42b7      	cmp	r7, r6
 8004190:	f0c0 800a 	bcc.w	80041a8 <forward_asinh+0xb4>
 8004194:	ed97 0a00 	vldr	s0, [r7]
 8004198:	1f3f      	subs	r7, r7, #4
 800419a:	f00e f963 	bl	8012464 <asinhf>
 800419e:	ed84 0a00 	vstr	s0, [r4]
 80041a2:	1f24      	subs	r4, r4, #4
 80041a4:	42b7      	cmp	r7, r6
 80041a6:	d2f5      	bcs.n	8004194 <forward_asinh+0xa0>
 80041a8:	b001      	add	sp, #4
 80041aa:	bdf0      	pop	{r4, r5, r6, r7, pc}

080041ac <nl_func_atan_array_f32>:
 80041ac:	b570      	push	{r4, r5, r6, lr}
 80041ae:	688c      	ldr	r4, [r1, #8]
 80041b0:	6880      	ldr	r0, [r0, #8]
 80041b2:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 80041b6:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80041ba:	1f0d      	subs	r5, r1, #4
 80041bc:	1f16      	subs	r6, r2, #4
 80041be:	42a5      	cmp	r5, r4
 80041c0:	f0c0 800a 	bcc.w	80041d8 <nl_func_atan_array_f32+0x2c>
 80041c4:	ed95 0a00 	vldr	s0, [r5]
 80041c8:	1f2d      	subs	r5, r5, #4
 80041ca:	f00e f9b3 	bl	8012534 <atanf>
 80041ce:	ed86 0a00 	vstr	s0, [r6]
 80041d2:	1f36      	subs	r6, r6, #4
 80041d4:	42a5      	cmp	r5, r4
 80041d6:	d2f5      	bcs.n	80041c4 <nl_func_atan_array_f32+0x18>
 80041d8:	bd70      	pop	{r4, r5, r6, pc}
	...

080041dc <forward_atan>:
 80041dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80041de:	b081      	sub	sp, #4
 80041e0:	6942      	ldr	r2, [r0, #20]
 80041e2:	f04f 0501 	mov.w	r5, #1
 80041e6:	8811      	ldrh	r1, [r2, #0]
 80041e8:	2900      	cmp	r1, #0
 80041ea:	bf1a      	itte	ne
 80041ec:	6850      	ldrne	r0, [r2, #4]
 80041ee:	1d00      	addne	r0, r0, #4
 80041f0:	2004      	moveq	r0, #4
 80041f2:	6800      	ldr	r0, [r0, #0]
 80041f4:	2800      	cmp	r0, #0
 80041f6:	bf14      	ite	ne
 80041f8:	6803      	ldrne	r3, [r0, #0]
 80041fa:	2300      	moveq	r3, #0
 80041fc:	2902      	cmp	r1, #2
 80041fe:	bfa6      	itte	ge
 8004200:	6850      	ldrge	r0, [r2, #4]
 8004202:	3010      	addge	r0, #16
 8004204:	2004      	movlt	r0, #4
 8004206:	6800      	ldr	r0, [r0, #0]
 8004208:	2800      	cmp	r0, #0
 800420a:	bf19      	ittee	ne
 800420c:	6800      	ldrne	r0, [r0, #0]
 800420e:	f100 0418 	addne.w	r4, r0, #24
 8004212:	2100      	moveq	r1, #0
 8004214:	f101 0418 	addeq.w	r4, r1, #24
 8004218:	f103 0108 	add.w	r1, r3, #8
 800421c:	680a      	ldr	r2, [r1, #0]
 800421e:	0a12      	lsrs	r2, r2, #8
 8004220:	d01f      	beq.n	8004262 <forward_atan+0x86>
 8004222:	684e      	ldr	r6, [r1, #4]
 8004224:	4610      	mov	r0, r2
 8004226:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 800422a:	1f0f      	subs	r7, r1, #4
 800422c:	f010 0103 	ands.w	r1, r0, #3
 8004230:	d006      	beq.n	8004240 <forward_atan+0x64>
 8004232:	1e52      	subs	r2, r2, #1
 8004234:	f857 c904 	ldr.w	ip, [r7], #-4
 8004238:	1e49      	subs	r1, r1, #1
 800423a:	fb0c f505 	mul.w	r5, ip, r5
 800423e:	d1f8      	bne.n	8004232 <forward_atan+0x56>
 8004240:	0880      	lsrs	r0, r0, #2
 8004242:	d00e      	beq.n	8004262 <forward_atan+0x86>
 8004244:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004248:	3910      	subs	r1, #16
 800424a:	68ca      	ldr	r2, [r1, #12]
 800424c:	688e      	ldr	r6, [r1, #8]
 800424e:	684f      	ldr	r7, [r1, #4]
 8004250:	f851 c910 	ldr.w	ip, [r1], #-16
 8004254:	4372      	muls	r2, r6
 8004256:	437a      	muls	r2, r7
 8004258:	fb0c f202 	mul.w	r2, ip, r2
 800425c:	4355      	muls	r5, r2
 800425e:	1e40      	subs	r0, r0, #1
 8004260:	d1f3      	bne.n	800424a <forward_atan+0x6e>
 8004262:	6998      	ldr	r0, [r3, #24]
 8004264:	6821      	ldr	r1, [r4, #0]
 8004266:	6886      	ldr	r6, [r0, #8]
 8004268:	688a      	ldr	r2, [r1, #8]
 800426a:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 800426e:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 8004272:	1f07      	subs	r7, r0, #4
 8004274:	1f1c      	subs	r4, r3, #4
 8004276:	42b7      	cmp	r7, r6
 8004278:	f0c0 800a 	bcc.w	8004290 <forward_atan+0xb4>
 800427c:	ed97 0a00 	vldr	s0, [r7]
 8004280:	1f3f      	subs	r7, r7, #4
 8004282:	f00e f957 	bl	8012534 <atanf>
 8004286:	ed84 0a00 	vstr	s0, [r4]
 800428a:	1f24      	subs	r4, r4, #4
 800428c:	42b7      	cmp	r7, r6
 800428e:	d2f5      	bcs.n	800427c <forward_atan+0xa0>
 8004290:	b001      	add	sp, #4
 8004292:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004294 <nl_func_atanh_array_f32>:
 8004294:	b570      	push	{r4, r5, r6, lr}
 8004296:	688c      	ldr	r4, [r1, #8]
 8004298:	6880      	ldr	r0, [r0, #8]
 800429a:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 800429e:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80042a2:	1f0d      	subs	r5, r1, #4
 80042a4:	1f16      	subs	r6, r2, #4
 80042a6:	42a5      	cmp	r5, r4
 80042a8:	f0c0 800a 	bcc.w	80042c0 <nl_func_atanh_array_f32+0x2c>
 80042ac:	ed95 0a00 	vldr	s0, [r5]
 80042b0:	1f2d      	subs	r5, r5, #4
 80042b2:	f00f f9d9 	bl	8013668 <atanhf>
 80042b6:	ed86 0a00 	vstr	s0, [r6]
 80042ba:	1f36      	subs	r6, r6, #4
 80042bc:	42a5      	cmp	r5, r4
 80042be:	d2f5      	bcs.n	80042ac <nl_func_atanh_array_f32+0x18>
 80042c0:	bd70      	pop	{r4, r5, r6, pc}
	...

080042c4 <forward_atanh>:
 80042c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80042c6:	b081      	sub	sp, #4
 80042c8:	6942      	ldr	r2, [r0, #20]
 80042ca:	f04f 0501 	mov.w	r5, #1
 80042ce:	8811      	ldrh	r1, [r2, #0]
 80042d0:	2900      	cmp	r1, #0
 80042d2:	bf1a      	itte	ne
 80042d4:	6850      	ldrne	r0, [r2, #4]
 80042d6:	1d00      	addne	r0, r0, #4
 80042d8:	2004      	moveq	r0, #4
 80042da:	6800      	ldr	r0, [r0, #0]
 80042dc:	2800      	cmp	r0, #0
 80042de:	bf14      	ite	ne
 80042e0:	6803      	ldrne	r3, [r0, #0]
 80042e2:	2300      	moveq	r3, #0
 80042e4:	2902      	cmp	r1, #2
 80042e6:	bfa6      	itte	ge
 80042e8:	6850      	ldrge	r0, [r2, #4]
 80042ea:	3010      	addge	r0, #16
 80042ec:	2004      	movlt	r0, #4
 80042ee:	6800      	ldr	r0, [r0, #0]
 80042f0:	2800      	cmp	r0, #0
 80042f2:	bf19      	ittee	ne
 80042f4:	6800      	ldrne	r0, [r0, #0]
 80042f6:	f100 0418 	addne.w	r4, r0, #24
 80042fa:	2100      	moveq	r1, #0
 80042fc:	f101 0418 	addeq.w	r4, r1, #24
 8004300:	f103 0108 	add.w	r1, r3, #8
 8004304:	680a      	ldr	r2, [r1, #0]
 8004306:	0a12      	lsrs	r2, r2, #8
 8004308:	d01f      	beq.n	800434a <forward_atanh+0x86>
 800430a:	684e      	ldr	r6, [r1, #4]
 800430c:	4610      	mov	r0, r2
 800430e:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004312:	1f0f      	subs	r7, r1, #4
 8004314:	f010 0103 	ands.w	r1, r0, #3
 8004318:	d006      	beq.n	8004328 <forward_atanh+0x64>
 800431a:	1e52      	subs	r2, r2, #1
 800431c:	f857 c904 	ldr.w	ip, [r7], #-4
 8004320:	1e49      	subs	r1, r1, #1
 8004322:	fb0c f505 	mul.w	r5, ip, r5
 8004326:	d1f8      	bne.n	800431a <forward_atanh+0x56>
 8004328:	0880      	lsrs	r0, r0, #2
 800432a:	d00e      	beq.n	800434a <forward_atanh+0x86>
 800432c:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004330:	3910      	subs	r1, #16
 8004332:	68ca      	ldr	r2, [r1, #12]
 8004334:	688e      	ldr	r6, [r1, #8]
 8004336:	684f      	ldr	r7, [r1, #4]
 8004338:	f851 c910 	ldr.w	ip, [r1], #-16
 800433c:	4372      	muls	r2, r6
 800433e:	437a      	muls	r2, r7
 8004340:	fb0c f202 	mul.w	r2, ip, r2
 8004344:	4355      	muls	r5, r2
 8004346:	1e40      	subs	r0, r0, #1
 8004348:	d1f3      	bne.n	8004332 <forward_atanh+0x6e>
 800434a:	6998      	ldr	r0, [r3, #24]
 800434c:	6821      	ldr	r1, [r4, #0]
 800434e:	6886      	ldr	r6, [r0, #8]
 8004350:	688a      	ldr	r2, [r1, #8]
 8004352:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 8004356:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 800435a:	1f07      	subs	r7, r0, #4
 800435c:	1f1c      	subs	r4, r3, #4
 800435e:	42b7      	cmp	r7, r6
 8004360:	f0c0 800a 	bcc.w	8004378 <forward_atanh+0xb4>
 8004364:	ed97 0a00 	vldr	s0, [r7]
 8004368:	1f3f      	subs	r7, r7, #4
 800436a:	f00f f97d 	bl	8013668 <atanhf>
 800436e:	ed84 0a00 	vstr	s0, [r4]
 8004372:	1f24      	subs	r4, r4, #4
 8004374:	42b7      	cmp	r7, r6
 8004376:	d2f5      	bcs.n	8004364 <forward_atanh+0xa0>
 8004378:	b001      	add	sp, #4
 800437a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800437c <nl_func_cos_array_f32>:
 800437c:	b570      	push	{r4, r5, r6, lr}
 800437e:	688c      	ldr	r4, [r1, #8]
 8004380:	6880      	ldr	r0, [r0, #8]
 8004382:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8004386:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 800438a:	1f0d      	subs	r5, r1, #4
 800438c:	1f16      	subs	r6, r2, #4
 800438e:	42a5      	cmp	r5, r4
 8004390:	f0c0 800a 	bcc.w	80043a8 <nl_func_cos_array_f32+0x2c>
 8004394:	ed95 0a00 	vldr	s0, [r5]
 8004398:	1f2d      	subs	r5, r5, #4
 800439a:	f00e f9dd 	bl	8012758 <cosf>
 800439e:	ed86 0a00 	vstr	s0, [r6]
 80043a2:	1f36      	subs	r6, r6, #4
 80043a4:	42a5      	cmp	r5, r4
 80043a6:	d2f5      	bcs.n	8004394 <nl_func_cos_array_f32+0x18>
 80043a8:	bd70      	pop	{r4, r5, r6, pc}
	...

080043ac <forward_cos>:
 80043ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80043ae:	b081      	sub	sp, #4
 80043b0:	6942      	ldr	r2, [r0, #20]
 80043b2:	f04f 0501 	mov.w	r5, #1
 80043b6:	8811      	ldrh	r1, [r2, #0]
 80043b8:	2900      	cmp	r1, #0
 80043ba:	bf1a      	itte	ne
 80043bc:	6850      	ldrne	r0, [r2, #4]
 80043be:	1d00      	addne	r0, r0, #4
 80043c0:	2004      	moveq	r0, #4
 80043c2:	6800      	ldr	r0, [r0, #0]
 80043c4:	2800      	cmp	r0, #0
 80043c6:	bf14      	ite	ne
 80043c8:	6803      	ldrne	r3, [r0, #0]
 80043ca:	2300      	moveq	r3, #0
 80043cc:	2902      	cmp	r1, #2
 80043ce:	bfa6      	itte	ge
 80043d0:	6850      	ldrge	r0, [r2, #4]
 80043d2:	3010      	addge	r0, #16
 80043d4:	2004      	movlt	r0, #4
 80043d6:	6800      	ldr	r0, [r0, #0]
 80043d8:	2800      	cmp	r0, #0
 80043da:	bf19      	ittee	ne
 80043dc:	6800      	ldrne	r0, [r0, #0]
 80043de:	f100 0418 	addne.w	r4, r0, #24
 80043e2:	2100      	moveq	r1, #0
 80043e4:	f101 0418 	addeq.w	r4, r1, #24
 80043e8:	f103 0108 	add.w	r1, r3, #8
 80043ec:	680a      	ldr	r2, [r1, #0]
 80043ee:	0a12      	lsrs	r2, r2, #8
 80043f0:	d01f      	beq.n	8004432 <forward_cos+0x86>
 80043f2:	684e      	ldr	r6, [r1, #4]
 80043f4:	4610      	mov	r0, r2
 80043f6:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80043fa:	1f0f      	subs	r7, r1, #4
 80043fc:	f010 0103 	ands.w	r1, r0, #3
 8004400:	d006      	beq.n	8004410 <forward_cos+0x64>
 8004402:	1e52      	subs	r2, r2, #1
 8004404:	f857 c904 	ldr.w	ip, [r7], #-4
 8004408:	1e49      	subs	r1, r1, #1
 800440a:	fb0c f505 	mul.w	r5, ip, r5
 800440e:	d1f8      	bne.n	8004402 <forward_cos+0x56>
 8004410:	0880      	lsrs	r0, r0, #2
 8004412:	d00e      	beq.n	8004432 <forward_cos+0x86>
 8004414:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004418:	3910      	subs	r1, #16
 800441a:	68ca      	ldr	r2, [r1, #12]
 800441c:	688e      	ldr	r6, [r1, #8]
 800441e:	684f      	ldr	r7, [r1, #4]
 8004420:	f851 c910 	ldr.w	ip, [r1], #-16
 8004424:	4372      	muls	r2, r6
 8004426:	437a      	muls	r2, r7
 8004428:	fb0c f202 	mul.w	r2, ip, r2
 800442c:	4355      	muls	r5, r2
 800442e:	1e40      	subs	r0, r0, #1
 8004430:	d1f3      	bne.n	800441a <forward_cos+0x6e>
 8004432:	6998      	ldr	r0, [r3, #24]
 8004434:	6821      	ldr	r1, [r4, #0]
 8004436:	6886      	ldr	r6, [r0, #8]
 8004438:	688a      	ldr	r2, [r1, #8]
 800443a:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 800443e:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 8004442:	1f07      	subs	r7, r0, #4
 8004444:	1f1c      	subs	r4, r3, #4
 8004446:	42b7      	cmp	r7, r6
 8004448:	f0c0 800a 	bcc.w	8004460 <forward_cos+0xb4>
 800444c:	ed97 0a00 	vldr	s0, [r7]
 8004450:	1f3f      	subs	r7, r7, #4
 8004452:	f00e f981 	bl	8012758 <cosf>
 8004456:	ed84 0a00 	vstr	s0, [r4]
 800445a:	1f24      	subs	r4, r4, #4
 800445c:	42b7      	cmp	r7, r6
 800445e:	d2f5      	bcs.n	800444c <forward_cos+0xa0>
 8004460:	b001      	add	sp, #4
 8004462:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004464 <nl_func_cosh_array_f32>:
 8004464:	b570      	push	{r4, r5, r6, lr}
 8004466:	688c      	ldr	r4, [r1, #8]
 8004468:	6880      	ldr	r0, [r0, #8]
 800446a:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 800446e:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8004472:	1f0d      	subs	r5, r1, #4
 8004474:	1f16      	subs	r6, r2, #4
 8004476:	42a5      	cmp	r5, r4
 8004478:	f0c0 800a 	bcc.w	8004490 <nl_func_cosh_array_f32+0x2c>
 800447c:	ed95 0a00 	vldr	s0, [r5]
 8004480:	1f2d      	subs	r5, r5, #4
 8004482:	f00f f959 	bl	8013738 <coshf>
 8004486:	ed86 0a00 	vstr	s0, [r6]
 800448a:	1f36      	subs	r6, r6, #4
 800448c:	42a5      	cmp	r5, r4
 800448e:	d2f5      	bcs.n	800447c <nl_func_cosh_array_f32+0x18>
 8004490:	bd70      	pop	{r4, r5, r6, pc}
	...

08004494 <forward_cosh>:
 8004494:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004496:	b081      	sub	sp, #4
 8004498:	6942      	ldr	r2, [r0, #20]
 800449a:	f04f 0501 	mov.w	r5, #1
 800449e:	8811      	ldrh	r1, [r2, #0]
 80044a0:	2900      	cmp	r1, #0
 80044a2:	bf1a      	itte	ne
 80044a4:	6850      	ldrne	r0, [r2, #4]
 80044a6:	1d00      	addne	r0, r0, #4
 80044a8:	2004      	moveq	r0, #4
 80044aa:	6800      	ldr	r0, [r0, #0]
 80044ac:	2800      	cmp	r0, #0
 80044ae:	bf14      	ite	ne
 80044b0:	6803      	ldrne	r3, [r0, #0]
 80044b2:	2300      	moveq	r3, #0
 80044b4:	2902      	cmp	r1, #2
 80044b6:	bfa6      	itte	ge
 80044b8:	6850      	ldrge	r0, [r2, #4]
 80044ba:	3010      	addge	r0, #16
 80044bc:	2004      	movlt	r0, #4
 80044be:	6800      	ldr	r0, [r0, #0]
 80044c0:	2800      	cmp	r0, #0
 80044c2:	bf19      	ittee	ne
 80044c4:	6800      	ldrne	r0, [r0, #0]
 80044c6:	f100 0418 	addne.w	r4, r0, #24
 80044ca:	2100      	moveq	r1, #0
 80044cc:	f101 0418 	addeq.w	r4, r1, #24
 80044d0:	f103 0108 	add.w	r1, r3, #8
 80044d4:	680a      	ldr	r2, [r1, #0]
 80044d6:	0a12      	lsrs	r2, r2, #8
 80044d8:	d01f      	beq.n	800451a <forward_cosh+0x86>
 80044da:	684e      	ldr	r6, [r1, #4]
 80044dc:	4610      	mov	r0, r2
 80044de:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80044e2:	1f0f      	subs	r7, r1, #4
 80044e4:	f010 0103 	ands.w	r1, r0, #3
 80044e8:	d006      	beq.n	80044f8 <forward_cosh+0x64>
 80044ea:	1e52      	subs	r2, r2, #1
 80044ec:	f857 c904 	ldr.w	ip, [r7], #-4
 80044f0:	1e49      	subs	r1, r1, #1
 80044f2:	fb0c f505 	mul.w	r5, ip, r5
 80044f6:	d1f8      	bne.n	80044ea <forward_cosh+0x56>
 80044f8:	0880      	lsrs	r0, r0, #2
 80044fa:	d00e      	beq.n	800451a <forward_cosh+0x86>
 80044fc:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004500:	3910      	subs	r1, #16
 8004502:	68ca      	ldr	r2, [r1, #12]
 8004504:	688e      	ldr	r6, [r1, #8]
 8004506:	684f      	ldr	r7, [r1, #4]
 8004508:	f851 c910 	ldr.w	ip, [r1], #-16
 800450c:	4372      	muls	r2, r6
 800450e:	437a      	muls	r2, r7
 8004510:	fb0c f202 	mul.w	r2, ip, r2
 8004514:	4355      	muls	r5, r2
 8004516:	1e40      	subs	r0, r0, #1
 8004518:	d1f3      	bne.n	8004502 <forward_cosh+0x6e>
 800451a:	6998      	ldr	r0, [r3, #24]
 800451c:	6821      	ldr	r1, [r4, #0]
 800451e:	6886      	ldr	r6, [r0, #8]
 8004520:	688a      	ldr	r2, [r1, #8]
 8004522:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 8004526:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 800452a:	1f07      	subs	r7, r0, #4
 800452c:	1f1c      	subs	r4, r3, #4
 800452e:	42b7      	cmp	r7, r6
 8004530:	f0c0 800a 	bcc.w	8004548 <forward_cosh+0xb4>
 8004534:	ed97 0a00 	vldr	s0, [r7]
 8004538:	1f3f      	subs	r7, r7, #4
 800453a:	f00f f8fd 	bl	8013738 <coshf>
 800453e:	ed84 0a00 	vstr	s0, [r4]
 8004542:	1f24      	subs	r4, r4, #4
 8004544:	42b7      	cmp	r7, r6
 8004546:	d2f5      	bcs.n	8004534 <forward_cosh+0xa0>
 8004548:	b001      	add	sp, #4
 800454a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800454c <nl_func_erf_array_f32>:
 800454c:	b570      	push	{r4, r5, r6, lr}
 800454e:	688c      	ldr	r4, [r1, #8]
 8004550:	6880      	ldr	r0, [r0, #8]
 8004552:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8004556:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 800455a:	1f0d      	subs	r5, r1, #4
 800455c:	1f16      	subs	r6, r2, #4
 800455e:	42a5      	cmp	r5, r4
 8004560:	f0c0 800a 	bcc.w	8004578 <nl_func_erf_array_f32+0x2c>
 8004564:	ed95 0a00 	vldr	s0, [r5]
 8004568:	1f2d      	subs	r5, r5, #4
 800456a:	f00e f935 	bl	80127d8 <erff>
 800456e:	ed86 0a00 	vstr	s0, [r6]
 8004572:	1f36      	subs	r6, r6, #4
 8004574:	42a5      	cmp	r5, r4
 8004576:	d2f5      	bcs.n	8004564 <nl_func_erf_array_f32+0x18>
 8004578:	bd70      	pop	{r4, r5, r6, pc}
	...

0800457c <forward_erf>:
 800457c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800457e:	b081      	sub	sp, #4
 8004580:	6942      	ldr	r2, [r0, #20]
 8004582:	f04f 0501 	mov.w	r5, #1
 8004586:	8811      	ldrh	r1, [r2, #0]
 8004588:	2900      	cmp	r1, #0
 800458a:	bf1a      	itte	ne
 800458c:	6850      	ldrne	r0, [r2, #4]
 800458e:	1d00      	addne	r0, r0, #4
 8004590:	2004      	moveq	r0, #4
 8004592:	6800      	ldr	r0, [r0, #0]
 8004594:	2800      	cmp	r0, #0
 8004596:	bf14      	ite	ne
 8004598:	6803      	ldrne	r3, [r0, #0]
 800459a:	2300      	moveq	r3, #0
 800459c:	2902      	cmp	r1, #2
 800459e:	bfa6      	itte	ge
 80045a0:	6850      	ldrge	r0, [r2, #4]
 80045a2:	3010      	addge	r0, #16
 80045a4:	2004      	movlt	r0, #4
 80045a6:	6800      	ldr	r0, [r0, #0]
 80045a8:	2800      	cmp	r0, #0
 80045aa:	bf19      	ittee	ne
 80045ac:	6800      	ldrne	r0, [r0, #0]
 80045ae:	f100 0418 	addne.w	r4, r0, #24
 80045b2:	2100      	moveq	r1, #0
 80045b4:	f101 0418 	addeq.w	r4, r1, #24
 80045b8:	f103 0108 	add.w	r1, r3, #8
 80045bc:	680a      	ldr	r2, [r1, #0]
 80045be:	0a12      	lsrs	r2, r2, #8
 80045c0:	d01f      	beq.n	8004602 <forward_erf+0x86>
 80045c2:	684e      	ldr	r6, [r1, #4]
 80045c4:	4610      	mov	r0, r2
 80045c6:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80045ca:	1f0f      	subs	r7, r1, #4
 80045cc:	f010 0103 	ands.w	r1, r0, #3
 80045d0:	d006      	beq.n	80045e0 <forward_erf+0x64>
 80045d2:	1e52      	subs	r2, r2, #1
 80045d4:	f857 c904 	ldr.w	ip, [r7], #-4
 80045d8:	1e49      	subs	r1, r1, #1
 80045da:	fb0c f505 	mul.w	r5, ip, r5
 80045de:	d1f8      	bne.n	80045d2 <forward_erf+0x56>
 80045e0:	0880      	lsrs	r0, r0, #2
 80045e2:	d00e      	beq.n	8004602 <forward_erf+0x86>
 80045e4:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80045e8:	3910      	subs	r1, #16
 80045ea:	68ca      	ldr	r2, [r1, #12]
 80045ec:	688e      	ldr	r6, [r1, #8]
 80045ee:	684f      	ldr	r7, [r1, #4]
 80045f0:	f851 c910 	ldr.w	ip, [r1], #-16
 80045f4:	4372      	muls	r2, r6
 80045f6:	437a      	muls	r2, r7
 80045f8:	fb0c f202 	mul.w	r2, ip, r2
 80045fc:	4355      	muls	r5, r2
 80045fe:	1e40      	subs	r0, r0, #1
 8004600:	d1f3      	bne.n	80045ea <forward_erf+0x6e>
 8004602:	6998      	ldr	r0, [r3, #24]
 8004604:	6821      	ldr	r1, [r4, #0]
 8004606:	6886      	ldr	r6, [r0, #8]
 8004608:	688a      	ldr	r2, [r1, #8]
 800460a:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 800460e:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 8004612:	1f07      	subs	r7, r0, #4
 8004614:	1f1c      	subs	r4, r3, #4
 8004616:	42b7      	cmp	r7, r6
 8004618:	f0c0 800a 	bcc.w	8004630 <forward_erf+0xb4>
 800461c:	ed97 0a00 	vldr	s0, [r7]
 8004620:	1f3f      	subs	r7, r7, #4
 8004622:	f00e f8d9 	bl	80127d8 <erff>
 8004626:	ed84 0a00 	vstr	s0, [r4]
 800462a:	1f24      	subs	r4, r4, #4
 800462c:	42b7      	cmp	r7, r6
 800462e:	d2f5      	bcs.n	800461c <forward_erf+0xa0>
 8004630:	b001      	add	sp, #4
 8004632:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004634 <nl_func_log_array_f32>:
 8004634:	b570      	push	{r4, r5, r6, lr}
 8004636:	688c      	ldr	r4, [r1, #8]
 8004638:	6880      	ldr	r0, [r0, #8]
 800463a:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 800463e:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8004642:	1f0d      	subs	r5, r1, #4
 8004644:	1f16      	subs	r6, r2, #4
 8004646:	42a5      	cmp	r5, r4
 8004648:	f0c0 800a 	bcc.w	8004660 <nl_func_log_array_f32+0x2c>
 800464c:	ed95 0a00 	vldr	s0, [r5]
 8004650:	1f2d      	subs	r5, r5, #4
 8004652:	f00e fb69 	bl	8012d28 <logf>
 8004656:	ed86 0a00 	vstr	s0, [r6]
 800465a:	1f36      	subs	r6, r6, #4
 800465c:	42a5      	cmp	r5, r4
 800465e:	d2f5      	bcs.n	800464c <nl_func_log_array_f32+0x18>
 8004660:	bd70      	pop	{r4, r5, r6, pc}
	...

08004664 <forward_log>:
 8004664:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004666:	b081      	sub	sp, #4
 8004668:	6942      	ldr	r2, [r0, #20]
 800466a:	f04f 0501 	mov.w	r5, #1
 800466e:	8811      	ldrh	r1, [r2, #0]
 8004670:	2900      	cmp	r1, #0
 8004672:	bf1a      	itte	ne
 8004674:	6850      	ldrne	r0, [r2, #4]
 8004676:	1d00      	addne	r0, r0, #4
 8004678:	2004      	moveq	r0, #4
 800467a:	6800      	ldr	r0, [r0, #0]
 800467c:	2800      	cmp	r0, #0
 800467e:	bf14      	ite	ne
 8004680:	6803      	ldrne	r3, [r0, #0]
 8004682:	2300      	moveq	r3, #0
 8004684:	2902      	cmp	r1, #2
 8004686:	bfa6      	itte	ge
 8004688:	6850      	ldrge	r0, [r2, #4]
 800468a:	3010      	addge	r0, #16
 800468c:	2004      	movlt	r0, #4
 800468e:	6800      	ldr	r0, [r0, #0]
 8004690:	2800      	cmp	r0, #0
 8004692:	bf19      	ittee	ne
 8004694:	6800      	ldrne	r0, [r0, #0]
 8004696:	f100 0418 	addne.w	r4, r0, #24
 800469a:	2100      	moveq	r1, #0
 800469c:	f101 0418 	addeq.w	r4, r1, #24
 80046a0:	f103 0108 	add.w	r1, r3, #8
 80046a4:	680a      	ldr	r2, [r1, #0]
 80046a6:	0a12      	lsrs	r2, r2, #8
 80046a8:	d01f      	beq.n	80046ea <forward_log+0x86>
 80046aa:	684e      	ldr	r6, [r1, #4]
 80046ac:	4610      	mov	r0, r2
 80046ae:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80046b2:	1f0f      	subs	r7, r1, #4
 80046b4:	f010 0103 	ands.w	r1, r0, #3
 80046b8:	d006      	beq.n	80046c8 <forward_log+0x64>
 80046ba:	1e52      	subs	r2, r2, #1
 80046bc:	f857 c904 	ldr.w	ip, [r7], #-4
 80046c0:	1e49      	subs	r1, r1, #1
 80046c2:	fb0c f505 	mul.w	r5, ip, r5
 80046c6:	d1f8      	bne.n	80046ba <forward_log+0x56>
 80046c8:	0880      	lsrs	r0, r0, #2
 80046ca:	d00e      	beq.n	80046ea <forward_log+0x86>
 80046cc:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80046d0:	3910      	subs	r1, #16
 80046d2:	68ca      	ldr	r2, [r1, #12]
 80046d4:	688e      	ldr	r6, [r1, #8]
 80046d6:	684f      	ldr	r7, [r1, #4]
 80046d8:	f851 c910 	ldr.w	ip, [r1], #-16
 80046dc:	4372      	muls	r2, r6
 80046de:	437a      	muls	r2, r7
 80046e0:	fb0c f202 	mul.w	r2, ip, r2
 80046e4:	4355      	muls	r5, r2
 80046e6:	1e40      	subs	r0, r0, #1
 80046e8:	d1f3      	bne.n	80046d2 <forward_log+0x6e>
 80046ea:	6998      	ldr	r0, [r3, #24]
 80046ec:	6821      	ldr	r1, [r4, #0]
 80046ee:	6886      	ldr	r6, [r0, #8]
 80046f0:	688a      	ldr	r2, [r1, #8]
 80046f2:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 80046f6:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 80046fa:	1f07      	subs	r7, r0, #4
 80046fc:	1f1c      	subs	r4, r3, #4
 80046fe:	42b7      	cmp	r7, r6
 8004700:	f0c0 800a 	bcc.w	8004718 <forward_log+0xb4>
 8004704:	ed97 0a00 	vldr	s0, [r7]
 8004708:	1f3f      	subs	r7, r7, #4
 800470a:	f00e fb0d 	bl	8012d28 <logf>
 800470e:	ed84 0a00 	vstr	s0, [r4]
 8004712:	1f24      	subs	r4, r4, #4
 8004714:	42b7      	cmp	r7, r6
 8004716:	d2f5      	bcs.n	8004704 <forward_log+0xa0>
 8004718:	b001      	add	sp, #4
 800471a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800471c <nl_func_rsqrt_array_f32>:
 800471c:	b570      	push	{r4, r5, r6, lr}
 800471e:	460c      	mov	r4, r1
 8004720:	6880      	ldr	r0, [r0, #8]
 8004722:	68a1      	ldr	r1, [r4, #8]
 8004724:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 8004728:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 800472c:	1f1d      	subs	r5, r3, #4
 800472e:	1f16      	subs	r6, r2, #4
 8004730:	428d      	cmp	r5, r1
 8004732:	d30e      	bcc.n	8004752 <nl_func_rsqrt_array_f32+0x36>
 8004734:	ed95 0a00 	vldr	s0, [r5]
 8004738:	1f2d      	subs	r5, r5, #4
 800473a:	f002 fa49 	bl	8006bd0 <ai_math_sqrt>
 800473e:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 8004742:	eec0 0a80 	vdiv.f32	s1, s1, s0
 8004746:	edc6 0a00 	vstr	s1, [r6]
 800474a:	68a0      	ldr	r0, [r4, #8]
 800474c:	1f36      	subs	r6, r6, #4
 800474e:	4285      	cmp	r5, r0
 8004750:	d2f0      	bcs.n	8004734 <nl_func_rsqrt_array_f32+0x18>
 8004752:	bd70      	pop	{r4, r5, r6, pc}

08004754 <forward_rsqrt>:
 8004754:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004756:	b081      	sub	sp, #4
 8004758:	6942      	ldr	r2, [r0, #20]
 800475a:	f04f 0501 	mov.w	r5, #1
 800475e:	8811      	ldrh	r1, [r2, #0]
 8004760:	2900      	cmp	r1, #0
 8004762:	bf1a      	itte	ne
 8004764:	6850      	ldrne	r0, [r2, #4]
 8004766:	1d00      	addne	r0, r0, #4
 8004768:	2004      	moveq	r0, #4
 800476a:	6800      	ldr	r0, [r0, #0]
 800476c:	2800      	cmp	r0, #0
 800476e:	bf14      	ite	ne
 8004770:	6803      	ldrne	r3, [r0, #0]
 8004772:	2300      	moveq	r3, #0
 8004774:	2902      	cmp	r1, #2
 8004776:	bfa6      	itte	ge
 8004778:	6850      	ldrge	r0, [r2, #4]
 800477a:	3010      	addge	r0, #16
 800477c:	2004      	movlt	r0, #4
 800477e:	6800      	ldr	r0, [r0, #0]
 8004780:	2800      	cmp	r0, #0
 8004782:	bf19      	ittee	ne
 8004784:	6800      	ldrne	r0, [r0, #0]
 8004786:	f100 0418 	addne.w	r4, r0, #24
 800478a:	2100      	moveq	r1, #0
 800478c:	f101 0418 	addeq.w	r4, r1, #24
 8004790:	f103 0108 	add.w	r1, r3, #8
 8004794:	680a      	ldr	r2, [r1, #0]
 8004796:	0a12      	lsrs	r2, r2, #8
 8004798:	d01f      	beq.n	80047da <forward_rsqrt+0x86>
 800479a:	684e      	ldr	r6, [r1, #4]
 800479c:	4610      	mov	r0, r2
 800479e:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80047a2:	1f0f      	subs	r7, r1, #4
 80047a4:	f010 0103 	ands.w	r1, r0, #3
 80047a8:	d006      	beq.n	80047b8 <forward_rsqrt+0x64>
 80047aa:	1e52      	subs	r2, r2, #1
 80047ac:	f857 c904 	ldr.w	ip, [r7], #-4
 80047b0:	1e49      	subs	r1, r1, #1
 80047b2:	fb0c f505 	mul.w	r5, ip, r5
 80047b6:	d1f8      	bne.n	80047aa <forward_rsqrt+0x56>
 80047b8:	0880      	lsrs	r0, r0, #2
 80047ba:	d00e      	beq.n	80047da <forward_rsqrt+0x86>
 80047bc:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80047c0:	3910      	subs	r1, #16
 80047c2:	68ca      	ldr	r2, [r1, #12]
 80047c4:	688e      	ldr	r6, [r1, #8]
 80047c6:	684f      	ldr	r7, [r1, #4]
 80047c8:	f851 c910 	ldr.w	ip, [r1], #-16
 80047cc:	4372      	muls	r2, r6
 80047ce:	437a      	muls	r2, r7
 80047d0:	fb0c f202 	mul.w	r2, ip, r2
 80047d4:	4355      	muls	r5, r2
 80047d6:	1e40      	subs	r0, r0, #1
 80047d8:	d1f3      	bne.n	80047c2 <forward_rsqrt+0x6e>
 80047da:	699e      	ldr	r6, [r3, #24]
 80047dc:	6822      	ldr	r2, [r4, #0]
 80047de:	68b0      	ldr	r0, [r6, #8]
 80047e0:	6893      	ldr	r3, [r2, #8]
 80047e2:	eb00 0185 	add.w	r1, r0, r5, lsl #2
 80047e6:	eb03 0485 	add.w	r4, r3, r5, lsl #2
 80047ea:	1f0f      	subs	r7, r1, #4
 80047ec:	1f24      	subs	r4, r4, #4
 80047ee:	4287      	cmp	r7, r0
 80047f0:	f0c0 800f 	bcc.w	8004812 <forward_rsqrt+0xbe>
 80047f4:	ed97 0a00 	vldr	s0, [r7]
 80047f8:	1f3f      	subs	r7, r7, #4
 80047fa:	f002 f9e9 	bl	8006bd0 <ai_math_sqrt>
 80047fe:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 8004802:	eec0 0a80 	vdiv.f32	s1, s1, s0
 8004806:	edc4 0a00 	vstr	s1, [r4]
 800480a:	68b0      	ldr	r0, [r6, #8]
 800480c:	1f24      	subs	r4, r4, #4
 800480e:	4287      	cmp	r7, r0
 8004810:	d2f0      	bcs.n	80047f4 <forward_rsqrt+0xa0>
 8004812:	b001      	add	sp, #4
 8004814:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08004818 <nl_func_sin_array_f32>:
 8004818:	b570      	push	{r4, r5, r6, lr}
 800481a:	688c      	ldr	r4, [r1, #8]
 800481c:	6880      	ldr	r0, [r0, #8]
 800481e:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8004822:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8004826:	1f0d      	subs	r5, r1, #4
 8004828:	1f16      	subs	r6, r2, #4
 800482a:	42a5      	cmp	r5, r4
 800482c:	f0c0 800a 	bcc.w	8004844 <nl_func_sin_array_f32+0x2c>
 8004830:	ed95 0a00 	vldr	s0, [r5]
 8004834:	1f2d      	subs	r5, r5, #4
 8004836:	f00e fd63 	bl	8013300 <sinf>
 800483a:	ed86 0a00 	vstr	s0, [r6]
 800483e:	1f36      	subs	r6, r6, #4
 8004840:	42a5      	cmp	r5, r4
 8004842:	d2f5      	bcs.n	8004830 <nl_func_sin_array_f32+0x18>
 8004844:	bd70      	pop	{r4, r5, r6, pc}
	...

08004848 <forward_sin>:
 8004848:	b5f0      	push	{r4, r5, r6, r7, lr}
 800484a:	b081      	sub	sp, #4
 800484c:	6942      	ldr	r2, [r0, #20]
 800484e:	f04f 0501 	mov.w	r5, #1
 8004852:	8811      	ldrh	r1, [r2, #0]
 8004854:	2900      	cmp	r1, #0
 8004856:	bf1a      	itte	ne
 8004858:	6850      	ldrne	r0, [r2, #4]
 800485a:	1d00      	addne	r0, r0, #4
 800485c:	2004      	moveq	r0, #4
 800485e:	6800      	ldr	r0, [r0, #0]
 8004860:	2800      	cmp	r0, #0
 8004862:	bf14      	ite	ne
 8004864:	6803      	ldrne	r3, [r0, #0]
 8004866:	2300      	moveq	r3, #0
 8004868:	2902      	cmp	r1, #2
 800486a:	bfa6      	itte	ge
 800486c:	6850      	ldrge	r0, [r2, #4]
 800486e:	3010      	addge	r0, #16
 8004870:	2004      	movlt	r0, #4
 8004872:	6800      	ldr	r0, [r0, #0]
 8004874:	2800      	cmp	r0, #0
 8004876:	bf19      	ittee	ne
 8004878:	6800      	ldrne	r0, [r0, #0]
 800487a:	f100 0418 	addne.w	r4, r0, #24
 800487e:	2100      	moveq	r1, #0
 8004880:	f101 0418 	addeq.w	r4, r1, #24
 8004884:	f103 0108 	add.w	r1, r3, #8
 8004888:	680a      	ldr	r2, [r1, #0]
 800488a:	0a12      	lsrs	r2, r2, #8
 800488c:	d01f      	beq.n	80048ce <forward_sin+0x86>
 800488e:	684e      	ldr	r6, [r1, #4]
 8004890:	4610      	mov	r0, r2
 8004892:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004896:	1f0f      	subs	r7, r1, #4
 8004898:	f010 0103 	ands.w	r1, r0, #3
 800489c:	d006      	beq.n	80048ac <forward_sin+0x64>
 800489e:	1e52      	subs	r2, r2, #1
 80048a0:	f857 c904 	ldr.w	ip, [r7], #-4
 80048a4:	1e49      	subs	r1, r1, #1
 80048a6:	fb0c f505 	mul.w	r5, ip, r5
 80048aa:	d1f8      	bne.n	800489e <forward_sin+0x56>
 80048ac:	0880      	lsrs	r0, r0, #2
 80048ae:	d00e      	beq.n	80048ce <forward_sin+0x86>
 80048b0:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80048b4:	3910      	subs	r1, #16
 80048b6:	68ca      	ldr	r2, [r1, #12]
 80048b8:	688e      	ldr	r6, [r1, #8]
 80048ba:	684f      	ldr	r7, [r1, #4]
 80048bc:	f851 c910 	ldr.w	ip, [r1], #-16
 80048c0:	4372      	muls	r2, r6
 80048c2:	437a      	muls	r2, r7
 80048c4:	fb0c f202 	mul.w	r2, ip, r2
 80048c8:	4355      	muls	r5, r2
 80048ca:	1e40      	subs	r0, r0, #1
 80048cc:	d1f3      	bne.n	80048b6 <forward_sin+0x6e>
 80048ce:	6998      	ldr	r0, [r3, #24]
 80048d0:	6821      	ldr	r1, [r4, #0]
 80048d2:	6886      	ldr	r6, [r0, #8]
 80048d4:	688a      	ldr	r2, [r1, #8]
 80048d6:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 80048da:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 80048de:	1f07      	subs	r7, r0, #4
 80048e0:	1f1c      	subs	r4, r3, #4
 80048e2:	42b7      	cmp	r7, r6
 80048e4:	f0c0 800a 	bcc.w	80048fc <forward_sin+0xb4>
 80048e8:	ed97 0a00 	vldr	s0, [r7]
 80048ec:	1f3f      	subs	r7, r7, #4
 80048ee:	f00e fd07 	bl	8013300 <sinf>
 80048f2:	ed84 0a00 	vstr	s0, [r4]
 80048f6:	1f24      	subs	r4, r4, #4
 80048f8:	42b7      	cmp	r7, r6
 80048fa:	d2f5      	bcs.n	80048e8 <forward_sin+0xa0>
 80048fc:	b001      	add	sp, #4
 80048fe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004900 <nl_func_sinh_array_f32>:
 8004900:	b570      	push	{r4, r5, r6, lr}
 8004902:	688c      	ldr	r4, [r1, #8]
 8004904:	6880      	ldr	r0, [r0, #8]
 8004906:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 800490a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 800490e:	1f0d      	subs	r5, r1, #4
 8004910:	1f16      	subs	r6, r2, #4
 8004912:	42a5      	cmp	r5, r4
 8004914:	f0c0 800a 	bcc.w	800492c <nl_func_sinh_array_f32+0x2c>
 8004918:	ed95 0a00 	vldr	s0, [r5]
 800491c:	1f2d      	subs	r5, r5, #4
 800491e:	f00e ffbf 	bl	80138a0 <sinhf>
 8004922:	ed86 0a00 	vstr	s0, [r6]
 8004926:	1f36      	subs	r6, r6, #4
 8004928:	42a5      	cmp	r5, r4
 800492a:	d2f5      	bcs.n	8004918 <nl_func_sinh_array_f32+0x18>
 800492c:	bd70      	pop	{r4, r5, r6, pc}
	...

08004930 <forward_sinh>:
 8004930:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004932:	b081      	sub	sp, #4
 8004934:	6942      	ldr	r2, [r0, #20]
 8004936:	f04f 0501 	mov.w	r5, #1
 800493a:	8811      	ldrh	r1, [r2, #0]
 800493c:	2900      	cmp	r1, #0
 800493e:	bf1a      	itte	ne
 8004940:	6850      	ldrne	r0, [r2, #4]
 8004942:	1d00      	addne	r0, r0, #4
 8004944:	2004      	moveq	r0, #4
 8004946:	6800      	ldr	r0, [r0, #0]
 8004948:	2800      	cmp	r0, #0
 800494a:	bf14      	ite	ne
 800494c:	6803      	ldrne	r3, [r0, #0]
 800494e:	2300      	moveq	r3, #0
 8004950:	2902      	cmp	r1, #2
 8004952:	bfa6      	itte	ge
 8004954:	6850      	ldrge	r0, [r2, #4]
 8004956:	3010      	addge	r0, #16
 8004958:	2004      	movlt	r0, #4
 800495a:	6800      	ldr	r0, [r0, #0]
 800495c:	2800      	cmp	r0, #0
 800495e:	bf19      	ittee	ne
 8004960:	6800      	ldrne	r0, [r0, #0]
 8004962:	f100 0418 	addne.w	r4, r0, #24
 8004966:	2100      	moveq	r1, #0
 8004968:	f101 0418 	addeq.w	r4, r1, #24
 800496c:	f103 0108 	add.w	r1, r3, #8
 8004970:	680a      	ldr	r2, [r1, #0]
 8004972:	0a12      	lsrs	r2, r2, #8
 8004974:	d01f      	beq.n	80049b6 <forward_sinh+0x86>
 8004976:	684e      	ldr	r6, [r1, #4]
 8004978:	4610      	mov	r0, r2
 800497a:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 800497e:	1f0f      	subs	r7, r1, #4
 8004980:	f010 0103 	ands.w	r1, r0, #3
 8004984:	d006      	beq.n	8004994 <forward_sinh+0x64>
 8004986:	1e52      	subs	r2, r2, #1
 8004988:	f857 c904 	ldr.w	ip, [r7], #-4
 800498c:	1e49      	subs	r1, r1, #1
 800498e:	fb0c f505 	mul.w	r5, ip, r5
 8004992:	d1f8      	bne.n	8004986 <forward_sinh+0x56>
 8004994:	0880      	lsrs	r0, r0, #2
 8004996:	d00e      	beq.n	80049b6 <forward_sinh+0x86>
 8004998:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 800499c:	3910      	subs	r1, #16
 800499e:	68ca      	ldr	r2, [r1, #12]
 80049a0:	688e      	ldr	r6, [r1, #8]
 80049a2:	684f      	ldr	r7, [r1, #4]
 80049a4:	f851 c910 	ldr.w	ip, [r1], #-16
 80049a8:	4372      	muls	r2, r6
 80049aa:	437a      	muls	r2, r7
 80049ac:	fb0c f202 	mul.w	r2, ip, r2
 80049b0:	4355      	muls	r5, r2
 80049b2:	1e40      	subs	r0, r0, #1
 80049b4:	d1f3      	bne.n	800499e <forward_sinh+0x6e>
 80049b6:	6998      	ldr	r0, [r3, #24]
 80049b8:	6821      	ldr	r1, [r4, #0]
 80049ba:	6886      	ldr	r6, [r0, #8]
 80049bc:	688a      	ldr	r2, [r1, #8]
 80049be:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 80049c2:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 80049c6:	1f07      	subs	r7, r0, #4
 80049c8:	1f1c      	subs	r4, r3, #4
 80049ca:	42b7      	cmp	r7, r6
 80049cc:	f0c0 800a 	bcc.w	80049e4 <forward_sinh+0xb4>
 80049d0:	ed97 0a00 	vldr	s0, [r7]
 80049d4:	1f3f      	subs	r7, r7, #4
 80049d6:	f00e ff63 	bl	80138a0 <sinhf>
 80049da:	ed84 0a00 	vstr	s0, [r4]
 80049de:	1f24      	subs	r4, r4, #4
 80049e0:	42b7      	cmp	r7, r6
 80049e2:	d2f5      	bcs.n	80049d0 <forward_sinh+0xa0>
 80049e4:	b001      	add	sp, #4
 80049e6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080049e8 <nl_func_tan_array_f32>:
 80049e8:	b570      	push	{r4, r5, r6, lr}
 80049ea:	688c      	ldr	r4, [r1, #8]
 80049ec:	6880      	ldr	r0, [r0, #8]
 80049ee:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 80049f2:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80049f6:	1f0d      	subs	r5, r1, #4
 80049f8:	1f16      	subs	r6, r2, #4
 80049fa:	42a5      	cmp	r5, r4
 80049fc:	f0c0 800a 	bcc.w	8004a14 <nl_func_tan_array_f32+0x2c>
 8004a00:	ed95 0a00 	vldr	s0, [r5]
 8004a04:	1f2d      	subs	r5, r5, #4
 8004a06:	f00e fcbd 	bl	8013384 <tanf>
 8004a0a:	ed86 0a00 	vstr	s0, [r6]
 8004a0e:	1f36      	subs	r6, r6, #4
 8004a10:	42a5      	cmp	r5, r4
 8004a12:	d2f5      	bcs.n	8004a00 <nl_func_tan_array_f32+0x18>
 8004a14:	bd70      	pop	{r4, r5, r6, pc}
	...

08004a18 <forward_tan>:
 8004a18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a1a:	b081      	sub	sp, #4
 8004a1c:	6942      	ldr	r2, [r0, #20]
 8004a1e:	f04f 0501 	mov.w	r5, #1
 8004a22:	8811      	ldrh	r1, [r2, #0]
 8004a24:	2900      	cmp	r1, #0
 8004a26:	bf1a      	itte	ne
 8004a28:	6850      	ldrne	r0, [r2, #4]
 8004a2a:	1d00      	addne	r0, r0, #4
 8004a2c:	2004      	moveq	r0, #4
 8004a2e:	6800      	ldr	r0, [r0, #0]
 8004a30:	2800      	cmp	r0, #0
 8004a32:	bf14      	ite	ne
 8004a34:	6803      	ldrne	r3, [r0, #0]
 8004a36:	2300      	moveq	r3, #0
 8004a38:	2902      	cmp	r1, #2
 8004a3a:	bfa6      	itte	ge
 8004a3c:	6850      	ldrge	r0, [r2, #4]
 8004a3e:	3010      	addge	r0, #16
 8004a40:	2004      	movlt	r0, #4
 8004a42:	6800      	ldr	r0, [r0, #0]
 8004a44:	2800      	cmp	r0, #0
 8004a46:	bf19      	ittee	ne
 8004a48:	6800      	ldrne	r0, [r0, #0]
 8004a4a:	f100 0418 	addne.w	r4, r0, #24
 8004a4e:	2100      	moveq	r1, #0
 8004a50:	f101 0418 	addeq.w	r4, r1, #24
 8004a54:	f103 0108 	add.w	r1, r3, #8
 8004a58:	680a      	ldr	r2, [r1, #0]
 8004a5a:	0a12      	lsrs	r2, r2, #8
 8004a5c:	d01f      	beq.n	8004a9e <forward_tan+0x86>
 8004a5e:	684e      	ldr	r6, [r1, #4]
 8004a60:	4610      	mov	r0, r2
 8004a62:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004a66:	1f0f      	subs	r7, r1, #4
 8004a68:	f010 0103 	ands.w	r1, r0, #3
 8004a6c:	d006      	beq.n	8004a7c <forward_tan+0x64>
 8004a6e:	1e52      	subs	r2, r2, #1
 8004a70:	f857 c904 	ldr.w	ip, [r7], #-4
 8004a74:	1e49      	subs	r1, r1, #1
 8004a76:	fb0c f505 	mul.w	r5, ip, r5
 8004a7a:	d1f8      	bne.n	8004a6e <forward_tan+0x56>
 8004a7c:	0880      	lsrs	r0, r0, #2
 8004a7e:	d00e      	beq.n	8004a9e <forward_tan+0x86>
 8004a80:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004a84:	3910      	subs	r1, #16
 8004a86:	68ca      	ldr	r2, [r1, #12]
 8004a88:	688e      	ldr	r6, [r1, #8]
 8004a8a:	684f      	ldr	r7, [r1, #4]
 8004a8c:	f851 c910 	ldr.w	ip, [r1], #-16
 8004a90:	4372      	muls	r2, r6
 8004a92:	437a      	muls	r2, r7
 8004a94:	fb0c f202 	mul.w	r2, ip, r2
 8004a98:	4355      	muls	r5, r2
 8004a9a:	1e40      	subs	r0, r0, #1
 8004a9c:	d1f3      	bne.n	8004a86 <forward_tan+0x6e>
 8004a9e:	6998      	ldr	r0, [r3, #24]
 8004aa0:	6821      	ldr	r1, [r4, #0]
 8004aa2:	6886      	ldr	r6, [r0, #8]
 8004aa4:	688a      	ldr	r2, [r1, #8]
 8004aa6:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 8004aaa:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 8004aae:	1f07      	subs	r7, r0, #4
 8004ab0:	1f1c      	subs	r4, r3, #4
 8004ab2:	42b7      	cmp	r7, r6
 8004ab4:	f0c0 800a 	bcc.w	8004acc <forward_tan+0xb4>
 8004ab8:	ed97 0a00 	vldr	s0, [r7]
 8004abc:	1f3f      	subs	r7, r7, #4
 8004abe:	f00e fc61 	bl	8013384 <tanf>
 8004ac2:	ed84 0a00 	vstr	s0, [r4]
 8004ac6:	1f24      	subs	r4, r4, #4
 8004ac8:	42b7      	cmp	r7, r6
 8004aca:	d2f5      	bcs.n	8004ab8 <forward_tan+0xa0>
 8004acc:	b001      	add	sp, #4
 8004ace:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004ad0 <nl_func_abs_array_f32>:
 8004ad0:	6889      	ldr	r1, [r1, #8]
 8004ad2:	6880      	ldr	r0, [r0, #8]
 8004ad4:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 8004ad8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8004adc:	1f1b      	subs	r3, r3, #4
 8004ade:	1f10      	subs	r0, r2, #4
 8004ae0:	428b      	cmp	r3, r1
 8004ae2:	d307      	bcc.n	8004af4 <nl_func_abs_array_f32+0x24>
 8004ae4:	f853 c904 	ldr.w	ip, [r3], #-4
 8004ae8:	428b      	cmp	r3, r1
 8004aea:	f02c 4200 	bic.w	r2, ip, #2147483648	; 0x80000000
 8004aee:	f840 2904 	str.w	r2, [r0], #-4
 8004af2:	d2f7      	bcs.n	8004ae4 <nl_func_abs_array_f32+0x14>
 8004af4:	4770      	bx	lr
	...

08004af8 <forward_abs>:
 8004af8:	b4f0      	push	{r4, r5, r6, r7}
 8004afa:	6942      	ldr	r2, [r0, #20]
 8004afc:	f04f 0501 	mov.w	r5, #1
 8004b00:	8811      	ldrh	r1, [r2, #0]
 8004b02:	2900      	cmp	r1, #0
 8004b04:	bf1a      	itte	ne
 8004b06:	6850      	ldrne	r0, [r2, #4]
 8004b08:	1d00      	addne	r0, r0, #4
 8004b0a:	2004      	moveq	r0, #4
 8004b0c:	6800      	ldr	r0, [r0, #0]
 8004b0e:	2800      	cmp	r0, #0
 8004b10:	bf14      	ite	ne
 8004b12:	6803      	ldrne	r3, [r0, #0]
 8004b14:	2300      	moveq	r3, #0
 8004b16:	2902      	cmp	r1, #2
 8004b18:	bfa6      	itte	ge
 8004b1a:	6850      	ldrge	r0, [r2, #4]
 8004b1c:	3010      	addge	r0, #16
 8004b1e:	2004      	movlt	r0, #4
 8004b20:	6800      	ldr	r0, [r0, #0]
 8004b22:	2800      	cmp	r0, #0
 8004b24:	bf19      	ittee	ne
 8004b26:	6800      	ldrne	r0, [r0, #0]
 8004b28:	f100 0418 	addne.w	r4, r0, #24
 8004b2c:	2100      	moveq	r1, #0
 8004b2e:	f101 0418 	addeq.w	r4, r1, #24
 8004b32:	f103 0108 	add.w	r1, r3, #8
 8004b36:	680a      	ldr	r2, [r1, #0]
 8004b38:	0a12      	lsrs	r2, r2, #8
 8004b3a:	d01f      	beq.n	8004b7c <forward_abs+0x84>
 8004b3c:	684e      	ldr	r6, [r1, #4]
 8004b3e:	4610      	mov	r0, r2
 8004b40:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004b44:	1f0f      	subs	r7, r1, #4
 8004b46:	f010 0103 	ands.w	r1, r0, #3
 8004b4a:	d006      	beq.n	8004b5a <forward_abs+0x62>
 8004b4c:	1e52      	subs	r2, r2, #1
 8004b4e:	f857 c904 	ldr.w	ip, [r7], #-4
 8004b52:	1e49      	subs	r1, r1, #1
 8004b54:	fb0c f505 	mul.w	r5, ip, r5
 8004b58:	d1f8      	bne.n	8004b4c <forward_abs+0x54>
 8004b5a:	0880      	lsrs	r0, r0, #2
 8004b5c:	d00e      	beq.n	8004b7c <forward_abs+0x84>
 8004b5e:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004b62:	3910      	subs	r1, #16
 8004b64:	68ca      	ldr	r2, [r1, #12]
 8004b66:	688e      	ldr	r6, [r1, #8]
 8004b68:	684f      	ldr	r7, [r1, #4]
 8004b6a:	f851 c910 	ldr.w	ip, [r1], #-16
 8004b6e:	4372      	muls	r2, r6
 8004b70:	437a      	muls	r2, r7
 8004b72:	fb0c f202 	mul.w	r2, ip, r2
 8004b76:	4355      	muls	r5, r2
 8004b78:	1e40      	subs	r0, r0, #1
 8004b7a:	d1f3      	bne.n	8004b64 <forward_abs+0x6c>
 8004b7c:	6998      	ldr	r0, [r3, #24]
 8004b7e:	6822      	ldr	r2, [r4, #0]
 8004b80:	6880      	ldr	r0, [r0, #8]
 8004b82:	6893      	ldr	r3, [r2, #8]
 8004b84:	eb00 0185 	add.w	r1, r0, r5, lsl #2
 8004b88:	eb03 0485 	add.w	r4, r3, r5, lsl #2
 8004b8c:	1f09      	subs	r1, r1, #4
 8004b8e:	1f22      	subs	r2, r4, #4
 8004b90:	4281      	cmp	r1, r0
 8004b92:	d307      	bcc.n	8004ba4 <forward_abs+0xac>
 8004b94:	f851 5904 	ldr.w	r5, [r1], #-4
 8004b98:	4281      	cmp	r1, r0
 8004b9a:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8004b9e:	f842 3904 	str.w	r3, [r2], #-4
 8004ba2:	d2f7      	bcs.n	8004b94 <forward_abs+0x9c>
 8004ba4:	bcf0      	pop	{r4, r5, r6, r7}
 8004ba6:	4770      	bx	lr

08004ba8 <nl_func_ceil_array_f32>:
 8004ba8:	b570      	push	{r4, r5, r6, lr}
 8004baa:	688c      	ldr	r4, [r1, #8]
 8004bac:	6880      	ldr	r0, [r0, #8]
 8004bae:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8004bb2:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8004bb6:	1f0d      	subs	r5, r1, #4
 8004bb8:	1f16      	subs	r6, r2, #4
 8004bba:	42a5      	cmp	r5, r4
 8004bbc:	f0c0 800a 	bcc.w	8004bd4 <nl_func_ceil_array_f32+0x2c>
 8004bc0:	ed95 0a00 	vldr	s0, [r5]
 8004bc4:	1f2d      	subs	r5, r5, #4
 8004bc6:	f00d fd87 	bl	80126d8 <ceilf>
 8004bca:	ed86 0a00 	vstr	s0, [r6]
 8004bce:	1f36      	subs	r6, r6, #4
 8004bd0:	42a5      	cmp	r5, r4
 8004bd2:	d2f5      	bcs.n	8004bc0 <nl_func_ceil_array_f32+0x18>
 8004bd4:	bd70      	pop	{r4, r5, r6, pc}
	...

08004bd8 <forward_ceil>:
 8004bd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004bda:	b081      	sub	sp, #4
 8004bdc:	6942      	ldr	r2, [r0, #20]
 8004bde:	f04f 0501 	mov.w	r5, #1
 8004be2:	8811      	ldrh	r1, [r2, #0]
 8004be4:	2900      	cmp	r1, #0
 8004be6:	bf1a      	itte	ne
 8004be8:	6850      	ldrne	r0, [r2, #4]
 8004bea:	1d00      	addne	r0, r0, #4
 8004bec:	2004      	moveq	r0, #4
 8004bee:	6800      	ldr	r0, [r0, #0]
 8004bf0:	2800      	cmp	r0, #0
 8004bf2:	bf14      	ite	ne
 8004bf4:	6803      	ldrne	r3, [r0, #0]
 8004bf6:	2300      	moveq	r3, #0
 8004bf8:	2902      	cmp	r1, #2
 8004bfa:	bfa6      	itte	ge
 8004bfc:	6850      	ldrge	r0, [r2, #4]
 8004bfe:	3010      	addge	r0, #16
 8004c00:	2004      	movlt	r0, #4
 8004c02:	6800      	ldr	r0, [r0, #0]
 8004c04:	2800      	cmp	r0, #0
 8004c06:	bf19      	ittee	ne
 8004c08:	6800      	ldrne	r0, [r0, #0]
 8004c0a:	f100 0418 	addne.w	r4, r0, #24
 8004c0e:	2100      	moveq	r1, #0
 8004c10:	f101 0418 	addeq.w	r4, r1, #24
 8004c14:	f103 0108 	add.w	r1, r3, #8
 8004c18:	680a      	ldr	r2, [r1, #0]
 8004c1a:	0a12      	lsrs	r2, r2, #8
 8004c1c:	d01f      	beq.n	8004c5e <forward_ceil+0x86>
 8004c1e:	684e      	ldr	r6, [r1, #4]
 8004c20:	4610      	mov	r0, r2
 8004c22:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004c26:	1f0f      	subs	r7, r1, #4
 8004c28:	f010 0103 	ands.w	r1, r0, #3
 8004c2c:	d006      	beq.n	8004c3c <forward_ceil+0x64>
 8004c2e:	1e52      	subs	r2, r2, #1
 8004c30:	f857 c904 	ldr.w	ip, [r7], #-4
 8004c34:	1e49      	subs	r1, r1, #1
 8004c36:	fb0c f505 	mul.w	r5, ip, r5
 8004c3a:	d1f8      	bne.n	8004c2e <forward_ceil+0x56>
 8004c3c:	0880      	lsrs	r0, r0, #2
 8004c3e:	d00e      	beq.n	8004c5e <forward_ceil+0x86>
 8004c40:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004c44:	3910      	subs	r1, #16
 8004c46:	68ca      	ldr	r2, [r1, #12]
 8004c48:	688e      	ldr	r6, [r1, #8]
 8004c4a:	684f      	ldr	r7, [r1, #4]
 8004c4c:	f851 c910 	ldr.w	ip, [r1], #-16
 8004c50:	4372      	muls	r2, r6
 8004c52:	437a      	muls	r2, r7
 8004c54:	fb0c f202 	mul.w	r2, ip, r2
 8004c58:	4355      	muls	r5, r2
 8004c5a:	1e40      	subs	r0, r0, #1
 8004c5c:	d1f3      	bne.n	8004c46 <forward_ceil+0x6e>
 8004c5e:	6998      	ldr	r0, [r3, #24]
 8004c60:	6821      	ldr	r1, [r4, #0]
 8004c62:	6886      	ldr	r6, [r0, #8]
 8004c64:	688a      	ldr	r2, [r1, #8]
 8004c66:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 8004c6a:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 8004c6e:	1f07      	subs	r7, r0, #4
 8004c70:	1f1c      	subs	r4, r3, #4
 8004c72:	42b7      	cmp	r7, r6
 8004c74:	f0c0 800a 	bcc.w	8004c8c <forward_ceil+0xb4>
 8004c78:	ed97 0a00 	vldr	s0, [r7]
 8004c7c:	1f3f      	subs	r7, r7, #4
 8004c7e:	f00d fd2b 	bl	80126d8 <ceilf>
 8004c82:	ed84 0a00 	vstr	s0, [r4]
 8004c86:	1f24      	subs	r4, r4, #4
 8004c88:	42b7      	cmp	r7, r6
 8004c8a:	d2f5      	bcs.n	8004c78 <forward_ceil+0xa0>
 8004c8c:	b001      	add	sp, #4
 8004c8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004c90 <nl_func_floor_array_f32>:
 8004c90:	b570      	push	{r4, r5, r6, lr}
 8004c92:	688c      	ldr	r4, [r1, #8]
 8004c94:	6880      	ldr	r0, [r0, #8]
 8004c96:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8004c9a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8004c9e:	1f0d      	subs	r5, r1, #4
 8004ca0:	1f16      	subs	r6, r2, #4
 8004ca2:	42a5      	cmp	r5, r4
 8004ca4:	f0c0 800a 	bcc.w	8004cbc <nl_func_floor_array_f32+0x2c>
 8004ca8:	ed95 0a00 	vldr	s0, [r5]
 8004cac:	1f2d      	subs	r5, r5, #4
 8004cae:	f00d fff9 	bl	8012ca4 <floorf>
 8004cb2:	ed86 0a00 	vstr	s0, [r6]
 8004cb6:	1f36      	subs	r6, r6, #4
 8004cb8:	42a5      	cmp	r5, r4
 8004cba:	d2f5      	bcs.n	8004ca8 <nl_func_floor_array_f32+0x18>
 8004cbc:	bd70      	pop	{r4, r5, r6, pc}
	...

08004cc0 <forward_floor>:
 8004cc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004cc2:	b081      	sub	sp, #4
 8004cc4:	6942      	ldr	r2, [r0, #20]
 8004cc6:	f04f 0501 	mov.w	r5, #1
 8004cca:	8811      	ldrh	r1, [r2, #0]
 8004ccc:	2900      	cmp	r1, #0
 8004cce:	bf1a      	itte	ne
 8004cd0:	6850      	ldrne	r0, [r2, #4]
 8004cd2:	1d00      	addne	r0, r0, #4
 8004cd4:	2004      	moveq	r0, #4
 8004cd6:	6800      	ldr	r0, [r0, #0]
 8004cd8:	2800      	cmp	r0, #0
 8004cda:	bf14      	ite	ne
 8004cdc:	6803      	ldrne	r3, [r0, #0]
 8004cde:	2300      	moveq	r3, #0
 8004ce0:	2902      	cmp	r1, #2
 8004ce2:	bfa6      	itte	ge
 8004ce4:	6850      	ldrge	r0, [r2, #4]
 8004ce6:	3010      	addge	r0, #16
 8004ce8:	2004      	movlt	r0, #4
 8004cea:	6800      	ldr	r0, [r0, #0]
 8004cec:	2800      	cmp	r0, #0
 8004cee:	bf19      	ittee	ne
 8004cf0:	6800      	ldrne	r0, [r0, #0]
 8004cf2:	f100 0418 	addne.w	r4, r0, #24
 8004cf6:	2100      	moveq	r1, #0
 8004cf8:	f101 0418 	addeq.w	r4, r1, #24
 8004cfc:	f103 0108 	add.w	r1, r3, #8
 8004d00:	680a      	ldr	r2, [r1, #0]
 8004d02:	0a12      	lsrs	r2, r2, #8
 8004d04:	d01f      	beq.n	8004d46 <forward_floor+0x86>
 8004d06:	684e      	ldr	r6, [r1, #4]
 8004d08:	4610      	mov	r0, r2
 8004d0a:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004d0e:	1f0f      	subs	r7, r1, #4
 8004d10:	f010 0103 	ands.w	r1, r0, #3
 8004d14:	d006      	beq.n	8004d24 <forward_floor+0x64>
 8004d16:	1e52      	subs	r2, r2, #1
 8004d18:	f857 c904 	ldr.w	ip, [r7], #-4
 8004d1c:	1e49      	subs	r1, r1, #1
 8004d1e:	fb0c f505 	mul.w	r5, ip, r5
 8004d22:	d1f8      	bne.n	8004d16 <forward_floor+0x56>
 8004d24:	0880      	lsrs	r0, r0, #2
 8004d26:	d00e      	beq.n	8004d46 <forward_floor+0x86>
 8004d28:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004d2c:	3910      	subs	r1, #16
 8004d2e:	68ca      	ldr	r2, [r1, #12]
 8004d30:	688e      	ldr	r6, [r1, #8]
 8004d32:	684f      	ldr	r7, [r1, #4]
 8004d34:	f851 c910 	ldr.w	ip, [r1], #-16
 8004d38:	4372      	muls	r2, r6
 8004d3a:	437a      	muls	r2, r7
 8004d3c:	fb0c f202 	mul.w	r2, ip, r2
 8004d40:	4355      	muls	r5, r2
 8004d42:	1e40      	subs	r0, r0, #1
 8004d44:	d1f3      	bne.n	8004d2e <forward_floor+0x6e>
 8004d46:	6998      	ldr	r0, [r3, #24]
 8004d48:	6821      	ldr	r1, [r4, #0]
 8004d4a:	6886      	ldr	r6, [r0, #8]
 8004d4c:	688a      	ldr	r2, [r1, #8]
 8004d4e:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 8004d52:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 8004d56:	1f07      	subs	r7, r0, #4
 8004d58:	1f1c      	subs	r4, r3, #4
 8004d5a:	42b7      	cmp	r7, r6
 8004d5c:	f0c0 800a 	bcc.w	8004d74 <forward_floor+0xb4>
 8004d60:	ed97 0a00 	vldr	s0, [r7]
 8004d64:	1f3f      	subs	r7, r7, #4
 8004d66:	f00d ff9d 	bl	8012ca4 <floorf>
 8004d6a:	ed84 0a00 	vstr	s0, [r4]
 8004d6e:	1f24      	subs	r4, r4, #4
 8004d70:	42b7      	cmp	r7, r6
 8004d72:	d2f5      	bcs.n	8004d60 <forward_floor+0xa0>
 8004d74:	b001      	add	sp, #4
 8004d76:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004d78 <nl_func_round_array_f32>:
 8004d78:	b570      	push	{r4, r5, r6, lr}
 8004d7a:	688c      	ldr	r4, [r1, #8]
 8004d7c:	6880      	ldr	r0, [r0, #8]
 8004d7e:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8004d82:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8004d86:	1f0d      	subs	r5, r1, #4
 8004d88:	1f16      	subs	r6, r2, #4
 8004d8a:	42a5      	cmp	r5, r4
 8004d8c:	f0c0 800a 	bcc.w	8004da4 <nl_func_round_array_f32+0x2c>
 8004d90:	ed95 0a00 	vldr	s0, [r5]
 8004d94:	1f2d      	subs	r5, r5, #4
 8004d96:	f00e fa8d 	bl	80132b4 <roundf>
 8004d9a:	ed86 0a00 	vstr	s0, [r6]
 8004d9e:	1f36      	subs	r6, r6, #4
 8004da0:	42a5      	cmp	r5, r4
 8004da2:	d2f5      	bcs.n	8004d90 <nl_func_round_array_f32+0x18>
 8004da4:	bd70      	pop	{r4, r5, r6, pc}
	...

08004da8 <forward_round>:
 8004da8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004daa:	b081      	sub	sp, #4
 8004dac:	6942      	ldr	r2, [r0, #20]
 8004dae:	f04f 0501 	mov.w	r5, #1
 8004db2:	8811      	ldrh	r1, [r2, #0]
 8004db4:	2900      	cmp	r1, #0
 8004db6:	bf1a      	itte	ne
 8004db8:	6850      	ldrne	r0, [r2, #4]
 8004dba:	1d00      	addne	r0, r0, #4
 8004dbc:	2004      	moveq	r0, #4
 8004dbe:	6800      	ldr	r0, [r0, #0]
 8004dc0:	2800      	cmp	r0, #0
 8004dc2:	bf14      	ite	ne
 8004dc4:	6803      	ldrne	r3, [r0, #0]
 8004dc6:	2300      	moveq	r3, #0
 8004dc8:	2902      	cmp	r1, #2
 8004dca:	bfa6      	itte	ge
 8004dcc:	6850      	ldrge	r0, [r2, #4]
 8004dce:	3010      	addge	r0, #16
 8004dd0:	2004      	movlt	r0, #4
 8004dd2:	6800      	ldr	r0, [r0, #0]
 8004dd4:	2800      	cmp	r0, #0
 8004dd6:	bf19      	ittee	ne
 8004dd8:	6800      	ldrne	r0, [r0, #0]
 8004dda:	f100 0418 	addne.w	r4, r0, #24
 8004dde:	2100      	moveq	r1, #0
 8004de0:	f101 0418 	addeq.w	r4, r1, #24
 8004de4:	f103 0108 	add.w	r1, r3, #8
 8004de8:	680a      	ldr	r2, [r1, #0]
 8004dea:	0a12      	lsrs	r2, r2, #8
 8004dec:	d01f      	beq.n	8004e2e <forward_round+0x86>
 8004dee:	684e      	ldr	r6, [r1, #4]
 8004df0:	4610      	mov	r0, r2
 8004df2:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004df6:	1f0f      	subs	r7, r1, #4
 8004df8:	f010 0103 	ands.w	r1, r0, #3
 8004dfc:	d006      	beq.n	8004e0c <forward_round+0x64>
 8004dfe:	1e52      	subs	r2, r2, #1
 8004e00:	f857 c904 	ldr.w	ip, [r7], #-4
 8004e04:	1e49      	subs	r1, r1, #1
 8004e06:	fb0c f505 	mul.w	r5, ip, r5
 8004e0a:	d1f8      	bne.n	8004dfe <forward_round+0x56>
 8004e0c:	0880      	lsrs	r0, r0, #2
 8004e0e:	d00e      	beq.n	8004e2e <forward_round+0x86>
 8004e10:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004e14:	3910      	subs	r1, #16
 8004e16:	68ca      	ldr	r2, [r1, #12]
 8004e18:	688e      	ldr	r6, [r1, #8]
 8004e1a:	684f      	ldr	r7, [r1, #4]
 8004e1c:	f851 c910 	ldr.w	ip, [r1], #-16
 8004e20:	4372      	muls	r2, r6
 8004e22:	437a      	muls	r2, r7
 8004e24:	fb0c f202 	mul.w	r2, ip, r2
 8004e28:	4355      	muls	r5, r2
 8004e2a:	1e40      	subs	r0, r0, #1
 8004e2c:	d1f3      	bne.n	8004e16 <forward_round+0x6e>
 8004e2e:	6998      	ldr	r0, [r3, #24]
 8004e30:	6821      	ldr	r1, [r4, #0]
 8004e32:	6886      	ldr	r6, [r0, #8]
 8004e34:	688a      	ldr	r2, [r1, #8]
 8004e36:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 8004e3a:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 8004e3e:	1f07      	subs	r7, r0, #4
 8004e40:	1f1c      	subs	r4, r3, #4
 8004e42:	42b7      	cmp	r7, r6
 8004e44:	f0c0 800a 	bcc.w	8004e5c <forward_round+0xb4>
 8004e48:	ed97 0a00 	vldr	s0, [r7]
 8004e4c:	1f3f      	subs	r7, r7, #4
 8004e4e:	f00e fa31 	bl	80132b4 <roundf>
 8004e52:	ed84 0a00 	vstr	s0, [r4]
 8004e56:	1f24      	subs	r4, r4, #4
 8004e58:	42b7      	cmp	r7, r6
 8004e5a:	d2f5      	bcs.n	8004e48 <forward_round+0xa0>
 8004e5c:	b001      	add	sp, #4
 8004e5e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004e60 <nl_func_neg_array_f32>:
 8004e60:	6889      	ldr	r1, [r1, #8]
 8004e62:	6880      	ldr	r0, [r0, #8]
 8004e64:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 8004e68:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8004e6c:	1f1b      	subs	r3, r3, #4
 8004e6e:	1f12      	subs	r2, r2, #4
 8004e70:	428b      	cmp	r3, r1
 8004e72:	d32b      	bcc.n	8004ecc <nl_func_neg_array_f32+0x6c>
 8004e74:	eebf 0a00 	vmov.f32	s0, #240	; 0xbf800000 -1.0
 8004e78:	1f18      	subs	r0, r3, #4
 8004e7a:	edd3 0a00 	vldr	s1, [r3]
 8004e7e:	4288      	cmp	r0, r1
 8004e80:	ee60 0a80 	vmul.f32	s1, s1, s0
 8004e84:	edc2 0a00 	vstr	s1, [r2]
 8004e88:	d320      	bcc.n	8004ecc <nl_func_neg_array_f32+0x6c>
 8004e8a:	ed90 1a00 	vldr	s2, [r0]
 8004e8e:	1f00      	subs	r0, r0, #4
 8004e90:	1f13      	subs	r3, r2, #4
 8004e92:	ee21 1a00 	vmul.f32	s2, s2, s0
 8004e96:	4288      	cmp	r0, r1
 8004e98:	ed83 1a00 	vstr	s2, [r3]
 8004e9c:	d316      	bcc.n	8004ecc <nl_func_neg_array_f32+0x6c>
 8004e9e:	edd0 0a00 	vldr	s1, [r0]
 8004ea2:	1f00      	subs	r0, r0, #4
 8004ea4:	f1a2 0c08 	sub.w	ip, r2, #8
 8004ea8:	ee60 0a80 	vmul.f32	s1, s1, s0
 8004eac:	4288      	cmp	r0, r1
 8004eae:	edcc 0a00 	vstr	s1, [ip]
 8004eb2:	d30b      	bcc.n	8004ecc <nl_func_neg_array_f32+0x6c>
 8004eb4:	ed90 1a00 	vldr	s2, [r0]
 8004eb8:	f1a2 030c 	sub.w	r3, r2, #12
 8004ebc:	ee21 1a00 	vmul.f32	s2, s2, s0
 8004ec0:	3a10      	subs	r2, #16
 8004ec2:	ed83 1a00 	vstr	s2, [r3]
 8004ec6:	1f03      	subs	r3, r0, #4
 8004ec8:	428b      	cmp	r3, r1
 8004eca:	d2d5      	bcs.n	8004e78 <nl_func_neg_array_f32+0x18>
 8004ecc:	4770      	bx	lr
	...

08004ed0 <forward_neg>:
 8004ed0:	b4f0      	push	{r4, r5, r6, r7}
 8004ed2:	6942      	ldr	r2, [r0, #20]
 8004ed4:	f04f 0501 	mov.w	r5, #1
 8004ed8:	8811      	ldrh	r1, [r2, #0]
 8004eda:	2900      	cmp	r1, #0
 8004edc:	bf1a      	itte	ne
 8004ede:	6850      	ldrne	r0, [r2, #4]
 8004ee0:	1d00      	addne	r0, r0, #4
 8004ee2:	2004      	moveq	r0, #4
 8004ee4:	6800      	ldr	r0, [r0, #0]
 8004ee6:	2800      	cmp	r0, #0
 8004ee8:	bf14      	ite	ne
 8004eea:	6803      	ldrne	r3, [r0, #0]
 8004eec:	2300      	moveq	r3, #0
 8004eee:	2902      	cmp	r1, #2
 8004ef0:	bfa6      	itte	ge
 8004ef2:	6850      	ldrge	r0, [r2, #4]
 8004ef4:	3010      	addge	r0, #16
 8004ef6:	2004      	movlt	r0, #4
 8004ef8:	6800      	ldr	r0, [r0, #0]
 8004efa:	2800      	cmp	r0, #0
 8004efc:	bf19      	ittee	ne
 8004efe:	6800      	ldrne	r0, [r0, #0]
 8004f00:	f100 0418 	addne.w	r4, r0, #24
 8004f04:	2100      	moveq	r1, #0
 8004f06:	f101 0418 	addeq.w	r4, r1, #24
 8004f0a:	f103 0108 	add.w	r1, r3, #8
 8004f0e:	680a      	ldr	r2, [r1, #0]
 8004f10:	0a12      	lsrs	r2, r2, #8
 8004f12:	d01f      	beq.n	8004f54 <forward_neg+0x84>
 8004f14:	684e      	ldr	r6, [r1, #4]
 8004f16:	4610      	mov	r0, r2
 8004f18:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004f1c:	1f0f      	subs	r7, r1, #4
 8004f1e:	f010 0103 	ands.w	r1, r0, #3
 8004f22:	d006      	beq.n	8004f32 <forward_neg+0x62>
 8004f24:	1e52      	subs	r2, r2, #1
 8004f26:	f857 c904 	ldr.w	ip, [r7], #-4
 8004f2a:	1e49      	subs	r1, r1, #1
 8004f2c:	fb0c f505 	mul.w	r5, ip, r5
 8004f30:	d1f8      	bne.n	8004f24 <forward_neg+0x54>
 8004f32:	0880      	lsrs	r0, r0, #2
 8004f34:	d00e      	beq.n	8004f54 <forward_neg+0x84>
 8004f36:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8004f3a:	3910      	subs	r1, #16
 8004f3c:	68ca      	ldr	r2, [r1, #12]
 8004f3e:	688e      	ldr	r6, [r1, #8]
 8004f40:	684f      	ldr	r7, [r1, #4]
 8004f42:	f851 c910 	ldr.w	ip, [r1], #-16
 8004f46:	4372      	muls	r2, r6
 8004f48:	437a      	muls	r2, r7
 8004f4a:	fb0c f202 	mul.w	r2, ip, r2
 8004f4e:	4355      	muls	r5, r2
 8004f50:	1e40      	subs	r0, r0, #1
 8004f52:	d1f3      	bne.n	8004f3c <forward_neg+0x6c>
 8004f54:	6998      	ldr	r0, [r3, #24]
 8004f56:	6822      	ldr	r2, [r4, #0]
 8004f58:	6880      	ldr	r0, [r0, #8]
 8004f5a:	6893      	ldr	r3, [r2, #8]
 8004f5c:	eb00 0185 	add.w	r1, r0, r5, lsl #2
 8004f60:	eb03 0485 	add.w	r4, r3, r5, lsl #2
 8004f64:	1f09      	subs	r1, r1, #4
 8004f66:	1f22      	subs	r2, r4, #4
 8004f68:	4281      	cmp	r1, r0
 8004f6a:	d32b      	bcc.n	8004fc4 <forward_neg+0xf4>
 8004f6c:	eebf 0a00 	vmov.f32	s0, #240	; 0xbf800000 -1.0
 8004f70:	edd1 0a00 	vldr	s1, [r1]
 8004f74:	1f09      	subs	r1, r1, #4
 8004f76:	4281      	cmp	r1, r0
 8004f78:	ee60 0a80 	vmul.f32	s1, s1, s0
 8004f7c:	edc2 0a00 	vstr	s1, [r2]
 8004f80:	d320      	bcc.n	8004fc4 <forward_neg+0xf4>
 8004f82:	ed91 1a00 	vldr	s2, [r1]
 8004f86:	1f09      	subs	r1, r1, #4
 8004f88:	1f13      	subs	r3, r2, #4
 8004f8a:	ee21 1a00 	vmul.f32	s2, s2, s0
 8004f8e:	4281      	cmp	r1, r0
 8004f90:	ed83 1a00 	vstr	s2, [r3]
 8004f94:	d316      	bcc.n	8004fc4 <forward_neg+0xf4>
 8004f96:	edd1 0a00 	vldr	s1, [r1]
 8004f9a:	1f09      	subs	r1, r1, #4
 8004f9c:	f1a2 0408 	sub.w	r4, r2, #8
 8004fa0:	ee60 0a80 	vmul.f32	s1, s1, s0
 8004fa4:	4281      	cmp	r1, r0
 8004fa6:	edc4 0a00 	vstr	s1, [r4]
 8004faa:	d30b      	bcc.n	8004fc4 <forward_neg+0xf4>
 8004fac:	ed91 1a00 	vldr	s2, [r1]
 8004fb0:	f1a2 030c 	sub.w	r3, r2, #12
 8004fb4:	1f09      	subs	r1, r1, #4
 8004fb6:	3a10      	subs	r2, #16
 8004fb8:	4281      	cmp	r1, r0
 8004fba:	ee21 1a00 	vmul.f32	s2, s2, s0
 8004fbe:	ed83 1a00 	vstr	s2, [r3]
 8004fc2:	d2d5      	bcs.n	8004f70 <forward_neg+0xa0>
 8004fc4:	bcf0      	pop	{r4, r5, r6, r7}
 8004fc6:	4770      	bx	lr

08004fc8 <nl_func_reciprocal_array_f32>:
 8004fc8:	6889      	ldr	r1, [r1, #8]
 8004fca:	6880      	ldr	r0, [r0, #8]
 8004fcc:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 8004fd0:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8004fd4:	1f1b      	subs	r3, r3, #4
 8004fd6:	1f12      	subs	r2, r2, #4
 8004fd8:	428b      	cmp	r3, r1
 8004fda:	d331      	bcc.n	8005040 <nl_func_reciprocal_array_f32+0x78>
 8004fdc:	1f18      	subs	r0, r3, #4
 8004fde:	ed93 0a00 	vldr	s0, [r3]
 8004fe2:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 8004fe6:	4288      	cmp	r0, r1
 8004fe8:	ee80 0a80 	vdiv.f32	s0, s1, s0
 8004fec:	ed82 0a00 	vstr	s0, [r2]
 8004ff0:	d326      	bcc.n	8005040 <nl_func_reciprocal_array_f32+0x78>
 8004ff2:	edd0 0a00 	vldr	s1, [r0]
 8004ff6:	1f00      	subs	r0, r0, #4
 8004ff8:	eeb7 1a00 	vmov.f32	s2, #112	; 0x3f800000  1.0
 8004ffc:	1f13      	subs	r3, r2, #4
 8004ffe:	4288      	cmp	r0, r1
 8005000:	ee81 1a20 	vdiv.f32	s2, s2, s1
 8005004:	ed83 1a00 	vstr	s2, [r3]
 8005008:	d31a      	bcc.n	8005040 <nl_func_reciprocal_array_f32+0x78>
 800500a:	ed90 0a00 	vldr	s0, [r0]
 800500e:	1f00      	subs	r0, r0, #4
 8005010:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 8005014:	f1a2 0c08 	sub.w	ip, r2, #8
 8005018:	4288      	cmp	r0, r1
 800501a:	ee80 0a80 	vdiv.f32	s0, s1, s0
 800501e:	ed8c 0a00 	vstr	s0, [ip]
 8005022:	d30d      	bcc.n	8005040 <nl_func_reciprocal_array_f32+0x78>
 8005024:	edd0 0a00 	vldr	s1, [r0]
 8005028:	f1a2 030c 	sub.w	r3, r2, #12
 800502c:	eeb7 1a00 	vmov.f32	s2, #112	; 0x3f800000  1.0
 8005030:	3a10      	subs	r2, #16
 8005032:	ee81 1a20 	vdiv.f32	s2, s2, s1
 8005036:	ed83 1a00 	vstr	s2, [r3]
 800503a:	1f03      	subs	r3, r0, #4
 800503c:	428b      	cmp	r3, r1
 800503e:	d2cd      	bcs.n	8004fdc <nl_func_reciprocal_array_f32+0x14>
 8005040:	4770      	bx	lr
	...

08005044 <forward_reciprocal>:
 8005044:	b4f0      	push	{r4, r5, r6, r7}
 8005046:	6942      	ldr	r2, [r0, #20]
 8005048:	f04f 0501 	mov.w	r5, #1
 800504c:	8811      	ldrh	r1, [r2, #0]
 800504e:	2900      	cmp	r1, #0
 8005050:	bf1a      	itte	ne
 8005052:	6850      	ldrne	r0, [r2, #4]
 8005054:	1d00      	addne	r0, r0, #4
 8005056:	2004      	moveq	r0, #4
 8005058:	6800      	ldr	r0, [r0, #0]
 800505a:	2800      	cmp	r0, #0
 800505c:	bf14      	ite	ne
 800505e:	6803      	ldrne	r3, [r0, #0]
 8005060:	2300      	moveq	r3, #0
 8005062:	2902      	cmp	r1, #2
 8005064:	bfa6      	itte	ge
 8005066:	6850      	ldrge	r0, [r2, #4]
 8005068:	3010      	addge	r0, #16
 800506a:	2004      	movlt	r0, #4
 800506c:	6800      	ldr	r0, [r0, #0]
 800506e:	2800      	cmp	r0, #0
 8005070:	bf19      	ittee	ne
 8005072:	6800      	ldrne	r0, [r0, #0]
 8005074:	f100 0418 	addne.w	r4, r0, #24
 8005078:	2100      	moveq	r1, #0
 800507a:	f101 0418 	addeq.w	r4, r1, #24
 800507e:	f103 0108 	add.w	r1, r3, #8
 8005082:	680a      	ldr	r2, [r1, #0]
 8005084:	0a12      	lsrs	r2, r2, #8
 8005086:	d01f      	beq.n	80050c8 <forward_reciprocal+0x84>
 8005088:	684e      	ldr	r6, [r1, #4]
 800508a:	4610      	mov	r0, r2
 800508c:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8005090:	1f0f      	subs	r7, r1, #4
 8005092:	f010 0103 	ands.w	r1, r0, #3
 8005096:	d006      	beq.n	80050a6 <forward_reciprocal+0x62>
 8005098:	1e52      	subs	r2, r2, #1
 800509a:	f857 c904 	ldr.w	ip, [r7], #-4
 800509e:	1e49      	subs	r1, r1, #1
 80050a0:	fb0c f505 	mul.w	r5, ip, r5
 80050a4:	d1f8      	bne.n	8005098 <forward_reciprocal+0x54>
 80050a6:	0880      	lsrs	r0, r0, #2
 80050a8:	d00e      	beq.n	80050c8 <forward_reciprocal+0x84>
 80050aa:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80050ae:	3910      	subs	r1, #16
 80050b0:	68ca      	ldr	r2, [r1, #12]
 80050b2:	688e      	ldr	r6, [r1, #8]
 80050b4:	684f      	ldr	r7, [r1, #4]
 80050b6:	f851 c910 	ldr.w	ip, [r1], #-16
 80050ba:	4372      	muls	r2, r6
 80050bc:	437a      	muls	r2, r7
 80050be:	fb0c f202 	mul.w	r2, ip, r2
 80050c2:	4355      	muls	r5, r2
 80050c4:	1e40      	subs	r0, r0, #1
 80050c6:	d1f3      	bne.n	80050b0 <forward_reciprocal+0x6c>
 80050c8:	6998      	ldr	r0, [r3, #24]
 80050ca:	6822      	ldr	r2, [r4, #0]
 80050cc:	6880      	ldr	r0, [r0, #8]
 80050ce:	6893      	ldr	r3, [r2, #8]
 80050d0:	eb00 0185 	add.w	r1, r0, r5, lsl #2
 80050d4:	eb03 0485 	add.w	r4, r3, r5, lsl #2
 80050d8:	1f09      	subs	r1, r1, #4
 80050da:	1f22      	subs	r2, r4, #4
 80050dc:	4281      	cmp	r1, r0
 80050de:	d331      	bcc.n	8005144 <forward_reciprocal+0x100>
 80050e0:	ed91 0a00 	vldr	s0, [r1]
 80050e4:	1f09      	subs	r1, r1, #4
 80050e6:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 80050ea:	4281      	cmp	r1, r0
 80050ec:	ee80 0a80 	vdiv.f32	s0, s1, s0
 80050f0:	ed82 0a00 	vstr	s0, [r2]
 80050f4:	d326      	bcc.n	8005144 <forward_reciprocal+0x100>
 80050f6:	edd1 0a00 	vldr	s1, [r1]
 80050fa:	1f09      	subs	r1, r1, #4
 80050fc:	eeb7 1a00 	vmov.f32	s2, #112	; 0x3f800000  1.0
 8005100:	1f13      	subs	r3, r2, #4
 8005102:	4281      	cmp	r1, r0
 8005104:	ee81 1a20 	vdiv.f32	s2, s2, s1
 8005108:	ed83 1a00 	vstr	s2, [r3]
 800510c:	d31a      	bcc.n	8005144 <forward_reciprocal+0x100>
 800510e:	ed91 0a00 	vldr	s0, [r1]
 8005112:	1f09      	subs	r1, r1, #4
 8005114:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 8005118:	f1a2 0408 	sub.w	r4, r2, #8
 800511c:	4281      	cmp	r1, r0
 800511e:	ee80 0a80 	vdiv.f32	s0, s1, s0
 8005122:	ed84 0a00 	vstr	s0, [r4]
 8005126:	d30d      	bcc.n	8005144 <forward_reciprocal+0x100>
 8005128:	edd1 0a00 	vldr	s1, [r1]
 800512c:	f1a2 030c 	sub.w	r3, r2, #12
 8005130:	1f09      	subs	r1, r1, #4
 8005132:	3a10      	subs	r2, #16
 8005134:	eeb7 1a00 	vmov.f32	s2, #112	; 0x3f800000  1.0
 8005138:	4281      	cmp	r1, r0
 800513a:	ee81 1a20 	vdiv.f32	s2, s2, s1
 800513e:	ed83 1a00 	vstr	s2, [r3]
 8005142:	d2cd      	bcs.n	80050e0 <forward_reciprocal+0x9c>
 8005144:	bcf0      	pop	{r4, r5, r6, r7}
 8005146:	4770      	bx	lr

08005148 <nl_func_exp_array_f32>:
 8005148:	b570      	push	{r4, r5, r6, lr}
 800514a:	688c      	ldr	r4, [r1, #8]
 800514c:	6880      	ldr	r0, [r0, #8]
 800514e:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8005152:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8005156:	1f0d      	subs	r5, r1, #4
 8005158:	1f16      	subs	r6, r2, #4
 800515a:	42a5      	cmp	r5, r4
 800515c:	f0c0 800a 	bcc.w	8005174 <nl_func_exp_array_f32+0x2c>
 8005160:	ed95 0a00 	vldr	s0, [r5]
 8005164:	1f2d      	subs	r5, r5, #4
 8005166:	f00d fd17 	bl	8012b98 <expf>
 800516a:	ed86 0a00 	vstr	s0, [r6]
 800516e:	1f36      	subs	r6, r6, #4
 8005170:	42a5      	cmp	r5, r4
 8005172:	d2f5      	bcs.n	8005160 <nl_func_exp_array_f32+0x18>
 8005174:	bd70      	pop	{r4, r5, r6, pc}
	...

08005178 <forward_exp>:
 8005178:	b5f0      	push	{r4, r5, r6, r7, lr}
 800517a:	b081      	sub	sp, #4
 800517c:	6942      	ldr	r2, [r0, #20]
 800517e:	f04f 0501 	mov.w	r5, #1
 8005182:	8811      	ldrh	r1, [r2, #0]
 8005184:	2900      	cmp	r1, #0
 8005186:	bf1a      	itte	ne
 8005188:	6850      	ldrne	r0, [r2, #4]
 800518a:	1d00      	addne	r0, r0, #4
 800518c:	2004      	moveq	r0, #4
 800518e:	6800      	ldr	r0, [r0, #0]
 8005190:	2800      	cmp	r0, #0
 8005192:	bf14      	ite	ne
 8005194:	6803      	ldrne	r3, [r0, #0]
 8005196:	2300      	moveq	r3, #0
 8005198:	2902      	cmp	r1, #2
 800519a:	bfa6      	itte	ge
 800519c:	6850      	ldrge	r0, [r2, #4]
 800519e:	3010      	addge	r0, #16
 80051a0:	2004      	movlt	r0, #4
 80051a2:	6800      	ldr	r0, [r0, #0]
 80051a4:	2800      	cmp	r0, #0
 80051a6:	bf19      	ittee	ne
 80051a8:	6800      	ldrne	r0, [r0, #0]
 80051aa:	f100 0418 	addne.w	r4, r0, #24
 80051ae:	2100      	moveq	r1, #0
 80051b0:	f101 0418 	addeq.w	r4, r1, #24
 80051b4:	f103 0108 	add.w	r1, r3, #8
 80051b8:	680a      	ldr	r2, [r1, #0]
 80051ba:	0a12      	lsrs	r2, r2, #8
 80051bc:	d01f      	beq.n	80051fe <forward_exp+0x86>
 80051be:	684e      	ldr	r6, [r1, #4]
 80051c0:	4610      	mov	r0, r2
 80051c2:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80051c6:	1f0f      	subs	r7, r1, #4
 80051c8:	f010 0103 	ands.w	r1, r0, #3
 80051cc:	d006      	beq.n	80051dc <forward_exp+0x64>
 80051ce:	1e52      	subs	r2, r2, #1
 80051d0:	f857 c904 	ldr.w	ip, [r7], #-4
 80051d4:	1e49      	subs	r1, r1, #1
 80051d6:	fb0c f505 	mul.w	r5, ip, r5
 80051da:	d1f8      	bne.n	80051ce <forward_exp+0x56>
 80051dc:	0880      	lsrs	r0, r0, #2
 80051de:	d00e      	beq.n	80051fe <forward_exp+0x86>
 80051e0:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80051e4:	3910      	subs	r1, #16
 80051e6:	68ca      	ldr	r2, [r1, #12]
 80051e8:	688e      	ldr	r6, [r1, #8]
 80051ea:	684f      	ldr	r7, [r1, #4]
 80051ec:	f851 c910 	ldr.w	ip, [r1], #-16
 80051f0:	4372      	muls	r2, r6
 80051f2:	437a      	muls	r2, r7
 80051f4:	fb0c f202 	mul.w	r2, ip, r2
 80051f8:	4355      	muls	r5, r2
 80051fa:	1e40      	subs	r0, r0, #1
 80051fc:	d1f3      	bne.n	80051e6 <forward_exp+0x6e>
 80051fe:	6998      	ldr	r0, [r3, #24]
 8005200:	6821      	ldr	r1, [r4, #0]
 8005202:	6886      	ldr	r6, [r0, #8]
 8005204:	688a      	ldr	r2, [r1, #8]
 8005206:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 800520a:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 800520e:	1f07      	subs	r7, r0, #4
 8005210:	1f1c      	subs	r4, r3, #4
 8005212:	42b7      	cmp	r7, r6
 8005214:	f0c0 800a 	bcc.w	800522c <forward_exp+0xb4>
 8005218:	ed97 0a00 	vldr	s0, [r7]
 800521c:	1f3f      	subs	r7, r7, #4
 800521e:	f00d fcbb 	bl	8012b98 <expf>
 8005222:	ed84 0a00 	vstr	s0, [r4]
 8005226:	1f24      	subs	r4, r4, #4
 8005228:	42b7      	cmp	r7, r6
 800522a:	d2f5      	bcs.n	8005218 <forward_exp+0xa0>
 800522c:	b001      	add	sp, #4
 800522e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005230 <nl_func_sigmoid_array_f32>:
 8005230:	b570      	push	{r4, r5, r6, lr}
 8005232:	688c      	ldr	r4, [r1, #8]
 8005234:	6880      	ldr	r0, [r0, #8]
 8005236:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 800523a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 800523e:	1f0d      	subs	r5, r1, #4
 8005240:	1f16      	subs	r6, r2, #4
 8005242:	42a5      	cmp	r5, r4
 8005244:	f0c0 8014 	bcc.w	8005270 <nl_func_sigmoid_array_f32+0x40>
 8005248:	ed95 0a00 	vldr	s0, [r5]
 800524c:	1f2d      	subs	r5, r5, #4
 800524e:	eeb1 0a40 	vneg.f32	s0, s0
 8005252:	f00d fca1 	bl	8012b98 <expf>
 8005256:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 800525a:	ee70 0a20 	vadd.f32	s1, s0, s1
 800525e:	eeb7 1a00 	vmov.f32	s2, #112	; 0x3f800000  1.0
 8005262:	ee81 1a20 	vdiv.f32	s2, s2, s1
 8005266:	ed86 1a00 	vstr	s2, [r6]
 800526a:	1f36      	subs	r6, r6, #4
 800526c:	42a5      	cmp	r5, r4
 800526e:	d2eb      	bcs.n	8005248 <nl_func_sigmoid_array_f32+0x18>
 8005270:	bd70      	pop	{r4, r5, r6, pc}
	...

08005274 <forward_sigmoid>:
 8005274:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005276:	b081      	sub	sp, #4
 8005278:	6942      	ldr	r2, [r0, #20]
 800527a:	f04f 0501 	mov.w	r5, #1
 800527e:	8811      	ldrh	r1, [r2, #0]
 8005280:	2900      	cmp	r1, #0
 8005282:	bf1a      	itte	ne
 8005284:	6850      	ldrne	r0, [r2, #4]
 8005286:	1d00      	addne	r0, r0, #4
 8005288:	2004      	moveq	r0, #4
 800528a:	6800      	ldr	r0, [r0, #0]
 800528c:	2800      	cmp	r0, #0
 800528e:	bf14      	ite	ne
 8005290:	6803      	ldrne	r3, [r0, #0]
 8005292:	2300      	moveq	r3, #0
 8005294:	2902      	cmp	r1, #2
 8005296:	bfa6      	itte	ge
 8005298:	6850      	ldrge	r0, [r2, #4]
 800529a:	3010      	addge	r0, #16
 800529c:	2004      	movlt	r0, #4
 800529e:	6800      	ldr	r0, [r0, #0]
 80052a0:	2800      	cmp	r0, #0
 80052a2:	bf19      	ittee	ne
 80052a4:	6800      	ldrne	r0, [r0, #0]
 80052a6:	f100 0418 	addne.w	r4, r0, #24
 80052aa:	2100      	moveq	r1, #0
 80052ac:	f101 0418 	addeq.w	r4, r1, #24
 80052b0:	f103 0108 	add.w	r1, r3, #8
 80052b4:	680a      	ldr	r2, [r1, #0]
 80052b6:	0a12      	lsrs	r2, r2, #8
 80052b8:	d01f      	beq.n	80052fa <forward_sigmoid+0x86>
 80052ba:	684e      	ldr	r6, [r1, #4]
 80052bc:	4610      	mov	r0, r2
 80052be:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80052c2:	1f0f      	subs	r7, r1, #4
 80052c4:	f010 0103 	ands.w	r1, r0, #3
 80052c8:	d006      	beq.n	80052d8 <forward_sigmoid+0x64>
 80052ca:	1e52      	subs	r2, r2, #1
 80052cc:	f857 c904 	ldr.w	ip, [r7], #-4
 80052d0:	1e49      	subs	r1, r1, #1
 80052d2:	fb0c f505 	mul.w	r5, ip, r5
 80052d6:	d1f8      	bne.n	80052ca <forward_sigmoid+0x56>
 80052d8:	0880      	lsrs	r0, r0, #2
 80052da:	d00e      	beq.n	80052fa <forward_sigmoid+0x86>
 80052dc:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80052e0:	3910      	subs	r1, #16
 80052e2:	68ca      	ldr	r2, [r1, #12]
 80052e4:	688e      	ldr	r6, [r1, #8]
 80052e6:	684f      	ldr	r7, [r1, #4]
 80052e8:	f851 c910 	ldr.w	ip, [r1], #-16
 80052ec:	4372      	muls	r2, r6
 80052ee:	437a      	muls	r2, r7
 80052f0:	fb0c f202 	mul.w	r2, ip, r2
 80052f4:	4355      	muls	r5, r2
 80052f6:	1e40      	subs	r0, r0, #1
 80052f8:	d1f3      	bne.n	80052e2 <forward_sigmoid+0x6e>
 80052fa:	6998      	ldr	r0, [r3, #24]
 80052fc:	6821      	ldr	r1, [r4, #0]
 80052fe:	6886      	ldr	r6, [r0, #8]
 8005300:	688a      	ldr	r2, [r1, #8]
 8005302:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 8005306:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 800530a:	1f07      	subs	r7, r0, #4
 800530c:	1f1c      	subs	r4, r3, #4
 800530e:	42b7      	cmp	r7, r6
 8005310:	f0c0 8014 	bcc.w	800533c <forward_sigmoid+0xc8>
 8005314:	ed97 0a00 	vldr	s0, [r7]
 8005318:	1f3f      	subs	r7, r7, #4
 800531a:	eeb1 0a40 	vneg.f32	s0, s0
 800531e:	f00d fc3b 	bl	8012b98 <expf>
 8005322:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 8005326:	ee70 0a20 	vadd.f32	s1, s0, s1
 800532a:	eeb7 1a00 	vmov.f32	s2, #112	; 0x3f800000  1.0
 800532e:	ee81 1a20 	vdiv.f32	s2, s2, s1
 8005332:	ed84 1a00 	vstr	s2, [r4]
 8005336:	1f24      	subs	r4, r4, #4
 8005338:	42b7      	cmp	r7, r6
 800533a:	d2eb      	bcs.n	8005314 <forward_sigmoid+0xa0>
 800533c:	b001      	add	sp, #4
 800533e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005340 <nl_func_sign_array_f32>:
 8005340:	6889      	ldr	r1, [r1, #8]
 8005342:	6880      	ldr	r0, [r0, #8]
 8005344:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 8005348:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 800534c:	1f1b      	subs	r3, r3, #4
 800534e:	1f10      	subs	r0, r2, #4
 8005350:	428b      	cmp	r3, r1
 8005352:	d314      	bcc.n	800537e <nl_func_sign_array_f32+0x3e>
 8005354:	f04f 32ff 	mov.w	r2, #4294967295
 8005358:	ed93 0a00 	vldr	s0, [r3]
 800535c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8005360:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005364:	bfcc      	ite	gt
 8005366:	ed9f 0a39 	vldrgt	s0, [pc, #228]	; 800544c <.text_49>
 800536a:	ee00 2a10 	vmovle	s0, r2
 800536e:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8005372:	1f1b      	subs	r3, r3, #4
 8005374:	ed80 0a00 	vstr	s0, [r0]
 8005378:	1f00      	subs	r0, r0, #4
 800537a:	428b      	cmp	r3, r1
 800537c:	d2ec      	bcs.n	8005358 <nl_func_sign_array_f32+0x18>
 800537e:	4770      	bx	lr

08005380 <forward_sign>:
 8005380:	b4f0      	push	{r4, r5, r6, r7}
 8005382:	6942      	ldr	r2, [r0, #20]
 8005384:	f04f 0501 	mov.w	r5, #1
 8005388:	8811      	ldrh	r1, [r2, #0]
 800538a:	2900      	cmp	r1, #0
 800538c:	bf1a      	itte	ne
 800538e:	6850      	ldrne	r0, [r2, #4]
 8005390:	1d00      	addne	r0, r0, #4
 8005392:	2004      	moveq	r0, #4
 8005394:	6800      	ldr	r0, [r0, #0]
 8005396:	2800      	cmp	r0, #0
 8005398:	bf14      	ite	ne
 800539a:	6803      	ldrne	r3, [r0, #0]
 800539c:	2300      	moveq	r3, #0
 800539e:	2901      	cmp	r1, #1
 80053a0:	bfc6      	itte	gt
 80053a2:	6850      	ldrgt	r0, [r2, #4]
 80053a4:	3010      	addgt	r0, #16
 80053a6:	2004      	movle	r0, #4
 80053a8:	6800      	ldr	r0, [r0, #0]
 80053aa:	2800      	cmp	r0, #0
 80053ac:	bf19      	ittee	ne
 80053ae:	6800      	ldrne	r0, [r0, #0]
 80053b0:	f100 0418 	addne.w	r4, r0, #24
 80053b4:	2100      	moveq	r1, #0
 80053b6:	f101 0418 	addeq.w	r4, r1, #24
 80053ba:	f103 0108 	add.w	r1, r3, #8
 80053be:	680a      	ldr	r2, [r1, #0]
 80053c0:	0a12      	lsrs	r2, r2, #8
 80053c2:	d01f      	beq.n	8005404 <forward_sign+0x84>
 80053c4:	684e      	ldr	r6, [r1, #4]
 80053c6:	4610      	mov	r0, r2
 80053c8:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80053cc:	1f0f      	subs	r7, r1, #4
 80053ce:	f010 0103 	ands.w	r1, r0, #3
 80053d2:	d006      	beq.n	80053e2 <forward_sign+0x62>
 80053d4:	1e52      	subs	r2, r2, #1
 80053d6:	f857 c904 	ldr.w	ip, [r7], #-4
 80053da:	1e49      	subs	r1, r1, #1
 80053dc:	fb0c f505 	mul.w	r5, ip, r5
 80053e0:	d1f8      	bne.n	80053d4 <forward_sign+0x54>
 80053e2:	0880      	lsrs	r0, r0, #2
 80053e4:	d00e      	beq.n	8005404 <forward_sign+0x84>
 80053e6:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80053ea:	3910      	subs	r1, #16
 80053ec:	68ca      	ldr	r2, [r1, #12]
 80053ee:	688e      	ldr	r6, [r1, #8]
 80053f0:	684f      	ldr	r7, [r1, #4]
 80053f2:	f851 c910 	ldr.w	ip, [r1], #-16
 80053f6:	4372      	muls	r2, r6
 80053f8:	437a      	muls	r2, r7
 80053fa:	fb0c f202 	mul.w	r2, ip, r2
 80053fe:	4355      	muls	r5, r2
 8005400:	1e40      	subs	r0, r0, #1
 8005402:	d1f3      	bne.n	80053ec <forward_sign+0x6c>
 8005404:	6998      	ldr	r0, [r3, #24]
 8005406:	6822      	ldr	r2, [r4, #0]
 8005408:	6880      	ldr	r0, [r0, #8]
 800540a:	6893      	ldr	r3, [r2, #8]
 800540c:	eb00 0185 	add.w	r1, r0, r5, lsl #2
 8005410:	eb03 0485 	add.w	r4, r3, r5, lsl #2
 8005414:	1f09      	subs	r1, r1, #4
 8005416:	1f22      	subs	r2, r4, #4
 8005418:	4281      	cmp	r1, r0
 800541a:	d314      	bcc.n	8005446 <forward_sign+0xc6>
 800541c:	f04f 33ff 	mov.w	r3, #4294967295
 8005420:	ed91 0a00 	vldr	s0, [r1]
 8005424:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8005428:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800542c:	bfcc      	ite	gt
 800542e:	ed9f 0a07 	vldrgt	s0, [pc, #28]	; 800544c <.text_49>
 8005432:	ee00 3a10 	vmovle	s0, r3
 8005436:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800543a:	1f09      	subs	r1, r1, #4
 800543c:	ed82 0a00 	vstr	s0, [r2]
 8005440:	1f12      	subs	r2, r2, #4
 8005442:	4281      	cmp	r1, r0
 8005444:	d2ec      	bcs.n	8005420 <forward_sign+0xa0>
 8005446:	bcf0      	pop	{r4, r5, r6, r7}
 8005448:	4770      	bx	lr
	...

0800544c <.text_49>:
 800544c:	00000001 	.word	0x00000001

08005450 <nl_func_sqrt_array_f32>:
 8005450:	b570      	push	{r4, r5, r6, lr}
 8005452:	460c      	mov	r4, r1
 8005454:	6880      	ldr	r0, [r0, #8]
 8005456:	68a1      	ldr	r1, [r4, #8]
 8005458:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 800545c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8005460:	1f1d      	subs	r5, r3, #4
 8005462:	1f16      	subs	r6, r2, #4
 8005464:	428d      	cmp	r5, r1
 8005466:	d30a      	bcc.n	800547e <nl_func_sqrt_array_f32+0x2e>
 8005468:	ed95 0a00 	vldr	s0, [r5]
 800546c:	1f2d      	subs	r5, r5, #4
 800546e:	f001 fbaf 	bl	8006bd0 <ai_math_sqrt>
 8005472:	ed86 0a00 	vstr	s0, [r6]
 8005476:	68a0      	ldr	r0, [r4, #8]
 8005478:	1f36      	subs	r6, r6, #4
 800547a:	4285      	cmp	r5, r0
 800547c:	d2f4      	bcs.n	8005468 <nl_func_sqrt_array_f32+0x18>
 800547e:	bd70      	pop	{r4, r5, r6, pc}

08005480 <forward_sqrt>:
 8005480:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005482:	b081      	sub	sp, #4
 8005484:	6942      	ldr	r2, [r0, #20]
 8005486:	f04f 0501 	mov.w	r5, #1
 800548a:	8811      	ldrh	r1, [r2, #0]
 800548c:	2900      	cmp	r1, #0
 800548e:	bf1a      	itte	ne
 8005490:	6850      	ldrne	r0, [r2, #4]
 8005492:	1d00      	addne	r0, r0, #4
 8005494:	2004      	moveq	r0, #4
 8005496:	6800      	ldr	r0, [r0, #0]
 8005498:	2800      	cmp	r0, #0
 800549a:	bf14      	ite	ne
 800549c:	6803      	ldrne	r3, [r0, #0]
 800549e:	2300      	moveq	r3, #0
 80054a0:	2902      	cmp	r1, #2
 80054a2:	bfa6      	itte	ge
 80054a4:	6850      	ldrge	r0, [r2, #4]
 80054a6:	3010      	addge	r0, #16
 80054a8:	2004      	movlt	r0, #4
 80054aa:	6800      	ldr	r0, [r0, #0]
 80054ac:	2800      	cmp	r0, #0
 80054ae:	bf19      	ittee	ne
 80054b0:	6800      	ldrne	r0, [r0, #0]
 80054b2:	f100 0418 	addne.w	r4, r0, #24
 80054b6:	2100      	moveq	r1, #0
 80054b8:	f101 0418 	addeq.w	r4, r1, #24
 80054bc:	f103 0108 	add.w	r1, r3, #8
 80054c0:	680a      	ldr	r2, [r1, #0]
 80054c2:	0a12      	lsrs	r2, r2, #8
 80054c4:	d01f      	beq.n	8005506 <forward_sqrt+0x86>
 80054c6:	684e      	ldr	r6, [r1, #4]
 80054c8:	4610      	mov	r0, r2
 80054ca:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80054ce:	1f0f      	subs	r7, r1, #4
 80054d0:	f010 0103 	ands.w	r1, r0, #3
 80054d4:	d006      	beq.n	80054e4 <forward_sqrt+0x64>
 80054d6:	1e52      	subs	r2, r2, #1
 80054d8:	f857 c904 	ldr.w	ip, [r7], #-4
 80054dc:	1e49      	subs	r1, r1, #1
 80054de:	fb0c f505 	mul.w	r5, ip, r5
 80054e2:	d1f8      	bne.n	80054d6 <forward_sqrt+0x56>
 80054e4:	0880      	lsrs	r0, r0, #2
 80054e6:	d00e      	beq.n	8005506 <forward_sqrt+0x86>
 80054e8:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80054ec:	3910      	subs	r1, #16
 80054ee:	68ca      	ldr	r2, [r1, #12]
 80054f0:	688e      	ldr	r6, [r1, #8]
 80054f2:	684f      	ldr	r7, [r1, #4]
 80054f4:	f851 c910 	ldr.w	ip, [r1], #-16
 80054f8:	4372      	muls	r2, r6
 80054fa:	437a      	muls	r2, r7
 80054fc:	fb0c f202 	mul.w	r2, ip, r2
 8005500:	4355      	muls	r5, r2
 8005502:	1e40      	subs	r0, r0, #1
 8005504:	d1f3      	bne.n	80054ee <forward_sqrt+0x6e>
 8005506:	699e      	ldr	r6, [r3, #24]
 8005508:	6822      	ldr	r2, [r4, #0]
 800550a:	68b0      	ldr	r0, [r6, #8]
 800550c:	6893      	ldr	r3, [r2, #8]
 800550e:	eb00 0185 	add.w	r1, r0, r5, lsl #2
 8005512:	eb03 0485 	add.w	r4, r3, r5, lsl #2
 8005516:	1f0f      	subs	r7, r1, #4
 8005518:	1f24      	subs	r4, r4, #4
 800551a:	4287      	cmp	r7, r0
 800551c:	f0c0 800b 	bcc.w	8005536 <forward_sqrt+0xb6>
 8005520:	ed97 0a00 	vldr	s0, [r7]
 8005524:	1f3f      	subs	r7, r7, #4
 8005526:	f001 fb53 	bl	8006bd0 <ai_math_sqrt>
 800552a:	ed84 0a00 	vstr	s0, [r4]
 800552e:	68b0      	ldr	r0, [r6, #8]
 8005530:	1f24      	subs	r4, r4, #4
 8005532:	4287      	cmp	r7, r0
 8005534:	d2f4      	bcs.n	8005520 <forward_sqrt+0xa0>
 8005536:	b001      	add	sp, #4
 8005538:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800553c <nl_func_soft_plus_array_f32>:
 800553c:	b570      	push	{r4, r5, r6, lr}
 800553e:	688c      	ldr	r4, [r1, #8]
 8005540:	6880      	ldr	r0, [r0, #8]
 8005542:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8005546:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 800554a:	1f0d      	subs	r5, r1, #4
 800554c:	1f16      	subs	r6, r2, #4
 800554e:	42a5      	cmp	r5, r4
 8005550:	f0c0 8010 	bcc.w	8005574 <nl_func_soft_plus_array_f32+0x38>
 8005554:	ed95 0a00 	vldr	s0, [r5]
 8005558:	1f2d      	subs	r5, r5, #4
 800555a:	f00d fb1d 	bl	8012b98 <expf>
 800555e:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 8005562:	ee30 0a20 	vadd.f32	s0, s0, s1
 8005566:	f00d fbdf 	bl	8012d28 <logf>
 800556a:	ed86 0a00 	vstr	s0, [r6]
 800556e:	1f36      	subs	r6, r6, #4
 8005570:	42a5      	cmp	r5, r4
 8005572:	d2ef      	bcs.n	8005554 <nl_func_soft_plus_array_f32+0x18>
 8005574:	bd70      	pop	{r4, r5, r6, pc}
	...

08005578 <forward_soft_plus>:
 8005578:	b5f0      	push	{r4, r5, r6, r7, lr}
 800557a:	b081      	sub	sp, #4
 800557c:	6942      	ldr	r2, [r0, #20]
 800557e:	f04f 0501 	mov.w	r5, #1
 8005582:	8811      	ldrh	r1, [r2, #0]
 8005584:	2900      	cmp	r1, #0
 8005586:	bf1a      	itte	ne
 8005588:	6850      	ldrne	r0, [r2, #4]
 800558a:	1d00      	addne	r0, r0, #4
 800558c:	2004      	moveq	r0, #4
 800558e:	6800      	ldr	r0, [r0, #0]
 8005590:	2800      	cmp	r0, #0
 8005592:	bf14      	ite	ne
 8005594:	6803      	ldrne	r3, [r0, #0]
 8005596:	2300      	moveq	r3, #0
 8005598:	2902      	cmp	r1, #2
 800559a:	bfa6      	itte	ge
 800559c:	6850      	ldrge	r0, [r2, #4]
 800559e:	3010      	addge	r0, #16
 80055a0:	2004      	movlt	r0, #4
 80055a2:	6800      	ldr	r0, [r0, #0]
 80055a4:	2800      	cmp	r0, #0
 80055a6:	bf19      	ittee	ne
 80055a8:	6800      	ldrne	r0, [r0, #0]
 80055aa:	f100 0418 	addne.w	r4, r0, #24
 80055ae:	2100      	moveq	r1, #0
 80055b0:	f101 0418 	addeq.w	r4, r1, #24
 80055b4:	f103 0108 	add.w	r1, r3, #8
 80055b8:	680a      	ldr	r2, [r1, #0]
 80055ba:	0a12      	lsrs	r2, r2, #8
 80055bc:	d01f      	beq.n	80055fe <forward_soft_plus+0x86>
 80055be:	684e      	ldr	r6, [r1, #4]
 80055c0:	4610      	mov	r0, r2
 80055c2:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80055c6:	1f0f      	subs	r7, r1, #4
 80055c8:	f010 0103 	ands.w	r1, r0, #3
 80055cc:	d006      	beq.n	80055dc <forward_soft_plus+0x64>
 80055ce:	1e52      	subs	r2, r2, #1
 80055d0:	f857 c904 	ldr.w	ip, [r7], #-4
 80055d4:	1e49      	subs	r1, r1, #1
 80055d6:	fb0c f505 	mul.w	r5, ip, r5
 80055da:	d1f8      	bne.n	80055ce <forward_soft_plus+0x56>
 80055dc:	0880      	lsrs	r0, r0, #2
 80055de:	d00e      	beq.n	80055fe <forward_soft_plus+0x86>
 80055e0:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80055e4:	3910      	subs	r1, #16
 80055e6:	68ca      	ldr	r2, [r1, #12]
 80055e8:	688e      	ldr	r6, [r1, #8]
 80055ea:	684f      	ldr	r7, [r1, #4]
 80055ec:	f851 c910 	ldr.w	ip, [r1], #-16
 80055f0:	4372      	muls	r2, r6
 80055f2:	437a      	muls	r2, r7
 80055f4:	fb0c f202 	mul.w	r2, ip, r2
 80055f8:	4355      	muls	r5, r2
 80055fa:	1e40      	subs	r0, r0, #1
 80055fc:	d1f3      	bne.n	80055e6 <forward_soft_plus+0x6e>
 80055fe:	6998      	ldr	r0, [r3, #24]
 8005600:	6821      	ldr	r1, [r4, #0]
 8005602:	6886      	ldr	r6, [r0, #8]
 8005604:	688a      	ldr	r2, [r1, #8]
 8005606:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 800560a:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 800560e:	1f07      	subs	r7, r0, #4
 8005610:	1f1c      	subs	r4, r3, #4
 8005612:	42b7      	cmp	r7, r6
 8005614:	f0c0 8010 	bcc.w	8005638 <forward_soft_plus+0xc0>
 8005618:	ed97 0a00 	vldr	s0, [r7]
 800561c:	1f3f      	subs	r7, r7, #4
 800561e:	f00d fabb 	bl	8012b98 <expf>
 8005622:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 8005626:	ee30 0a20 	vadd.f32	s0, s0, s1
 800562a:	f00d fb7d 	bl	8012d28 <logf>
 800562e:	ed84 0a00 	vstr	s0, [r4]
 8005632:	1f24      	subs	r4, r4, #4
 8005634:	42b7      	cmp	r7, r6
 8005636:	d2ef      	bcs.n	8005618 <forward_soft_plus+0xa0>
 8005638:	b001      	add	sp, #4
 800563a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800563c <nl_func_soft_sign_array_f32>:
 800563c:	6889      	ldr	r1, [r1, #8]
 800563e:	6880      	ldr	r0, [r0, #8]
 8005640:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 8005644:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8005648:	1f1b      	subs	r3, r3, #4
 800564a:	1f10      	subs	r0, r2, #4
 800564c:	428b      	cmp	r3, r1
 800564e:	d30f      	bcc.n	8005670 <nl_func_soft_sign_array_f32+0x34>
 8005650:	ed93 0a00 	vldr	s0, [r3]
 8005654:	1f1b      	subs	r3, r3, #4
 8005656:	eef0 0ac0 	vabs.f32	s1, s0
 800565a:	eeb7 1a00 	vmov.f32	s2, #112	; 0x3f800000  1.0
 800565e:	ee70 0a81 	vadd.f32	s1, s1, s2
 8005662:	ee80 0a20 	vdiv.f32	s0, s0, s1
 8005666:	ed80 0a00 	vstr	s0, [r0]
 800566a:	1f00      	subs	r0, r0, #4
 800566c:	428b      	cmp	r3, r1
 800566e:	d2ef      	bcs.n	8005650 <nl_func_soft_sign_array_f32+0x14>
 8005670:	4770      	bx	lr
	...

08005674 <forward_soft_sign>:
 8005674:	b4f0      	push	{r4, r5, r6, r7}
 8005676:	6942      	ldr	r2, [r0, #20]
 8005678:	f04f 0501 	mov.w	r5, #1
 800567c:	8811      	ldrh	r1, [r2, #0]
 800567e:	2900      	cmp	r1, #0
 8005680:	bf1a      	itte	ne
 8005682:	6850      	ldrne	r0, [r2, #4]
 8005684:	1d00      	addne	r0, r0, #4
 8005686:	2004      	moveq	r0, #4
 8005688:	6800      	ldr	r0, [r0, #0]
 800568a:	2800      	cmp	r0, #0
 800568c:	bf14      	ite	ne
 800568e:	6803      	ldrne	r3, [r0, #0]
 8005690:	2300      	moveq	r3, #0
 8005692:	2902      	cmp	r1, #2
 8005694:	bfa6      	itte	ge
 8005696:	6850      	ldrge	r0, [r2, #4]
 8005698:	3010      	addge	r0, #16
 800569a:	2004      	movlt	r0, #4
 800569c:	6800      	ldr	r0, [r0, #0]
 800569e:	2800      	cmp	r0, #0
 80056a0:	bf19      	ittee	ne
 80056a2:	6800      	ldrne	r0, [r0, #0]
 80056a4:	f100 0418 	addne.w	r4, r0, #24
 80056a8:	2100      	moveq	r1, #0
 80056aa:	f101 0418 	addeq.w	r4, r1, #24
 80056ae:	f103 0108 	add.w	r1, r3, #8
 80056b2:	680a      	ldr	r2, [r1, #0]
 80056b4:	0a12      	lsrs	r2, r2, #8
 80056b6:	d01f      	beq.n	80056f8 <forward_soft_sign+0x84>
 80056b8:	684e      	ldr	r6, [r1, #4]
 80056ba:	4610      	mov	r0, r2
 80056bc:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80056c0:	1f0f      	subs	r7, r1, #4
 80056c2:	f010 0103 	ands.w	r1, r0, #3
 80056c6:	d006      	beq.n	80056d6 <forward_soft_sign+0x62>
 80056c8:	1e52      	subs	r2, r2, #1
 80056ca:	f857 c904 	ldr.w	ip, [r7], #-4
 80056ce:	1e49      	subs	r1, r1, #1
 80056d0:	fb0c f505 	mul.w	r5, ip, r5
 80056d4:	d1f8      	bne.n	80056c8 <forward_soft_sign+0x54>
 80056d6:	0880      	lsrs	r0, r0, #2
 80056d8:	d00e      	beq.n	80056f8 <forward_soft_sign+0x84>
 80056da:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80056de:	3910      	subs	r1, #16
 80056e0:	68ca      	ldr	r2, [r1, #12]
 80056e2:	688e      	ldr	r6, [r1, #8]
 80056e4:	684f      	ldr	r7, [r1, #4]
 80056e6:	f851 c910 	ldr.w	ip, [r1], #-16
 80056ea:	4372      	muls	r2, r6
 80056ec:	437a      	muls	r2, r7
 80056ee:	fb0c f202 	mul.w	r2, ip, r2
 80056f2:	4355      	muls	r5, r2
 80056f4:	1e40      	subs	r0, r0, #1
 80056f6:	d1f3      	bne.n	80056e0 <forward_soft_sign+0x6c>
 80056f8:	6998      	ldr	r0, [r3, #24]
 80056fa:	6822      	ldr	r2, [r4, #0]
 80056fc:	6880      	ldr	r0, [r0, #8]
 80056fe:	6893      	ldr	r3, [r2, #8]
 8005700:	eb00 0185 	add.w	r1, r0, r5, lsl #2
 8005704:	eb03 0485 	add.w	r4, r3, r5, lsl #2
 8005708:	1f09      	subs	r1, r1, #4
 800570a:	1f22      	subs	r2, r4, #4
 800570c:	4281      	cmp	r1, r0
 800570e:	d30f      	bcc.n	8005730 <forward_soft_sign+0xbc>
 8005710:	ed91 0a00 	vldr	s0, [r1]
 8005714:	1f09      	subs	r1, r1, #4
 8005716:	eef0 0ac0 	vabs.f32	s1, s0
 800571a:	eeb7 1a00 	vmov.f32	s2, #112	; 0x3f800000  1.0
 800571e:	ee70 0a81 	vadd.f32	s1, s1, s2
 8005722:	ee80 0a20 	vdiv.f32	s0, s0, s1
 8005726:	ed82 0a00 	vstr	s0, [r2]
 800572a:	1f12      	subs	r2, r2, #4
 800572c:	4281      	cmp	r1, r0
 800572e:	d2ef      	bcs.n	8005710 <forward_soft_sign+0x9c>
 8005730:	bcf0      	pop	{r4, r5, r6, r7}
 8005732:	4770      	bx	lr

08005734 <nl_func_tanh_array_f32>:
 8005734:	b570      	push	{r4, r5, r6, lr}
 8005736:	688c      	ldr	r4, [r1, #8]
 8005738:	6880      	ldr	r0, [r0, #8]
 800573a:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 800573e:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8005742:	1f0d      	subs	r5, r1, #4
 8005744:	1f16      	subs	r6, r2, #4
 8005746:	42a5      	cmp	r5, r4
 8005748:	f0c0 800a 	bcc.w	8005760 <nl_func_tanh_array_f32+0x2c>
 800574c:	ed95 0a00 	vldr	s0, [r5]
 8005750:	1f2d      	subs	r5, r5, #4
 8005752:	f00d fe3f 	bl	80133d4 <tanhf>
 8005756:	ed86 0a00 	vstr	s0, [r6]
 800575a:	1f36      	subs	r6, r6, #4
 800575c:	42a5      	cmp	r5, r4
 800575e:	d2f5      	bcs.n	800574c <nl_func_tanh_array_f32+0x18>
 8005760:	bd70      	pop	{r4, r5, r6, pc}
	...

08005764 <forward_tanh>:
 8005764:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005766:	b081      	sub	sp, #4
 8005768:	6942      	ldr	r2, [r0, #20]
 800576a:	f04f 0501 	mov.w	r5, #1
 800576e:	8811      	ldrh	r1, [r2, #0]
 8005770:	2900      	cmp	r1, #0
 8005772:	bf1a      	itte	ne
 8005774:	6850      	ldrne	r0, [r2, #4]
 8005776:	1d00      	addne	r0, r0, #4
 8005778:	2004      	moveq	r0, #4
 800577a:	6800      	ldr	r0, [r0, #0]
 800577c:	2800      	cmp	r0, #0
 800577e:	bf14      	ite	ne
 8005780:	6803      	ldrne	r3, [r0, #0]
 8005782:	2300      	moveq	r3, #0
 8005784:	2902      	cmp	r1, #2
 8005786:	bfa6      	itte	ge
 8005788:	6850      	ldrge	r0, [r2, #4]
 800578a:	3010      	addge	r0, #16
 800578c:	2004      	movlt	r0, #4
 800578e:	6800      	ldr	r0, [r0, #0]
 8005790:	2800      	cmp	r0, #0
 8005792:	bf19      	ittee	ne
 8005794:	6800      	ldrne	r0, [r0, #0]
 8005796:	f100 0418 	addne.w	r4, r0, #24
 800579a:	2100      	moveq	r1, #0
 800579c:	f101 0418 	addeq.w	r4, r1, #24
 80057a0:	f103 0108 	add.w	r1, r3, #8
 80057a4:	680a      	ldr	r2, [r1, #0]
 80057a6:	0a12      	lsrs	r2, r2, #8
 80057a8:	d01f      	beq.n	80057ea <forward_tanh+0x86>
 80057aa:	684e      	ldr	r6, [r1, #4]
 80057ac:	4610      	mov	r0, r2
 80057ae:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80057b2:	1f0f      	subs	r7, r1, #4
 80057b4:	f010 0103 	ands.w	r1, r0, #3
 80057b8:	d006      	beq.n	80057c8 <forward_tanh+0x64>
 80057ba:	1e52      	subs	r2, r2, #1
 80057bc:	f857 c904 	ldr.w	ip, [r7], #-4
 80057c0:	1e49      	subs	r1, r1, #1
 80057c2:	fb0c f505 	mul.w	r5, ip, r5
 80057c6:	d1f8      	bne.n	80057ba <forward_tanh+0x56>
 80057c8:	0880      	lsrs	r0, r0, #2
 80057ca:	d00e      	beq.n	80057ea <forward_tanh+0x86>
 80057cc:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80057d0:	3910      	subs	r1, #16
 80057d2:	68ca      	ldr	r2, [r1, #12]
 80057d4:	688e      	ldr	r6, [r1, #8]
 80057d6:	684f      	ldr	r7, [r1, #4]
 80057d8:	f851 c910 	ldr.w	ip, [r1], #-16
 80057dc:	4372      	muls	r2, r6
 80057de:	437a      	muls	r2, r7
 80057e0:	fb0c f202 	mul.w	r2, ip, r2
 80057e4:	4355      	muls	r5, r2
 80057e6:	1e40      	subs	r0, r0, #1
 80057e8:	d1f3      	bne.n	80057d2 <forward_tanh+0x6e>
 80057ea:	6998      	ldr	r0, [r3, #24]
 80057ec:	6821      	ldr	r1, [r4, #0]
 80057ee:	6886      	ldr	r6, [r0, #8]
 80057f0:	688a      	ldr	r2, [r1, #8]
 80057f2:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 80057f6:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 80057fa:	1f07      	subs	r7, r0, #4
 80057fc:	1f1c      	subs	r4, r3, #4
 80057fe:	42b7      	cmp	r7, r6
 8005800:	f0c0 800a 	bcc.w	8005818 <forward_tanh+0xb4>
 8005804:	ed97 0a00 	vldr	s0, [r7]
 8005808:	1f3f      	subs	r7, r7, #4
 800580a:	f00d fde3 	bl	80133d4 <tanhf>
 800580e:	ed84 0a00 	vstr	s0, [r4]
 8005812:	1f24      	subs	r4, r4, #4
 8005814:	42b7      	cmp	r7, r6
 8005816:	d2f5      	bcs.n	8005804 <forward_tanh+0xa0>
 8005818:	b001      	add	sp, #4
 800581a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800581c <nl_func_relu_array_f32>:
 800581c:	6889      	ldr	r1, [r1, #8]
 800581e:	6880      	ldr	r0, [r0, #8]
 8005820:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 8005824:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8005828:	1f1b      	subs	r3, r3, #4
 800582a:	1f10      	subs	r0, r2, #4
 800582c:	428b      	cmp	r3, r1
 800582e:	d30e      	bcc.n	800584e <nl_func_relu_array_f32+0x32>
 8005830:	ed93 0a00 	vldr	s0, [r3]
 8005834:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8005838:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800583c:	bf48      	it	mi
 800583e:	ed9f 0a7c 	vldrmi	s0, [pc, #496]	; 8005a30 <.text_62>
 8005842:	ed80 0a00 	vstr	s0, [r0]
 8005846:	1f1b      	subs	r3, r3, #4
 8005848:	1f00      	subs	r0, r0, #4
 800584a:	428b      	cmp	r3, r1
 800584c:	d2f0      	bcs.n	8005830 <nl_func_relu_array_f32+0x14>
 800584e:	4770      	bx	lr

08005850 <nl_func_sm_channel_f32>:
 8005850:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005854:	4614      	mov	r4, r2
 8005856:	2c02      	cmp	r4, #2
 8005858:	ed2d 8b02 	vpush	{d8}
 800585c:	688f      	ldr	r7, [r1, #8]
 800585e:	6886      	ldr	r6, [r0, #8]
 8005860:	eddf 8a73 	vldr	s17, [pc, #460]	; 8005a30 <.text_62>
 8005864:	ed97 8a00 	vldr	s16, [r7]
 8005868:	d33d      	bcc.n	80058e6 <nl_func_sm_channel_f32+0x96>
 800586a:	1e61      	subs	r1, r4, #1
 800586c:	1d3a      	adds	r2, r7, #4
 800586e:	f011 0003 	ands.w	r0, r1, #3
 8005872:	d00c      	beq.n	800588e <nl_func_sm_channel_f32+0x3e>
 8005874:	ed92 0a00 	vldr	s0, [r2]
 8005878:	f102 0204 	add.w	r2, r2, #4
 800587c:	eeb4 0a48 	vcmp.f32	s0, s16
 8005880:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005884:	bf58      	it	pl
 8005886:	eeb0 8a40 	vmovpl.f32	s16, s0
 800588a:	1e40      	subs	r0, r0, #1
 800588c:	d1f2      	bne.n	8005874 <nl_func_sm_channel_f32+0x24>
 800588e:	0889      	lsrs	r1, r1, #2
 8005890:	f000 802b 	beq.w	80058ea <nl_func_sm_channel_f32+0x9a>
 8005894:	ed92 0a00 	vldr	s0, [r2]
 8005898:	eeb4 0a48 	vcmp.f32	s0, s16
 800589c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80058a0:	bf58      	it	pl
 80058a2:	eeb0 8a40 	vmovpl.f32	s16, s0
 80058a6:	ed92 0a01 	vldr	s0, [r2, #4]
 80058aa:	eeb4 0a48 	vcmp.f32	s0, s16
 80058ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80058b2:	bf58      	it	pl
 80058b4:	eeb0 8a40 	vmovpl.f32	s16, s0
 80058b8:	ed92 0a02 	vldr	s0, [r2, #8]
 80058bc:	eeb4 0a48 	vcmp.f32	s0, s16
 80058c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80058c4:	bf58      	it	pl
 80058c6:	eeb0 8a40 	vmovpl.f32	s16, s0
 80058ca:	ed92 0a03 	vldr	s0, [r2, #12]
 80058ce:	f102 0210 	add.w	r2, r2, #16
 80058d2:	eeb4 0a48 	vcmp.f32	s0, s16
 80058d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80058da:	bf58      	it	pl
 80058dc:	eeb0 8a40 	vmovpl.f32	s16, s0
 80058e0:	1e49      	subs	r1, r1, #1
 80058e2:	d1d7      	bne.n	8005894 <nl_func_sm_channel_f32+0x44>
 80058e4:	e001      	b.n	80058ea <nl_func_sm_channel_f32+0x9a>
 80058e6:	2c00      	cmp	r4, #0
 80058e8:	d040      	beq.n	800596c <nl_func_sm_channel_f32+0x11c>
 80058ea:	46b0      	mov	r8, r6
 80058ec:	ea4f 0504 	mov.w	r5, r4
 80058f0:	ed97 0a00 	vldr	s0, [r7]
 80058f4:	1d3f      	adds	r7, r7, #4
 80058f6:	ee30 0a48 	vsub.f32	s0, s0, s16
 80058fa:	f00d f94d 	bl	8012b98 <expf>
 80058fe:	1e6d      	subs	r5, r5, #1
 8005900:	ed88 0a00 	vstr	s0, [r8]
 8005904:	ee78 8a80 	vadd.f32	s17, s17, s0
 8005908:	f108 0804 	add.w	r8, r8, #4
 800590c:	d1f0      	bne.n	80058f0 <nl_func_sm_channel_f32+0xa0>
 800590e:	f014 0003 	ands.w	r0, r4, #3
 8005912:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8005916:	ee80 0a28 	vdiv.f32	s0, s0, s17
 800591a:	d009      	beq.n	8005930 <nl_func_sm_channel_f32+0xe0>
 800591c:	edd6 0a00 	vldr	s1, [r6]
 8005920:	1e40      	subs	r0, r0, #1
 8005922:	ee60 0a80 	vmul.f32	s1, s1, s0
 8005926:	edc6 0a00 	vstr	s1, [r6]
 800592a:	f106 0604 	add.w	r6, r6, #4
 800592e:	d1f5      	bne.n	800591c <nl_func_sm_channel_f32+0xcc>
 8005930:	08a4      	lsrs	r4, r4, #2
 8005932:	d01b      	beq.n	800596c <nl_func_sm_channel_f32+0x11c>
 8005934:	edd6 0a00 	vldr	s1, [r6]
 8005938:	1e64      	subs	r4, r4, #1
 800593a:	ee60 0a80 	vmul.f32	s1, s1, s0
 800593e:	edc6 0a00 	vstr	s1, [r6]
 8005942:	ed96 1a01 	vldr	s2, [r6, #4]
 8005946:	ee21 1a00 	vmul.f32	s2, s2, s0
 800594a:	ed86 1a01 	vstr	s2, [r6, #4]
 800594e:	edd6 0a02 	vldr	s1, [r6, #8]
 8005952:	ed96 1a03 	vldr	s2, [r6, #12]
 8005956:	ee60 1a80 	vmul.f32	s3, s1, s0
 800595a:	ee61 0a00 	vmul.f32	s1, s2, s0
 800595e:	edc6 1a02 	vstr	s3, [r6, #8]
 8005962:	edc6 0a03 	vstr	s1, [r6, #12]
 8005966:	f106 0610 	add.w	r6, r6, #16
 800596a:	d1e3      	bne.n	8005934 <nl_func_sm_channel_f32+0xe4>
 800596c:	ecbd 8b02 	vpop	{d8}
 8005970:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005974 <nl_func_sm_array_f32>:
 8005974:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005978:	4604      	mov	r4, r0
 800597a:	460d      	mov	r5, r1
 800597c:	9f08      	ldr	r7, [sp, #32]
 800597e:	68a8      	ldr	r0, [r5, #8]
 8005980:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8005982:	f8d4 8008 	ldr.w	r8, [r4, #8]
 8005986:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 800598a:	f8d5 c00c 	ldr.w	ip, [r5, #12]
 800598e:	00bf      	lsls	r7, r7, #2
 8005990:	427f      	negs	r7, r7
 8005992:	eb08 0282 	add.w	r2, r8, r2, lsl #2
 8005996:	00b6      	lsls	r6, r6, #2
 8005998:	eb01 0a07 	add.w	sl, r1, r7
 800599c:	4276      	negs	r6, r6
 800599e:	45e2      	cmp	sl, ip
 80059a0:	eb02 0906 	add.w	r9, r2, r6
 80059a4:	d310      	bcc.n	80059c8 <nl_func_sm_array_f32+0x54>
 80059a6:	4698      	mov	r8, r3
 80059a8:	f8c5 a008 	str.w	sl, [r5, #8]
 80059ac:	2300      	movs	r3, #0
 80059ae:	f8c4 9008 	str.w	r9, [r4, #8]
 80059b2:	4642      	mov	r2, r8
 80059b4:	4629      	mov	r1, r5
 80059b6:	4620      	mov	r0, r4
 80059b8:	f7ff ff4a 	bl	8005850 <nl_func_sm_channel_f32>
 80059bc:	f8d5 c00c 	ldr.w	ip, [r5, #12]
 80059c0:	44ba      	add	sl, r7
 80059c2:	44b1      	add	r9, r6
 80059c4:	45e2      	cmp	sl, ip
 80059c6:	d2ef      	bcs.n	80059a8 <nl_func_sm_array_f32+0x34>
 80059c8:	68e8      	ldr	r0, [r5, #12]
 80059ca:	60a8      	str	r0, [r5, #8]
 80059cc:	68e1      	ldr	r1, [r4, #12]
 80059ce:	60a1      	str	r1, [r4, #8]
 80059d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080059d4 <nl_func_hard_sigmoid_array_f32>:
 80059d4:	6889      	ldr	r1, [r1, #8]
 80059d6:	6880      	ldr	r0, [r0, #8]
 80059d8:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 80059dc:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80059e0:	1f1b      	subs	r3, r3, #4
 80059e2:	1f10      	subs	r0, r2, #4
 80059e4:	428b      	cmp	r3, r1
 80059e6:	d321      	bcc.n	8005a2c <nl_func_hard_sigmoid_array_f32+0x58>
 80059e8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80059ec:	eddf 0aba 	vldr	s1, [pc, #744]	; 8005cd8 <.text_68>
 80059f0:	edd3 1a00 	vldr	s3, [r3]
 80059f4:	ed9f 2ab9 	vldr	s4, [pc, #740]	; 8005cdc <.text_69>
 80059f8:	eeb6 1a00 	vmov.f32	s2, #96	; 0x3f000000  0.5
 80059fc:	ee01 1a82 	vmla.f32	s2, s3, s4
 8005a00:	eeb4 1a60 	vcmp.f32	s2, s1
 8005a04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a08:	da08      	bge.n	8005a1c <nl_func_hard_sigmoid_array_f32+0x48>
 8005a0a:	eeb5 1a40 	vcmp.f32	s2, #0.0
 8005a0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a12:	d505      	bpl.n	8005a20 <nl_func_hard_sigmoid_array_f32+0x4c>
 8005a14:	ed9f 1a06 	vldr	s2, [pc, #24]	; 8005a30 <.text_62>
 8005a18:	e002      	b.n	8005a20 <nl_func_hard_sigmoid_array_f32+0x4c>
 8005a1a:	bf00      	nop
 8005a1c:	eeb0 1a40 	vmov.f32	s2, s0
 8005a20:	ed80 1a00 	vstr	s2, [r0]
 8005a24:	1f1b      	subs	r3, r3, #4
 8005a26:	1f00      	subs	r0, r0, #4
 8005a28:	428b      	cmp	r3, r1
 8005a2a:	d2e1      	bcs.n	80059f0 <nl_func_hard_sigmoid_array_f32+0x1c>
 8005a2c:	4770      	bx	lr
	...

08005a30 <.text_62>:
 8005a30:	00000000 	.word	0x00000000

08005a34 <nl_func_clip_array_f32>:
 8005a34:	6889      	ldr	r1, [r1, #8]
 8005a36:	6880      	ldr	r0, [r0, #8]
 8005a38:	ed93 0a00 	vldr	s0, [r3]
 8005a3c:	edd3 0a01 	vldr	s1, [r3, #4]
 8005a40:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 8005a44:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8005a48:	1f1b      	subs	r3, r3, #4
 8005a4a:	1f10      	subs	r0, r2, #4
 8005a4c:	428b      	cmp	r3, r1
 8005a4e:	d315      	bcc.n	8005a7c <nl_func_clip_array_f32+0x48>
 8005a50:	ed93 1a00 	vldr	s2, [r3]
 8005a54:	eeb4 0a41 	vcmp.f32	s0, s2
 8005a58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a5c:	bf58      	it	pl
 8005a5e:	eeb0 1a40 	vmovpl.f32	s2, s0
 8005a62:	eeb4 1a60 	vcmp.f32	s2, s1
 8005a66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a6a:	bf58      	it	pl
 8005a6c:	eeb0 1a60 	vmovpl.f32	s2, s1
 8005a70:	ed80 1a00 	vstr	s2, [r0]
 8005a74:	1f1b      	subs	r3, r3, #4
 8005a76:	1f00      	subs	r0, r0, #4
 8005a78:	428b      	cmp	r3, r1
 8005a7a:	d2e9      	bcs.n	8005a50 <nl_func_clip_array_f32+0x1c>
 8005a7c:	4770      	bx	lr
	...

08005a80 <nl_func_hardmax_array_f32>:
 8005a80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a84:	6852      	ldr	r2, [r2, #4]
 8005a86:	f8d0 8008 	ldr.w	r8, [r0, #8]
 8005a8a:	6855      	ldr	r5, [r2, #4]
 8005a8c:	688e      	ldr	r6, [r1, #8]
 8005a8e:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8005a92:	68d4      	ldr	r4, [r2, #12]
 8005a94:	4640      	mov	r0, r8
 8005a96:	436c      	muls	r4, r5
 8005a98:	00a1      	lsls	r1, r4, #2
 8005a9a:	f00a f94d 	bl	800fd38 <__aeabi_memclr>
 8005a9e:	2200      	movs	r2, #0
 8005aa0:	2c00      	cmp	r4, #0
 8005aa2:	4633      	mov	r3, r6
 8005aa4:	f000 805d 	beq.w	8005b62 <nl_func_hardmax_array_f32+0xe2>
 8005aa8:	f102 0c01 	add.w	ip, r2, #1
 8005aac:	eb05 0e02 	add.w	lr, r5, r2
 8005ab0:	45f4      	cmp	ip, lr
 8005ab2:	edd3 0a00 	vldr	s1, [r3]
 8005ab6:	d24b      	bcs.n	8005b50 <nl_func_hardmax_array_f32+0xd0>
 8005ab8:	1e69      	subs	r1, r5, #1
 8005aba:	f011 0003 	ands.w	r0, r1, #3
 8005abe:	eb06 078c 	add.w	r7, r6, ip, lsl #2
 8005ac2:	d00f      	beq.n	8005ae4 <nl_func_hardmax_array_f32+0x64>
 8005ac4:	ed97 1a00 	vldr	s2, [r7]
 8005ac8:	f107 0704 	add.w	r7, r7, #4
 8005acc:	eef4 0a41 	vcmp.f32	s1, s2
 8005ad0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ad4:	bf44      	itt	mi
 8005ad6:	eef0 0a41 	vmovmi.f32	s1, s2
 8005ada:	4662      	movmi	r2, ip
 8005adc:	1e40      	subs	r0, r0, #1
 8005ade:	f10c 0c01 	add.w	ip, ip, #1
 8005ae2:	d1ef      	bne.n	8005ac4 <nl_func_hardmax_array_f32+0x44>
 8005ae4:	0889      	lsrs	r1, r1, #2
 8005ae6:	d033      	beq.n	8005b50 <nl_func_hardmax_array_f32+0xd0>
 8005ae8:	ed97 1a00 	vldr	s2, [r7]
 8005aec:	eef4 0a41 	vcmp.f32	s1, s2
 8005af0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005af4:	bf44      	itt	mi
 8005af6:	eef0 0a41 	vmovmi.f32	s1, s2
 8005afa:	4662      	movmi	r2, ip
 8005afc:	ed97 1a01 	vldr	s2, [r7, #4]
 8005b00:	f10c 0c01 	add.w	ip, ip, #1
 8005b04:	eef4 0a41 	vcmp.f32	s1, s2
 8005b08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b0c:	bf44      	itt	mi
 8005b0e:	eef0 0a41 	vmovmi.f32	s1, s2
 8005b12:	4662      	movmi	r2, ip
 8005b14:	ed97 1a02 	vldr	s2, [r7, #8]
 8005b18:	f10c 0c01 	add.w	ip, ip, #1
 8005b1c:	eef4 0a41 	vcmp.f32	s1, s2
 8005b20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b24:	bf44      	itt	mi
 8005b26:	eef0 0a41 	vmovmi.f32	s1, s2
 8005b2a:	4662      	movmi	r2, ip
 8005b2c:	ed97 1a03 	vldr	s2, [r7, #12]
 8005b30:	f10c 0c01 	add.w	ip, ip, #1
 8005b34:	eef4 0a41 	vcmp.f32	s1, s2
 8005b38:	f107 0710 	add.w	r7, r7, #16
 8005b3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b40:	bf44      	itt	mi
 8005b42:	eef0 0a41 	vmovmi.f32	s1, s2
 8005b46:	4662      	movmi	r2, ip
 8005b48:	1e49      	subs	r1, r1, #1
 8005b4a:	f10c 0c01 	add.w	ip, ip, #1
 8005b4e:	d1cb      	bne.n	8005ae8 <nl_func_hardmax_array_f32+0x68>
 8005b50:	eb08 0082 	add.w	r0, r8, r2, lsl #2
 8005b54:	4672      	mov	r2, lr
 8005b56:	42a2      	cmp	r2, r4
 8005b58:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8005b5c:	ed80 0a00 	vstr	s0, [r0]
 8005b60:	d3a2      	bcc.n	8005aa8 <nl_func_hardmax_array_f32+0x28>
 8005b62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005b68 <nl_func_relu_generic_array_f32>:
 8005b68:	6880      	ldr	r0, [r0, #8]
 8005b6a:	6889      	ldr	r1, [r1, #8]
 8005b6c:	ed93 0a00 	vldr	s0, [r3]
 8005b70:	edd3 0a01 	vldr	s1, [r3, #4]
 8005b74:	ed93 1a02 	vldr	s2, [r3, #8]
 8005b78:	1f03      	subs	r3, r0, #4
 8005b7a:	eeb5 1a40 	vcmp.f32	s2, #0.0
 8005b7e:	eb03 0082 	add.w	r0, r3, r2, lsl #2
 8005b82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b86:	f1a1 0c04 	sub.w	ip, r1, #4
 8005b8a:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
 8005b8e:	d52b      	bpl.n	8005be8 <nl_func_relu_generic_array_f32+0x80>
 8005b90:	eef5 0a40 	vcmp.f32	s1, #0.0
 8005b94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b98:	d014      	beq.n	8005bc4 <nl_func_relu_generic_array_f32+0x5c>
 8005b9a:	428a      	cmp	r2, r1
 8005b9c:	f0c0 8011 	bcc.w	8005bc2 <nl_func_relu_generic_array_f32+0x5a>
 8005ba0:	ed92 1a00 	vldr	s2, [r2]
 8005ba4:	eeb4 1a40 	vcmp.f32	s2, s0
 8005ba8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005bac:	bf44      	itt	mi
 8005bae:	ee31 1a40 	vsubmi.f32	s2, s2, s0
 8005bb2:	ee21 1a20 	vmulmi.f32	s2, s2, s1
 8005bb6:	ed80 1a00 	vstr	s2, [r0]
 8005bba:	1f12      	subs	r2, r2, #4
 8005bbc:	1f00      	subs	r0, r0, #4
 8005bbe:	428a      	cmp	r2, r1
 8005bc0:	d2ee      	bcs.n	8005ba0 <nl_func_relu_generic_array_f32+0x38>
 8005bc2:	4770      	bx	lr
 8005bc4:	428a      	cmp	r2, r1
 8005bc6:	d3fc      	bcc.n	8005bc2 <nl_func_relu_generic_array_f32+0x5a>
 8005bc8:	edd2 0a00 	vldr	s1, [r2]
 8005bcc:	eef4 0a40 	vcmp.f32	s1, s0
 8005bd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005bd4:	bf48      	it	mi
 8005bd6:	eddf 0aa7 	vldrmi	s1, [pc, #668]	; 8005e74 <.text_73>
 8005bda:	edc0 0a00 	vstr	s1, [r0]
 8005bde:	1f12      	subs	r2, r2, #4
 8005be0:	1f00      	subs	r0, r0, #4
 8005be2:	428a      	cmp	r2, r1
 8005be4:	d2f0      	bcs.n	8005bc8 <nl_func_relu_generic_array_f32+0x60>
 8005be6:	4770      	bx	lr
 8005be8:	428a      	cmp	r2, r1
 8005bea:	d3ea      	bcc.n	8005bc2 <nl_func_relu_generic_array_f32+0x5a>
 8005bec:	edd2 1a00 	vldr	s3, [r2]
 8005bf0:	eef4 1a41 	vcmp.f32	s3, s2
 8005bf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005bf8:	d50a      	bpl.n	8005c10 <nl_func_relu_generic_array_f32+0xa8>
 8005bfa:	eef4 1a40 	vcmp.f32	s3, s0
 8005bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c02:	d507      	bpl.n	8005c14 <nl_func_relu_generic_array_f32+0xac>
 8005c04:	ee71 1ac0 	vsub.f32	s3, s3, s0
 8005c08:	ee61 1aa0 	vmul.f32	s3, s3, s1
 8005c0c:	e002      	b.n	8005c14 <nl_func_relu_generic_array_f32+0xac>
 8005c0e:	bf00      	nop
 8005c10:	eef0 1a41 	vmov.f32	s3, s2
 8005c14:	edc0 1a00 	vstr	s3, [r0]
 8005c18:	1f12      	subs	r2, r2, #4
 8005c1a:	1f00      	subs	r0, r0, #4
 8005c1c:	428a      	cmp	r2, r1
 8005c1e:	d2e5      	bcs.n	8005bec <nl_func_relu_generic_array_f32+0x84>
 8005c20:	4770      	bx	lr
	...

08005c24 <nl_func_relu_thresholded_array_f32>:
 8005c24:	6889      	ldr	r1, [r1, #8]
 8005c26:	ed93 0a00 	vldr	s0, [r3]
 8005c2a:	6880      	ldr	r0, [r0, #8]
 8005c2c:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 8005c30:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8005c34:	1f1b      	subs	r3, r3, #4
 8005c36:	1f10      	subs	r0, r2, #4
 8005c38:	428b      	cmp	r3, r1
 8005c3a:	d30e      	bcc.n	8005c5a <nl_func_relu_thresholded_array_f32+0x36>
 8005c3c:	edd3 0a00 	vldr	s1, [r3]
 8005c40:	eef4 0a40 	vcmp.f32	s1, s0
 8005c44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c48:	bf48      	it	mi
 8005c4a:	eddf 0a8a 	vldrmi	s1, [pc, #552]	; 8005e74 <.text_73>
 8005c4e:	edc0 0a00 	vstr	s1, [r0]
 8005c52:	1f1b      	subs	r3, r3, #4
 8005c54:	1f00      	subs	r0, r0, #4
 8005c56:	428b      	cmp	r3, r1
 8005c58:	d2f0      	bcs.n	8005c3c <nl_func_relu_thresholded_array_f32+0x18>
 8005c5a:	4770      	bx	lr

08005c5c <nl_func_elu_array_f32>:
 8005c5c:	b570      	push	{r4, r5, r6, lr}
 8005c5e:	ed2d 8b04 	vpush	{d8-d9}
 8005c62:	688c      	ldr	r4, [r1, #8]
 8005c64:	6880      	ldr	r0, [r0, #8]
 8005c66:	ed93 8a00 	vldr	s16, [r3]
 8005c6a:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8005c6e:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8005c72:	1f0d      	subs	r5, r1, #4
 8005c74:	1f16      	subs	r6, r2, #4
 8005c76:	42a5      	cmp	r5, r4
 8005c78:	f0c0 802a 	bcc.w	8005cd0 <nl_func_elu_array_f32+0x74>
 8005c7c:	edd5 8a00 	vldr	s17, [r5]
 8005c80:	eef5 8a40 	vcmp.f32	s17, #0.0
 8005c84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c88:	eeb0 0a68 	vmov.f32	s0, s17
 8005c8c:	bf4c      	ite	mi
 8005c8e:	ed9f 9a79 	vldrmi	s18, [pc, #484]	; 8005e74 <.text_73>
 8005c92:	eeb0 9a68 	vmovpl.f32	s18, s17
 8005c96:	f00c ff7f 	bl	8012b98 <expf>
 8005c9a:	eeff 0a00 	vmov.f32	s1, #240	; 0xbf800000 -1.0
 8005c9e:	ee30 0a20 	vadd.f32	s0, s0, s1
 8005ca2:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005ca6:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8005caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cae:	dc09      	bgt.n	8005cc4 <nl_func_elu_array_f32+0x68>
 8005cb0:	eeb0 0a68 	vmov.f32	s0, s17
 8005cb4:	f00c ff70 	bl	8012b98 <expf>
 8005cb8:	eebf 1a00 	vmov.f32	s2, #240	; 0xbf800000 -1.0
 8005cbc:	ee30 1a01 	vadd.f32	s2, s0, s2
 8005cc0:	ee01 9a08 	vmla.f32	s18, s2, s16
 8005cc4:	ed86 9a00 	vstr	s18, [r6]
 8005cc8:	1f2d      	subs	r5, r5, #4
 8005cca:	1f36      	subs	r6, r6, #4
 8005ccc:	42a5      	cmp	r5, r4
 8005cce:	d2d5      	bcs.n	8005c7c <nl_func_elu_array_f32+0x20>
 8005cd0:	ecbd 8b04 	vpop	{d8-d9}
 8005cd4:	bd70      	pop	{r4, r5, r6, pc}
	...

08005cd8 <.text_68>:
 8005cd8:	3f800001 	.word	0x3f800001

08005cdc <.text_69>:
 8005cdc:	3e4ccccd 	.word	0x3e4ccccd

08005ce0 <nl_func_selu_array_f32>:
 8005ce0:	b570      	push	{r4, r5, r6, lr}
 8005ce2:	ed2d 8b04 	vpush	{d8-d9}
 8005ce6:	688c      	ldr	r4, [r1, #8]
 8005ce8:	6880      	ldr	r0, [r0, #8]
 8005cea:	ed93 8a00 	vldr	s16, [r3]
 8005cee:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8005cf2:	edd3 8a01 	vldr	s17, [r3, #4]
 8005cf6:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8005cfa:	1f0d      	subs	r5, r1, #4
 8005cfc:	1f16      	subs	r6, r2, #4
 8005cfe:	42a5      	cmp	r5, r4
 8005d00:	f0c0 802c 	bcc.w	8005d5c <nl_func_selu_array_f32+0x7c>
 8005d04:	ed95 9a00 	vldr	s18, [r5]
 8005d08:	eeb5 9a40 	vcmp.f32	s18, #0.0
 8005d0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d10:	eeb0 0a49 	vmov.f32	s0, s18
 8005d14:	bf4c      	ite	mi
 8005d16:	eddf 9a57 	vldrmi	s19, [pc, #348]	; 8005e74 <.text_73>
 8005d1a:	eef0 9a49 	vmovpl.f32	s19, s18
 8005d1e:	f00c ff3b 	bl	8012b98 <expf>
 8005d22:	eeff 0a00 	vmov.f32	s1, #240	; 0xbf800000 -1.0
 8005d26:	ee30 0a20 	vadd.f32	s0, s0, s1
 8005d2a:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005d2e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8005d32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d36:	dc09      	bgt.n	8005d4c <nl_func_selu_array_f32+0x6c>
 8005d38:	eeb0 0a49 	vmov.f32	s0, s18
 8005d3c:	f00c ff2c 	bl	8012b98 <expf>
 8005d40:	eebf 1a00 	vmov.f32	s2, #240	; 0xbf800000 -1.0
 8005d44:	ee30 1a01 	vadd.f32	s2, s0, s2
 8005d48:	ee41 9a08 	vmla.f32	s19, s2, s16
 8005d4c:	ee28 0aa9 	vmul.f32	s0, s17, s19
 8005d50:	1f2d      	subs	r5, r5, #4
 8005d52:	ed86 0a00 	vstr	s0, [r6]
 8005d56:	1f36      	subs	r6, r6, #4
 8005d58:	42a5      	cmp	r5, r4
 8005d5a:	d2d3      	bcs.n	8005d04 <nl_func_selu_array_f32+0x24>
 8005d5c:	ecbd 8b04 	vpop	{d8-d9}
 8005d60:	bd70      	pop	{r4, r5, r6, pc}
	...

08005d64 <nl_func_prelu_array_f32>:
 8005d64:	6889      	ldr	r1, [r1, #8]
 8005d66:	6880      	ldr	r0, [r0, #8]
 8005d68:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8005d6c:	eb01 0c82 	add.w	ip, r1, r2, lsl #2
 8005d70:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8005d74:	1f1b      	subs	r3, r3, #4
 8005d76:	f1ac 0c04 	sub.w	ip, ip, #4
 8005d7a:	1f10      	subs	r0, r2, #4
 8005d7c:	458c      	cmp	ip, r1
 8005d7e:	d320      	bcc.n	8005dc2 <nl_func_prelu_array_f32+0x5e>
 8005d80:	ed9c 0a00 	vldr	s0, [ip]
 8005d84:	461a      	mov	r2, r3
 8005d86:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8005d8a:	f1ac 0c04 	sub.w	ip, ip, #4
 8005d8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d92:	ed92 1a00 	vldr	s2, [r2]
 8005d96:	bf4c      	ite	mi
 8005d98:	eddf 0a36 	vldrmi	s1, [pc, #216]	; 8005e74 <.text_73>
 8005d9c:	eef0 0a40 	vmovpl.f32	s1, s0
 8005da0:	eeb1 0a40 	vneg.f32	s0, s0
 8005da4:	1f13      	subs	r3, r2, #4
 8005da6:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8005daa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005dae:	bf48      	it	mi
 8005db0:	ed9f 0a30 	vldrmi	s0, [pc, #192]	; 8005e74 <.text_73>
 8005db4:	ee41 0a40 	vmls.f32	s1, s2, s0
 8005db8:	edc0 0a00 	vstr	s1, [r0]
 8005dbc:	1f00      	subs	r0, r0, #4
 8005dbe:	458c      	cmp	ip, r1
 8005dc0:	d2de      	bcs.n	8005d80 <nl_func_prelu_array_f32+0x1c>
 8005dc2:	4770      	bx	lr

08005dc4 <forward_relu>:
 8005dc4:	b570      	push	{r4, r5, r6, lr}
 8005dc6:	4604      	mov	r4, r0
 8005dc8:	6962      	ldr	r2, [r4, #20]
 8005dca:	8811      	ldrh	r1, [r2, #0]
 8005dcc:	2900      	cmp	r1, #0
 8005dce:	bf1a      	itte	ne
 8005dd0:	6850      	ldrne	r0, [r2, #4]
 8005dd2:	1d00      	addne	r0, r0, #4
 8005dd4:	2004      	moveq	r0, #4
 8005dd6:	6800      	ldr	r0, [r0, #0]
 8005dd8:	2800      	cmp	r0, #0
 8005dda:	bf14      	ite	ne
 8005ddc:	6805      	ldrne	r5, [r0, #0]
 8005dde:	2500      	moveq	r5, #0
 8005de0:	2902      	cmp	r1, #2
 8005de2:	bfa6      	itte	ge
 8005de4:	6850      	ldrge	r0, [r2, #4]
 8005de6:	3010      	addge	r0, #16
 8005de8:	2004      	movlt	r0, #4
 8005dea:	6800      	ldr	r0, [r0, #0]
 8005dec:	2800      	cmp	r0, #0
 8005dee:	bf19      	ittee	ne
 8005df0:	6800      	ldrne	r0, [r0, #0]
 8005df2:	f100 0618 	addne.w	r6, r0, #24
 8005df6:	2100      	moveq	r1, #0
 8005df8:	f101 0618 	addeq.w	r6, r1, #24
 8005dfc:	69a0      	ldr	r0, [r4, #24]
 8005dfe:	b9f8      	cbnz	r0, 8005e40 <forward_relu+0x7c>
 8005e00:	f105 0008 	add.w	r0, r5, #8
 8005e04:	f7fd ffd8 	bl	8003db8 <ai_shape_get_size>
 8005e08:	69a9      	ldr	r1, [r5, #24]
 8005e0a:	6833      	ldr	r3, [r6, #0]
 8005e0c:	6889      	ldr	r1, [r1, #8]
 8005e0e:	689c      	ldr	r4, [r3, #8]
 8005e10:	eb01 0280 	add.w	r2, r1, r0, lsl #2
 8005e14:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8005e18:	1f12      	subs	r2, r2, #4
 8005e1a:	1f00      	subs	r0, r0, #4
 8005e1c:	428a      	cmp	r2, r1
 8005e1e:	d328      	bcc.n	8005e72 <forward_relu+0xae>
 8005e20:	ed92 0a00 	vldr	s0, [r2]
 8005e24:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8005e28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e2c:	bf48      	it	mi
 8005e2e:	ed9f 0a11 	vldrmi	s0, [pc, #68]	; 8005e74 <.text_73>
 8005e32:	ed80 0a00 	vstr	s0, [r0]
 8005e36:	1f12      	subs	r2, r2, #4
 8005e38:	1f00      	subs	r0, r0, #4
 8005e3a:	428a      	cmp	r2, r1
 8005e3c:	d2f0      	bcs.n	8005e20 <forward_relu+0x5c>
 8005e3e:	bd70      	pop	{r4, r5, r6, pc}
 8005e40:	6840      	ldr	r0, [r0, #4]
 8005e42:	2801      	cmp	r0, #1
 8005e44:	f105 0008 	add.w	r0, r5, #8
 8005e48:	d109      	bne.n	8005e5e <forward_relu+0x9a>
 8005e4a:	f7fd ffb5 	bl	8003db8 <ai_shape_get_size>
 8005e4e:	4602      	mov	r2, r0
 8005e50:	69a0      	ldr	r0, [r4, #24]
 8005e52:	69a9      	ldr	r1, [r5, #24]
 8005e54:	6883      	ldr	r3, [r0, #8]
 8005e56:	6830      	ldr	r0, [r6, #0]
 8005e58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005e5c:	e6e2      	b.n	8005c24 <nl_func_relu_thresholded_array_f32>
 8005e5e:	f7fd ffab 	bl	8003db8 <ai_shape_get_size>
 8005e62:	69a1      	ldr	r1, [r4, #24]
 8005e64:	4602      	mov	r2, r0
 8005e66:	6830      	ldr	r0, [r6, #0]
 8005e68:	688b      	ldr	r3, [r1, #8]
 8005e6a:	69a9      	ldr	r1, [r5, #24]
 8005e6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005e70:	e67a      	b.n	8005b68 <nl_func_relu_generic_array_f32>
 8005e72:	bd70      	pop	{r4, r5, r6, pc}

08005e74 <.text_73>:
 8005e74:	00000000 	.word	0x00000000

08005e78 <forward_relu_thresholded>:
 8005e78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e7a:	4602      	mov	r2, r0
 8005e7c:	f04f 0601 	mov.w	r6, #1
 8005e80:	6953      	ldr	r3, [r2, #20]
 8005e82:	8819      	ldrh	r1, [r3, #0]
 8005e84:	2900      	cmp	r1, #0
 8005e86:	bf1a      	itte	ne
 8005e88:	6858      	ldrne	r0, [r3, #4]
 8005e8a:	1d00      	addne	r0, r0, #4
 8005e8c:	2004      	moveq	r0, #4
 8005e8e:	6800      	ldr	r0, [r0, #0]
 8005e90:	2800      	cmp	r0, #0
 8005e92:	bf14      	ite	ne
 8005e94:	6804      	ldrne	r4, [r0, #0]
 8005e96:	2400      	moveq	r4, #0
 8005e98:	2902      	cmp	r1, #2
 8005e9a:	bfa6      	itte	ge
 8005e9c:	6858      	ldrge	r0, [r3, #4]
 8005e9e:	3010      	addge	r0, #16
 8005ea0:	2004      	movlt	r0, #4
 8005ea2:	6800      	ldr	r0, [r0, #0]
 8005ea4:	2800      	cmp	r0, #0
 8005ea6:	bf19      	ittee	ne
 8005ea8:	6800      	ldrne	r0, [r0, #0]
 8005eaa:	f100 0518 	addne.w	r5, r0, #24
 8005eae:	2100      	moveq	r1, #0
 8005eb0:	f101 0518 	addeq.w	r5, r1, #24
 8005eb4:	f104 0108 	add.w	r1, r4, #8
 8005eb8:	680b      	ldr	r3, [r1, #0]
 8005eba:	0a1b      	lsrs	r3, r3, #8
 8005ebc:	d022      	beq.n	8005f04 <forward_relu_thresholded+0x8c>
 8005ebe:	684f      	ldr	r7, [r1, #4]
 8005ec0:	4618      	mov	r0, r3
 8005ec2:	eb07 0183 	add.w	r1, r7, r3, lsl #2
 8005ec6:	f1a1 0c04 	sub.w	ip, r1, #4
 8005eca:	f010 0103 	ands.w	r1, r0, #3
 8005ece:	d006      	beq.n	8005ede <forward_relu_thresholded+0x66>
 8005ed0:	1e5b      	subs	r3, r3, #1
 8005ed2:	f85c e904 	ldr.w	lr, [ip], #-4
 8005ed6:	1e49      	subs	r1, r1, #1
 8005ed8:	fb0e f606 	mul.w	r6, lr, r6
 8005edc:	d1f8      	bne.n	8005ed0 <forward_relu_thresholded+0x58>
 8005ede:	0880      	lsrs	r0, r0, #2
 8005ee0:	d010      	beq.n	8005f04 <forward_relu_thresholded+0x8c>
 8005ee2:	eb07 0183 	add.w	r1, r7, r3, lsl #2
 8005ee6:	3910      	subs	r1, #16
 8005ee8:	68cb      	ldr	r3, [r1, #12]
 8005eea:	688f      	ldr	r7, [r1, #8]
 8005eec:	f8d1 c004 	ldr.w	ip, [r1, #4]
 8005ef0:	f851 e910 	ldr.w	lr, [r1], #-16
 8005ef4:	437b      	muls	r3, r7
 8005ef6:	fb0c f303 	mul.w	r3, ip, r3
 8005efa:	fb0e f303 	mul.w	r3, lr, r3
 8005efe:	435e      	muls	r6, r3
 8005f00:	1e40      	subs	r0, r0, #1
 8005f02:	d1f1      	bne.n	8005ee8 <forward_relu_thresholded+0x70>
 8005f04:	6990      	ldr	r0, [r2, #24]
 8005f06:	682a      	ldr	r2, [r5, #0]
 8005f08:	6881      	ldr	r1, [r0, #8]
 8005f0a:	69a0      	ldr	r0, [r4, #24]
 8005f0c:	6880      	ldr	r0, [r0, #8]
 8005f0e:	6893      	ldr	r3, [r2, #8]
 8005f10:	ed91 0a00 	vldr	s0, [r1]
 8005f14:	eb00 0186 	add.w	r1, r0, r6, lsl #2
 8005f18:	eb03 0486 	add.w	r4, r3, r6, lsl #2
 8005f1c:	1f09      	subs	r1, r1, #4
 8005f1e:	1f22      	subs	r2, r4, #4
 8005f20:	4281      	cmp	r1, r0
 8005f22:	d30e      	bcc.n	8005f42 <forward_relu_thresholded+0xca>
 8005f24:	edd1 0a00 	vldr	s1, [r1]
 8005f28:	eef4 0a40 	vcmp.f32	s1, s0
 8005f2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005f30:	bf48      	it	mi
 8005f32:	eddf 0ac1 	vldrmi	s1, [pc, #772]	; 8006238 <.text_80>
 8005f36:	edc2 0a00 	vstr	s1, [r2]
 8005f3a:	1f09      	subs	r1, r1, #4
 8005f3c:	1f12      	subs	r2, r2, #4
 8005f3e:	4281      	cmp	r1, r0
 8005f40:	d2f0      	bcs.n	8005f24 <forward_relu_thresholded+0xac>
 8005f42:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005f44 <forward_elu>:
 8005f44:	b570      	push	{r4, r5, r6, lr}
 8005f46:	4604      	mov	r4, r0
 8005f48:	6962      	ldr	r2, [r4, #20]
 8005f4a:	8811      	ldrh	r1, [r2, #0]
 8005f4c:	2900      	cmp	r1, #0
 8005f4e:	bf1a      	itte	ne
 8005f50:	6850      	ldrne	r0, [r2, #4]
 8005f52:	1d00      	addne	r0, r0, #4
 8005f54:	2004      	moveq	r0, #4
 8005f56:	6800      	ldr	r0, [r0, #0]
 8005f58:	2800      	cmp	r0, #0
 8005f5a:	bf14      	ite	ne
 8005f5c:	6805      	ldrne	r5, [r0, #0]
 8005f5e:	2500      	moveq	r5, #0
 8005f60:	2902      	cmp	r1, #2
 8005f62:	bfa6      	itte	ge
 8005f64:	6850      	ldrge	r0, [r2, #4]
 8005f66:	3010      	addge	r0, #16
 8005f68:	2004      	movlt	r0, #4
 8005f6a:	6800      	ldr	r0, [r0, #0]
 8005f6c:	2800      	cmp	r0, #0
 8005f6e:	bf19      	ittee	ne
 8005f70:	6800      	ldrne	r0, [r0, #0]
 8005f72:	f100 0618 	addne.w	r6, r0, #24
 8005f76:	2100      	moveq	r1, #0
 8005f78:	f101 0618 	addeq.w	r6, r1, #24
 8005f7c:	f105 0008 	add.w	r0, r5, #8
 8005f80:	f7fd ff1a 	bl	8003db8 <ai_shape_get_size>
 8005f84:	69a1      	ldr	r1, [r4, #24]
 8005f86:	4602      	mov	r2, r0
 8005f88:	6830      	ldr	r0, [r6, #0]
 8005f8a:	688b      	ldr	r3, [r1, #8]
 8005f8c:	69a9      	ldr	r1, [r5, #24]
 8005f8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005f92:	e663      	b.n	8005c5c <nl_func_elu_array_f32>

08005f94 <forward_selu>:
 8005f94:	b570      	push	{r4, r5, r6, lr}
 8005f96:	4604      	mov	r4, r0
 8005f98:	6962      	ldr	r2, [r4, #20]
 8005f9a:	8811      	ldrh	r1, [r2, #0]
 8005f9c:	2900      	cmp	r1, #0
 8005f9e:	bf1a      	itte	ne
 8005fa0:	6850      	ldrne	r0, [r2, #4]
 8005fa2:	1d00      	addne	r0, r0, #4
 8005fa4:	2004      	moveq	r0, #4
 8005fa6:	6800      	ldr	r0, [r0, #0]
 8005fa8:	2800      	cmp	r0, #0
 8005faa:	bf14      	ite	ne
 8005fac:	6805      	ldrne	r5, [r0, #0]
 8005fae:	2500      	moveq	r5, #0
 8005fb0:	2902      	cmp	r1, #2
 8005fb2:	bfa6      	itte	ge
 8005fb4:	6850      	ldrge	r0, [r2, #4]
 8005fb6:	3010      	addge	r0, #16
 8005fb8:	2004      	movlt	r0, #4
 8005fba:	6800      	ldr	r0, [r0, #0]
 8005fbc:	2800      	cmp	r0, #0
 8005fbe:	bf19      	ittee	ne
 8005fc0:	6800      	ldrne	r0, [r0, #0]
 8005fc2:	f100 0618 	addne.w	r6, r0, #24
 8005fc6:	2100      	moveq	r1, #0
 8005fc8:	f101 0618 	addeq.w	r6, r1, #24
 8005fcc:	f105 0008 	add.w	r0, r5, #8
 8005fd0:	f7fd fef2 	bl	8003db8 <ai_shape_get_size>
 8005fd4:	69a1      	ldr	r1, [r4, #24]
 8005fd6:	4602      	mov	r2, r0
 8005fd8:	6830      	ldr	r0, [r6, #0]
 8005fda:	688b      	ldr	r3, [r1, #8]
 8005fdc:	69a9      	ldr	r1, [r5, #24]
 8005fde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005fe2:	e67d      	b.n	8005ce0 <nl_func_selu_array_f32>

08005fe4 <forward_prelu>:
 8005fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005fe8:	b083      	sub	sp, #12
 8005fea:	6942      	ldr	r2, [r0, #20]
 8005fec:	8810      	ldrh	r0, [r2, #0]
 8005fee:	2800      	cmp	r0, #0
 8005ff0:	bf1a      	itte	ne
 8005ff2:	6851      	ldrne	r1, [r2, #4]
 8005ff4:	1d09      	addne	r1, r1, #4
 8005ff6:	2104      	moveq	r1, #4
 8005ff8:	6809      	ldr	r1, [r1, #0]
 8005ffa:	2900      	cmp	r1, #0
 8005ffc:	bf19      	ittee	ne
 8005ffe:	6809      	ldrne	r1, [r1, #0]
 8006000:	f101 0518 	addne.w	r5, r1, #24
 8006004:	2300      	moveq	r3, #0
 8006006:	f103 0518 	addeq.w	r5, r3, #24
 800600a:	2801      	cmp	r0, #1
 800600c:	bfc6      	itte	gt
 800600e:	6851      	ldrgt	r1, [r2, #4]
 8006010:	3110      	addgt	r1, #16
 8006012:	2104      	movle	r1, #4
 8006014:	6809      	ldr	r1, [r1, #0]
 8006016:	2900      	cmp	r1, #0
 8006018:	bf19      	ittee	ne
 800601a:	6809      	ldrne	r1, [r1, #0]
 800601c:	f101 0618 	addne.w	r6, r1, #24
 8006020:	2300      	moveq	r3, #0
 8006022:	f103 0618 	addeq.w	r6, r3, #24
 8006026:	2802      	cmp	r0, #2
 8006028:	bfc6      	itte	gt
 800602a:	6850      	ldrgt	r0, [r2, #4]
 800602c:	301c      	addgt	r0, #28
 800602e:	2004      	movle	r0, #4
 8006030:	6800      	ldr	r0, [r0, #0]
 8006032:	2800      	cmp	r0, #0
 8006034:	bf14      	ite	ne
 8006036:	6804      	ldrne	r4, [r0, #0]
 8006038:	2400      	moveq	r4, #0
 800603a:	69a0      	ldr	r0, [r4, #24]
 800603c:	6887      	ldr	r7, [r0, #8]
 800603e:	b12c      	cbz	r4, 800604c <forward_prelu+0x68>
 8006040:	6841      	ldr	r1, [r0, #4]
 8006042:	6800      	ldr	r0, [r0, #0]
 8006044:	f000 fc84 	bl	8006950 <ai_array_get_byte_size>
 8006048:	4680      	mov	r8, r0
 800604a:	e001      	b.n	8006050 <forward_prelu+0x6c>
 800604c:	f04f 0801 	mov.w	r8, #1
 8006050:	6828      	ldr	r0, [r5, #0]
 8006052:	3408      	adds	r4, #8
 8006054:	6841      	ldr	r1, [r0, #4]
 8006056:	6800      	ldr	r0, [r0, #0]
 8006058:	f000 fc7a 	bl	8006950 <ai_array_get_byte_size>
 800605c:	4601      	mov	r1, r0
 800605e:	6828      	ldr	r0, [r5, #0]
 8006060:	6833      	ldr	r3, [r6, #0]
 8006062:	6880      	ldr	r0, [r0, #8]
 8006064:	4401      	add	r1, r0
 8006066:	4288      	cmp	r0, r1
 8006068:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800606c:	9400      	str	r4, [sp, #0]
 800606e:	d240      	bcs.n	80060f2 <forward_prelu+0x10e>
 8006070:	9702      	str	r7, [sp, #8]
 8006072:	4607      	mov	r7, r0
 8006074:	9101      	str	r1, [sp, #4]
 8006076:	6829      	ldr	r1, [r5, #0]
 8006078:	f04f 0201 	mov.w	r2, #1
 800607c:	608f      	str	r7, [r1, #8]
 800607e:	6834      	ldr	r4, [r6, #0]
 8006080:	f8c4 9008 	str.w	r9, [r4, #8]
 8006084:	9b00      	ldr	r3, [sp, #0]
 8006086:	6818      	ldr	r0, [r3, #0]
 8006088:	0a00      	lsrs	r0, r0, #8
 800608a:	d029      	beq.n	80060e0 <forward_prelu+0xfc>
 800608c:	f8d3 e004 	ldr.w	lr, [r3, #4]
 8006090:	4684      	mov	ip, r0
 8006092:	eb0e 0380 	add.w	r3, lr, r0, lsl #2
 8006096:	f1a3 0a04 	sub.w	sl, r3, #4
 800609a:	f01c 0303 	ands.w	r3, ip, #3
 800609e:	d006      	beq.n	80060ae <forward_prelu+0xca>
 80060a0:	1e40      	subs	r0, r0, #1
 80060a2:	f85a b904 	ldr.w	fp, [sl], #-4
 80060a6:	1e5b      	subs	r3, r3, #1
 80060a8:	fb0b f202 	mul.w	r2, fp, r2
 80060ac:	d1f8      	bne.n	80060a0 <forward_prelu+0xbc>
 80060ae:	ea5f 0c9c 	movs.w	ip, ip, lsr #2
 80060b2:	4663      	mov	r3, ip
 80060b4:	d014      	beq.n	80060e0 <forward_prelu+0xfc>
 80060b6:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
 80060ba:	3810      	subs	r0, #16
 80060bc:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 80060c0:	f8d0 e008 	ldr.w	lr, [r0, #8]
 80060c4:	f8d0 a004 	ldr.w	sl, [r0, #4]
 80060c8:	f850 b910 	ldr.w	fp, [r0], #-16
 80060cc:	1e5b      	subs	r3, r3, #1
 80060ce:	fb0e fc0c 	mul.w	ip, lr, ip
 80060d2:	fb0a fc0c 	mul.w	ip, sl, ip
 80060d6:	fb0b fc0c 	mul.w	ip, fp, ip
 80060da:	fb0c f202 	mul.w	r2, ip, r2
 80060de:	d1ed      	bne.n	80060bc <forward_prelu+0xd8>
 80060e0:	9b02      	ldr	r3, [sp, #8]
 80060e2:	4620      	mov	r0, r4
 80060e4:	4447      	add	r7, r8
 80060e6:	44c1      	add	r9, r8
 80060e8:	f7ff fe3c 	bl	8005d64 <nl_func_prelu_array_f32>
 80060ec:	9801      	ldr	r0, [sp, #4]
 80060ee:	4287      	cmp	r7, r0
 80060f0:	d3c1      	bcc.n	8006076 <forward_prelu+0x92>
 80060f2:	6828      	ldr	r0, [r5, #0]
 80060f4:	68c1      	ldr	r1, [r0, #12]
 80060f6:	6081      	str	r1, [r0, #8]
 80060f8:	6830      	ldr	r0, [r6, #0]
 80060fa:	68c2      	ldr	r2, [r0, #12]
 80060fc:	6082      	str	r2, [r0, #8]
 80060fe:	b003      	add	sp, #12
 8006100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006104 <forward_clip>:
 8006104:	b570      	push	{r4, r5, r6, lr}
 8006106:	4604      	mov	r4, r0
 8006108:	6962      	ldr	r2, [r4, #20]
 800610a:	8811      	ldrh	r1, [r2, #0]
 800610c:	2900      	cmp	r1, #0
 800610e:	bf1a      	itte	ne
 8006110:	6850      	ldrne	r0, [r2, #4]
 8006112:	1d00      	addne	r0, r0, #4
 8006114:	2004      	moveq	r0, #4
 8006116:	6800      	ldr	r0, [r0, #0]
 8006118:	2800      	cmp	r0, #0
 800611a:	bf14      	ite	ne
 800611c:	6805      	ldrne	r5, [r0, #0]
 800611e:	2500      	moveq	r5, #0
 8006120:	2902      	cmp	r1, #2
 8006122:	bfa6      	itte	ge
 8006124:	6850      	ldrge	r0, [r2, #4]
 8006126:	3010      	addge	r0, #16
 8006128:	2004      	movlt	r0, #4
 800612a:	6800      	ldr	r0, [r0, #0]
 800612c:	2800      	cmp	r0, #0
 800612e:	bf19      	ittee	ne
 8006130:	6800      	ldrne	r0, [r0, #0]
 8006132:	f100 0618 	addne.w	r6, r0, #24
 8006136:	2100      	moveq	r1, #0
 8006138:	f101 0618 	addeq.w	r6, r1, #24
 800613c:	f105 0008 	add.w	r0, r5, #8
 8006140:	f7fd fe3a 	bl	8003db8 <ai_shape_get_size>
 8006144:	69a1      	ldr	r1, [r4, #24]
 8006146:	4602      	mov	r2, r0
 8006148:	6830      	ldr	r0, [r6, #0]
 800614a:	688b      	ldr	r3, [r1, #8]
 800614c:	69a9      	ldr	r1, [r5, #24]
 800614e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006152:	e46f      	b.n	8005a34 <nl_func_clip_array_f32>

08006154 <forward_hard_sigmoid>:
 8006154:	b4f0      	push	{r4, r5, r6, r7}
 8006156:	6942      	ldr	r2, [r0, #20]
 8006158:	f04f 0501 	mov.w	r5, #1
 800615c:	8811      	ldrh	r1, [r2, #0]
 800615e:	2900      	cmp	r1, #0
 8006160:	bf1a      	itte	ne
 8006162:	6850      	ldrne	r0, [r2, #4]
 8006164:	1d00      	addne	r0, r0, #4
 8006166:	2004      	moveq	r0, #4
 8006168:	6800      	ldr	r0, [r0, #0]
 800616a:	2800      	cmp	r0, #0
 800616c:	bf14      	ite	ne
 800616e:	6803      	ldrne	r3, [r0, #0]
 8006170:	2300      	moveq	r3, #0
 8006172:	2902      	cmp	r1, #2
 8006174:	bfa6      	itte	ge
 8006176:	6850      	ldrge	r0, [r2, #4]
 8006178:	3010      	addge	r0, #16
 800617a:	2004      	movlt	r0, #4
 800617c:	6800      	ldr	r0, [r0, #0]
 800617e:	2800      	cmp	r0, #0
 8006180:	bf19      	ittee	ne
 8006182:	6800      	ldrne	r0, [r0, #0]
 8006184:	f100 0418 	addne.w	r4, r0, #24
 8006188:	2100      	moveq	r1, #0
 800618a:	f101 0418 	addeq.w	r4, r1, #24
 800618e:	f103 0108 	add.w	r1, r3, #8
 8006192:	680a      	ldr	r2, [r1, #0]
 8006194:	0a12      	lsrs	r2, r2, #8
 8006196:	d01f      	beq.n	80061d8 <forward_hard_sigmoid+0x84>
 8006198:	684e      	ldr	r6, [r1, #4]
 800619a:	4610      	mov	r0, r2
 800619c:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80061a0:	1f0f      	subs	r7, r1, #4
 80061a2:	f010 0103 	ands.w	r1, r0, #3
 80061a6:	d006      	beq.n	80061b6 <forward_hard_sigmoid+0x62>
 80061a8:	1e52      	subs	r2, r2, #1
 80061aa:	f857 c904 	ldr.w	ip, [r7], #-4
 80061ae:	1e49      	subs	r1, r1, #1
 80061b0:	fb0c f505 	mul.w	r5, ip, r5
 80061b4:	d1f8      	bne.n	80061a8 <forward_hard_sigmoid+0x54>
 80061b6:	0880      	lsrs	r0, r0, #2
 80061b8:	d00e      	beq.n	80061d8 <forward_hard_sigmoid+0x84>
 80061ba:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 80061be:	3910      	subs	r1, #16
 80061c0:	68ca      	ldr	r2, [r1, #12]
 80061c2:	688e      	ldr	r6, [r1, #8]
 80061c4:	684f      	ldr	r7, [r1, #4]
 80061c6:	f851 c910 	ldr.w	ip, [r1], #-16
 80061ca:	4372      	muls	r2, r6
 80061cc:	437a      	muls	r2, r7
 80061ce:	fb0c f202 	mul.w	r2, ip, r2
 80061d2:	4355      	muls	r5, r2
 80061d4:	1e40      	subs	r0, r0, #1
 80061d6:	d1f3      	bne.n	80061c0 <forward_hard_sigmoid+0x6c>
 80061d8:	6998      	ldr	r0, [r3, #24]
 80061da:	6822      	ldr	r2, [r4, #0]
 80061dc:	6880      	ldr	r0, [r0, #8]
 80061de:	6893      	ldr	r3, [r2, #8]
 80061e0:	eb00 0185 	add.w	r1, r0, r5, lsl #2
 80061e4:	eb03 0485 	add.w	r4, r3, r5, lsl #2
 80061e8:	1f09      	subs	r1, r1, #4
 80061ea:	1f22      	subs	r2, r4, #4
 80061ec:	4281      	cmp	r1, r0
 80061ee:	d321      	bcc.n	8006234 <forward_hard_sigmoid+0xe0>
 80061f0:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80061f4:	eddf 0a11 	vldr	s1, [pc, #68]	; 800623c <.text_81>
 80061f8:	edd1 1a00 	vldr	s3, [r1]
 80061fc:	ed9f 2a10 	vldr	s4, [pc, #64]	; 8006240 <.text_82>
 8006200:	eeb6 1a00 	vmov.f32	s2, #96	; 0x3f000000  0.5
 8006204:	ee01 1a82 	vmla.f32	s2, s3, s4
 8006208:	eeb4 1a60 	vcmp.f32	s2, s1
 800620c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006210:	da08      	bge.n	8006224 <forward_hard_sigmoid+0xd0>
 8006212:	eeb5 1a40 	vcmp.f32	s2, #0.0
 8006216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800621a:	d505      	bpl.n	8006228 <forward_hard_sigmoid+0xd4>
 800621c:	ed9f 1a06 	vldr	s2, [pc, #24]	; 8006238 <.text_80>
 8006220:	e002      	b.n	8006228 <forward_hard_sigmoid+0xd4>
 8006222:	bf00      	nop
 8006224:	eeb0 1a40 	vmov.f32	s2, s0
 8006228:	ed82 1a00 	vstr	s2, [r2]
 800622c:	1f09      	subs	r1, r1, #4
 800622e:	1f12      	subs	r2, r2, #4
 8006230:	4281      	cmp	r1, r0
 8006232:	d2e1      	bcs.n	80061f8 <forward_hard_sigmoid+0xa4>
 8006234:	bcf0      	pop	{r4, r5, r6, r7}
 8006236:	4770      	bx	lr

08006238 <.text_80>:
 8006238:	00000000 	.word	0x00000000

0800623c <.text_81>:
 800623c:	3f800001 	.word	0x3f800001

08006240 <.text_82>:
 8006240:	3e4ccccd 	.word	0x3e4ccccd

08006244 <forward_sm>:
 8006244:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006246:	b083      	sub	sp, #12
 8006248:	6942      	ldr	r2, [r0, #20]
 800624a:	8811      	ldrh	r1, [r2, #0]
 800624c:	2900      	cmp	r1, #0
 800624e:	bf1a      	itte	ne
 8006250:	6850      	ldrne	r0, [r2, #4]
 8006252:	1d00      	addne	r0, r0, #4
 8006254:	2004      	moveq	r0, #4
 8006256:	6800      	ldr	r0, [r0, #0]
 8006258:	2800      	cmp	r0, #0
 800625a:	bf14      	ite	ne
 800625c:	6804      	ldrne	r4, [r0, #0]
 800625e:	2400      	moveq	r4, #0
 8006260:	2902      	cmp	r1, #2
 8006262:	bfa6      	itte	ge
 8006264:	6850      	ldrge	r0, [r2, #4]
 8006266:	3010      	addge	r0, #16
 8006268:	2004      	movlt	r0, #4
 800626a:	6800      	ldr	r0, [r0, #0]
 800626c:	2800      	cmp	r0, #0
 800626e:	bf14      	ite	ne
 8006270:	6805      	ldrne	r5, [r0, #0]
 8006272:	2500      	moveq	r5, #0
 8006274:	68e0      	ldr	r0, [r4, #12]
 8006276:	68e9      	ldr	r1, [r5, #12]
 8006278:	6846      	ldr	r6, [r0, #4]
 800627a:	f104 0008 	add.w	r0, r4, #8
 800627e:	684f      	ldr	r7, [r1, #4]
 8006280:	f7fd fd9a 	bl	8003db8 <ai_shape_get_size>
 8006284:	4602      	mov	r2, r0
 8006286:	9701      	str	r7, [sp, #4]
 8006288:	9600      	str	r6, [sp, #0]
 800628a:	69a1      	ldr	r1, [r4, #24]
 800628c:	69a8      	ldr	r0, [r5, #24]
 800628e:	4633      	mov	r3, r6
 8006290:	f7ff fb70 	bl	8005974 <nl_func_sm_array_f32>
 8006294:	b003      	add	sp, #12
 8006296:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006298 <forward_hardmax>:
 8006298:	b430      	push	{r4, r5}
 800629a:	6943      	ldr	r3, [r0, #20]
 800629c:	6980      	ldr	r0, [r0, #24]
 800629e:	881a      	ldrh	r2, [r3, #0]
 80062a0:	2a00      	cmp	r2, #0
 80062a2:	bf1a      	itte	ne
 80062a4:	6859      	ldrne	r1, [r3, #4]
 80062a6:	1d09      	addne	r1, r1, #4
 80062a8:	2104      	moveq	r1, #4
 80062aa:	6809      	ldr	r1, [r1, #0]
 80062ac:	2900      	cmp	r1, #0
 80062ae:	bf14      	ite	ne
 80062b0:	680c      	ldrne	r4, [r1, #0]
 80062b2:	2400      	moveq	r4, #0
 80062b4:	2a02      	cmp	r2, #2
 80062b6:	bfa6      	itte	ge
 80062b8:	6859      	ldrge	r1, [r3, #4]
 80062ba:	3110      	addge	r1, #16
 80062bc:	2104      	movlt	r1, #4
 80062be:	6809      	ldr	r1, [r1, #0]
 80062c0:	6883      	ldr	r3, [r0, #8]
 80062c2:	2900      	cmp	r1, #0
 80062c4:	bf19      	ittee	ne
 80062c6:	6809      	ldrne	r1, [r1, #0]
 80062c8:	f101 0518 	addne.w	r5, r1, #24
 80062cc:	2200      	moveq	r2, #0
 80062ce:	f102 0518 	addeq.w	r5, r2, #24
 80062d2:	f104 0208 	add.w	r2, r4, #8
 80062d6:	69a1      	ldr	r1, [r4, #24]
 80062d8:	6828      	ldr	r0, [r5, #0]
 80062da:	bc30      	pop	{r4, r5}
 80062dc:	f7ff bbd0 	b.w	8005a80 <nl_func_hardmax_array_f32>

080062e0 <ai_array_fmt_name>:
 80062e0:	f020 407e 	bic.w	r0, r0, #4261412864	; 0xfe000000
 80062e4:	f1b0 0140 	subs.w	r1, r0, #64	; 0x40
 80062e8:	d062      	beq.n	80063b0 <ai_array_fmt_name+0xd0>
 80062ea:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 80062ee:	1a89      	subs	r1, r1, r2
 80062f0:	f000 8094 	beq.w	800641c <ai_array_fmt_name+0x13c>
 80062f4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80062f8:	1a89      	subs	r1, r1, r2
 80062fa:	d071      	beq.n	80063e0 <ai_array_fmt_name+0x100>
 80062fc:	1a89      	subs	r1, r1, r2
 80062fe:	d063      	beq.n	80063c8 <ai_array_fmt_name+0xe8>
 8006300:	1fc9      	subs	r1, r1, #7
 8006302:	f000 808e 	beq.w	8006422 <ai_array_fmt_name+0x142>
 8006306:	f240 32f9 	movw	r2, #1017	; 0x3f9
 800630a:	1a89      	subs	r1, r1, r2
 800630c:	d05f      	beq.n	80063ce <ai_array_fmt_name+0xee>
 800630e:	390f      	subs	r1, #15
 8006310:	f000 808a 	beq.w	8006428 <ai_array_fmt_name+0x148>
 8006314:	f240 72f1 	movw	r2, #2033	; 0x7f1
 8006318:	1a89      	subs	r1, r1, r2
 800631a:	d05b      	beq.n	80063d4 <ai_array_fmt_name+0xf4>
 800631c:	391f      	subs	r1, #31
 800631e:	f000 8086 	beq.w	800642e <ai_array_fmt_name+0x14e>
 8006322:	f640 72e1 	movw	r2, #4065	; 0xfe1
 8006326:	1a89      	subs	r1, r1, r2
 8006328:	d057      	beq.n	80063da <ai_array_fmt_name+0xfa>
 800632a:	f8df 25d4 	ldr.w	r2, [pc, #1492]	; 8006900 <.text_15>
 800632e:	1a89      	subs	r1, r1, r2
 8006330:	f000 808f 	beq.w	8006452 <ai_array_fmt_name+0x172>
 8006334:	f44f 12c0 	mov.w	r2, #1572864	; 0x180000
 8006338:	1a89      	subs	r1, r1, r2
 800633a:	f000 8087 	beq.w	800644c <ai_array_fmt_name+0x16c>
 800633e:	f8df 25c4 	ldr.w	r2, [pc, #1476]	; 8006904 <.text_16>
 8006342:	1a89      	subs	r1, r1, r2
 8006344:	d05e      	beq.n	8006404 <ai_array_fmt_name+0x124>
 8006346:	f44f 7200 	mov.w	r2, #512	; 0x200
 800634a:	1a89      	subs	r1, r1, r2
 800634c:	d057      	beq.n	80063fe <ai_array_fmt_name+0x11e>
 800634e:	1a89      	subs	r1, r1, r2
 8006350:	d049      	beq.n	80063e6 <ai_array_fmt_name+0x106>
 8006352:	1fc9      	subs	r1, r1, #7
 8006354:	d059      	beq.n	800640a <ai_array_fmt_name+0x12a>
 8006356:	f240 32f9 	movw	r2, #1017	; 0x3f9
 800635a:	1a89      	subs	r1, r1, r2
 800635c:	d046      	beq.n	80063ec <ai_array_fmt_name+0x10c>
 800635e:	390f      	subs	r1, #15
 8006360:	d056      	beq.n	8006410 <ai_array_fmt_name+0x130>
 8006362:	f240 72f1 	movw	r2, #2033	; 0x7f1
 8006366:	1a89      	subs	r1, r1, r2
 8006368:	d043      	beq.n	80063f2 <ai_array_fmt_name+0x112>
 800636a:	391f      	subs	r1, #31
 800636c:	d053      	beq.n	8006416 <ai_array_fmt_name+0x136>
 800636e:	f640 72e1 	movw	r2, #4065	; 0xfe1
 8006372:	1a89      	subs	r1, r1, r2
 8006374:	d040      	beq.n	80063f8 <ai_array_fmt_name+0x118>
 8006376:	f8df 2588 	ldr.w	r2, [pc, #1416]	; 8006900 <.text_15>
 800637a:	1a89      	subs	r1, r1, r2
 800637c:	d063      	beq.n	8006446 <ai_array_fmt_name+0x166>
 800637e:	f44f 12c0 	mov.w	r2, #1572864	; 0x180000
 8006382:	1a89      	subs	r1, r1, r2
 8006384:	d05c      	beq.n	8006440 <ai_array_fmt_name+0x160>
 8006386:	f8df 2580 	ldr.w	r2, [pc, #1408]	; 8006908 <.text_17>
 800638a:	1a89      	subs	r1, r1, r2
 800638c:	d019      	beq.n	80063c2 <ai_array_fmt_name+0xe2>
 800638e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8006392:	1a89      	subs	r1, r1, r2
 8006394:	d00f      	beq.n	80063b6 <ai_array_fmt_name+0xd6>
 8006396:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800639a:	1a89      	subs	r1, r1, r2
 800639c:	d00e      	beq.n	80063bc <ai_array_fmt_name+0xdc>
 800639e:	f8df 256c 	ldr.w	r2, [pc, #1388]	; 800690c <.text_18>
 80063a2:	1a89      	subs	r1, r1, r2
 80063a4:	d049      	beq.n	800643a <ai_array_fmt_name+0x15a>
 80063a6:	f44f 12c0 	mov.w	r2, #1572864	; 0x180000
 80063aa:	1a89      	subs	r1, r1, r2
 80063ac:	d042      	beq.n	8006434 <ai_array_fmt_name+0x154>
 80063ae:	e053      	b.n	8006458 <ai_array_fmt_name+0x178>
 80063b0:	f20f 6074 	addw	r0, pc, #1652	; 0x674
 80063b4:	4770      	bx	lr
 80063b6:	f20f 607c 	addw	r0, pc, #1660	; 0x67c
 80063ba:	4770      	bx	lr
 80063bc:	f20f 6080 	addw	r0, pc, #1664	; 0x680
 80063c0:	4770      	bx	lr
 80063c2:	f20f 6088 	addw	r0, pc, #1672	; 0x688
 80063c6:	4770      	bx	lr
 80063c8:	f20f 608c 	addw	r0, pc, #1676	; 0x68c
 80063cc:	4770      	bx	lr
 80063ce:	f20f 6090 	addw	r0, pc, #1680	; 0x690
 80063d2:	4770      	bx	lr
 80063d4:	f20f 6090 	addw	r0, pc, #1680	; 0x690
 80063d8:	4770      	bx	lr
 80063da:	f20f 6094 	addw	r0, pc, #1684	; 0x694
 80063de:	4770      	bx	lr
 80063e0:	f20f 6094 	addw	r0, pc, #1684	; 0x694
 80063e4:	4770      	bx	lr
 80063e6:	f20f 6098 	addw	r0, pc, #1688	; 0x698
 80063ea:	4770      	bx	lr
 80063ec:	f20f 6098 	addw	r0, pc, #1688	; 0x698
 80063f0:	4770      	bx	lr
 80063f2:	f20f 609c 	addw	r0, pc, #1692	; 0x69c
 80063f6:	4770      	bx	lr
 80063f8:	f20f 609c 	addw	r0, pc, #1692	; 0x69c
 80063fc:	4770      	bx	lr
 80063fe:	f20f 60a0 	addw	r0, pc, #1696	; 0x6a0
 8006402:	4770      	bx	lr
 8006404:	f20f 60a0 	addw	r0, pc, #1696	; 0x6a0
 8006408:	4770      	bx	lr
 800640a:	f20f 60a4 	addw	r0, pc, #1700	; 0x6a4
 800640e:	4770      	bx	lr
 8006410:	f20f 60a4 	addw	r0, pc, #1700	; 0x6a4
 8006414:	4770      	bx	lr
 8006416:	f20f 60a8 	addw	r0, pc, #1704	; 0x6a8
 800641a:	4770      	bx	lr
 800641c:	f20f 60a8 	addw	r0, pc, #1704	; 0x6a8
 8006420:	4770      	bx	lr
 8006422:	f20f 60ac 	addw	r0, pc, #1708	; 0x6ac
 8006426:	4770      	bx	lr
 8006428:	f20f 60ac 	addw	r0, pc, #1708	; 0x6ac
 800642c:	4770      	bx	lr
 800642e:	f20f 60b4 	addw	r0, pc, #1716	; 0x6b4
 8006432:	4770      	bx	lr
 8006434:	f20f 60b8 	addw	r0, pc, #1720	; 0x6b8
 8006438:	4770      	bx	lr
 800643a:	f20f 60c4 	addw	r0, pc, #1732	; 0x6c4
 800643e:	4770      	bx	lr
 8006440:	f20f 60cc 	addw	r0, pc, #1740	; 0x6cc
 8006444:	4770      	bx	lr
 8006446:	f20f 60d8 	addw	r0, pc, #1752	; 0x6d8
 800644a:	4770      	bx	lr
 800644c:	f20f 60e0 	addw	r0, pc, #1760	; 0x6e0
 8006450:	4770      	bx	lr
 8006452:	f20f 60ec 	addw	r0, pc, #1772	; 0x6ec
 8006456:	4770      	bx	lr
 8006458:	f36f 000d 	bfc	r0, #0, #14
 800645c:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 8006460:	2840      	cmp	r0, #64	; 0x40
 8006462:	d009      	beq.n	8006478 <ai_array_fmt_name+0x198>
 8006464:	f8df 14a8 	ldr.w	r1, [pc, #1192]	; 8006910 <.text_19>
 8006468:	4288      	cmp	r0, r1
 800646a:	d00b      	beq.n	8006484 <ai_array_fmt_name+0x1a4>
 800646c:	f8df 14a4 	ldr.w	r1, [pc, #1188]	; 8006914 <.text_20>
 8006470:	4288      	cmp	r0, r1
 8006472:	d004      	beq.n	800647e <ai_array_fmt_name+0x19e>
 8006474:	a07a      	add	r0, pc, #488	; (adr r0, 8006660 <.text_8>)
 8006476:	4770      	bx	lr
 8006478:	f20f 60d4 	addw	r0, pc, #1748	; 0x6d4
 800647c:	4770      	bx	lr
 800647e:	f20f 60e8 	addw	r0, pc, #1768	; 0x6e8
 8006482:	4770      	bx	lr
 8006484:	f20f 60f4 	addw	r0, pc, #1780	; 0x6f4
 8006488:	4770      	bx	lr

0800648a <ai_array_fmt_exported>:
 800648a:	f020 407e 	bic.w	r0, r0, #4261412864	; 0xfe000000
 800648e:	f1b0 0140 	subs.w	r1, r0, #64	; 0x40
 8006492:	d068      	beq.n	8006566 <ai_array_fmt_exported+0xdc>
 8006494:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8006498:	1a89      	subs	r1, r1, r2
 800649a:	d064      	beq.n	8006566 <ai_array_fmt_exported+0xdc>
 800649c:	f44f 7200 	mov.w	r2, #512	; 0x200
 80064a0:	1a89      	subs	r1, r1, r2
 80064a2:	d062      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 80064a4:	1a89      	subs	r1, r1, r2
 80064a6:	d05e      	beq.n	8006566 <ai_array_fmt_exported+0xdc>
 80064a8:	1fc9      	subs	r1, r1, #7
 80064aa:	d05c      	beq.n	8006566 <ai_array_fmt_exported+0xdc>
 80064ac:	f240 32f9 	movw	r2, #1017	; 0x3f9
 80064b0:	1a89      	subs	r1, r1, r2
 80064b2:	d058      	beq.n	8006566 <ai_array_fmt_exported+0xdc>
 80064b4:	390f      	subs	r1, #15
 80064b6:	d056      	beq.n	8006566 <ai_array_fmt_exported+0xdc>
 80064b8:	f240 72f1 	movw	r2, #2033	; 0x7f1
 80064bc:	1a89      	subs	r1, r1, r2
 80064be:	d054      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 80064c0:	391f      	subs	r1, #31
 80064c2:	d052      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 80064c4:	f640 72e1 	movw	r2, #4065	; 0xfe1
 80064c8:	1a89      	subs	r1, r1, r2
 80064ca:	d04e      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 80064cc:	f8df 2430 	ldr.w	r2, [pc, #1072]	; 8006900 <.text_15>
 80064d0:	1a89      	subs	r1, r1, r2
 80064d2:	d04a      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 80064d4:	f44f 12c0 	mov.w	r2, #1572864	; 0x180000
 80064d8:	1a89      	subs	r1, r1, r2
 80064da:	d046      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 80064dc:	f8df 2424 	ldr.w	r2, [pc, #1060]	; 8006904 <.text_16>
 80064e0:	1a89      	subs	r1, r1, r2
 80064e2:	d040      	beq.n	8006566 <ai_array_fmt_exported+0xdc>
 80064e4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80064e8:	1a89      	subs	r1, r1, r2
 80064ea:	d03e      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 80064ec:	1a89      	subs	r1, r1, r2
 80064ee:	d03a      	beq.n	8006566 <ai_array_fmt_exported+0xdc>
 80064f0:	1fc9      	subs	r1, r1, #7
 80064f2:	d038      	beq.n	8006566 <ai_array_fmt_exported+0xdc>
 80064f4:	f240 32f9 	movw	r2, #1017	; 0x3f9
 80064f8:	1a89      	subs	r1, r1, r2
 80064fa:	d034      	beq.n	8006566 <ai_array_fmt_exported+0xdc>
 80064fc:	390f      	subs	r1, #15
 80064fe:	d032      	beq.n	8006566 <ai_array_fmt_exported+0xdc>
 8006500:	f240 72f1 	movw	r2, #2033	; 0x7f1
 8006504:	1a89      	subs	r1, r1, r2
 8006506:	d030      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 8006508:	391f      	subs	r1, #31
 800650a:	d02e      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 800650c:	f640 72e1 	movw	r2, #4065	; 0xfe1
 8006510:	1a89      	subs	r1, r1, r2
 8006512:	d02a      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 8006514:	f8df 23e8 	ldr.w	r2, [pc, #1000]	; 8006900 <.text_15>
 8006518:	1a89      	subs	r1, r1, r2
 800651a:	d026      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 800651c:	f44f 12c0 	mov.w	r2, #1572864	; 0x180000
 8006520:	1a89      	subs	r1, r1, r2
 8006522:	d022      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 8006524:	f8df 23e0 	ldr.w	r2, [pc, #992]	; 8006908 <.text_17>
 8006528:	1a89      	subs	r1, r1, r2
 800652a:	d01e      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 800652c:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8006530:	1a89      	subs	r1, r1, r2
 8006532:	d018      	beq.n	8006566 <ai_array_fmt_exported+0xdc>
 8006534:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8006538:	1a89      	subs	r1, r1, r2
 800653a:	d016      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 800653c:	f8df 23cc 	ldr.w	r2, [pc, #972]	; 800690c <.text_18>
 8006540:	1a89      	subs	r1, r1, r2
 8006542:	d012      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 8006544:	f44f 12c0 	mov.w	r2, #1572864	; 0x180000
 8006548:	1a89      	subs	r1, r1, r2
 800654a:	d00e      	beq.n	800656a <ai_array_fmt_exported+0xe0>
 800654c:	f36f 000d 	bfc	r0, #0, #14
 8006550:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 8006554:	2840      	cmp	r0, #64	; 0x40
 8006556:	bf1f      	itttt	ne
 8006558:	f8df 33b4 	ldrne.w	r3, [pc, #948]	; 8006910 <.text_19>
 800655c:	4298      	cmpne	r0, r3
 800655e:	f8df 33b4 	ldrne.w	r3, [pc, #948]	; 8006914 <.text_20>
 8006562:	4298      	cmpne	r0, r3
 8006564:	d101      	bne.n	800656a <ai_array_fmt_exported+0xe0>
 8006566:	2001      	movs	r0, #1
 8006568:	4770      	bx	lr
 800656a:	2000      	movs	r0, #0
 800656c:	4770      	bx	lr

0800656e <ai_array_fmt_valid>:
 800656e:	f020 407e 	bic.w	r0, r0, #4261412864	; 0xfe000000
 8006572:	f1b0 0140 	subs.w	r1, r0, #64	; 0x40
 8006576:	d069      	beq.n	800664c <ai_array_fmt_valid+0xde>
 8006578:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 800657c:	1a89      	subs	r1, r1, r2
 800657e:	d065      	beq.n	800664c <ai_array_fmt_valid+0xde>
 8006580:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006584:	1a89      	subs	r1, r1, r2
 8006586:	d061      	beq.n	800664c <ai_array_fmt_valid+0xde>
 8006588:	1a89      	subs	r1, r1, r2
 800658a:	d05f      	beq.n	800664c <ai_array_fmt_valid+0xde>
 800658c:	1fc9      	subs	r1, r1, #7
 800658e:	d05d      	beq.n	800664c <ai_array_fmt_valid+0xde>
 8006590:	f240 32f9 	movw	r2, #1017	; 0x3f9
 8006594:	1a89      	subs	r1, r1, r2
 8006596:	d059      	beq.n	800664c <ai_array_fmt_valid+0xde>
 8006598:	390f      	subs	r1, #15
 800659a:	d057      	beq.n	800664c <ai_array_fmt_valid+0xde>
 800659c:	f240 72f1 	movw	r2, #2033	; 0x7f1
 80065a0:	1a89      	subs	r1, r1, r2
 80065a2:	d053      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065a4:	391f      	subs	r1, #31
 80065a6:	d051      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065a8:	f640 72e1 	movw	r2, #4065	; 0xfe1
 80065ac:	1a89      	subs	r1, r1, r2
 80065ae:	d04d      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065b0:	f8df 234c 	ldr.w	r2, [pc, #844]	; 8006900 <.text_15>
 80065b4:	1a89      	subs	r1, r1, r2
 80065b6:	d049      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065b8:	f44f 12c0 	mov.w	r2, #1572864	; 0x180000
 80065bc:	1a89      	subs	r1, r1, r2
 80065be:	d045      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065c0:	f8df 2340 	ldr.w	r2, [pc, #832]	; 8006904 <.text_16>
 80065c4:	1a89      	subs	r1, r1, r2
 80065c6:	d041      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065c8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80065cc:	1a89      	subs	r1, r1, r2
 80065ce:	d03d      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065d0:	1a89      	subs	r1, r1, r2
 80065d2:	d03b      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065d4:	1fc9      	subs	r1, r1, #7
 80065d6:	d039      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065d8:	f240 32f9 	movw	r2, #1017	; 0x3f9
 80065dc:	1a89      	subs	r1, r1, r2
 80065de:	d035      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065e0:	390f      	subs	r1, #15
 80065e2:	d033      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065e4:	f240 72f1 	movw	r2, #2033	; 0x7f1
 80065e8:	1a89      	subs	r1, r1, r2
 80065ea:	d02f      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065ec:	391f      	subs	r1, #31
 80065ee:	d02d      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065f0:	f640 72e1 	movw	r2, #4065	; 0xfe1
 80065f4:	1a89      	subs	r1, r1, r2
 80065f6:	d029      	beq.n	800664c <ai_array_fmt_valid+0xde>
 80065f8:	f8df 2304 	ldr.w	r2, [pc, #772]	; 8006900 <.text_15>
 80065fc:	1a89      	subs	r1, r1, r2
 80065fe:	d025      	beq.n	800664c <ai_array_fmt_valid+0xde>
 8006600:	f44f 12c0 	mov.w	r2, #1572864	; 0x180000
 8006604:	1a89      	subs	r1, r1, r2
 8006606:	d021      	beq.n	800664c <ai_array_fmt_valid+0xde>
 8006608:	f8df 22fc 	ldr.w	r2, [pc, #764]	; 8006908 <.text_17>
 800660c:	1a89      	subs	r1, r1, r2
 800660e:	d01d      	beq.n	800664c <ai_array_fmt_valid+0xde>
 8006610:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8006614:	1a89      	subs	r1, r1, r2
 8006616:	d019      	beq.n	800664c <ai_array_fmt_valid+0xde>
 8006618:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800661c:	1a89      	subs	r1, r1, r2
 800661e:	d015      	beq.n	800664c <ai_array_fmt_valid+0xde>
 8006620:	f8df 22e8 	ldr.w	r2, [pc, #744]	; 800690c <.text_18>
 8006624:	1a89      	subs	r1, r1, r2
 8006626:	d011      	beq.n	800664c <ai_array_fmt_valid+0xde>
 8006628:	f44f 12c0 	mov.w	r2, #1572864	; 0x180000
 800662c:	1a89      	subs	r1, r1, r2
 800662e:	bf1e      	ittt	ne
 8006630:	f36f 000d 	bfcne	r0, #0, #14
 8006634:	f040 0040 	orrne.w	r0, r0, #64	; 0x40
 8006638:	2840      	cmpne	r0, #64	; 0x40
 800663a:	d007      	beq.n	800664c <ai_array_fmt_valid+0xde>
 800663c:	f8df 32d0 	ldr.w	r3, [pc, #720]	; 8006910 <.text_19>
 8006640:	4298      	cmp	r0, r3
 8006642:	bf1c      	itt	ne
 8006644:	f8df 32cc 	ldrne.w	r3, [pc, #716]	; 8006914 <.text_20>
 8006648:	4298      	cmpne	r0, r3
 800664a:	d101      	bne.n	8006650 <ai_array_fmt_valid+0xe2>
 800664c:	2001      	movs	r0, #1
 800664e:	4770      	bx	lr
 8006650:	2000      	movs	r0, #0
 8006652:	4770      	bx	lr

08006654 <ai_array_fmt_get_formats>:
 8006654:	f8df 12c0 	ldr.w	r1, [pc, #704]	; 8006918 <.text_21>
 8006658:	6001      	str	r1, [r0, #0]
 800665a:	201c      	movs	r0, #28
 800665c:	4770      	bx	lr
	...

08006660 <.text_8>:
 8006660:	00000000 	.word	0x00000000

08006664 <ai_buffer_fmt_name>:
 8006664:	f020 407e 	bic.w	r0, r0, #4261412864	; 0xfe000000
 8006668:	f1b0 0140 	subs.w	r1, r0, #64	; 0x40
 800666c:	d022      	beq.n	80066b4 <ai_buffer_fmt_name+0x50>
 800666e:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8006672:	1a89      	subs	r1, r1, r2
 8006674:	d039      	beq.n	80066ea <ai_buffer_fmt_name+0x86>
 8006676:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800667a:	1a89      	subs	r1, r1, r2
 800667c:	d020      	beq.n	80066c0 <ai_buffer_fmt_name+0x5c>
 800667e:	1fc9      	subs	r1, r1, #7
 8006680:	d036      	beq.n	80066f0 <ai_buffer_fmt_name+0x8c>
 8006682:	f240 32f9 	movw	r2, #1017	; 0x3f9
 8006686:	1a89      	subs	r1, r1, r2
 8006688:	d01d      	beq.n	80066c6 <ai_buffer_fmt_name+0x62>
 800668a:	390f      	subs	r1, #15
 800668c:	d033      	beq.n	80066f6 <ai_buffer_fmt_name+0x92>
 800668e:	4aa3      	ldr	r2, [pc, #652]	; (800691c <.text_22>)
 8006690:	1a89      	subs	r1, r1, r2
 8006692:	d021      	beq.n	80066d8 <ai_buffer_fmt_name+0x74>
 8006694:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006698:	1a89      	subs	r1, r1, r2
 800669a:	d017      	beq.n	80066cc <ai_buffer_fmt_name+0x68>
 800669c:	1fc9      	subs	r1, r1, #7
 800669e:	d01e      	beq.n	80066de <ai_buffer_fmt_name+0x7a>
 80066a0:	f240 32f9 	movw	r2, #1017	; 0x3f9
 80066a4:	1a89      	subs	r1, r1, r2
 80066a6:	d014      	beq.n	80066d2 <ai_buffer_fmt_name+0x6e>
 80066a8:	390f      	subs	r1, #15
 80066aa:	d01b      	beq.n	80066e4 <ai_buffer_fmt_name+0x80>
 80066ac:	4a9c      	ldr	r2, [pc, #624]	; (8006920 <.text_23>)
 80066ae:	1a89      	subs	r1, r1, r2
 80066b0:	d003      	beq.n	80066ba <ai_buffer_fmt_name+0x56>
 80066b2:	e023      	b.n	80066fc <ai_buffer_fmt_name+0x98>
 80066b4:	f20f 3070 	addw	r0, pc, #880	; 0x370
 80066b8:	4770      	bx	lr
 80066ba:	f20f 3078 	addw	r0, pc, #888	; 0x378
 80066be:	4770      	bx	lr
 80066c0:	f20f 3094 	addw	r0, pc, #916	; 0x394
 80066c4:	4770      	bx	lr
 80066c6:	f20f 3098 	addw	r0, pc, #920	; 0x398
 80066ca:	4770      	bx	lr
 80066cc:	f20f 30b0 	addw	r0, pc, #944	; 0x3b0
 80066d0:	4770      	bx	lr
 80066d2:	f20f 30b4 	addw	r0, pc, #948	; 0x3b4
 80066d6:	4770      	bx	lr
 80066d8:	f20f 30cc 	addw	r0, pc, #972	; 0x3cc
 80066dc:	4770      	bx	lr
 80066de:	f20f 30d0 	addw	r0, pc, #976	; 0x3d0
 80066e2:	4770      	bx	lr
 80066e4:	f20f 30d0 	addw	r0, pc, #976	; 0x3d0
 80066e8:	4770      	bx	lr
 80066ea:	f20f 30dc 	addw	r0, pc, #988	; 0x3dc
 80066ee:	4770      	bx	lr
 80066f0:	f20f 30dc 	addw	r0, pc, #988	; 0x3dc
 80066f4:	4770      	bx	lr
 80066f6:	f20f 30e0 	addw	r0, pc, #992	; 0x3e0
 80066fa:	4770      	bx	lr
 80066fc:	0b80      	lsrs	r0, r0, #14
 80066fe:	0380      	lsls	r0, r0, #14
 8006700:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 8006704:	2840      	cmp	r0, #64	; 0x40
 8006706:	d007      	beq.n	8006718 <ai_buffer_fmt_name+0xb4>
 8006708:	4981      	ldr	r1, [pc, #516]	; (8006910 <.text_19>)
 800670a:	4288      	cmp	r0, r1
 800670c:	d00a      	beq.n	8006724 <ai_buffer_fmt_name+0xc0>
 800670e:	4981      	ldr	r1, [pc, #516]	; (8006914 <.text_20>)
 8006710:	4288      	cmp	r0, r1
 8006712:	d004      	beq.n	800671e <ai_buffer_fmt_name+0xba>
 8006714:	a079      	add	r0, pc, #484	; (adr r0, 80068fc <.text_14>)
 8006716:	4770      	bx	lr
 8006718:	f20f 4074 	addw	r0, pc, #1140	; 0x474
 800671c:	4770      	bx	lr
 800671e:	f20f 4088 	addw	r0, pc, #1160	; 0x488
 8006722:	4770      	bx	lr
 8006724:	f20f 4094 	addw	r0, pc, #1172	; 0x494
 8006728:	4770      	bx	lr

0800672a <ai_buffer_fmt_valid>:
 800672a:	f020 407e 	bic.w	r0, r0, #4261412864	; 0xfe000000
 800672e:	f1b0 0140 	subs.w	r1, r0, #64	; 0x40
 8006732:	d02d      	beq.n	8006790 <ai_buffer_fmt_valid+0x66>
 8006734:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8006738:	1a89      	subs	r1, r1, r2
 800673a:	d029      	beq.n	8006790 <ai_buffer_fmt_valid+0x66>
 800673c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006740:	1a89      	subs	r1, r1, r2
 8006742:	d025      	beq.n	8006790 <ai_buffer_fmt_valid+0x66>
 8006744:	1fc9      	subs	r1, r1, #7
 8006746:	d023      	beq.n	8006790 <ai_buffer_fmt_valid+0x66>
 8006748:	f240 32f9 	movw	r2, #1017	; 0x3f9
 800674c:	1a89      	subs	r1, r1, r2
 800674e:	d01f      	beq.n	8006790 <ai_buffer_fmt_valid+0x66>
 8006750:	390f      	subs	r1, #15
 8006752:	d01d      	beq.n	8006790 <ai_buffer_fmt_valid+0x66>
 8006754:	4a71      	ldr	r2, [pc, #452]	; (800691c <.text_22>)
 8006756:	1a89      	subs	r1, r1, r2
 8006758:	d01a      	beq.n	8006790 <ai_buffer_fmt_valid+0x66>
 800675a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800675e:	1a89      	subs	r1, r1, r2
 8006760:	d016      	beq.n	8006790 <ai_buffer_fmt_valid+0x66>
 8006762:	1fc9      	subs	r1, r1, #7
 8006764:	d014      	beq.n	8006790 <ai_buffer_fmt_valid+0x66>
 8006766:	f240 32f9 	movw	r2, #1017	; 0x3f9
 800676a:	1a89      	subs	r1, r1, r2
 800676c:	d010      	beq.n	8006790 <ai_buffer_fmt_valid+0x66>
 800676e:	390f      	subs	r1, #15
 8006770:	d00e      	beq.n	8006790 <ai_buffer_fmt_valid+0x66>
 8006772:	4a6b      	ldr	r2, [pc, #428]	; (8006920 <.text_23>)
 8006774:	1a89      	subs	r1, r1, r2
 8006776:	bf1f      	itttt	ne
 8006778:	0b80      	lsrne	r0, r0, #14
 800677a:	0380      	lslne	r0, r0, #14
 800677c:	f040 0040 	orrne.w	r0, r0, #64	; 0x40
 8006780:	2840      	cmpne	r0, #64	; 0x40
 8006782:	d005      	beq.n	8006790 <ai_buffer_fmt_valid+0x66>
 8006784:	4b62      	ldr	r3, [pc, #392]	; (8006910 <.text_19>)
 8006786:	4298      	cmp	r0, r3
 8006788:	bf1c      	itt	ne
 800678a:	4b62      	ldrne	r3, [pc, #392]	; (8006914 <.text_20>)
 800678c:	4298      	cmpne	r0, r3
 800678e:	d101      	bne.n	8006794 <ai_buffer_fmt_valid+0x6a>
 8006790:	2001      	movs	r0, #1
 8006792:	4770      	bx	lr
 8006794:	2000      	movs	r0, #0
 8006796:	4770      	bx	lr

08006798 <ai_buffer_fmt_get_formats>:
 8006798:	4962      	ldr	r1, [pc, #392]	; (8006924 <.text_24>)
 800679a:	6001      	str	r1, [r0, #0]
 800679c:	200c      	movs	r0, #12
 800679e:	4770      	bx	lr

080067a0 <ai_array_to_buffer_fmt>:
 80067a0:	4601      	mov	r1, r0
 80067a2:	2040      	movs	r0, #64	; 0x40
 80067a4:	f3c1 4243 	ubfx	r2, r1, #17, #4
 80067a8:	2a02      	cmp	r2, #2
 80067aa:	d104      	bne.n	80067b6 <ai_array_to_buffer_fmt+0x16>
 80067ac:	485e      	ldr	r0, [pc, #376]	; (8006928 <.text_25>)
 80067ae:	4008      	ands	r0, r1
 80067b0:	f440 2080 	orr.w	r0, r0, #262144	; 0x40000
 80067b4:	e037      	b.n	8006826 <ai_array_to_buffer_fmt+0x86>
 80067b6:	f021 427e 	bic.w	r2, r1, #4261412864	; 0xfe000000
 80067ba:	4b55      	ldr	r3, [pc, #340]	; (8006910 <.text_19>)
 80067bc:	1ad2      	subs	r2, r2, r3
 80067be:	d02d      	beq.n	800681c <ai_array_to_buffer_fmt+0x7c>
 80067c0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80067c4:	1ad2      	subs	r2, r2, r3
 80067c6:	d01b      	beq.n	8006800 <ai_array_to_buffer_fmt+0x60>
 80067c8:	1fd2      	subs	r2, r2, #7
 80067ca:	d029      	beq.n	8006820 <ai_array_to_buffer_fmt+0x80>
 80067cc:	f240 33f9 	movw	r3, #1017	; 0x3f9
 80067d0:	1ad2      	subs	r2, r2, r3
 80067d2:	d017      	beq.n	8006804 <ai_array_to_buffer_fmt+0x64>
 80067d4:	3a0f      	subs	r2, #15
 80067d6:	d025      	beq.n	8006824 <ai_array_to_buffer_fmt+0x84>
 80067d8:	4b50      	ldr	r3, [pc, #320]	; (800691c <.text_22>)
 80067da:	1ad2      	subs	r2, r2, r3
 80067dc:	d018      	beq.n	8006810 <ai_array_to_buffer_fmt+0x70>
 80067de:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80067e2:	1ad2      	subs	r2, r2, r3
 80067e4:	d010      	beq.n	8006808 <ai_array_to_buffer_fmt+0x68>
 80067e6:	1fd2      	subs	r2, r2, #7
 80067e8:	d014      	beq.n	8006814 <ai_array_to_buffer_fmt+0x74>
 80067ea:	f240 33f9 	movw	r3, #1017	; 0x3f9
 80067ee:	1ad2      	subs	r2, r2, r3
 80067f0:	d00c      	beq.n	800680c <ai_array_to_buffer_fmt+0x6c>
 80067f2:	3a0f      	subs	r2, #15
 80067f4:	d010      	beq.n	8006818 <ai_array_to_buffer_fmt+0x78>
 80067f6:	4b4a      	ldr	r3, [pc, #296]	; (8006920 <.text_23>)
 80067f8:	1ad2      	subs	r2, r2, r3
 80067fa:	d114      	bne.n	8006826 <ai_array_to_buffer_fmt+0x86>
 80067fc:	484b      	ldr	r0, [pc, #300]	; (800692c <.text_26>)
 80067fe:	e012      	b.n	8006826 <ai_array_to_buffer_fmt+0x86>
 8006800:	484b      	ldr	r0, [pc, #300]	; (8006930 <.text_27>)
 8006802:	e010      	b.n	8006826 <ai_array_to_buffer_fmt+0x86>
 8006804:	484b      	ldr	r0, [pc, #300]	; (8006934 <.text_28>)
 8006806:	e00e      	b.n	8006826 <ai_array_to_buffer_fmt+0x86>
 8006808:	484b      	ldr	r0, [pc, #300]	; (8006938 <.text_29>)
 800680a:	e00c      	b.n	8006826 <ai_array_to_buffer_fmt+0x86>
 800680c:	484b      	ldr	r0, [pc, #300]	; (800693c <.text_30>)
 800680e:	e00a      	b.n	8006826 <ai_array_to_buffer_fmt+0x86>
 8006810:	4840      	ldr	r0, [pc, #256]	; (8006914 <.text_20>)
 8006812:	e008      	b.n	8006826 <ai_array_to_buffer_fmt+0x86>
 8006814:	484a      	ldr	r0, [pc, #296]	; (8006940 <.text_31>)
 8006816:	e006      	b.n	8006826 <ai_array_to_buffer_fmt+0x86>
 8006818:	484a      	ldr	r0, [pc, #296]	; (8006944 <.text_32>)
 800681a:	e004      	b.n	8006826 <ai_array_to_buffer_fmt+0x86>
 800681c:	4618      	mov	r0, r3
 800681e:	e002      	b.n	8006826 <ai_array_to_buffer_fmt+0x86>
 8006820:	4849      	ldr	r0, [pc, #292]	; (8006948 <.text_33>)
 8006822:	e000      	b.n	8006826 <ai_array_to_buffer_fmt+0x86>
 8006824:	4849      	ldr	r0, [pc, #292]	; (800694c <.text_34>)
 8006826:	004a      	lsls	r2, r1, #1
 8006828:	bf4c      	ite	mi
 800682a:	f04f 4280 	movmi.w	r2, #1073741824	; 0x40000000
 800682e:	2200      	movpl	r2, #0
 8006830:	4310      	orrs	r0, r2
 8006832:	008a      	lsls	r2, r1, #2
 8006834:	bf4c      	ite	mi
 8006836:	f04f 5200 	movmi.w	r2, #536870912	; 0x20000000
 800683a:	2200      	movpl	r2, #0
 800683c:	4310      	orrs	r0, r2
 800683e:	0109      	lsls	r1, r1, #4
 8006840:	bf4c      	ite	mi
 8006842:	f04f 6100 	movmi.w	r1, #134217728	; 0x8000000
 8006846:	2100      	movpl	r1, #0
 8006848:	4308      	orrs	r0, r1
 800684a:	4770      	bx	lr

0800684c <ai_buffer_to_array_fmt>:
 800684c:	4602      	mov	r2, r0
 800684e:	f022 407e 	bic.w	r0, r2, #4261412864	; 0xfe000000
 8006852:	3840      	subs	r0, #64	; 0x40
 8006854:	d022      	beq.n	800689c <ai_buffer_to_array_fmt+0x50>
 8006856:	f44f 2180 	mov.w	r1, #262144	; 0x40000
 800685a:	1a40      	subs	r0, r0, r1
 800685c:	d030      	beq.n	80068c0 <ai_buffer_to_array_fmt+0x74>
 800685e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8006862:	1a40      	subs	r0, r0, r1
 8006864:	d01e      	beq.n	80068a4 <ai_buffer_to_array_fmt+0x58>
 8006866:	1fc0      	subs	r0, r0, #7
 8006868:	d02c      	beq.n	80068c4 <ai_buffer_to_array_fmt+0x78>
 800686a:	f240 31f9 	movw	r1, #1017	; 0x3f9
 800686e:	1a40      	subs	r0, r0, r1
 8006870:	d01a      	beq.n	80068a8 <ai_buffer_to_array_fmt+0x5c>
 8006872:	380f      	subs	r0, #15
 8006874:	d028      	beq.n	80068c8 <ai_buffer_to_array_fmt+0x7c>
 8006876:	4929      	ldr	r1, [pc, #164]	; (800691c <.text_22>)
 8006878:	1a40      	subs	r0, r0, r1
 800687a:	d01b      	beq.n	80068b4 <ai_buffer_to_array_fmt+0x68>
 800687c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8006880:	1a40      	subs	r0, r0, r1
 8006882:	d013      	beq.n	80068ac <ai_buffer_to_array_fmt+0x60>
 8006884:	1fc0      	subs	r0, r0, #7
 8006886:	d017      	beq.n	80068b8 <ai_buffer_to_array_fmt+0x6c>
 8006888:	f240 31f9 	movw	r1, #1017	; 0x3f9
 800688c:	1a40      	subs	r0, r0, r1
 800688e:	d00f      	beq.n	80068b0 <ai_buffer_to_array_fmt+0x64>
 8006890:	380f      	subs	r0, #15
 8006892:	d013      	beq.n	80068bc <ai_buffer_to_array_fmt+0x70>
 8006894:	4922      	ldr	r1, [pc, #136]	; (8006920 <.text_23>)
 8006896:	1a40      	subs	r0, r0, r1
 8006898:	d002      	beq.n	80068a0 <ai_buffer_to_array_fmt+0x54>
 800689a:	e017      	b.n	80068cc <ai_buffer_to_array_fmt+0x80>
 800689c:	2040      	movs	r0, #64	; 0x40
 800689e:	e01f      	b.n	80068e0 <ai_buffer_to_array_fmt+0x94>
 80068a0:	4822      	ldr	r0, [pc, #136]	; (800692c <.text_26>)
 80068a2:	e01d      	b.n	80068e0 <ai_buffer_to_array_fmt+0x94>
 80068a4:	4822      	ldr	r0, [pc, #136]	; (8006930 <.text_27>)
 80068a6:	e01b      	b.n	80068e0 <ai_buffer_to_array_fmt+0x94>
 80068a8:	4822      	ldr	r0, [pc, #136]	; (8006934 <.text_28>)
 80068aa:	e019      	b.n	80068e0 <ai_buffer_to_array_fmt+0x94>
 80068ac:	4822      	ldr	r0, [pc, #136]	; (8006938 <.text_29>)
 80068ae:	e017      	b.n	80068e0 <ai_buffer_to_array_fmt+0x94>
 80068b0:	4822      	ldr	r0, [pc, #136]	; (800693c <.text_30>)
 80068b2:	e015      	b.n	80068e0 <ai_buffer_to_array_fmt+0x94>
 80068b4:	4817      	ldr	r0, [pc, #92]	; (8006914 <.text_20>)
 80068b6:	e013      	b.n	80068e0 <ai_buffer_to_array_fmt+0x94>
 80068b8:	4821      	ldr	r0, [pc, #132]	; (8006940 <.text_31>)
 80068ba:	e011      	b.n	80068e0 <ai_buffer_to_array_fmt+0x94>
 80068bc:	4821      	ldr	r0, [pc, #132]	; (8006944 <.text_32>)
 80068be:	e00f      	b.n	80068e0 <ai_buffer_to_array_fmt+0x94>
 80068c0:	4813      	ldr	r0, [pc, #76]	; (8006910 <.text_19>)
 80068c2:	e00d      	b.n	80068e0 <ai_buffer_to_array_fmt+0x94>
 80068c4:	4820      	ldr	r0, [pc, #128]	; (8006948 <.text_33>)
 80068c6:	e00b      	b.n	80068e0 <ai_buffer_to_array_fmt+0x94>
 80068c8:	4820      	ldr	r0, [pc, #128]	; (800694c <.text_34>)
 80068ca:	e009      	b.n	80068e0 <ai_buffer_to_array_fmt+0x94>
 80068cc:	f3c2 51c0 	ubfx	r1, r2, #23, #1
 80068d0:	f3c2 000d 	ubfx	r0, r2, #0, #14
 80068d4:	2900      	cmp	r1, #0
 80068d6:	bf14      	ite	ne
 80068d8:	f440 0004 	orrne.w	r0, r0, #8650752	; 0x840000
 80068dc:	f440 2080 	orreq.w	r0, r0, #262144	; 0x40000
 80068e0:	0051      	lsls	r1, r2, #1
 80068e2:	bf48      	it	mi
 80068e4:	f040 4080 	orrmi.w	r0, r0, #1073741824	; 0x40000000
 80068e8:	0093      	lsls	r3, r2, #2
 80068ea:	bf48      	it	mi
 80068ec:	f040 5000 	orrmi.w	r0, r0, #536870912	; 0x20000000
 80068f0:	0111      	lsls	r1, r2, #4
 80068f2:	bf48      	it	mi
 80068f4:	f040 6000 	orrmi.w	r0, r0, #134217728	; 0x8000000
 80068f8:	4770      	bx	lr
	...

080068fc <.text_14>:
 80068fc:	00000000 	.word	0x00000000

08006900 <.text_15>:
 8006900:	002be80f 	.word	0x002be80f

08006904 <.text_16>:
 8006904:	003bf7f1 	.word	0x003bf7f1

08006908 <.text_17>:
 8006908:	00b9fff1 	.word	0x00b9fff1

0800690c <.text_18>:
 800690c:	004df000 	.word	0x004df000

08006910 <.text_19>:
 8006910:	00040040 	.word	0x00040040

08006914 <.text_20>:
 8006914:	00840040 	.word	0x00840040

08006918 <.text_21>:
 8006918:	08015c1c 	.word	0x08015c1c

0800691c <.text_22>:
 800691c:	007ff7f1 	.word	0x007ff7f1

08006920 <.text_23>:
 8006920:	00fe07f1 	.word	0x00fe07f1

08006924 <.text_24>:
 8006924:	08015c8c 	.word	0x08015c8c

08006928 <.text_25>:
 8006928:	00803fff 	.word	0x00803fff

0800692c <.text_26>:
 800692c:	01821040 	.word	0x01821040

08006930 <.text_27>:
 8006930:	00040440 	.word	0x00040440

08006934 <.text_28>:
 8006934:	00040840 	.word	0x00040840

08006938 <.text_29>:
 8006938:	00840440 	.word	0x00840440

0800693c <.text_30>:
 800693c:	00840840 	.word	0x00840840

08006940 <.text_31>:
 8006940:	00840447 	.word	0x00840447

08006944 <.text_32>:
 8006944:	0084084f 	.word	0x0084084f

08006948 <.text_33>:
 8006948:	00040447 	.word	0x00040447

0800694c <.text_34>:
 800694c:	0004084f 	.word	0x0004084f

08006950 <ai_array_get_byte_size>:
 8006950:	b909      	cbnz	r1, 8006956 <ai_array_get_byte_size+0x6>
 8006952:	2000      	movs	r0, #0
 8006954:	4770      	bx	lr
 8006956:	11c2      	asrs	r2, r0, #7
 8006958:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800695c:	f3c0 3382 	ubfx	r3, r0, #14, #3
 8006960:	189b      	adds	r3, r3, r2
 8006962:	4359      	muls	r1, r3
 8006964:	ea4f 4c60 	mov.w	ip, r0, asr #17
 8006968:	f00c 0c0f 	and.w	ip, ip, #15
 800696c:	1543      	asrs	r3, r0, #21
 800696e:	f003 0303 	and.w	r3, r3, #3
 8006972:	1dc9      	adds	r1, r1, #7
 8006974:	08c9      	lsrs	r1, r1, #3
 8006976:	00c9      	lsls	r1, r1, #3
 8006978:	40d9      	lsrs	r1, r3
 800697a:	f1bc 0f04 	cmp.w	ip, #4
 800697e:	d00a      	beq.n	8006996 <ai_array_get_byte_size+0x46>
 8006980:	f1bc 0f08 	cmp.w	ip, #8
 8006984:	bf02      	ittt	eq
 8006986:	f3c0 3082 	ubfxeq	r0, r0, #14, #3
 800698a:	1882      	addeq	r2, r0, r2
 800698c:	eb01 2102 	addeq.w	r1, r1, r2, lsl #8
 8006990:	1dc9      	adds	r1, r1, #7
 8006992:	08c8      	lsrs	r0, r1, #3
 8006994:	4770      	bx	lr
 8006996:	f3c0 3082 	ubfx	r0, r0, #14, #3
 800699a:	1882      	adds	r2, r0, r2
 800699c:	eb01 1102 	add.w	r1, r1, r2, lsl #4
 80069a0:	1dc9      	adds	r1, r1, #7
 80069a2:	08c8      	lsrs	r0, r1, #3
 80069a4:	4770      	bx	lr

080069a6 <ai_array_get_data_byte_size>:
 80069a6:	b909      	cbnz	r1, 80069ac <ai_array_get_data_byte_size+0x6>
 80069a8:	2000      	movs	r0, #0
 80069aa:	4770      	bx	lr
 80069ac:	11c2      	asrs	r2, r0, #7
 80069ae:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 80069b2:	f3c0 3382 	ubfx	r3, r0, #14, #3
 80069b6:	189a      	adds	r2, r3, r2
 80069b8:	4351      	muls	r1, r2
 80069ba:	1540      	asrs	r0, r0, #21
 80069bc:	f000 0003 	and.w	r0, r0, #3
 80069c0:	1dc9      	adds	r1, r1, #7
 80069c2:	08c9      	lsrs	r1, r1, #3
 80069c4:	00c9      	lsls	r1, r1, #3
 80069c6:	40c1      	lsrs	r1, r0
 80069c8:	1dc9      	adds	r1, r1, #7
 80069ca:	08c8      	lsrs	r0, r1, #3
 80069cc:	4770      	bx	lr

080069ce <ai_array_get_elems_from_size>:
 80069ce:	b909      	cbnz	r1, 80069d4 <ai_array_get_elems_from_size+0x6>
 80069d0:	2000      	movs	r0, #0
 80069d2:	4770      	bx	lr
 80069d4:	1442      	asrs	r2, r0, #17
 80069d6:	00c9      	lsls	r1, r1, #3
 80069d8:	f002 020f 	and.w	r2, r2, #15
 80069dc:	2a04      	cmp	r2, #4
 80069de:	d002      	beq.n	80069e6 <ai_array_get_elems_from_size+0x18>
 80069e0:	2a08      	cmp	r2, #8
 80069e2:	d009      	beq.n	80069f8 <ai_array_get_elems_from_size+0x2a>
 80069e4:	e010      	b.n	8006a08 <ai_array_get_elems_from_size+0x3a>
 80069e6:	11c3      	asrs	r3, r0, #7
 80069e8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80069ec:	f3c0 3282 	ubfx	r2, r0, #14, #3
 80069f0:	18d2      	adds	r2, r2, r3
 80069f2:	eba1 1102 	sub.w	r1, r1, r2, lsl #4
 80069f6:	e007      	b.n	8006a08 <ai_array_get_elems_from_size+0x3a>
 80069f8:	11c2      	asrs	r2, r0, #7
 80069fa:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 80069fe:	f3c0 3382 	ubfx	r3, r0, #14, #3
 8006a02:	189a      	adds	r2, r3, r2
 8006a04:	eba1 2102 	sub.w	r1, r1, r2, lsl #8
 8006a08:	1542      	asrs	r2, r0, #21
 8006a0a:	f002 0203 	and.w	r2, r2, #3
 8006a0e:	4091      	lsls	r1, r2
 8006a10:	1dc9      	adds	r1, r1, #7
 8006a12:	11c3      	asrs	r3, r0, #7
 8006a14:	08c9      	lsrs	r1, r1, #3
 8006a16:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8006a1a:	f3c0 3082 	ubfx	r0, r0, #14, #3
 8006a1e:	00c9      	lsls	r1, r1, #3
 8006a20:	18c0      	adds	r0, r0, r3
 8006a22:	fbb1 f0f0 	udiv	r0, r1, r0
 8006a26:	4770      	bx	lr

08006a28 <.text_38>:
 8006a28:	5f544d46 	.word	0x5f544d46
 8006a2c:	454e4f4e 	.word	0x454e4f4e
 8006a30:	00          	.byte	0x00
 8006a31:	00          	.byte	0x00
	...

08006a34 <.text_39>:
 8006a34:	5f544d46 	.word	0x5f544d46
 8006a38:	414f4c46 	.word	0x414f4c46
 8006a3c:	0054      	.short	0x0054
	...

08006a40 <.text_40>:
 8006a40:	5f544d46 	.word	0x5f544d46
 8006a44:	414f4c46 	.word	0x414f4c46
 8006a48:	00343654 	.word	0x00343654

08006a4c <.text_41>:
 8006a4c:	5f544d46 	.word	0x5f544d46
 8006a50:	414f4c46 	.word	0x414f4c46
 8006a54:	00363154 	.word	0x00363154

08006a58 <.text_42>:
 8006a58:	5f544d46 	.word	0x5f544d46
 8006a5c:	00003855 	.word	0x00003855

08006a60 <.text_43>:
 8006a60:	5f544d46 	.word	0x5f544d46
 8006a64:	00363155 	.word	0x00363155

08006a68 <.text_44>:
 8006a68:	5f544d46 	.word	0x5f544d46
 8006a6c:	00323355 	.word	0x00323355

08006a70 <.text_45>:
 8006a70:	5f544d46 	.word	0x5f544d46
 8006a74:	00343655 	.word	0x00343655

08006a78 <.text_46>:
 8006a78:	5f544d46 	.word	0x5f544d46
 8006a7c:	00003455 	.word	0x00003455

08006a80 <.text_47>:
 8006a80:	5f544d46 	.word	0x5f544d46
 8006a84:	00003853 	.word	0x00003853

08006a88 <.text_48>:
 8006a88:	5f544d46 	.word	0x5f544d46
 8006a8c:	00363153 	.word	0x00363153

08006a90 <.text_49>:
 8006a90:	5f544d46 	.word	0x5f544d46
 8006a94:	00323353 	.word	0x00323353

08006a98 <.text_50>:
 8006a98:	5f544d46 	.word	0x5f544d46
 8006a9c:	00343653 	.word	0x00343653

08006aa0 <.text_51>:
 8006aa0:	5f544d46 	.word	0x5f544d46
 8006aa4:	00003453 	.word	0x00003453

08006aa8 <.text_52>:
 8006aa8:	5f544d46 	.word	0x5f544d46
 8006aac:	0051      	.short	0x0051
	...

08006ab0 <.text_53>:
 8006ab0:	5f544d46 	.word	0x5f544d46
 8006ab4:	00003751 	.word	0x00003751

08006ab8 <.text_54>:
 8006ab8:	5f544d46 	.word	0x5f544d46
 8006abc:	00353151 	.word	0x00353151

08006ac0 <.text_55>:
 8006ac0:	5f544d46 	.word	0x5f544d46
 8006ac4:	00313351 	.word	0x00313351

08006ac8 <.text_56>:
 8006ac8:	5f544d46 	.word	0x5f544d46
 8006acc:	00005155 	.word	0x00005155

08006ad0 <.text_57>:
 8006ad0:	5f544d46 	.word	0x5f544d46
 8006ad4:	00375155 	.word	0x00375155

08006ad8 <.text_58>:
 8006ad8:	5f544d46 	.word	0x5f544d46
 8006adc:	35315155 	.word	0x35315155
 8006ae0:	00          	.byte	0x00
 8006ae1:	00          	.byte	0x00
	...

08006ae4 <.text_59>:
 8006ae4:	5f544d46 	.word	0x5f544d46
 8006ae8:	31335155 	.word	0x31335155
 8006aec:	00          	.byte	0x00
 8006aed:	00          	.byte	0x00
	...

08006af0 <.text_60>:
 8006af0:	5f544d46 	.word	0x5f544d46
 8006af4:	3454554c 	.word	0x3454554c
 8006af8:	4f4c465f 	.word	0x4f4c465f
 8006afc:	00005441 	.word	0x00005441

08006b00 <.text_61>:
 8006b00:	5f544d46 	.word	0x5f544d46
 8006b04:	3854554c 	.word	0x3854554c
 8006b08:	4f4c465f 	.word	0x4f4c465f
 8006b0c:	00005441 	.word	0x00005441

08006b10 <.text_62>:
 8006b10:	5f544d46 	.word	0x5f544d46
 8006b14:	3454554c 	.word	0x3454554c
 8006b18:	3531515f 	.word	0x3531515f
 8006b1c:	00          	.byte	0x00
 8006b1d:	00          	.byte	0x00
	...

08006b20 <.text_63>:
 8006b20:	5f544d46 	.word	0x5f544d46
 8006b24:	3854554c 	.word	0x3854554c
 8006b28:	3531515f 	.word	0x3531515f
 8006b2c:	00          	.byte	0x00
 8006b2d:	00          	.byte	0x00
	...

08006b30 <.text_64>:
 8006b30:	5f544d46 	.word	0x5f544d46
 8006b34:	3454554c 	.word	0x3454554c
 8006b38:	3151555f 	.word	0x3151555f
 8006b3c:	0035      	.short	0x0035
	...

08006b40 <.text_65>:
 8006b40:	5f544d46 	.word	0x5f544d46
 8006b44:	3854554c 	.word	0x3854554c
 8006b48:	3151555f 	.word	0x3151555f
 8006b4c:	0035      	.short	0x0035
	...

08006b50 <.text_66>:
 8006b50:	415f4941 	.word	0x415f4941
 8006b54:	59415252 	.word	0x59415252
 8006b58:	524f465f 	.word	0x524f465f
 8006b5c:	5f54414d 	.word	0x5f54414d
 8006b60:	454e4f4e 	.word	0x454e4f4e
 8006b64:	00          	.byte	0x00
 8006b65:	00          	.byte	0x00
	...

08006b68 <.text_67>:
 8006b68:	415f4941 	.word	0x415f4941
 8006b6c:	59415252 	.word	0x59415252
 8006b70:	524f465f 	.word	0x524f465f
 8006b74:	5f54414d 	.word	0x5f54414d
 8006b78:	0051      	.short	0x0051
	...

08006b7c <.text_68>:
 8006b7c:	415f4941 	.word	0x415f4941
 8006b80:	59415252 	.word	0x59415252
 8006b84:	524f465f 	.word	0x524f465f
 8006b88:	5f54414d 	.word	0x5f54414d
 8006b8c:	00005155 	.word	0x00005155

08006b90 <.text_69>:
 8006b90:	425f4941 	.word	0x425f4941
 8006b94:	45464655 	.word	0x45464655
 8006b98:	4f465f52 	.word	0x4f465f52
 8006b9c:	54414d52 	.word	0x54414d52
 8006ba0:	4e4f4e5f 	.word	0x4e4f4e5f
 8006ba4:	0045      	.short	0x0045
	...

08006ba8 <.text_70>:
 8006ba8:	425f4941 	.word	0x425f4941
 8006bac:	45464655 	.word	0x45464655
 8006bb0:	4f465f52 	.word	0x4f465f52
 8006bb4:	54414d52 	.word	0x54414d52
 8006bb8:	0000515f 	.word	0x0000515f

08006bbc <.text_71>:
 8006bbc:	425f4941 	.word	0x425f4941
 8006bc0:	45464655 	.word	0x45464655
 8006bc4:	4f465f52 	.word	0x4f465f52
 8006bc8:	54414d52 	.word	0x54414d52
 8006bcc:	0051555f 	.word	0x0051555f

08006bd0 <ai_math_sqrt>:
 8006bd0:	eef0 0a40 	vmov.f32	s1, s0
 8006bd4:	eef5 0a40 	vcmp.f32	s1, #0.0
 8006bd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006bdc:	ed9f 0a29 	vldr	s0, [pc, #164]	; 8006c84 <.text_12>
 8006be0:	db01      	blt.n	8006be6 <ai_math_sqrt+0x16>
 8006be2:	eeb1 0ae0 	vsqrt.f32	s0, s1
 8006be6:	4770      	bx	lr

08006be8 <ai_math_exp>:
 8006be8:	f00b bfd6 	b.w	8012b98 <expf>

08006bec <ai_math_pow>:
 8006bec:	f00c ba24 	b.w	8013038 <powf>

08006bf0 <ai_math_tanh>:
 8006bf0:	f00c bbf0 	b.w	80133d4 <tanhf>

08006bf4 <ai_math_cosh>:
 8006bf4:	f00c bda0 	b.w	8013738 <coshf>

08006bf8 <ai_math_relu>:
 8006bf8:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8006bfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c00:	bf48      	it	mi
 8006c02:	ed9f 0a20 	vldrmi	s0, [pc, #128]	; 8006c84 <.text_12>
 8006c06:	4770      	bx	lr

08006c08 <ai_math_prelu>:
 8006c08:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8006c0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c10:	bf48      	it	mi
 8006c12:	ee20 0a20 	vmulmi.f32	s0, s0, s1
 8006c16:	4770      	bx	lr

08006c18 <ai_math_sigmoid>:
 8006c18:	b500      	push	{lr}
 8006c1a:	b081      	sub	sp, #4
 8006c1c:	eeb1 0a40 	vneg.f32	s0, s0
 8006c20:	f00b ffba 	bl	8012b98 <expf>
 8006c24:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 8006c28:	b001      	add	sp, #4
 8006c2a:	ee30 0a20 	vadd.f32	s0, s0, s1
 8006c2e:	eeb7 1a00 	vmov.f32	s2, #112	; 0x3f800000  1.0
 8006c32:	ee81 0a00 	vdiv.f32	s0, s2, s0
 8006c36:	bd00      	pop	{pc}

08006c38 <ai_math_hard_sigmoid>:
 8006c38:	eef0 0a40 	vmov.f32	s1, s0
 8006c3c:	ed9f 1a12 	vldr	s2, [pc, #72]	; 8006c88 <.text_13>
 8006c40:	eeb6 0a00 	vmov.f32	s0, #96	; 0x3f000000  0.5
 8006c44:	ee00 0a81 	vmla.f32	s0, s1, s2
 8006c48:	eddf 0a10 	vldr	s1, [pc, #64]	; 8006c8c <.text_14>
 8006c4c:	eeb4 0a60 	vcmp.f32	s0, s1
 8006c50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c54:	da07      	bge.n	8006c66 <ai_math_hard_sigmoid+0x2e>
 8006c56:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8006c5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c5e:	d504      	bpl.n	8006c6a <ai_math_hard_sigmoid+0x32>
 8006c60:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8006c84 <.text_12>
 8006c64:	4770      	bx	lr
 8006c66:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8006c6a:	4770      	bx	lr

08006c6c <ai_math_sign>:
 8006c6c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8006c70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c74:	bfcc      	ite	gt
 8006c76:	ed9f 0a06 	vldrgt	s0, [pc, #24]	; 8006c90 <.text_15>
 8006c7a:	ed9f 0a06 	vldrle	s0, [pc, #24]	; 8006c94 <.text_16>
 8006c7e:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8006c82:	4770      	bx	lr

08006c84 <.text_12>:
 8006c84:	00000000 	.word	0x00000000

08006c88 <.text_13>:
 8006c88:	3e4ccccd 	.word	0x3e4ccccd

08006c8c <.text_14>:
 8006c8c:	3f800001 	.word	0x3f800001

08006c90 <.text_15>:
 8006c90:	00000001 	.word	0x00000001

08006c94 <.text_16>:
 8006c94:	ffffffff 	.word	0xffffffff

08006c98 <ai_div>:
 8006c98:	ee80 0a20 	vdiv.f32	s0, s0, s1
 8006c9c:	4770      	bx	lr

08006c9e <ai_floor_div>:
 8006c9e:	ee80 0a20 	vdiv.f32	s0, s0, s1
 8006ca2:	f00b bfff 	b.w	8012ca4 <floorf>

08006ca6 <ai_floor_mod>:
 8006ca6:	f00c bda3 	b.w	80137f0 <fmodf>

08006caa <ai_max>:
 8006caa:	eef4 0a40 	vcmp.f32	s1, s0
 8006cae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006cb2:	bf58      	it	pl
 8006cb4:	eeb0 0a60 	vmovpl.f32	s0, s1
 8006cb8:	4770      	bx	lr

08006cba <ai_min>:
 8006cba:	eeb4 0a60 	vcmp.f32	s0, s1
 8006cbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006cc2:	bf58      	it	pl
 8006cc4:	eeb0 0a60 	vmovpl.f32	s0, s1
 8006cc8:	4770      	bx	lr

08006cca <ai_mul>:
 8006cca:	ee20 0a20 	vmul.f32	s0, s0, s1
 8006cce:	4770      	bx	lr

08006cd0 <ai_sub>:
 8006cd0:	ee30 0a60 	vsub.f32	s0, s0, s1
 8006cd4:	4770      	bx	lr

08006cd6 <ai_sum>:
 8006cd6:	ee30 0a20 	vadd.f32	s0, s0, s1
 8006cda:	4770      	bx	lr

08006cdc <arm_mat_init_f32>:
 8006cdc:	8001      	strh	r1, [r0, #0]
 8006cde:	8042      	strh	r2, [r0, #2]
 8006ce0:	6043      	str	r3, [r0, #4]
 8006ce2:	4770      	bx	lr

08006ce4 <core_timer_init_>:
 8006ce4:	4770      	bx	lr

08006ce6 <core_timer_ticks_>:
 8006ce6:	2000      	movs	r0, #0
 8006ce8:	4770      	bx	lr
	...

08006cec <core_timer_init>:
 8006cec:	b530      	push	{r4, r5, lr}
 8006cee:	0005      	movs	r5, r0
 8006cf0:	b081      	sub	sp, #4
 8006cf2:	460c      	mov	r4, r1
 8006cf4:	d00d      	beq.n	8006d12 <core_timer_init+0x26>
 8006cf6:	4929      	ldr	r1, [pc, #164]	; (8006d9c <.text_12>)
 8006cf8:	7808      	ldrb	r0, [r1, #0]
 8006cfa:	b118      	cbz	r0, 8006d04 <core_timer_init+0x18>
 8006cfc:	2200      	movs	r2, #0
 8006cfe:	700a      	strb	r2, [r1, #0]
 8006d00:	f7ff fff0 	bl	8006ce4 <core_timer_init_>
 8006d04:	b904      	cbnz	r4, 8006d08 <core_timer_init+0x1c>
 8006d06:	a423      	add	r4, pc, #140	; (adr r4, 8006d94 <.text_10>)
 8006d08:	602c      	str	r4, [r5, #0]
 8006d0a:	2000      	movs	r0, #0
 8006d0c:	60a8      	str	r0, [r5, #8]
 8006d0e:	6068      	str	r0, [r5, #4]
 8006d10:	2001      	movs	r0, #1
 8006d12:	b001      	add	sp, #4
 8006d14:	bd30      	pop	{r4, r5, pc}

08006d16 <core_timer_reset>:
 8006d16:	b118      	cbz	r0, 8006d20 <core_timer_reset+0xa>
 8006d18:	2100      	movs	r1, #0
 8006d1a:	6081      	str	r1, [r0, #8]
 8006d1c:	6041      	str	r1, [r0, #4]
 8006d1e:	2001      	movs	r0, #1
 8006d20:	4770      	bx	lr

08006d22 <core_timer_start>:
 8006d22:	b510      	push	{r4, lr}
 8006d24:	0004      	movs	r4, r0
 8006d26:	d101      	bne.n	8006d2c <core_timer_start+0xa>
 8006d28:	2000      	movs	r0, #0
 8006d2a:	bd10      	pop	{r4, pc}
 8006d2c:	f7ff ffdb 	bl	8006ce6 <core_timer_ticks_>
 8006d30:	6060      	str	r0, [r4, #4]
 8006d32:	2001      	movs	r0, #1
 8006d34:	bd10      	pop	{r4, pc}

08006d36 <core_timer_stop>:
 8006d36:	b510      	push	{r4, lr}
 8006d38:	0004      	movs	r4, r0
 8006d3a:	d101      	bne.n	8006d40 <core_timer_stop+0xa>
 8006d3c:	2000      	movs	r0, #0
 8006d3e:	bd10      	pop	{r4, pc}
 8006d40:	f7ff ffd1 	bl	8006ce6 <core_timer_ticks_>
 8006d44:	68a2      	ldr	r2, [r4, #8]
 8006d46:	6861      	ldr	r1, [r4, #4]
 8006d48:	1880      	adds	r0, r0, r2
 8006d4a:	1a40      	subs	r0, r0, r1
 8006d4c:	60a0      	str	r0, [r4, #8]
 8006d4e:	bd10      	pop	{r4, pc}

08006d50 <core_timer_main_test_unit>:
 8006d50:	b500      	push	{lr}
 8006d52:	b083      	sub	sp, #12
 8006d54:	a112      	add	r1, pc, #72	; (adr r1, 8006da0 <.text_13>)
 8006d56:	4668      	mov	r0, sp
 8006d58:	f7ff ffc8 	bl	8006cec <core_timer_init>
 8006d5c:	f7ff ffc3 	bl	8006ce6 <core_timer_ticks_>
 8006d60:	9001      	str	r0, [sp, #4]
 8006d62:	4668      	mov	r0, sp
 8006d64:	f7ff ffe7 	bl	8006d36 <core_timer_stop>
 8006d68:	ed9d 0a02 	vldr	s0, [sp, #8]
 8006d6c:	eeb8 0a40 	vcvt.f32.u32	s0, s0
 8006d70:	eddf 0a09 	vldr	s1, [pc, #36]	; 8006d98 <.text_11>
 8006d74:	ee60 0a20 	vmul.f32	s1, s0, s1
 8006d78:	ee10 0a90 	vmov	r0, s1
 8006d7c:	f000 fa34 	bl	80071e8 <__aeabi_f2d>
 8006d80:	460b      	mov	r3, r1
 8006d82:	4602      	mov	r2, r0
 8006d84:	f8dd 1000 	ldr.w	r1, [sp]
 8006d88:	a009      	add	r0, pc, #36	; (adr r0, 8006db0 <.text_14>)
 8006d8a:	f009 fd19 	bl	80107c0 <iprintf>
 8006d8e:	2000      	movs	r0, #0
 8006d90:	b003      	add	sp, #12
 8006d92:	bd00      	pop	{pc}

08006d94 <.text_10>:
 8006d94:	00000000 	.word	0x00000000

08006d98 <.text_11>:
 8006d98:	3a83126f 	.word	0x3a83126f

08006d9c <.text_12>:
 8006d9c:	20000004 	.word	0x20000004

08006da0 <.text_13>:
 8006da0:	6d617845 	.word	0x6d617845
 8006da4:	20656c70 	.word	0x20656c70
 8006da8:	656d6954 	.word	0x656d6954
 8006dac:	0072      	.short	0x0072
	...

08006db0 <.text_14>:
 8006db0:	656d6954 	.word	0x656d6954
 8006db4:	73252072 	.word	0x73252072
 8006db8:	6c45203a 	.word	0x6c45203a
 8006dbc:	65737061 	.word	0x65737061
 8006dc0:	66252064 	.word	0x66252064
 8006dc4:	0d736d20 	.word	0x0d736d20
 8006dc8:	000a      	.short	0x000a
	...

08006dcc <__aeabi_memset>:
 8006dcc:	b470      	push	{r4, r5, r6}
 8006dce:	0784      	lsls	r4, r0, #30
 8006dd0:	d046      	beq.n	8006e60 <__aeabi_memset+0x94>
 8006dd2:	1e4c      	subs	r4, r1, #1
 8006dd4:	2900      	cmp	r1, #0
 8006dd6:	d041      	beq.n	8006e5c <__aeabi_memset+0x90>
 8006dd8:	b2d5      	uxtb	r5, r2
 8006dda:	4603      	mov	r3, r0
 8006ddc:	e002      	b.n	8006de4 <__aeabi_memset+0x18>
 8006dde:	1e61      	subs	r1, r4, #1
 8006de0:	b3e4      	cbz	r4, 8006e5c <__aeabi_memset+0x90>
 8006de2:	460c      	mov	r4, r1
 8006de4:	f803 5b01 	strb.w	r5, [r3], #1
 8006de8:	0799      	lsls	r1, r3, #30
 8006dea:	d1f8      	bne.n	8006dde <__aeabi_memset+0x12>
 8006dec:	2c03      	cmp	r4, #3
 8006dee:	d92e      	bls.n	8006e4e <__aeabi_memset+0x82>
 8006df0:	b2d5      	uxtb	r5, r2
 8006df2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 8006df6:	2c0f      	cmp	r4, #15
 8006df8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 8006dfc:	d919      	bls.n	8006e32 <__aeabi_memset+0x66>
 8006dfe:	4626      	mov	r6, r4
 8006e00:	f103 0110 	add.w	r1, r3, #16
 8006e04:	3e10      	subs	r6, #16
 8006e06:	2e0f      	cmp	r6, #15
 8006e08:	f841 5c10 	str.w	r5, [r1, #-16]
 8006e0c:	f841 5c0c 	str.w	r5, [r1, #-12]
 8006e10:	f841 5c08 	str.w	r5, [r1, #-8]
 8006e14:	f841 5c04 	str.w	r5, [r1, #-4]
 8006e18:	f101 0110 	add.w	r1, r1, #16
 8006e1c:	d8f2      	bhi.n	8006e04 <__aeabi_memset+0x38>
 8006e1e:	f1a4 0110 	sub.w	r1, r4, #16
 8006e22:	f021 010f 	bic.w	r1, r1, #15
 8006e26:	f004 040f 	and.w	r4, r4, #15
 8006e2a:	3110      	adds	r1, #16
 8006e2c:	2c03      	cmp	r4, #3
 8006e2e:	440b      	add	r3, r1
 8006e30:	d90d      	bls.n	8006e4e <__aeabi_memset+0x82>
 8006e32:	461e      	mov	r6, r3
 8006e34:	4621      	mov	r1, r4
 8006e36:	3904      	subs	r1, #4
 8006e38:	2903      	cmp	r1, #3
 8006e3a:	f846 5b04 	str.w	r5, [r6], #4
 8006e3e:	d8fa      	bhi.n	8006e36 <__aeabi_memset+0x6a>
 8006e40:	1f21      	subs	r1, r4, #4
 8006e42:	f021 0103 	bic.w	r1, r1, #3
 8006e46:	3104      	adds	r1, #4
 8006e48:	440b      	add	r3, r1
 8006e4a:	f004 0403 	and.w	r4, r4, #3
 8006e4e:	b12c      	cbz	r4, 8006e5c <__aeabi_memset+0x90>
 8006e50:	b2d2      	uxtb	r2, r2
 8006e52:	441c      	add	r4, r3
 8006e54:	f803 2b01 	strb.w	r2, [r3], #1
 8006e58:	42a3      	cmp	r3, r4
 8006e5a:	d1fb      	bne.n	8006e54 <__aeabi_memset+0x88>
 8006e5c:	bc70      	pop	{r4, r5, r6}
 8006e5e:	4770      	bx	lr
 8006e60:	460c      	mov	r4, r1
 8006e62:	4603      	mov	r3, r0
 8006e64:	e7c2      	b.n	8006dec <__aeabi_memset+0x20>

08006e66 <strlen>:
 8006e66:	4603      	mov	r3, r0
 8006e68:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006e6c:	2a00      	cmp	r2, #0
 8006e6e:	d1fb      	bne.n	8006e68 <strlen+0x2>
 8006e70:	1a18      	subs	r0, r3, r0
 8006e72:	3801      	subs	r0, #1
 8006e74:	4770      	bx	lr
	...

08006e80 <memchr>:
 8006e80:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006e84:	2a10      	cmp	r2, #16
 8006e86:	db2b      	blt.n	8006ee0 <memchr+0x60>
 8006e88:	f010 0f07 	tst.w	r0, #7
 8006e8c:	d008      	beq.n	8006ea0 <memchr+0x20>
 8006e8e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006e92:	3a01      	subs	r2, #1
 8006e94:	428b      	cmp	r3, r1
 8006e96:	d02d      	beq.n	8006ef4 <memchr+0x74>
 8006e98:	f010 0f07 	tst.w	r0, #7
 8006e9c:	b342      	cbz	r2, 8006ef0 <memchr+0x70>
 8006e9e:	d1f6      	bne.n	8006e8e <memchr+0xe>
 8006ea0:	b4f0      	push	{r4, r5, r6, r7}
 8006ea2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8006ea6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8006eaa:	f022 0407 	bic.w	r4, r2, #7
 8006eae:	f07f 0700 	mvns.w	r7, #0
 8006eb2:	2300      	movs	r3, #0
 8006eb4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8006eb8:	3c08      	subs	r4, #8
 8006eba:	ea85 0501 	eor.w	r5, r5, r1
 8006ebe:	ea86 0601 	eor.w	r6, r6, r1
 8006ec2:	fa85 f547 	uadd8	r5, r5, r7
 8006ec6:	faa3 f587 	sel	r5, r3, r7
 8006eca:	fa86 f647 	uadd8	r6, r6, r7
 8006ece:	faa5 f687 	sel	r6, r5, r7
 8006ed2:	b98e      	cbnz	r6, 8006ef8 <memchr+0x78>
 8006ed4:	d1ee      	bne.n	8006eb4 <memchr+0x34>
 8006ed6:	bcf0      	pop	{r4, r5, r6, r7}
 8006ed8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006edc:	f002 0207 	and.w	r2, r2, #7
 8006ee0:	b132      	cbz	r2, 8006ef0 <memchr+0x70>
 8006ee2:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006ee6:	3a01      	subs	r2, #1
 8006ee8:	ea83 0301 	eor.w	r3, r3, r1
 8006eec:	b113      	cbz	r3, 8006ef4 <memchr+0x74>
 8006eee:	d1f8      	bne.n	8006ee2 <memchr+0x62>
 8006ef0:	2000      	movs	r0, #0
 8006ef2:	4770      	bx	lr
 8006ef4:	3801      	subs	r0, #1
 8006ef6:	4770      	bx	lr
 8006ef8:	2d00      	cmp	r5, #0
 8006efa:	bf06      	itte	eq
 8006efc:	4635      	moveq	r5, r6
 8006efe:	3803      	subeq	r0, #3
 8006f00:	3807      	subne	r0, #7
 8006f02:	f015 0f01 	tst.w	r5, #1
 8006f06:	d107      	bne.n	8006f18 <memchr+0x98>
 8006f08:	3001      	adds	r0, #1
 8006f0a:	f415 7f80 	tst.w	r5, #256	; 0x100
 8006f0e:	bf02      	ittt	eq
 8006f10:	3001      	addeq	r0, #1
 8006f12:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8006f16:	3001      	addeq	r0, #1
 8006f18:	bcf0      	pop	{r4, r5, r6, r7}
 8006f1a:	3801      	subs	r0, #1
 8006f1c:	4770      	bx	lr
 8006f1e:	bf00      	nop

08006f20 <__aeabi_drsub>:
 8006f20:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8006f24:	e002      	b.n	8006f2c <__adddf3>
 8006f26:	bf00      	nop

08006f28 <__aeabi_dsub>:
 8006f28:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08006f2c <__adddf3>:
 8006f2c:	b530      	push	{r4, r5, lr}
 8006f2e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8006f32:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8006f36:	ea94 0f05 	teq	r4, r5
 8006f3a:	bf08      	it	eq
 8006f3c:	ea90 0f02 	teqeq	r0, r2
 8006f40:	bf1f      	itttt	ne
 8006f42:	ea54 0c00 	orrsne.w	ip, r4, r0
 8006f46:	ea55 0c02 	orrsne.w	ip, r5, r2
 8006f4a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8006f4e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8006f52:	f000 80e2 	beq.w	800711a <__adddf3+0x1ee>
 8006f56:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8006f5a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8006f5e:	bfb8      	it	lt
 8006f60:	426d      	neglt	r5, r5
 8006f62:	dd0c      	ble.n	8006f7e <__adddf3+0x52>
 8006f64:	442c      	add	r4, r5
 8006f66:	ea80 0202 	eor.w	r2, r0, r2
 8006f6a:	ea81 0303 	eor.w	r3, r1, r3
 8006f6e:	ea82 0000 	eor.w	r0, r2, r0
 8006f72:	ea83 0101 	eor.w	r1, r3, r1
 8006f76:	ea80 0202 	eor.w	r2, r0, r2
 8006f7a:	ea81 0303 	eor.w	r3, r1, r3
 8006f7e:	2d36      	cmp	r5, #54	; 0x36
 8006f80:	bf88      	it	hi
 8006f82:	bd30      	pophi	{r4, r5, pc}
 8006f84:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8006f88:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8006f8c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8006f90:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8006f94:	d002      	beq.n	8006f9c <__adddf3+0x70>
 8006f96:	4240      	negs	r0, r0
 8006f98:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8006f9c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8006fa0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8006fa4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8006fa8:	d002      	beq.n	8006fb0 <__adddf3+0x84>
 8006faa:	4252      	negs	r2, r2
 8006fac:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8006fb0:	ea94 0f05 	teq	r4, r5
 8006fb4:	f000 80a7 	beq.w	8007106 <__adddf3+0x1da>
 8006fb8:	f1a4 0401 	sub.w	r4, r4, #1
 8006fbc:	f1d5 0e20 	rsbs	lr, r5, #32
 8006fc0:	db0d      	blt.n	8006fde <__adddf3+0xb2>
 8006fc2:	fa02 fc0e 	lsl.w	ip, r2, lr
 8006fc6:	fa22 f205 	lsr.w	r2, r2, r5
 8006fca:	1880      	adds	r0, r0, r2
 8006fcc:	f141 0100 	adc.w	r1, r1, #0
 8006fd0:	fa03 f20e 	lsl.w	r2, r3, lr
 8006fd4:	1880      	adds	r0, r0, r2
 8006fd6:	fa43 f305 	asr.w	r3, r3, r5
 8006fda:	4159      	adcs	r1, r3
 8006fdc:	e00e      	b.n	8006ffc <__adddf3+0xd0>
 8006fde:	f1a5 0520 	sub.w	r5, r5, #32
 8006fe2:	f10e 0e20 	add.w	lr, lr, #32
 8006fe6:	2a01      	cmp	r2, #1
 8006fe8:	fa03 fc0e 	lsl.w	ip, r3, lr
 8006fec:	bf28      	it	cs
 8006fee:	f04c 0c02 	orrcs.w	ip, ip, #2
 8006ff2:	fa43 f305 	asr.w	r3, r3, r5
 8006ff6:	18c0      	adds	r0, r0, r3
 8006ff8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8006ffc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007000:	d507      	bpl.n	8007012 <__adddf3+0xe6>
 8007002:	f04f 0e00 	mov.w	lr, #0
 8007006:	f1dc 0c00 	rsbs	ip, ip, #0
 800700a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800700e:	eb6e 0101 	sbc.w	r1, lr, r1
 8007012:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8007016:	d31b      	bcc.n	8007050 <__adddf3+0x124>
 8007018:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800701c:	d30c      	bcc.n	8007038 <__adddf3+0x10c>
 800701e:	0849      	lsrs	r1, r1, #1
 8007020:	ea5f 0030 	movs.w	r0, r0, rrx
 8007024:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8007028:	f104 0401 	add.w	r4, r4, #1
 800702c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8007030:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8007034:	f080 809a 	bcs.w	800716c <__adddf3+0x240>
 8007038:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800703c:	bf08      	it	eq
 800703e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8007042:	f150 0000 	adcs.w	r0, r0, #0
 8007046:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800704a:	ea41 0105 	orr.w	r1, r1, r5
 800704e:	bd30      	pop	{r4, r5, pc}
 8007050:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8007054:	4140      	adcs	r0, r0
 8007056:	eb41 0101 	adc.w	r1, r1, r1
 800705a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800705e:	f1a4 0401 	sub.w	r4, r4, #1
 8007062:	d1e9      	bne.n	8007038 <__adddf3+0x10c>
 8007064:	f091 0f00 	teq	r1, #0
 8007068:	bf04      	itt	eq
 800706a:	4601      	moveq	r1, r0
 800706c:	2000      	moveq	r0, #0
 800706e:	fab1 f381 	clz	r3, r1
 8007072:	bf08      	it	eq
 8007074:	3320      	addeq	r3, #32
 8007076:	f1a3 030b 	sub.w	r3, r3, #11
 800707a:	f1b3 0220 	subs.w	r2, r3, #32
 800707e:	da0c      	bge.n	800709a <__adddf3+0x16e>
 8007080:	320c      	adds	r2, #12
 8007082:	dd08      	ble.n	8007096 <__adddf3+0x16a>
 8007084:	f102 0c14 	add.w	ip, r2, #20
 8007088:	f1c2 020c 	rsb	r2, r2, #12
 800708c:	fa01 f00c 	lsl.w	r0, r1, ip
 8007090:	fa21 f102 	lsr.w	r1, r1, r2
 8007094:	e00c      	b.n	80070b0 <__adddf3+0x184>
 8007096:	f102 0214 	add.w	r2, r2, #20
 800709a:	bfd8      	it	le
 800709c:	f1c2 0c20 	rsble	ip, r2, #32
 80070a0:	fa01 f102 	lsl.w	r1, r1, r2
 80070a4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80070a8:	bfdc      	itt	le
 80070aa:	ea41 010c 	orrle.w	r1, r1, ip
 80070ae:	4090      	lslle	r0, r2
 80070b0:	1ae4      	subs	r4, r4, r3
 80070b2:	bfa2      	ittt	ge
 80070b4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80070b8:	4329      	orrge	r1, r5
 80070ba:	bd30      	popge	{r4, r5, pc}
 80070bc:	ea6f 0404 	mvn.w	r4, r4
 80070c0:	3c1f      	subs	r4, #31
 80070c2:	da1c      	bge.n	80070fe <__adddf3+0x1d2>
 80070c4:	340c      	adds	r4, #12
 80070c6:	dc0e      	bgt.n	80070e6 <__adddf3+0x1ba>
 80070c8:	f104 0414 	add.w	r4, r4, #20
 80070cc:	f1c4 0220 	rsb	r2, r4, #32
 80070d0:	fa20 f004 	lsr.w	r0, r0, r4
 80070d4:	fa01 f302 	lsl.w	r3, r1, r2
 80070d8:	ea40 0003 	orr.w	r0, r0, r3
 80070dc:	fa21 f304 	lsr.w	r3, r1, r4
 80070e0:	ea45 0103 	orr.w	r1, r5, r3
 80070e4:	bd30      	pop	{r4, r5, pc}
 80070e6:	f1c4 040c 	rsb	r4, r4, #12
 80070ea:	f1c4 0220 	rsb	r2, r4, #32
 80070ee:	fa20 f002 	lsr.w	r0, r0, r2
 80070f2:	fa01 f304 	lsl.w	r3, r1, r4
 80070f6:	ea40 0003 	orr.w	r0, r0, r3
 80070fa:	4629      	mov	r1, r5
 80070fc:	bd30      	pop	{r4, r5, pc}
 80070fe:	fa21 f004 	lsr.w	r0, r1, r4
 8007102:	4629      	mov	r1, r5
 8007104:	bd30      	pop	{r4, r5, pc}
 8007106:	f094 0f00 	teq	r4, #0
 800710a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800710e:	bf06      	itte	eq
 8007110:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8007114:	3401      	addeq	r4, #1
 8007116:	3d01      	subne	r5, #1
 8007118:	e74e      	b.n	8006fb8 <__adddf3+0x8c>
 800711a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800711e:	bf18      	it	ne
 8007120:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007124:	d029      	beq.n	800717a <__adddf3+0x24e>
 8007126:	ea94 0f05 	teq	r4, r5
 800712a:	bf08      	it	eq
 800712c:	ea90 0f02 	teqeq	r0, r2
 8007130:	d005      	beq.n	800713e <__adddf3+0x212>
 8007132:	ea54 0c00 	orrs.w	ip, r4, r0
 8007136:	bf04      	itt	eq
 8007138:	4619      	moveq	r1, r3
 800713a:	4610      	moveq	r0, r2
 800713c:	bd30      	pop	{r4, r5, pc}
 800713e:	ea91 0f03 	teq	r1, r3
 8007142:	bf1e      	ittt	ne
 8007144:	2100      	movne	r1, #0
 8007146:	2000      	movne	r0, #0
 8007148:	bd30      	popne	{r4, r5, pc}
 800714a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800714e:	d105      	bne.n	800715c <__adddf3+0x230>
 8007150:	0040      	lsls	r0, r0, #1
 8007152:	4149      	adcs	r1, r1
 8007154:	bf28      	it	cs
 8007156:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800715a:	bd30      	pop	{r4, r5, pc}
 800715c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8007160:	bf3c      	itt	cc
 8007162:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8007166:	bd30      	popcc	{r4, r5, pc}
 8007168:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800716c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8007170:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007174:	f04f 0000 	mov.w	r0, #0
 8007178:	bd30      	pop	{r4, r5, pc}
 800717a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800717e:	bf1a      	itte	ne
 8007180:	4619      	movne	r1, r3
 8007182:	4610      	movne	r0, r2
 8007184:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8007188:	bf1c      	itt	ne
 800718a:	460b      	movne	r3, r1
 800718c:	4602      	movne	r2, r0
 800718e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8007192:	bf06      	itte	eq
 8007194:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8007198:	ea91 0f03 	teqeq	r1, r3
 800719c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80071a0:	bd30      	pop	{r4, r5, pc}
 80071a2:	bf00      	nop

080071a4 <__aeabi_ui2d>:
 80071a4:	f090 0f00 	teq	r0, #0
 80071a8:	bf04      	itt	eq
 80071aa:	2100      	moveq	r1, #0
 80071ac:	4770      	bxeq	lr
 80071ae:	b530      	push	{r4, r5, lr}
 80071b0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80071b4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80071b8:	f04f 0500 	mov.w	r5, #0
 80071bc:	f04f 0100 	mov.w	r1, #0
 80071c0:	e750      	b.n	8007064 <__adddf3+0x138>
 80071c2:	bf00      	nop

080071c4 <__aeabi_i2d>:
 80071c4:	f090 0f00 	teq	r0, #0
 80071c8:	bf04      	itt	eq
 80071ca:	2100      	moveq	r1, #0
 80071cc:	4770      	bxeq	lr
 80071ce:	b530      	push	{r4, r5, lr}
 80071d0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80071d4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80071d8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80071dc:	bf48      	it	mi
 80071de:	4240      	negmi	r0, r0
 80071e0:	f04f 0100 	mov.w	r1, #0
 80071e4:	e73e      	b.n	8007064 <__adddf3+0x138>
 80071e6:	bf00      	nop

080071e8 <__aeabi_f2d>:
 80071e8:	0042      	lsls	r2, r0, #1
 80071ea:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80071ee:	ea4f 0131 	mov.w	r1, r1, rrx
 80071f2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80071f6:	bf1f      	itttt	ne
 80071f8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80071fc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8007200:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8007204:	4770      	bxne	lr
 8007206:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800720a:	bf08      	it	eq
 800720c:	4770      	bxeq	lr
 800720e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8007212:	bf04      	itt	eq
 8007214:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8007218:	4770      	bxeq	lr
 800721a:	b530      	push	{r4, r5, lr}
 800721c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8007220:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007224:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8007228:	e71c      	b.n	8007064 <__adddf3+0x138>
 800722a:	bf00      	nop

0800722c <__aeabi_ul2d>:
 800722c:	ea50 0201 	orrs.w	r2, r0, r1
 8007230:	bf08      	it	eq
 8007232:	4770      	bxeq	lr
 8007234:	b530      	push	{r4, r5, lr}
 8007236:	f04f 0500 	mov.w	r5, #0
 800723a:	e00a      	b.n	8007252 <__aeabi_l2d+0x16>

0800723c <__aeabi_l2d>:
 800723c:	ea50 0201 	orrs.w	r2, r0, r1
 8007240:	bf08      	it	eq
 8007242:	4770      	bxeq	lr
 8007244:	b530      	push	{r4, r5, lr}
 8007246:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800724a:	d502      	bpl.n	8007252 <__aeabi_l2d+0x16>
 800724c:	4240      	negs	r0, r0
 800724e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007252:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007256:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800725a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800725e:	f43f aed8 	beq.w	8007012 <__adddf3+0xe6>
 8007262:	f04f 0203 	mov.w	r2, #3
 8007266:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800726a:	bf18      	it	ne
 800726c:	3203      	addne	r2, #3
 800726e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007272:	bf18      	it	ne
 8007274:	3203      	addne	r2, #3
 8007276:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800727a:	f1c2 0320 	rsb	r3, r2, #32
 800727e:	fa00 fc03 	lsl.w	ip, r0, r3
 8007282:	fa20 f002 	lsr.w	r0, r0, r2
 8007286:	fa01 fe03 	lsl.w	lr, r1, r3
 800728a:	ea40 000e 	orr.w	r0, r0, lr
 800728e:	fa21 f102 	lsr.w	r1, r1, r2
 8007292:	4414      	add	r4, r2
 8007294:	e6bd      	b.n	8007012 <__adddf3+0xe6>
 8007296:	bf00      	nop

08007298 <__aeabi_frsub>:
 8007298:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 800729c:	e002      	b.n	80072a4 <__addsf3>
 800729e:	bf00      	nop

080072a0 <__aeabi_fsub>:
 80072a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

080072a4 <__addsf3>:
 80072a4:	0042      	lsls	r2, r0, #1
 80072a6:	bf1f      	itttt	ne
 80072a8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 80072ac:	ea92 0f03 	teqne	r2, r3
 80072b0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 80072b4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80072b8:	d06a      	beq.n	8007390 <__addsf3+0xec>
 80072ba:	ea4f 6212 	mov.w	r2, r2, lsr #24
 80072be:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 80072c2:	bfc1      	itttt	gt
 80072c4:	18d2      	addgt	r2, r2, r3
 80072c6:	4041      	eorgt	r1, r0
 80072c8:	4048      	eorgt	r0, r1
 80072ca:	4041      	eorgt	r1, r0
 80072cc:	bfb8      	it	lt
 80072ce:	425b      	neglt	r3, r3
 80072d0:	2b19      	cmp	r3, #25
 80072d2:	bf88      	it	hi
 80072d4:	4770      	bxhi	lr
 80072d6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 80072da:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80072de:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 80072e2:	bf18      	it	ne
 80072e4:	4240      	negne	r0, r0
 80072e6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80072ea:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80072ee:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80072f2:	bf18      	it	ne
 80072f4:	4249      	negne	r1, r1
 80072f6:	ea92 0f03 	teq	r2, r3
 80072fa:	d03f      	beq.n	800737c <__addsf3+0xd8>
 80072fc:	f1a2 0201 	sub.w	r2, r2, #1
 8007300:	fa41 fc03 	asr.w	ip, r1, r3
 8007304:	eb10 000c 	adds.w	r0, r0, ip
 8007308:	f1c3 0320 	rsb	r3, r3, #32
 800730c:	fa01 f103 	lsl.w	r1, r1, r3
 8007310:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007314:	d502      	bpl.n	800731c <__addsf3+0x78>
 8007316:	4249      	negs	r1, r1
 8007318:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 800731c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007320:	d313      	bcc.n	800734a <__addsf3+0xa6>
 8007322:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007326:	d306      	bcc.n	8007336 <__addsf3+0x92>
 8007328:	0840      	lsrs	r0, r0, #1
 800732a:	ea4f 0131 	mov.w	r1, r1, rrx
 800732e:	f102 0201 	add.w	r2, r2, #1
 8007332:	2afe      	cmp	r2, #254	; 0xfe
 8007334:	d251      	bcs.n	80073da <__addsf3+0x136>
 8007336:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 800733a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800733e:	bf08      	it	eq
 8007340:	f020 0001 	biceq.w	r0, r0, #1
 8007344:	ea40 0003 	orr.w	r0, r0, r3
 8007348:	4770      	bx	lr
 800734a:	0049      	lsls	r1, r1, #1
 800734c:	eb40 0000 	adc.w	r0, r0, r0
 8007350:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
 8007354:	f1a2 0201 	sub.w	r2, r2, #1
 8007358:	d1ed      	bne.n	8007336 <__addsf3+0x92>
 800735a:	fab0 fc80 	clz	ip, r0
 800735e:	f1ac 0c08 	sub.w	ip, ip, #8
 8007362:	ebb2 020c 	subs.w	r2, r2, ip
 8007366:	fa00 f00c 	lsl.w	r0, r0, ip
 800736a:	bfaa      	itet	ge
 800736c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007370:	4252      	neglt	r2, r2
 8007372:	4318      	orrge	r0, r3
 8007374:	bfbc      	itt	lt
 8007376:	40d0      	lsrlt	r0, r2
 8007378:	4318      	orrlt	r0, r3
 800737a:	4770      	bx	lr
 800737c:	f092 0f00 	teq	r2, #0
 8007380:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007384:	bf06      	itte	eq
 8007386:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 800738a:	3201      	addeq	r2, #1
 800738c:	3b01      	subne	r3, #1
 800738e:	e7b5      	b.n	80072fc <__addsf3+0x58>
 8007390:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007394:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007398:	bf18      	it	ne
 800739a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800739e:	d021      	beq.n	80073e4 <__addsf3+0x140>
 80073a0:	ea92 0f03 	teq	r2, r3
 80073a4:	d004      	beq.n	80073b0 <__addsf3+0x10c>
 80073a6:	f092 0f00 	teq	r2, #0
 80073aa:	bf08      	it	eq
 80073ac:	4608      	moveq	r0, r1
 80073ae:	4770      	bx	lr
 80073b0:	ea90 0f01 	teq	r0, r1
 80073b4:	bf1c      	itt	ne
 80073b6:	2000      	movne	r0, #0
 80073b8:	4770      	bxne	lr
 80073ba:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 80073be:	d104      	bne.n	80073ca <__addsf3+0x126>
 80073c0:	0040      	lsls	r0, r0, #1
 80073c2:	bf28      	it	cs
 80073c4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 80073c8:	4770      	bx	lr
 80073ca:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 80073ce:	bf3c      	itt	cc
 80073d0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 80073d4:	4770      	bxcc	lr
 80073d6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80073da:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 80073de:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80073e2:	4770      	bx	lr
 80073e4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 80073e8:	bf16      	itet	ne
 80073ea:	4608      	movne	r0, r1
 80073ec:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80073f0:	4601      	movne	r1, r0
 80073f2:	0242      	lsls	r2, r0, #9
 80073f4:	bf06      	itte	eq
 80073f6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80073fa:	ea90 0f01 	teqeq	r0, r1
 80073fe:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007402:	4770      	bx	lr

08007404 <__aeabi_ui2f>:
 8007404:	f04f 0300 	mov.w	r3, #0
 8007408:	e004      	b.n	8007414 <__aeabi_i2f+0x8>
 800740a:	bf00      	nop

0800740c <__aeabi_i2f>:
 800740c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007410:	bf48      	it	mi
 8007412:	4240      	negmi	r0, r0
 8007414:	ea5f 0c00 	movs.w	ip, r0
 8007418:	bf08      	it	eq
 800741a:	4770      	bxeq	lr
 800741c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007420:	4601      	mov	r1, r0
 8007422:	f04f 0000 	mov.w	r0, #0
 8007426:	e01c      	b.n	8007462 <__aeabi_l2f+0x2a>

08007428 <__aeabi_ul2f>:
 8007428:	ea50 0201 	orrs.w	r2, r0, r1
 800742c:	bf08      	it	eq
 800742e:	4770      	bxeq	lr
 8007430:	f04f 0300 	mov.w	r3, #0
 8007434:	e00a      	b.n	800744c <__aeabi_l2f+0x14>
 8007436:	bf00      	nop

08007438 <__aeabi_l2f>:
 8007438:	ea50 0201 	orrs.w	r2, r0, r1
 800743c:	bf08      	it	eq
 800743e:	4770      	bxeq	lr
 8007440:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007444:	d502      	bpl.n	800744c <__aeabi_l2f+0x14>
 8007446:	4240      	negs	r0, r0
 8007448:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800744c:	ea5f 0c01 	movs.w	ip, r1
 8007450:	bf02      	ittt	eq
 8007452:	4684      	moveq	ip, r0
 8007454:	4601      	moveq	r1, r0
 8007456:	2000      	moveq	r0, #0
 8007458:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 800745c:	bf08      	it	eq
 800745e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007462:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007466:	fabc f28c 	clz	r2, ip
 800746a:	3a08      	subs	r2, #8
 800746c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007470:	db10      	blt.n	8007494 <__aeabi_l2f+0x5c>
 8007472:	fa01 fc02 	lsl.w	ip, r1, r2
 8007476:	4463      	add	r3, ip
 8007478:	fa00 fc02 	lsl.w	ip, r0, r2
 800747c:	f1c2 0220 	rsb	r2, r2, #32
 8007480:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007484:	fa20 f202 	lsr.w	r2, r0, r2
 8007488:	eb43 0002 	adc.w	r0, r3, r2
 800748c:	bf08      	it	eq
 800748e:	f020 0001 	biceq.w	r0, r0, #1
 8007492:	4770      	bx	lr
 8007494:	f102 0220 	add.w	r2, r2, #32
 8007498:	fa01 fc02 	lsl.w	ip, r1, r2
 800749c:	f1c2 0220 	rsb	r2, r2, #32
 80074a0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 80074a4:	fa21 f202 	lsr.w	r2, r1, r2
 80074a8:	eb43 0002 	adc.w	r0, r3, r2
 80074ac:	bf08      	it	eq
 80074ae:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80074b2:	4770      	bx	lr

080074b4 <__aeabi_uldivmod>:
 80074b4:	b953      	cbnz	r3, 80074cc <__aeabi_uldivmod+0x18>
 80074b6:	b94a      	cbnz	r2, 80074cc <__aeabi_uldivmod+0x18>
 80074b8:	2900      	cmp	r1, #0
 80074ba:	bf08      	it	eq
 80074bc:	2800      	cmpeq	r0, #0
 80074be:	bf1c      	itt	ne
 80074c0:	f04f 31ff 	movne.w	r1, #4294967295
 80074c4:	f04f 30ff 	movne.w	r0, #4294967295
 80074c8:	f000 b972 	b.w	80077b0 <__aeabi_idiv0>
 80074cc:	f1ad 0c08 	sub.w	ip, sp, #8
 80074d0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80074d4:	f000 f806 	bl	80074e4 <__udivmoddi4>
 80074d8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80074dc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80074e0:	b004      	add	sp, #16
 80074e2:	4770      	bx	lr

080074e4 <__udivmoddi4>:
 80074e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80074e8:	9e08      	ldr	r6, [sp, #32]
 80074ea:	4604      	mov	r4, r0
 80074ec:	4688      	mov	r8, r1
 80074ee:	2b00      	cmp	r3, #0
 80074f0:	d14b      	bne.n	800758a <__udivmoddi4+0xa6>
 80074f2:	428a      	cmp	r2, r1
 80074f4:	4615      	mov	r5, r2
 80074f6:	d967      	bls.n	80075c8 <__udivmoddi4+0xe4>
 80074f8:	fab2 f282 	clz	r2, r2
 80074fc:	b14a      	cbz	r2, 8007512 <__udivmoddi4+0x2e>
 80074fe:	f1c2 0720 	rsb	r7, r2, #32
 8007502:	fa01 f302 	lsl.w	r3, r1, r2
 8007506:	fa20 f707 	lsr.w	r7, r0, r7
 800750a:	4095      	lsls	r5, r2
 800750c:	ea47 0803 	orr.w	r8, r7, r3
 8007510:	4094      	lsls	r4, r2
 8007512:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8007516:	0c23      	lsrs	r3, r4, #16
 8007518:	fbb8 f7fe 	udiv	r7, r8, lr
 800751c:	fa1f fc85 	uxth.w	ip, r5
 8007520:	fb0e 8817 	mls	r8, lr, r7, r8
 8007524:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8007528:	fb07 f10c 	mul.w	r1, r7, ip
 800752c:	4299      	cmp	r1, r3
 800752e:	d909      	bls.n	8007544 <__udivmoddi4+0x60>
 8007530:	18eb      	adds	r3, r5, r3
 8007532:	f107 30ff 	add.w	r0, r7, #4294967295
 8007536:	f080 811b 	bcs.w	8007770 <__udivmoddi4+0x28c>
 800753a:	4299      	cmp	r1, r3
 800753c:	f240 8118 	bls.w	8007770 <__udivmoddi4+0x28c>
 8007540:	3f02      	subs	r7, #2
 8007542:	442b      	add	r3, r5
 8007544:	1a5b      	subs	r3, r3, r1
 8007546:	b2a4      	uxth	r4, r4
 8007548:	fbb3 f0fe 	udiv	r0, r3, lr
 800754c:	fb0e 3310 	mls	r3, lr, r0, r3
 8007550:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8007554:	fb00 fc0c 	mul.w	ip, r0, ip
 8007558:	45a4      	cmp	ip, r4
 800755a:	d909      	bls.n	8007570 <__udivmoddi4+0x8c>
 800755c:	192c      	adds	r4, r5, r4
 800755e:	f100 33ff 	add.w	r3, r0, #4294967295
 8007562:	f080 8107 	bcs.w	8007774 <__udivmoddi4+0x290>
 8007566:	45a4      	cmp	ip, r4
 8007568:	f240 8104 	bls.w	8007774 <__udivmoddi4+0x290>
 800756c:	3802      	subs	r0, #2
 800756e:	442c      	add	r4, r5
 8007570:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8007574:	eba4 040c 	sub.w	r4, r4, ip
 8007578:	2700      	movs	r7, #0
 800757a:	b11e      	cbz	r6, 8007584 <__udivmoddi4+0xa0>
 800757c:	40d4      	lsrs	r4, r2
 800757e:	2300      	movs	r3, #0
 8007580:	e9c6 4300 	strd	r4, r3, [r6]
 8007584:	4639      	mov	r1, r7
 8007586:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800758a:	428b      	cmp	r3, r1
 800758c:	d909      	bls.n	80075a2 <__udivmoddi4+0xbe>
 800758e:	2e00      	cmp	r6, #0
 8007590:	f000 80eb 	beq.w	800776a <__udivmoddi4+0x286>
 8007594:	2700      	movs	r7, #0
 8007596:	e9c6 0100 	strd	r0, r1, [r6]
 800759a:	4638      	mov	r0, r7
 800759c:	4639      	mov	r1, r7
 800759e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80075a2:	fab3 f783 	clz	r7, r3
 80075a6:	2f00      	cmp	r7, #0
 80075a8:	d147      	bne.n	800763a <__udivmoddi4+0x156>
 80075aa:	428b      	cmp	r3, r1
 80075ac:	d302      	bcc.n	80075b4 <__udivmoddi4+0xd0>
 80075ae:	4282      	cmp	r2, r0
 80075b0:	f200 80fa 	bhi.w	80077a8 <__udivmoddi4+0x2c4>
 80075b4:	1a84      	subs	r4, r0, r2
 80075b6:	eb61 0303 	sbc.w	r3, r1, r3
 80075ba:	2001      	movs	r0, #1
 80075bc:	4698      	mov	r8, r3
 80075be:	2e00      	cmp	r6, #0
 80075c0:	d0e0      	beq.n	8007584 <__udivmoddi4+0xa0>
 80075c2:	e9c6 4800 	strd	r4, r8, [r6]
 80075c6:	e7dd      	b.n	8007584 <__udivmoddi4+0xa0>
 80075c8:	b902      	cbnz	r2, 80075cc <__udivmoddi4+0xe8>
 80075ca:	deff      	udf	#255	; 0xff
 80075cc:	fab2 f282 	clz	r2, r2
 80075d0:	2a00      	cmp	r2, #0
 80075d2:	f040 808f 	bne.w	80076f4 <__udivmoddi4+0x210>
 80075d6:	1b49      	subs	r1, r1, r5
 80075d8:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80075dc:	fa1f f885 	uxth.w	r8, r5
 80075e0:	2701      	movs	r7, #1
 80075e2:	fbb1 fcfe 	udiv	ip, r1, lr
 80075e6:	0c23      	lsrs	r3, r4, #16
 80075e8:	fb0e 111c 	mls	r1, lr, ip, r1
 80075ec:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80075f0:	fb08 f10c 	mul.w	r1, r8, ip
 80075f4:	4299      	cmp	r1, r3
 80075f6:	d907      	bls.n	8007608 <__udivmoddi4+0x124>
 80075f8:	18eb      	adds	r3, r5, r3
 80075fa:	f10c 30ff 	add.w	r0, ip, #4294967295
 80075fe:	d202      	bcs.n	8007606 <__udivmoddi4+0x122>
 8007600:	4299      	cmp	r1, r3
 8007602:	f200 80cd 	bhi.w	80077a0 <__udivmoddi4+0x2bc>
 8007606:	4684      	mov	ip, r0
 8007608:	1a59      	subs	r1, r3, r1
 800760a:	b2a3      	uxth	r3, r4
 800760c:	fbb1 f0fe 	udiv	r0, r1, lr
 8007610:	fb0e 1410 	mls	r4, lr, r0, r1
 8007614:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8007618:	fb08 f800 	mul.w	r8, r8, r0
 800761c:	45a0      	cmp	r8, r4
 800761e:	d907      	bls.n	8007630 <__udivmoddi4+0x14c>
 8007620:	192c      	adds	r4, r5, r4
 8007622:	f100 33ff 	add.w	r3, r0, #4294967295
 8007626:	d202      	bcs.n	800762e <__udivmoddi4+0x14a>
 8007628:	45a0      	cmp	r8, r4
 800762a:	f200 80b6 	bhi.w	800779a <__udivmoddi4+0x2b6>
 800762e:	4618      	mov	r0, r3
 8007630:	eba4 0408 	sub.w	r4, r4, r8
 8007634:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8007638:	e79f      	b.n	800757a <__udivmoddi4+0x96>
 800763a:	f1c7 0c20 	rsb	ip, r7, #32
 800763e:	40bb      	lsls	r3, r7
 8007640:	fa22 fe0c 	lsr.w	lr, r2, ip
 8007644:	ea4e 0e03 	orr.w	lr, lr, r3
 8007648:	fa01 f407 	lsl.w	r4, r1, r7
 800764c:	fa20 f50c 	lsr.w	r5, r0, ip
 8007650:	fa21 f30c 	lsr.w	r3, r1, ip
 8007654:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8007658:	4325      	orrs	r5, r4
 800765a:	fbb3 f9f8 	udiv	r9, r3, r8
 800765e:	0c2c      	lsrs	r4, r5, #16
 8007660:	fb08 3319 	mls	r3, r8, r9, r3
 8007664:	fa1f fa8e 	uxth.w	sl, lr
 8007668:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 800766c:	fb09 f40a 	mul.w	r4, r9, sl
 8007670:	429c      	cmp	r4, r3
 8007672:	fa02 f207 	lsl.w	r2, r2, r7
 8007676:	fa00 f107 	lsl.w	r1, r0, r7
 800767a:	d90b      	bls.n	8007694 <__udivmoddi4+0x1b0>
 800767c:	eb1e 0303 	adds.w	r3, lr, r3
 8007680:	f109 30ff 	add.w	r0, r9, #4294967295
 8007684:	f080 8087 	bcs.w	8007796 <__udivmoddi4+0x2b2>
 8007688:	429c      	cmp	r4, r3
 800768a:	f240 8084 	bls.w	8007796 <__udivmoddi4+0x2b2>
 800768e:	f1a9 0902 	sub.w	r9, r9, #2
 8007692:	4473      	add	r3, lr
 8007694:	1b1b      	subs	r3, r3, r4
 8007696:	b2ad      	uxth	r5, r5
 8007698:	fbb3 f0f8 	udiv	r0, r3, r8
 800769c:	fb08 3310 	mls	r3, r8, r0, r3
 80076a0:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 80076a4:	fb00 fa0a 	mul.w	sl, r0, sl
 80076a8:	45a2      	cmp	sl, r4
 80076aa:	d908      	bls.n	80076be <__udivmoddi4+0x1da>
 80076ac:	eb1e 0404 	adds.w	r4, lr, r4
 80076b0:	f100 33ff 	add.w	r3, r0, #4294967295
 80076b4:	d26b      	bcs.n	800778e <__udivmoddi4+0x2aa>
 80076b6:	45a2      	cmp	sl, r4
 80076b8:	d969      	bls.n	800778e <__udivmoddi4+0x2aa>
 80076ba:	3802      	subs	r0, #2
 80076bc:	4474      	add	r4, lr
 80076be:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80076c2:	fba0 8902 	umull	r8, r9, r0, r2
 80076c6:	eba4 040a 	sub.w	r4, r4, sl
 80076ca:	454c      	cmp	r4, r9
 80076cc:	46c2      	mov	sl, r8
 80076ce:	464b      	mov	r3, r9
 80076d0:	d354      	bcc.n	800777c <__udivmoddi4+0x298>
 80076d2:	d051      	beq.n	8007778 <__udivmoddi4+0x294>
 80076d4:	2e00      	cmp	r6, #0
 80076d6:	d069      	beq.n	80077ac <__udivmoddi4+0x2c8>
 80076d8:	ebb1 050a 	subs.w	r5, r1, sl
 80076dc:	eb64 0403 	sbc.w	r4, r4, r3
 80076e0:	fa04 fc0c 	lsl.w	ip, r4, ip
 80076e4:	40fd      	lsrs	r5, r7
 80076e6:	40fc      	lsrs	r4, r7
 80076e8:	ea4c 0505 	orr.w	r5, ip, r5
 80076ec:	e9c6 5400 	strd	r5, r4, [r6]
 80076f0:	2700      	movs	r7, #0
 80076f2:	e747      	b.n	8007584 <__udivmoddi4+0xa0>
 80076f4:	f1c2 0320 	rsb	r3, r2, #32
 80076f8:	fa20 f703 	lsr.w	r7, r0, r3
 80076fc:	4095      	lsls	r5, r2
 80076fe:	fa01 f002 	lsl.w	r0, r1, r2
 8007702:	fa21 f303 	lsr.w	r3, r1, r3
 8007706:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 800770a:	4338      	orrs	r0, r7
 800770c:	0c01      	lsrs	r1, r0, #16
 800770e:	fbb3 f7fe 	udiv	r7, r3, lr
 8007712:	fa1f f885 	uxth.w	r8, r5
 8007716:	fb0e 3317 	mls	r3, lr, r7, r3
 800771a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800771e:	fb07 f308 	mul.w	r3, r7, r8
 8007722:	428b      	cmp	r3, r1
 8007724:	fa04 f402 	lsl.w	r4, r4, r2
 8007728:	d907      	bls.n	800773a <__udivmoddi4+0x256>
 800772a:	1869      	adds	r1, r5, r1
 800772c:	f107 3cff 	add.w	ip, r7, #4294967295
 8007730:	d22f      	bcs.n	8007792 <__udivmoddi4+0x2ae>
 8007732:	428b      	cmp	r3, r1
 8007734:	d92d      	bls.n	8007792 <__udivmoddi4+0x2ae>
 8007736:	3f02      	subs	r7, #2
 8007738:	4429      	add	r1, r5
 800773a:	1acb      	subs	r3, r1, r3
 800773c:	b281      	uxth	r1, r0
 800773e:	fbb3 f0fe 	udiv	r0, r3, lr
 8007742:	fb0e 3310 	mls	r3, lr, r0, r3
 8007746:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800774a:	fb00 f308 	mul.w	r3, r0, r8
 800774e:	428b      	cmp	r3, r1
 8007750:	d907      	bls.n	8007762 <__udivmoddi4+0x27e>
 8007752:	1869      	adds	r1, r5, r1
 8007754:	f100 3cff 	add.w	ip, r0, #4294967295
 8007758:	d217      	bcs.n	800778a <__udivmoddi4+0x2a6>
 800775a:	428b      	cmp	r3, r1
 800775c:	d915      	bls.n	800778a <__udivmoddi4+0x2a6>
 800775e:	3802      	subs	r0, #2
 8007760:	4429      	add	r1, r5
 8007762:	1ac9      	subs	r1, r1, r3
 8007764:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8007768:	e73b      	b.n	80075e2 <__udivmoddi4+0xfe>
 800776a:	4637      	mov	r7, r6
 800776c:	4630      	mov	r0, r6
 800776e:	e709      	b.n	8007584 <__udivmoddi4+0xa0>
 8007770:	4607      	mov	r7, r0
 8007772:	e6e7      	b.n	8007544 <__udivmoddi4+0x60>
 8007774:	4618      	mov	r0, r3
 8007776:	e6fb      	b.n	8007570 <__udivmoddi4+0x8c>
 8007778:	4541      	cmp	r1, r8
 800777a:	d2ab      	bcs.n	80076d4 <__udivmoddi4+0x1f0>
 800777c:	ebb8 0a02 	subs.w	sl, r8, r2
 8007780:	eb69 020e 	sbc.w	r2, r9, lr
 8007784:	3801      	subs	r0, #1
 8007786:	4613      	mov	r3, r2
 8007788:	e7a4      	b.n	80076d4 <__udivmoddi4+0x1f0>
 800778a:	4660      	mov	r0, ip
 800778c:	e7e9      	b.n	8007762 <__udivmoddi4+0x27e>
 800778e:	4618      	mov	r0, r3
 8007790:	e795      	b.n	80076be <__udivmoddi4+0x1da>
 8007792:	4667      	mov	r7, ip
 8007794:	e7d1      	b.n	800773a <__udivmoddi4+0x256>
 8007796:	4681      	mov	r9, r0
 8007798:	e77c      	b.n	8007694 <__udivmoddi4+0x1b0>
 800779a:	3802      	subs	r0, #2
 800779c:	442c      	add	r4, r5
 800779e:	e747      	b.n	8007630 <__udivmoddi4+0x14c>
 80077a0:	f1ac 0c02 	sub.w	ip, ip, #2
 80077a4:	442b      	add	r3, r5
 80077a6:	e72f      	b.n	8007608 <__udivmoddi4+0x124>
 80077a8:	4638      	mov	r0, r7
 80077aa:	e708      	b.n	80075be <__udivmoddi4+0xda>
 80077ac:	4637      	mov	r7, r6
 80077ae:	e6e9      	b.n	8007584 <__udivmoddi4+0xa0>

080077b0 <__aeabi_idiv0>:
 80077b0:	4770      	bx	lr
 80077b2:	bf00      	nop

080077b4 <SCB_EnableICache>:
/**
  \brief   Enable I-Cache
  \details Turns on I-Cache
  */
__STATIC_INLINE void SCB_EnableICache (void)
{
 80077b4:	b480      	push	{r7}
 80077b6:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80077b8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80077bc:	f3bf 8f6f 	isb	sy
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80077c0:	4b0b      	ldr	r3, [pc, #44]	; (80077f0 <SCB_EnableICache+0x3c>)
 80077c2:	2200      	movs	r2, #0
 80077c4:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80077c8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80077cc:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 80077d0:	4b07      	ldr	r3, [pc, #28]	; (80077f0 <SCB_EnableICache+0x3c>)
 80077d2:	695b      	ldr	r3, [r3, #20]
 80077d4:	4a06      	ldr	r2, [pc, #24]	; (80077f0 <SCB_EnableICache+0x3c>)
 80077d6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80077da:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 80077dc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80077e0:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
  #endif
}
 80077e4:	bf00      	nop
 80077e6:	46bd      	mov	sp, r7
 80077e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077ec:	4770      	bx	lr
 80077ee:	bf00      	nop
 80077f0:	e000ed00 	.word	0xe000ed00

080077f4 <SCB_EnableDCache>:
/**
  \brief   Enable D-Cache
  \details Turns on D-Cache
  */
__STATIC_INLINE void SCB_EnableDCache (void)
{
 80077f4:	b480      	push	{r7}
 80077f6:	b085      	sub	sp, #20
 80077f8:	af00      	add	r7, sp, #0
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 80077fa:	4b1d      	ldr	r3, [pc, #116]	; (8007870 <SCB_EnableDCache+0x7c>)
 80077fc:	2200      	movs	r2, #0
 80077fe:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8007802:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 8007806:	4b1a      	ldr	r3, [pc, #104]	; (8007870 <SCB_EnableDCache+0x7c>)
 8007808:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800780c:	607b      	str	r3, [r7, #4]

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800780e:	687b      	ldr	r3, [r7, #4]
 8007810:	0b5b      	lsrs	r3, r3, #13
 8007812:	f3c3 030e 	ubfx	r3, r3, #0, #15
 8007816:	60fb      	str	r3, [r7, #12]
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8007818:	687b      	ldr	r3, [r7, #4]
 800781a:	08db      	lsrs	r3, r3, #3
 800781c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007820:	60bb      	str	r3, [r7, #8]
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8007822:	68fb      	ldr	r3, [r7, #12]
 8007824:	015a      	lsls	r2, r3, #5
 8007826:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 800782a:	4013      	ands	r3, r2
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 800782c:	68ba      	ldr	r2, [r7, #8]
 800782e:	0792      	lsls	r2, r2, #30
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8007830:	490f      	ldr	r1, [pc, #60]	; (8007870 <SCB_EnableDCache+0x7c>)
 8007832:	4313      	orrs	r3, r2
 8007834:	f8c1 3260 	str.w	r3, [r1, #608]	; 0x260
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8007838:	68bb      	ldr	r3, [r7, #8]
 800783a:	1e5a      	subs	r2, r3, #1
 800783c:	60ba      	str	r2, [r7, #8]
 800783e:	2b00      	cmp	r3, #0
 8007840:	d1ef      	bne.n	8007822 <SCB_EnableDCache+0x2e>
    } while(sets-- != 0U);
 8007842:	68fb      	ldr	r3, [r7, #12]
 8007844:	1e5a      	subs	r2, r3, #1
 8007846:	60fa      	str	r2, [r7, #12]
 8007848:	2b00      	cmp	r3, #0
 800784a:	d1e5      	bne.n	8007818 <SCB_EnableDCache+0x24>
 800784c:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 8007850:	4b07      	ldr	r3, [pc, #28]	; (8007870 <SCB_EnableDCache+0x7c>)
 8007852:	695b      	ldr	r3, [r3, #20]
 8007854:	4a06      	ldr	r2, [pc, #24]	; (8007870 <SCB_EnableDCache+0x7c>)
 8007856:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800785a:	6153      	str	r3, [r2, #20]
 800785c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8007860:	f3bf 8f6f 	isb	sy

    __DSB();
    __ISB();
  #endif
}
 8007864:	bf00      	nop
 8007866:	3714      	adds	r7, #20
 8007868:	46bd      	mov	sp, r7
 800786a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800786e:	4770      	bx	lr
 8007870:	e000ed00 	.word	0xe000ed00

08007874 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8007874:	b580      	push	{r7, lr}
 8007876:	b0e8      	sub	sp, #416	; 0x1a0
 8007878:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* Enable I-Cache---------------------------------------------------------*/
  SCB_EnableICache();
 800787a:	f7ff ff9b 	bl	80077b4 <SCB_EnableICache>

  /* Enable D-Cache---------------------------------------------------------*/
  SCB_EnableDCache();
 800787e:	f7ff ffb9 	bl	80077f4 <SCB_EnableDCache>

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8007882:	f000 faea 	bl	8007e5a <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8007886:	f000 f84f 	bl	8007928 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800788a:	f000 f92f 	bl	8007aec <MX_GPIO_Init>
  MX_CRC_Init();
 800788e:	f000 f8db 	bl	8007a48 <MX_CRC_Init>
  MX_X_CUBE_AI_Init();
 8007892:	f005 f885 	bl	800c9a0 <MX_X_CUBE_AI_Init>

  /* USER CODE BEGIN 2 */
  float input[1][1][100] = {{{
 8007896:	f107 030c 	add.w	r3, r7, #12
 800789a:	4a1e      	ldr	r2, [pc, #120]	; (8007914 <main+0xa0>)
 800789c:	4618      	mov	r0, r3
 800789e:	4611      	mov	r1, r2
 80078a0:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80078a4:	461a      	mov	r2, r3
 80078a6:	f008 fa96 	bl	800fdd6 <memcpy>
  	0.216796875
  }}};

  float output[1][1][3];

  prj_AI_init();
 80078aa:	f004 ffd7 	bl	800c85c <prj_AI_init>
  MX_USART3_UART_Init();
 80078ae:	f000 f8ed 	bl	8007a8c <MX_USART3_UART_Init>

  printf("\r\n\r\n\r\nSorties console du projet :\r\n");
 80078b2:	4819      	ldr	r0, [pc, #100]	; (8007918 <main+0xa4>)
 80078b4:	f008 fff8 	bl	80108a8 <puts>
  printf("\r\n\r\nprj_AI_process: %d", prj_AI_process(input,output,true));
 80078b8:	4639      	mov	r1, r7
 80078ba:	f107 030c 	add.w	r3, r7, #12
 80078be:	2201      	movs	r2, #1
 80078c0:	4618      	mov	r0, r3
 80078c2:	f004 ffd1 	bl	800c868 <prj_AI_process>
 80078c6:	4603      	mov	r3, r0
 80078c8:	4619      	mov	r1, r3
 80078ca:	4814      	ldr	r0, [pc, #80]	; (800791c <main+0xa8>)
 80078cc:	f008 ff78 	bl	80107c0 <iprintf>
  for (int i = 0; i < prj_AI_OUTPUT_SIZE; i++) {
 80078d0:	2300      	movs	r3, #0
 80078d2:	f8c7 319c 	str.w	r3, [r7, #412]	; 0x19c
 80078d6:	e014      	b.n	8007902 <main+0x8e>
	printf("\r\noutput[0][0][%d] = %f", i, output[0][0][i]);
 80078d8:	463a      	mov	r2, r7
 80078da:	f8d7 319c 	ldr.w	r3, [r7, #412]	; 0x19c
 80078de:	009b      	lsls	r3, r3, #2
 80078e0:	4413      	add	r3, r2
 80078e2:	edd3 7a00 	vldr	s15, [r3]
 80078e6:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80078ea:	ec53 2b17 	vmov	r2, r3, d7
 80078ee:	f8d7 119c 	ldr.w	r1, [r7, #412]	; 0x19c
 80078f2:	480b      	ldr	r0, [pc, #44]	; (8007920 <main+0xac>)
 80078f4:	f008 ff64 	bl	80107c0 <iprintf>
  for (int i = 0; i < prj_AI_OUTPUT_SIZE; i++) {
 80078f8:	f8d7 319c 	ldr.w	r3, [r7, #412]	; 0x19c
 80078fc:	3301      	adds	r3, #1
 80078fe:	f8c7 319c 	str.w	r3, [r7, #412]	; 0x19c
 8007902:	f8d7 319c 	ldr.w	r3, [r7, #412]	; 0x19c
 8007906:	2b02      	cmp	r3, #2
 8007908:	dde6      	ble.n	80078d8 <main+0x64>
  }
  printf("\r\n\r\nFin des sorties console du projet\r\n");
 800790a:	4806      	ldr	r0, [pc, #24]	; (8007924 <main+0xb0>)
 800790c:	f008 ffcc 	bl	80108a8 <puts>

  /* USER CODE END 2 */

  /* Infinite loop */
  while (1){
 8007910:	e7fe      	b.n	8007910 <main+0x9c>
 8007912:	bf00      	nop
 8007914:	08015024 	.word	0x08015024
 8007918:	08014fa8 	.word	0x08014fa8
 800791c:	08014fcc 	.word	0x08014fcc
 8007920:	08014fe4 	.word	0x08014fe4
 8007924:	08014ffc 	.word	0x08014ffc

08007928 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8007928:	b580      	push	{r7, lr}
 800792a:	b0b8      	sub	sp, #224	; 0xe0
 800792c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800792e:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 8007932:	2234      	movs	r2, #52	; 0x34
 8007934:	2100      	movs	r1, #0
 8007936:	4618      	mov	r0, r3
 8007938:	f008 fa58 	bl	800fdec <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800793c:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8007940:	2200      	movs	r2, #0
 8007942:	601a      	str	r2, [r3, #0]
 8007944:	605a      	str	r2, [r3, #4]
 8007946:	609a      	str	r2, [r3, #8]
 8007948:	60da      	str	r2, [r3, #12]
 800794a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800794c:	f107 0308 	add.w	r3, r7, #8
 8007950:	2290      	movs	r2, #144	; 0x90
 8007952:	2100      	movs	r1, #0
 8007954:	4618      	mov	r0, r3
 8007956:	f008 fa49 	bl	800fdec <memset>

  /** Configure the main internal regulator output voltage 
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800795a:	4b39      	ldr	r3, [pc, #228]	; (8007a40 <SystemClock_Config+0x118>)
 800795c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800795e:	4a38      	ldr	r2, [pc, #224]	; (8007a40 <SystemClock_Config+0x118>)
 8007960:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007964:	6413      	str	r3, [r2, #64]	; 0x40
 8007966:	4b36      	ldr	r3, [pc, #216]	; (8007a40 <SystemClock_Config+0x118>)
 8007968:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800796a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800796e:	607b      	str	r3, [r7, #4]
 8007970:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8007972:	4b34      	ldr	r3, [pc, #208]	; (8007a44 <SystemClock_Config+0x11c>)
 8007974:	681b      	ldr	r3, [r3, #0]
 8007976:	4a33      	ldr	r2, [pc, #204]	; (8007a44 <SystemClock_Config+0x11c>)
 8007978:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800797c:	6013      	str	r3, [r2, #0]
 800797e:	4b31      	ldr	r3, [pc, #196]	; (8007a44 <SystemClock_Config+0x11c>)
 8007980:	681b      	ldr	r3, [r3, #0]
 8007982:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8007986:	603b      	str	r3, [r7, #0]
 8007988:	683b      	ldr	r3, [r7, #0]
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800798a:	2302      	movs	r3, #2
 800798c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8007990:	2301      	movs	r3, #1
 8007992:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8007996:	2310      	movs	r3, #16
 8007998:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800799c:	2302      	movs	r3, #2
 800799e:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80079a2:	2300      	movs	r3, #0
 80079a4:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
  RCC_OscInitStruct.PLL.PLLM = 8;
 80079a8:	2308      	movs	r3, #8
 80079aa:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
  RCC_OscInitStruct.PLL.PLLN = 216;
 80079ae:	23d8      	movs	r3, #216	; 0xd8
 80079b0:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80079b4:	2302      	movs	r3, #2
 80079b6:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80079ba:	2302      	movs	r3, #2
 80079bc:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80079c0:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 80079c4:	4618      	mov	r0, r3
 80079c6:	f000 fe93 	bl	80086f0 <HAL_RCC_OscConfig>
 80079ca:	4603      	mov	r3, r0
 80079cc:	2b00      	cmp	r3, #0
 80079ce:	d001      	beq.n	80079d4 <SystemClock_Config+0xac>
  {
    Error_Handler();
 80079d0:	f000 f8c8 	bl	8007b64 <Error_Handler>
  }
  /** Activate the Over-Drive mode 
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80079d4:	f000 fe3c 	bl	8008650 <HAL_PWREx_EnableOverDrive>
 80079d8:	4603      	mov	r3, r0
 80079da:	2b00      	cmp	r3, #0
 80079dc:	d001      	beq.n	80079e2 <SystemClock_Config+0xba>
  {
    Error_Handler();
 80079de:	f000 f8c1 	bl	8007b64 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80079e2:	230f      	movs	r3, #15
 80079e4:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80079e8:	2302      	movs	r3, #2
 80079ea:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80079ee:	2300      	movs	r3, #0
 80079f0:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80079f4:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80079f8:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80079fc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8007a00:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 8007a04:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8007a08:	2107      	movs	r1, #7
 8007a0a:	4618      	mov	r0, r3
 8007a0c:	f001 f91e 	bl	8008c4c <HAL_RCC_ClockConfig>
 8007a10:	4603      	mov	r3, r0
 8007a12:	2b00      	cmp	r3, #0
 8007a14:	d001      	beq.n	8007a1a <SystemClock_Config+0xf2>
  {
    Error_Handler();
 8007a16:	f000 f8a5 	bl	8007b64 <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 8007a1a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007a1e:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 8007a20:	2300      	movs	r3, #0
 8007a22:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8007a24:	f107 0308 	add.w	r3, r7, #8
 8007a28:	4618      	mov	r0, r3
 8007a2a:	f001 fae1 	bl	8008ff0 <HAL_RCCEx_PeriphCLKConfig>
 8007a2e:	4603      	mov	r3, r0
 8007a30:	2b00      	cmp	r3, #0
 8007a32:	d001      	beq.n	8007a38 <SystemClock_Config+0x110>
  {
    Error_Handler();
 8007a34:	f000 f896 	bl	8007b64 <Error_Handler>
  }
}
 8007a38:	bf00      	nop
 8007a3a:	37e0      	adds	r7, #224	; 0xe0
 8007a3c:	46bd      	mov	sp, r7
 8007a3e:	bd80      	pop	{r7, pc}
 8007a40:	40023800 	.word	0x40023800
 8007a44:	40007000 	.word	0x40007000

08007a48 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8007a48:	b580      	push	{r7, lr}
 8007a4a:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8007a4c:	4b0d      	ldr	r3, [pc, #52]	; (8007a84 <MX_CRC_Init+0x3c>)
 8007a4e:	4a0e      	ldr	r2, [pc, #56]	; (8007a88 <MX_CRC_Init+0x40>)
 8007a50:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8007a52:	4b0c      	ldr	r3, [pc, #48]	; (8007a84 <MX_CRC_Init+0x3c>)
 8007a54:	2200      	movs	r2, #0
 8007a56:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 8007a58:	4b0a      	ldr	r3, [pc, #40]	; (8007a84 <MX_CRC_Init+0x3c>)
 8007a5a:	2200      	movs	r2, #0
 8007a5c:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8007a5e:	4b09      	ldr	r3, [pc, #36]	; (8007a84 <MX_CRC_Init+0x3c>)
 8007a60:	2200      	movs	r2, #0
 8007a62:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8007a64:	4b07      	ldr	r3, [pc, #28]	; (8007a84 <MX_CRC_Init+0x3c>)
 8007a66:	2200      	movs	r2, #0
 8007a68:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8007a6a:	4b06      	ldr	r3, [pc, #24]	; (8007a84 <MX_CRC_Init+0x3c>)
 8007a6c:	2201      	movs	r2, #1
 8007a6e:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8007a70:	4804      	ldr	r0, [pc, #16]	; (8007a84 <MX_CRC_Init+0x3c>)
 8007a72:	f000 fb59 	bl	8008128 <HAL_CRC_Init>
 8007a76:	4603      	mov	r3, r0
 8007a78:	2b00      	cmp	r3, #0
 8007a7a:	d001      	beq.n	8007a80 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 8007a7c:	f000 f872 	bl	8007b64 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8007a80:	bf00      	nop
 8007a82:	bd80      	pop	{r7, pc}
 8007a84:	20000c5c 	.word	0x20000c5c
 8007a88:	40023000 	.word	0x40023000

08007a8c <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
void MX_USART3_UART_Init(void)
{
 8007a8c:	b580      	push	{r7, lr}
 8007a8e:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8007a90:	4b14      	ldr	r3, [pc, #80]	; (8007ae4 <MX_USART3_UART_Init+0x58>)
 8007a92:	4a15      	ldr	r2, [pc, #84]	; (8007ae8 <MX_USART3_UART_Init+0x5c>)
 8007a94:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 8007a96:	4b13      	ldr	r3, [pc, #76]	; (8007ae4 <MX_USART3_UART_Init+0x58>)
 8007a98:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8007a9c:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8007a9e:	4b11      	ldr	r3, [pc, #68]	; (8007ae4 <MX_USART3_UART_Init+0x58>)
 8007aa0:	2200      	movs	r2, #0
 8007aa2:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8007aa4:	4b0f      	ldr	r3, [pc, #60]	; (8007ae4 <MX_USART3_UART_Init+0x58>)
 8007aa6:	2200      	movs	r2, #0
 8007aa8:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8007aaa:	4b0e      	ldr	r3, [pc, #56]	; (8007ae4 <MX_USART3_UART_Init+0x58>)
 8007aac:	2200      	movs	r2, #0
 8007aae:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8007ab0:	4b0c      	ldr	r3, [pc, #48]	; (8007ae4 <MX_USART3_UART_Init+0x58>)
 8007ab2:	220c      	movs	r2, #12
 8007ab4:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8007ab6:	4b0b      	ldr	r3, [pc, #44]	; (8007ae4 <MX_USART3_UART_Init+0x58>)
 8007ab8:	2200      	movs	r2, #0
 8007aba:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8007abc:	4b09      	ldr	r3, [pc, #36]	; (8007ae4 <MX_USART3_UART_Init+0x58>)
 8007abe:	2200      	movs	r2, #0
 8007ac0:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8007ac2:	4b08      	ldr	r3, [pc, #32]	; (8007ae4 <MX_USART3_UART_Init+0x58>)
 8007ac4:	2200      	movs	r2, #0
 8007ac6:	621a      	str	r2, [r3, #32]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8007ac8:	4b06      	ldr	r3, [pc, #24]	; (8007ae4 <MX_USART3_UART_Init+0x58>)
 8007aca:	2200      	movs	r2, #0
 8007acc:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8007ace:	4805      	ldr	r0, [pc, #20]	; (8007ae4 <MX_USART3_UART_Init+0x58>)
 8007ad0:	f001 feb4 	bl	800983c <HAL_UART_Init>
 8007ad4:	4603      	mov	r3, r0
 8007ad6:	2b00      	cmp	r3, #0
 8007ad8:	d001      	beq.n	8007ade <MX_USART3_UART_Init+0x52>
  {
    Error_Handler();
 8007ada:	f000 f843 	bl	8007b64 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8007ade:	bf00      	nop
 8007ae0:	bd80      	pop	{r7, pc}
 8007ae2:	bf00      	nop
 8007ae4:	20000bdc 	.word	0x20000bdc
 8007ae8:	40004800 	.word	0x40004800

08007aec <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8007aec:	b580      	push	{r7, lr}
 8007aee:	b088      	sub	sp, #32
 8007af0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8007af2:	f107 030c 	add.w	r3, r7, #12
 8007af6:	2200      	movs	r2, #0
 8007af8:	601a      	str	r2, [r3, #0]
 8007afa:	605a      	str	r2, [r3, #4]
 8007afc:	609a      	str	r2, [r3, #8]
 8007afe:	60da      	str	r2, [r3, #12]
 8007b00:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8007b02:	4b16      	ldr	r3, [pc, #88]	; (8007b5c <MX_GPIO_Init+0x70>)
 8007b04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007b06:	4a15      	ldr	r2, [pc, #84]	; (8007b5c <MX_GPIO_Init+0x70>)
 8007b08:	f043 0302 	orr.w	r3, r3, #2
 8007b0c:	6313      	str	r3, [r2, #48]	; 0x30
 8007b0e:	4b13      	ldr	r3, [pc, #76]	; (8007b5c <MX_GPIO_Init+0x70>)
 8007b10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007b12:	f003 0302 	and.w	r3, r3, #2
 8007b16:	60bb      	str	r3, [r7, #8]
 8007b18:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8007b1a:	4b10      	ldr	r3, [pc, #64]	; (8007b5c <MX_GPIO_Init+0x70>)
 8007b1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007b1e:	4a0f      	ldr	r2, [pc, #60]	; (8007b5c <MX_GPIO_Init+0x70>)
 8007b20:	f043 0308 	orr.w	r3, r3, #8
 8007b24:	6313      	str	r3, [r2, #48]	; 0x30
 8007b26:	4b0d      	ldr	r3, [pc, #52]	; (8007b5c <MX_GPIO_Init+0x70>)
 8007b28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007b2a:	f003 0308 	and.w	r3, r3, #8
 8007b2e:	607b      	str	r3, [r7, #4]
 8007b30:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pins : PB14 PB15 */
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8007b32:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8007b36:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007b38:	2302      	movs	r3, #2
 8007b3a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007b3c:	2300      	movs	r3, #0
 8007b3e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8007b40:	2303      	movs	r3, #3
 8007b42:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Alternate = GPIO_AF4_USART1;
 8007b44:	2304      	movs	r3, #4
 8007b46:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8007b48:	f107 030c 	add.w	r3, r7, #12
 8007b4c:	4619      	mov	r1, r3
 8007b4e:	4804      	ldr	r0, [pc, #16]	; (8007b60 <MX_GPIO_Init+0x74>)
 8007b50:	f000 fbd4 	bl	80082fc <HAL_GPIO_Init>

}
 8007b54:	bf00      	nop
 8007b56:	3720      	adds	r7, #32
 8007b58:	46bd      	mov	sp, r7
 8007b5a:	bd80      	pop	{r7, pc}
 8007b5c:	40023800 	.word	0x40023800
 8007b60:	40020400 	.word	0x40020400

08007b64 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8007b64:	b480      	push	{r7}
 8007b66:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8007b68:	bf00      	nop
 8007b6a:	46bd      	mov	sp, r7
 8007b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b70:	4770      	bx	lr
	...

08007b74 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8007b74:	b480      	push	{r7}
 8007b76:	b083      	sub	sp, #12
 8007b78:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8007b7a:	4b0f      	ldr	r3, [pc, #60]	; (8007bb8 <HAL_MspInit+0x44>)
 8007b7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b7e:	4a0e      	ldr	r2, [pc, #56]	; (8007bb8 <HAL_MspInit+0x44>)
 8007b80:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007b84:	6413      	str	r3, [r2, #64]	; 0x40
 8007b86:	4b0c      	ldr	r3, [pc, #48]	; (8007bb8 <HAL_MspInit+0x44>)
 8007b88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b8a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007b8e:	607b      	str	r3, [r7, #4]
 8007b90:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007b92:	4b09      	ldr	r3, [pc, #36]	; (8007bb8 <HAL_MspInit+0x44>)
 8007b94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007b96:	4a08      	ldr	r2, [pc, #32]	; (8007bb8 <HAL_MspInit+0x44>)
 8007b98:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8007b9c:	6453      	str	r3, [r2, #68]	; 0x44
 8007b9e:	4b06      	ldr	r3, [pc, #24]	; (8007bb8 <HAL_MspInit+0x44>)
 8007ba0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007ba2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8007ba6:	603b      	str	r3, [r7, #0]
 8007ba8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8007baa:	bf00      	nop
 8007bac:	370c      	adds	r7, #12
 8007bae:	46bd      	mov	sp, r7
 8007bb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bb4:	4770      	bx	lr
 8007bb6:	bf00      	nop
 8007bb8:	40023800 	.word	0x40023800

08007bbc <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8007bbc:	b480      	push	{r7}
 8007bbe:	b085      	sub	sp, #20
 8007bc0:	af00      	add	r7, sp, #0
 8007bc2:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8007bc4:	687b      	ldr	r3, [r7, #4]
 8007bc6:	681b      	ldr	r3, [r3, #0]
 8007bc8:	4a0a      	ldr	r2, [pc, #40]	; (8007bf4 <HAL_CRC_MspInit+0x38>)
 8007bca:	4293      	cmp	r3, r2
 8007bcc:	d10b      	bne.n	8007be6 <HAL_CRC_MspInit+0x2a>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8007bce:	4b0a      	ldr	r3, [pc, #40]	; (8007bf8 <HAL_CRC_MspInit+0x3c>)
 8007bd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007bd2:	4a09      	ldr	r2, [pc, #36]	; (8007bf8 <HAL_CRC_MspInit+0x3c>)
 8007bd4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8007bd8:	6313      	str	r3, [r2, #48]	; 0x30
 8007bda:	4b07      	ldr	r3, [pc, #28]	; (8007bf8 <HAL_CRC_MspInit+0x3c>)
 8007bdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007bde:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007be2:	60fb      	str	r3, [r7, #12]
 8007be4:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8007be6:	bf00      	nop
 8007be8:	3714      	adds	r7, #20
 8007bea:	46bd      	mov	sp, r7
 8007bec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bf0:	4770      	bx	lr
 8007bf2:	bf00      	nop
 8007bf4:	40023000 	.word	0x40023000
 8007bf8:	40023800 	.word	0x40023800

08007bfc <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8007bfc:	b580      	push	{r7, lr}
 8007bfe:	b08a      	sub	sp, #40	; 0x28
 8007c00:	af00      	add	r7, sp, #0
 8007c02:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8007c04:	f107 0314 	add.w	r3, r7, #20
 8007c08:	2200      	movs	r2, #0
 8007c0a:	601a      	str	r2, [r3, #0]
 8007c0c:	605a      	str	r2, [r3, #4]
 8007c0e:	609a      	str	r2, [r3, #8]
 8007c10:	60da      	str	r2, [r3, #12]
 8007c12:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART3)
 8007c14:	687b      	ldr	r3, [r7, #4]
 8007c16:	681b      	ldr	r3, [r3, #0]
 8007c18:	4a17      	ldr	r2, [pc, #92]	; (8007c78 <HAL_UART_MspInit+0x7c>)
 8007c1a:	4293      	cmp	r3, r2
 8007c1c:	d128      	bne.n	8007c70 <HAL_UART_MspInit+0x74>
  {
  /* USER CODE BEGIN USART3_MspInit 0 */

  /* USER CODE END USART3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART3_CLK_ENABLE();
 8007c1e:	4b17      	ldr	r3, [pc, #92]	; (8007c7c <HAL_UART_MspInit+0x80>)
 8007c20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c22:	4a16      	ldr	r2, [pc, #88]	; (8007c7c <HAL_UART_MspInit+0x80>)
 8007c24:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007c28:	6413      	str	r3, [r2, #64]	; 0x40
 8007c2a:	4b14      	ldr	r3, [pc, #80]	; (8007c7c <HAL_UART_MspInit+0x80>)
 8007c2c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c2e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8007c32:	613b      	str	r3, [r7, #16]
 8007c34:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8007c36:	4b11      	ldr	r3, [pc, #68]	; (8007c7c <HAL_UART_MspInit+0x80>)
 8007c38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007c3a:	4a10      	ldr	r2, [pc, #64]	; (8007c7c <HAL_UART_MspInit+0x80>)
 8007c3c:	f043 0308 	orr.w	r3, r3, #8
 8007c40:	6313      	str	r3, [r2, #48]	; 0x30
 8007c42:	4b0e      	ldr	r3, [pc, #56]	; (8007c7c <HAL_UART_MspInit+0x80>)
 8007c44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007c46:	f003 0308 	and.w	r3, r3, #8
 8007c4a:	60fb      	str	r3, [r7, #12]
 8007c4c:	68fb      	ldr	r3, [r7, #12]
    /**USART3 GPIO Configuration    
    PD8     ------> USART3_TX
    PD9     ------> USART3_RX 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8007c4e:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007c52:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007c54:	2302      	movs	r3, #2
 8007c56:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007c58:	2300      	movs	r3, #0
 8007c5a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8007c5c:	2303      	movs	r3, #3
 8007c5e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8007c60:	2307      	movs	r3, #7
 8007c62:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8007c64:	f107 0314 	add.w	r3, r7, #20
 8007c68:	4619      	mov	r1, r3
 8007c6a:	4805      	ldr	r0, [pc, #20]	; (8007c80 <HAL_UART_MspInit+0x84>)
 8007c6c:	f000 fb46 	bl	80082fc <HAL_GPIO_Init>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 8007c70:	bf00      	nop
 8007c72:	3728      	adds	r7, #40	; 0x28
 8007c74:	46bd      	mov	sp, r7
 8007c76:	bd80      	pop	{r7, pc}
 8007c78:	40004800 	.word	0x40004800
 8007c7c:	40023800 	.word	0x40023800
 8007c80:	40020c00 	.word	0x40020c00

08007c84 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8007c84:	b480      	push	{r7}
 8007c86:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8007c88:	bf00      	nop
 8007c8a:	46bd      	mov	sp, r7
 8007c8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c90:	4770      	bx	lr

08007c92 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8007c92:	b480      	push	{r7}
 8007c94:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8007c96:	e7fe      	b.n	8007c96 <HardFault_Handler+0x4>

08007c98 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8007c98:	b480      	push	{r7}
 8007c9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8007c9c:	e7fe      	b.n	8007c9c <MemManage_Handler+0x4>

08007c9e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8007c9e:	b480      	push	{r7}
 8007ca0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8007ca2:	e7fe      	b.n	8007ca2 <BusFault_Handler+0x4>

08007ca4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8007ca4:	b480      	push	{r7}
 8007ca6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8007ca8:	e7fe      	b.n	8007ca8 <UsageFault_Handler+0x4>

08007caa <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8007caa:	b480      	push	{r7}
 8007cac:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8007cae:	bf00      	nop
 8007cb0:	46bd      	mov	sp, r7
 8007cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cb6:	4770      	bx	lr

08007cb8 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8007cb8:	b480      	push	{r7}
 8007cba:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8007cbc:	bf00      	nop
 8007cbe:	46bd      	mov	sp, r7
 8007cc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cc4:	4770      	bx	lr

08007cc6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8007cc6:	b480      	push	{r7}
 8007cc8:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8007cca:	bf00      	nop
 8007ccc:	46bd      	mov	sp, r7
 8007cce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cd2:	4770      	bx	lr

08007cd4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8007cd4:	b580      	push	{r7, lr}
 8007cd6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8007cd8:	f000 f8fc 	bl	8007ed4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8007cdc:	bf00      	nop
 8007cde:	bd80      	pop	{r7, pc}

08007ce0 <_read>:
 8007ce0:	b580      	push	{r7, lr}
 8007ce2:	b086      	sub	sp, #24
 8007ce4:	af00      	add	r7, sp, #0
 8007ce6:	60f8      	str	r0, [r7, #12]
 8007ce8:	60b9      	str	r1, [r7, #8]
 8007cea:	607a      	str	r2, [r7, #4]
 8007cec:	2300      	movs	r3, #0
 8007cee:	617b      	str	r3, [r7, #20]
 8007cf0:	e00a      	b.n	8007d08 <_read+0x28>
 8007cf2:	f3af 8000 	nop.w
 8007cf6:	4601      	mov	r1, r0
 8007cf8:	68bb      	ldr	r3, [r7, #8]
 8007cfa:	1c5a      	adds	r2, r3, #1
 8007cfc:	60ba      	str	r2, [r7, #8]
 8007cfe:	b2ca      	uxtb	r2, r1
 8007d00:	701a      	strb	r2, [r3, #0]
 8007d02:	697b      	ldr	r3, [r7, #20]
 8007d04:	3301      	adds	r3, #1
 8007d06:	617b      	str	r3, [r7, #20]
 8007d08:	697a      	ldr	r2, [r7, #20]
 8007d0a:	687b      	ldr	r3, [r7, #4]
 8007d0c:	429a      	cmp	r2, r3
 8007d0e:	dbf0      	blt.n	8007cf2 <_read+0x12>
 8007d10:	687b      	ldr	r3, [r7, #4]
 8007d12:	4618      	mov	r0, r3
 8007d14:	3718      	adds	r7, #24
 8007d16:	46bd      	mov	sp, r7
 8007d18:	bd80      	pop	{r7, pc}

08007d1a <_close>:
 8007d1a:	b480      	push	{r7}
 8007d1c:	b083      	sub	sp, #12
 8007d1e:	af00      	add	r7, sp, #0
 8007d20:	6078      	str	r0, [r7, #4]
 8007d22:	f04f 33ff 	mov.w	r3, #4294967295
 8007d26:	4618      	mov	r0, r3
 8007d28:	370c      	adds	r7, #12
 8007d2a:	46bd      	mov	sp, r7
 8007d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d30:	4770      	bx	lr

08007d32 <_fstat>:
 8007d32:	b480      	push	{r7}
 8007d34:	b083      	sub	sp, #12
 8007d36:	af00      	add	r7, sp, #0
 8007d38:	6078      	str	r0, [r7, #4]
 8007d3a:	6039      	str	r1, [r7, #0]
 8007d3c:	683b      	ldr	r3, [r7, #0]
 8007d3e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8007d42:	605a      	str	r2, [r3, #4]
 8007d44:	2300      	movs	r3, #0
 8007d46:	4618      	mov	r0, r3
 8007d48:	370c      	adds	r7, #12
 8007d4a:	46bd      	mov	sp, r7
 8007d4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d50:	4770      	bx	lr

08007d52 <_isatty>:
 8007d52:	b480      	push	{r7}
 8007d54:	b083      	sub	sp, #12
 8007d56:	af00      	add	r7, sp, #0
 8007d58:	6078      	str	r0, [r7, #4]
 8007d5a:	2301      	movs	r3, #1
 8007d5c:	4618      	mov	r0, r3
 8007d5e:	370c      	adds	r7, #12
 8007d60:	46bd      	mov	sp, r7
 8007d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d66:	4770      	bx	lr

08007d68 <_lseek>:
 8007d68:	b480      	push	{r7}
 8007d6a:	b085      	sub	sp, #20
 8007d6c:	af00      	add	r7, sp, #0
 8007d6e:	60f8      	str	r0, [r7, #12]
 8007d70:	60b9      	str	r1, [r7, #8]
 8007d72:	607a      	str	r2, [r7, #4]
 8007d74:	2300      	movs	r3, #0
 8007d76:	4618      	mov	r0, r3
 8007d78:	3714      	adds	r7, #20
 8007d7a:	46bd      	mov	sp, r7
 8007d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d80:	4770      	bx	lr
	...

08007d84 <_sbrk>:
 8007d84:	b580      	push	{r7, lr}
 8007d86:	b084      	sub	sp, #16
 8007d88:	af00      	add	r7, sp, #0
 8007d8a:	6078      	str	r0, [r7, #4]
 8007d8c:	4b11      	ldr	r3, [pc, #68]	; (8007dd4 <_sbrk+0x50>)
 8007d8e:	681b      	ldr	r3, [r3, #0]
 8007d90:	2b00      	cmp	r3, #0
 8007d92:	d102      	bne.n	8007d9a <_sbrk+0x16>
 8007d94:	4b0f      	ldr	r3, [pc, #60]	; (8007dd4 <_sbrk+0x50>)
 8007d96:	4a10      	ldr	r2, [pc, #64]	; (8007dd8 <_sbrk+0x54>)
 8007d98:	601a      	str	r2, [r3, #0]
 8007d9a:	4b0e      	ldr	r3, [pc, #56]	; (8007dd4 <_sbrk+0x50>)
 8007d9c:	681b      	ldr	r3, [r3, #0]
 8007d9e:	60fb      	str	r3, [r7, #12]
 8007da0:	4b0c      	ldr	r3, [pc, #48]	; (8007dd4 <_sbrk+0x50>)
 8007da2:	681a      	ldr	r2, [r3, #0]
 8007da4:	687b      	ldr	r3, [r7, #4]
 8007da6:	4413      	add	r3, r2
 8007da8:	466a      	mov	r2, sp
 8007daa:	4293      	cmp	r3, r2
 8007dac:	d907      	bls.n	8007dbe <_sbrk+0x3a>
 8007dae:	f007 ffc9 	bl	800fd44 <__errno>
 8007db2:	4602      	mov	r2, r0
 8007db4:	230c      	movs	r3, #12
 8007db6:	6013      	str	r3, [r2, #0]
 8007db8:	f04f 33ff 	mov.w	r3, #4294967295
 8007dbc:	e006      	b.n	8007dcc <_sbrk+0x48>
 8007dbe:	4b05      	ldr	r3, [pc, #20]	; (8007dd4 <_sbrk+0x50>)
 8007dc0:	681a      	ldr	r2, [r3, #0]
 8007dc2:	687b      	ldr	r3, [r7, #4]
 8007dc4:	4413      	add	r3, r2
 8007dc6:	4a03      	ldr	r2, [pc, #12]	; (8007dd4 <_sbrk+0x50>)
 8007dc8:	6013      	str	r3, [r2, #0]
 8007dca:	68fb      	ldr	r3, [r7, #12]
 8007dcc:	4618      	mov	r0, r3
 8007dce:	3710      	adds	r7, #16
 8007dd0:	46bd      	mov	sp, r7
 8007dd2:	bd80      	pop	{r7, pc}
 8007dd4:	200008e0 	.word	0x200008e0
 8007dd8:	20000e28 	.word	0x20000e28

08007ddc <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8007ddc:	b480      	push	{r7}
 8007dde:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8007de0:	4b08      	ldr	r3, [pc, #32]	; (8007e04 <SystemInit+0x28>)
 8007de2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007de6:	4a07      	ldr	r2, [pc, #28]	; (8007e04 <SystemInit+0x28>)
 8007de8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8007dec:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = RAMDTCM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8007df0:	4b04      	ldr	r3, [pc, #16]	; (8007e04 <SystemInit+0x28>)
 8007df2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8007df6:	609a      	str	r2, [r3, #8]
#endif
}
 8007df8:	bf00      	nop
 8007dfa:	46bd      	mov	sp, r7
 8007dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e00:	4770      	bx	lr
 8007e02:	bf00      	nop
 8007e04:	e000ed00 	.word	0xe000ed00

08007e08 <Reset_Handler>:
 8007e08:	f8df d034 	ldr.w	sp, [pc, #52]	; 8007e40 <LoopFillZerobss+0x14>
 8007e0c:	2100      	movs	r1, #0
 8007e0e:	e003      	b.n	8007e18 <LoopCopyDataInit>

08007e10 <CopyDataInit>:
 8007e10:	4b0c      	ldr	r3, [pc, #48]	; (8007e44 <LoopFillZerobss+0x18>)
 8007e12:	585b      	ldr	r3, [r3, r1]
 8007e14:	5043      	str	r3, [r0, r1]
 8007e16:	3104      	adds	r1, #4

08007e18 <LoopCopyDataInit>:
 8007e18:	480b      	ldr	r0, [pc, #44]	; (8007e48 <LoopFillZerobss+0x1c>)
 8007e1a:	4b0c      	ldr	r3, [pc, #48]	; (8007e4c <LoopFillZerobss+0x20>)
 8007e1c:	1842      	adds	r2, r0, r1
 8007e1e:	429a      	cmp	r2, r3
 8007e20:	d3f6      	bcc.n	8007e10 <CopyDataInit>
 8007e22:	4a0b      	ldr	r2, [pc, #44]	; (8007e50 <LoopFillZerobss+0x24>)
 8007e24:	e002      	b.n	8007e2c <LoopFillZerobss>

08007e26 <FillZerobss>:
 8007e26:	2300      	movs	r3, #0
 8007e28:	f842 3b04 	str.w	r3, [r2], #4

08007e2c <LoopFillZerobss>:
 8007e2c:	4b09      	ldr	r3, [pc, #36]	; (8007e54 <LoopFillZerobss+0x28>)
 8007e2e:	429a      	cmp	r2, r3
 8007e30:	d3f9      	bcc.n	8007e26 <FillZerobss>
 8007e32:	f7ff ffd3 	bl	8007ddc <SystemInit>
 8007e36:	f007 ff8b 	bl	800fd50 <__libc_init_array>
 8007e3a:	f7ff fd1b 	bl	8007874 <main>
 8007e3e:	4770      	bx	lr
 8007e40:	20080000 	.word	0x20080000
 8007e44:	08017488 	.word	0x08017488
 8007e48:	20000000 	.word	0x20000000
 8007e4c:	2000089c 	.word	0x2000089c
 8007e50:	200008a0 	.word	0x200008a0
 8007e54:	20000e24 	.word	0x20000e24

08007e58 <ADC_IRQHandler>:
 8007e58:	e7fe      	b.n	8007e58 <ADC_IRQHandler>

08007e5a <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8007e5a:	b580      	push	{r7, lr}
 8007e5c:	af00      	add	r7, sp, #0
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8007e5e:	2003      	movs	r0, #3
 8007e60:	f000 f92e 	bl	80080c0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8007e64:	2000      	movs	r0, #0
 8007e66:	f000 f805 	bl	8007e74 <HAL_InitTick>
  
  /* Init the low level hardware */
  HAL_MspInit();
 8007e6a:	f7ff fe83 	bl	8007b74 <HAL_MspInit>
  
  /* Return function status */
  return HAL_OK;
 8007e6e:	2300      	movs	r3, #0
}
 8007e70:	4618      	mov	r0, r3
 8007e72:	bd80      	pop	{r7, pc}

08007e74 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8007e74:	b580      	push	{r7, lr}
 8007e76:	b082      	sub	sp, #8
 8007e78:	af00      	add	r7, sp, #0
 8007e7a:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8007e7c:	4b12      	ldr	r3, [pc, #72]	; (8007ec8 <HAL_InitTick+0x54>)
 8007e7e:	681a      	ldr	r2, [r3, #0]
 8007e80:	4b12      	ldr	r3, [pc, #72]	; (8007ecc <HAL_InitTick+0x58>)
 8007e82:	781b      	ldrb	r3, [r3, #0]
 8007e84:	4619      	mov	r1, r3
 8007e86:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007e8a:	fbb3 f3f1 	udiv	r3, r3, r1
 8007e8e:	fbb2 f3f3 	udiv	r3, r2, r3
 8007e92:	4618      	mov	r0, r3
 8007e94:	f000 f93b 	bl	800810e <HAL_SYSTICK_Config>
 8007e98:	4603      	mov	r3, r0
 8007e9a:	2b00      	cmp	r3, #0
 8007e9c:	d001      	beq.n	8007ea2 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8007e9e:	2301      	movs	r3, #1
 8007ea0:	e00e      	b.n	8007ec0 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8007ea2:	687b      	ldr	r3, [r7, #4]
 8007ea4:	2b0f      	cmp	r3, #15
 8007ea6:	d80a      	bhi.n	8007ebe <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8007ea8:	2200      	movs	r2, #0
 8007eaa:	6879      	ldr	r1, [r7, #4]
 8007eac:	f04f 30ff 	mov.w	r0, #4294967295
 8007eb0:	f000 f911 	bl	80080d6 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8007eb4:	4a06      	ldr	r2, [pc, #24]	; (8007ed0 <HAL_InitTick+0x5c>)
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8007eba:	2300      	movs	r3, #0
 8007ebc:	e000      	b.n	8007ec0 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8007ebe:	2301      	movs	r3, #1
}
 8007ec0:	4618      	mov	r0, r3
 8007ec2:	3708      	adds	r7, #8
 8007ec4:	46bd      	mov	sp, r7
 8007ec6:	bd80      	pop	{r7, pc}
 8007ec8:	20000008 	.word	0x20000008
 8007ecc:	20000010 	.word	0x20000010
 8007ed0:	2000000c 	.word	0x2000000c

08007ed4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8007ed4:	b480      	push	{r7}
 8007ed6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8007ed8:	4b06      	ldr	r3, [pc, #24]	; (8007ef4 <HAL_IncTick+0x20>)
 8007eda:	781b      	ldrb	r3, [r3, #0]
 8007edc:	461a      	mov	r2, r3
 8007ede:	4b06      	ldr	r3, [pc, #24]	; (8007ef8 <HAL_IncTick+0x24>)
 8007ee0:	681b      	ldr	r3, [r3, #0]
 8007ee2:	4413      	add	r3, r2
 8007ee4:	4a04      	ldr	r2, [pc, #16]	; (8007ef8 <HAL_IncTick+0x24>)
 8007ee6:	6013      	str	r3, [r2, #0]
}
 8007ee8:	bf00      	nop
 8007eea:	46bd      	mov	sp, r7
 8007eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ef0:	4770      	bx	lr
 8007ef2:	bf00      	nop
 8007ef4:	20000010 	.word	0x20000010
 8007ef8:	20000c80 	.word	0x20000c80

08007efc <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8007efc:	b480      	push	{r7}
 8007efe:	af00      	add	r7, sp, #0
  return uwTick;
 8007f00:	4b03      	ldr	r3, [pc, #12]	; (8007f10 <HAL_GetTick+0x14>)
 8007f02:	681b      	ldr	r3, [r3, #0]
}
 8007f04:	4618      	mov	r0, r3
 8007f06:	46bd      	mov	sp, r7
 8007f08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f0c:	4770      	bx	lr
 8007f0e:	bf00      	nop
 8007f10:	20000c80 	.word	0x20000c80

08007f14 <HAL_GetHalVersion>:
/**
  * @brief  Returns the HAL revision
  * @retval version : 0xXYZR (8bits for each decimal, R for RC)
  */
uint32_t HAL_GetHalVersion(void)
{
 8007f14:	b480      	push	{r7}
 8007f16:	af00      	add	r7, sp, #0
 return __STM32F7xx_HAL_VERSION;
 8007f18:	4b02      	ldr	r3, [pc, #8]	; (8007f24 <HAL_GetHalVersion+0x10>)
}
 8007f1a:	4618      	mov	r0, r3
 8007f1c:	46bd      	mov	sp, r7
 8007f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f22:	4770      	bx	lr
 8007f24:	01020800 	.word	0x01020800

08007f28 <HAL_GetREVID>:
/**
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
 8007f28:	b480      	push	{r7}
 8007f2a:	af00      	add	r7, sp, #0
   return((DBGMCU->IDCODE) >> 16U);
 8007f2c:	4b03      	ldr	r3, [pc, #12]	; (8007f3c <HAL_GetREVID+0x14>)
 8007f2e:	681b      	ldr	r3, [r3, #0]
 8007f30:	0c1b      	lsrs	r3, r3, #16
}
 8007f32:	4618      	mov	r0, r3
 8007f34:	46bd      	mov	sp, r7
 8007f36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f3a:	4770      	bx	lr
 8007f3c:	e0042000 	.word	0xe0042000

08007f40 <HAL_GetDEVID>:
/**
  * @brief  Returns the device identifier.
  * @retval Device identifier
  */
uint32_t HAL_GetDEVID(void)
{
 8007f40:	b480      	push	{r7}
 8007f42:	af00      	add	r7, sp, #0
   return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 8007f44:	4b04      	ldr	r3, [pc, #16]	; (8007f58 <HAL_GetDEVID+0x18>)
 8007f46:	681b      	ldr	r3, [r3, #0]
 8007f48:	f3c3 030b 	ubfx	r3, r3, #0, #12
}
 8007f4c:	4618      	mov	r0, r3
 8007f4e:	46bd      	mov	sp, r7
 8007f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f54:	4770      	bx	lr
 8007f56:	bf00      	nop
 8007f58:	e0042000 	.word	0xe0042000

08007f5c <__NVIC_SetPriorityGrouping>:
{
 8007f5c:	b480      	push	{r7}
 8007f5e:	b085      	sub	sp, #20
 8007f60:	af00      	add	r7, sp, #0
 8007f62:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8007f64:	687b      	ldr	r3, [r7, #4]
 8007f66:	f003 0307 	and.w	r3, r3, #7
 8007f6a:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8007f6c:	4b0b      	ldr	r3, [pc, #44]	; (8007f9c <__NVIC_SetPriorityGrouping+0x40>)
 8007f6e:	68db      	ldr	r3, [r3, #12]
 8007f70:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007f72:	68ba      	ldr	r2, [r7, #8]
 8007f74:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8007f78:	4013      	ands	r3, r2
 8007f7a:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8007f7c:	68fb      	ldr	r3, [r7, #12]
 8007f7e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8007f80:	68bb      	ldr	r3, [r7, #8]
 8007f82:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 8007f84:	4b06      	ldr	r3, [pc, #24]	; (8007fa0 <__NVIC_SetPriorityGrouping+0x44>)
 8007f86:	4313      	orrs	r3, r2
 8007f88:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8007f8a:	4a04      	ldr	r2, [pc, #16]	; (8007f9c <__NVIC_SetPriorityGrouping+0x40>)
 8007f8c:	68bb      	ldr	r3, [r7, #8]
 8007f8e:	60d3      	str	r3, [r2, #12]
}
 8007f90:	bf00      	nop
 8007f92:	3714      	adds	r7, #20
 8007f94:	46bd      	mov	sp, r7
 8007f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f9a:	4770      	bx	lr
 8007f9c:	e000ed00 	.word	0xe000ed00
 8007fa0:	05fa0000 	.word	0x05fa0000

08007fa4 <__NVIC_GetPriorityGrouping>:
{
 8007fa4:	b480      	push	{r7}
 8007fa6:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8007fa8:	4b04      	ldr	r3, [pc, #16]	; (8007fbc <__NVIC_GetPriorityGrouping+0x18>)
 8007faa:	68db      	ldr	r3, [r3, #12]
 8007fac:	0a1b      	lsrs	r3, r3, #8
 8007fae:	f003 0307 	and.w	r3, r3, #7
}
 8007fb2:	4618      	mov	r0, r3
 8007fb4:	46bd      	mov	sp, r7
 8007fb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fba:	4770      	bx	lr
 8007fbc:	e000ed00 	.word	0xe000ed00

08007fc0 <__NVIC_SetPriority>:
{
 8007fc0:	b480      	push	{r7}
 8007fc2:	b083      	sub	sp, #12
 8007fc4:	af00      	add	r7, sp, #0
 8007fc6:	4603      	mov	r3, r0
 8007fc8:	6039      	str	r1, [r7, #0]
 8007fca:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8007fcc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007fd0:	2b00      	cmp	r3, #0
 8007fd2:	db0a      	blt.n	8007fea <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007fd4:	683b      	ldr	r3, [r7, #0]
 8007fd6:	b2da      	uxtb	r2, r3
 8007fd8:	490c      	ldr	r1, [pc, #48]	; (800800c <__NVIC_SetPriority+0x4c>)
 8007fda:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007fde:	0112      	lsls	r2, r2, #4
 8007fe0:	b2d2      	uxtb	r2, r2
 8007fe2:	440b      	add	r3, r1
 8007fe4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8007fe8:	e00a      	b.n	8008000 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007fea:	683b      	ldr	r3, [r7, #0]
 8007fec:	b2da      	uxtb	r2, r3
 8007fee:	4908      	ldr	r1, [pc, #32]	; (8008010 <__NVIC_SetPriority+0x50>)
 8007ff0:	79fb      	ldrb	r3, [r7, #7]
 8007ff2:	f003 030f 	and.w	r3, r3, #15
 8007ff6:	3b04      	subs	r3, #4
 8007ff8:	0112      	lsls	r2, r2, #4
 8007ffa:	b2d2      	uxtb	r2, r2
 8007ffc:	440b      	add	r3, r1
 8007ffe:	761a      	strb	r2, [r3, #24]
}
 8008000:	bf00      	nop
 8008002:	370c      	adds	r7, #12
 8008004:	46bd      	mov	sp, r7
 8008006:	f85d 7b04 	ldr.w	r7, [sp], #4
 800800a:	4770      	bx	lr
 800800c:	e000e100 	.word	0xe000e100
 8008010:	e000ed00 	.word	0xe000ed00

08008014 <NVIC_EncodePriority>:
{
 8008014:	b480      	push	{r7}
 8008016:	b089      	sub	sp, #36	; 0x24
 8008018:	af00      	add	r7, sp, #0
 800801a:	60f8      	str	r0, [r7, #12]
 800801c:	60b9      	str	r1, [r7, #8]
 800801e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8008020:	68fb      	ldr	r3, [r7, #12]
 8008022:	f003 0307 	and.w	r3, r3, #7
 8008026:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008028:	69fb      	ldr	r3, [r7, #28]
 800802a:	f1c3 0307 	rsb	r3, r3, #7
 800802e:	2b04      	cmp	r3, #4
 8008030:	bf28      	it	cs
 8008032:	2304      	movcs	r3, #4
 8008034:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008036:	69fb      	ldr	r3, [r7, #28]
 8008038:	3304      	adds	r3, #4
 800803a:	2b06      	cmp	r3, #6
 800803c:	d902      	bls.n	8008044 <NVIC_EncodePriority+0x30>
 800803e:	69fb      	ldr	r3, [r7, #28]
 8008040:	3b03      	subs	r3, #3
 8008042:	e000      	b.n	8008046 <NVIC_EncodePriority+0x32>
 8008044:	2300      	movs	r3, #0
 8008046:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008048:	f04f 32ff 	mov.w	r2, #4294967295
 800804c:	69bb      	ldr	r3, [r7, #24]
 800804e:	fa02 f303 	lsl.w	r3, r2, r3
 8008052:	43da      	mvns	r2, r3
 8008054:	68bb      	ldr	r3, [r7, #8]
 8008056:	401a      	ands	r2, r3
 8008058:	697b      	ldr	r3, [r7, #20]
 800805a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800805c:	f04f 31ff 	mov.w	r1, #4294967295
 8008060:	697b      	ldr	r3, [r7, #20]
 8008062:	fa01 f303 	lsl.w	r3, r1, r3
 8008066:	43d9      	mvns	r1, r3
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800806c:	4313      	orrs	r3, r2
}
 800806e:	4618      	mov	r0, r3
 8008070:	3724      	adds	r7, #36	; 0x24
 8008072:	46bd      	mov	sp, r7
 8008074:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008078:	4770      	bx	lr
	...

0800807c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800807c:	b580      	push	{r7, lr}
 800807e:	b082      	sub	sp, #8
 8008080:	af00      	add	r7, sp, #0
 8008082:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8008084:	687b      	ldr	r3, [r7, #4]
 8008086:	3b01      	subs	r3, #1
 8008088:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800808c:	d301      	bcc.n	8008092 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800808e:	2301      	movs	r3, #1
 8008090:	e00f      	b.n	80080b2 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8008092:	4a0a      	ldr	r2, [pc, #40]	; (80080bc <SysTick_Config+0x40>)
 8008094:	687b      	ldr	r3, [r7, #4]
 8008096:	3b01      	subs	r3, #1
 8008098:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800809a:	210f      	movs	r1, #15
 800809c:	f04f 30ff 	mov.w	r0, #4294967295
 80080a0:	f7ff ff8e 	bl	8007fc0 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80080a4:	4b05      	ldr	r3, [pc, #20]	; (80080bc <SysTick_Config+0x40>)
 80080a6:	2200      	movs	r2, #0
 80080a8:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80080aa:	4b04      	ldr	r3, [pc, #16]	; (80080bc <SysTick_Config+0x40>)
 80080ac:	2207      	movs	r2, #7
 80080ae:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80080b0:	2300      	movs	r3, #0
}
 80080b2:	4618      	mov	r0, r3
 80080b4:	3708      	adds	r7, #8
 80080b6:	46bd      	mov	sp, r7
 80080b8:	bd80      	pop	{r7, pc}
 80080ba:	bf00      	nop
 80080bc:	e000e010 	.word	0xe000e010

080080c0 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80080c0:	b580      	push	{r7, lr}
 80080c2:	b082      	sub	sp, #8
 80080c4:	af00      	add	r7, sp, #0
 80080c6:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80080c8:	6878      	ldr	r0, [r7, #4]
 80080ca:	f7ff ff47 	bl	8007f5c <__NVIC_SetPriorityGrouping>
}
 80080ce:	bf00      	nop
 80080d0:	3708      	adds	r7, #8
 80080d2:	46bd      	mov	sp, r7
 80080d4:	bd80      	pop	{r7, pc}

080080d6 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80080d6:	b580      	push	{r7, lr}
 80080d8:	b086      	sub	sp, #24
 80080da:	af00      	add	r7, sp, #0
 80080dc:	4603      	mov	r3, r0
 80080de:	60b9      	str	r1, [r7, #8]
 80080e0:	607a      	str	r2, [r7, #4]
 80080e2:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 80080e4:	2300      	movs	r3, #0
 80080e6:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80080e8:	f7ff ff5c 	bl	8007fa4 <__NVIC_GetPriorityGrouping>
 80080ec:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80080ee:	687a      	ldr	r2, [r7, #4]
 80080f0:	68b9      	ldr	r1, [r7, #8]
 80080f2:	6978      	ldr	r0, [r7, #20]
 80080f4:	f7ff ff8e 	bl	8008014 <NVIC_EncodePriority>
 80080f8:	4602      	mov	r2, r0
 80080fa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80080fe:	4611      	mov	r1, r2
 8008100:	4618      	mov	r0, r3
 8008102:	f7ff ff5d 	bl	8007fc0 <__NVIC_SetPriority>
}
 8008106:	bf00      	nop
 8008108:	3718      	adds	r7, #24
 800810a:	46bd      	mov	sp, r7
 800810c:	bd80      	pop	{r7, pc}

0800810e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800810e:	b580      	push	{r7, lr}
 8008110:	b082      	sub	sp, #8
 8008112:	af00      	add	r7, sp, #0
 8008114:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8008116:	6878      	ldr	r0, [r7, #4]
 8008118:	f7ff ffb0 	bl	800807c <SysTick_Config>
 800811c:	4603      	mov	r3, r0
}
 800811e:	4618      	mov	r0, r3
 8008120:	3708      	adds	r7, #8
 8008122:	46bd      	mov	sp, r7
 8008124:	bd80      	pop	{r7, pc}
	...

08008128 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8008128:	b580      	push	{r7, lr}
 800812a:	b082      	sub	sp, #8
 800812c:	af00      	add	r7, sp, #0
 800812e:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8008130:	687b      	ldr	r3, [r7, #4]
 8008132:	2b00      	cmp	r3, #0
 8008134:	d101      	bne.n	800813a <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8008136:	2301      	movs	r3, #1
 8008138:	e054      	b.n	80081e4 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800813a:	687b      	ldr	r3, [r7, #4]
 800813c:	7f5b      	ldrb	r3, [r3, #29]
 800813e:	b2db      	uxtb	r3, r3
 8008140:	2b00      	cmp	r3, #0
 8008142:	d105      	bne.n	8008150 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8008144:	687b      	ldr	r3, [r7, #4]
 8008146:	2200      	movs	r2, #0
 8008148:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800814a:	6878      	ldr	r0, [r7, #4]
 800814c:	f7ff fd36 	bl	8007bbc <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	2202      	movs	r2, #2
 8008154:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8008156:	687b      	ldr	r3, [r7, #4]
 8008158:	791b      	ldrb	r3, [r3, #4]
 800815a:	2b00      	cmp	r3, #0
 800815c:	d10c      	bne.n	8008178 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 800815e:	687b      	ldr	r3, [r7, #4]
 8008160:	681b      	ldr	r3, [r3, #0]
 8008162:	4a22      	ldr	r2, [pc, #136]	; (80081ec <HAL_CRC_Init+0xc4>)
 8008164:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8008166:	687b      	ldr	r3, [r7, #4]
 8008168:	681b      	ldr	r3, [r3, #0]
 800816a:	689a      	ldr	r2, [r3, #8]
 800816c:	687b      	ldr	r3, [r7, #4]
 800816e:	681b      	ldr	r3, [r3, #0]
 8008170:	f022 0218 	bic.w	r2, r2, #24
 8008174:	609a      	str	r2, [r3, #8]
 8008176:	e00c      	b.n	8008192 <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8008178:	687b      	ldr	r3, [r7, #4]
 800817a:	6899      	ldr	r1, [r3, #8]
 800817c:	687b      	ldr	r3, [r7, #4]
 800817e:	68db      	ldr	r3, [r3, #12]
 8008180:	461a      	mov	r2, r3
 8008182:	6878      	ldr	r0, [r7, #4]
 8008184:	f000 f834 	bl	80081f0 <HAL_CRCEx_Polynomial_Set>
 8008188:	4603      	mov	r3, r0
 800818a:	2b00      	cmp	r3, #0
 800818c:	d001      	beq.n	8008192 <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 800818e:	2301      	movs	r3, #1
 8008190:	e028      	b.n	80081e4 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8008192:	687b      	ldr	r3, [r7, #4]
 8008194:	795b      	ldrb	r3, [r3, #5]
 8008196:	2b00      	cmp	r3, #0
 8008198:	d105      	bne.n	80081a6 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 800819a:	687b      	ldr	r3, [r7, #4]
 800819c:	681b      	ldr	r3, [r3, #0]
 800819e:	f04f 32ff 	mov.w	r2, #4294967295
 80081a2:	611a      	str	r2, [r3, #16]
 80081a4:	e004      	b.n	80081b0 <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 80081a6:	687b      	ldr	r3, [r7, #4]
 80081a8:	681b      	ldr	r3, [r3, #0]
 80081aa:	687a      	ldr	r2, [r7, #4]
 80081ac:	6912      	ldr	r2, [r2, #16]
 80081ae:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 80081b0:	687b      	ldr	r3, [r7, #4]
 80081b2:	681b      	ldr	r3, [r3, #0]
 80081b4:	689b      	ldr	r3, [r3, #8]
 80081b6:	f023 0160 	bic.w	r1, r3, #96	; 0x60
 80081ba:	687b      	ldr	r3, [r7, #4]
 80081bc:	695a      	ldr	r2, [r3, #20]
 80081be:	687b      	ldr	r3, [r7, #4]
 80081c0:	681b      	ldr	r3, [r3, #0]
 80081c2:	430a      	orrs	r2, r1
 80081c4:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 80081c6:	687b      	ldr	r3, [r7, #4]
 80081c8:	681b      	ldr	r3, [r3, #0]
 80081ca:	689b      	ldr	r3, [r3, #8]
 80081cc:	f023 0180 	bic.w	r1, r3, #128	; 0x80
 80081d0:	687b      	ldr	r3, [r7, #4]
 80081d2:	699a      	ldr	r2, [r3, #24]
 80081d4:	687b      	ldr	r3, [r7, #4]
 80081d6:	681b      	ldr	r3, [r3, #0]
 80081d8:	430a      	orrs	r2, r1
 80081da:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80081dc:	687b      	ldr	r3, [r7, #4]
 80081de:	2201      	movs	r2, #1
 80081e0:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 80081e2:	2300      	movs	r3, #0
}
 80081e4:	4618      	mov	r0, r3
 80081e6:	3708      	adds	r7, #8
 80081e8:	46bd      	mov	sp, r7
 80081ea:	bd80      	pop	{r7, pc}
 80081ec:	04c11db7 	.word	0x04c11db7

080081f0 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 80081f0:	b480      	push	{r7}
 80081f2:	b087      	sub	sp, #28
 80081f4:	af00      	add	r7, sp, #0
 80081f6:	60f8      	str	r0, [r7, #12]
 80081f8:	60b9      	str	r1, [r7, #8]
 80081fa:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80081fc:	2300      	movs	r3, #0
 80081fe:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8008200:	231f      	movs	r3, #31
 8008202:	613b      	str	r3, [r7, #16]
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8008204:	bf00      	nop
 8008206:	693b      	ldr	r3, [r7, #16]
 8008208:	1e5a      	subs	r2, r3, #1
 800820a:	613a      	str	r2, [r7, #16]
 800820c:	2b00      	cmp	r3, #0
 800820e:	d009      	beq.n	8008224 <HAL_CRCEx_Polynomial_Set+0x34>
 8008210:	693b      	ldr	r3, [r7, #16]
 8008212:	f003 031f 	and.w	r3, r3, #31
 8008216:	68ba      	ldr	r2, [r7, #8]
 8008218:	fa22 f303 	lsr.w	r3, r2, r3
 800821c:	f003 0301 	and.w	r3, r3, #1
 8008220:	2b00      	cmp	r3, #0
 8008222:	d0f0      	beq.n	8008206 <HAL_CRCEx_Polynomial_Set+0x16>
  {
  }

  switch (PolyLength)
 8008224:	687b      	ldr	r3, [r7, #4]
 8008226:	2b18      	cmp	r3, #24
 8008228:	d846      	bhi.n	80082b8 <HAL_CRCEx_Polynomial_Set+0xc8>
 800822a:	a201      	add	r2, pc, #4	; (adr r2, 8008230 <HAL_CRCEx_Polynomial_Set+0x40>)
 800822c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008230:	080082bf 	.word	0x080082bf
 8008234:	080082b9 	.word	0x080082b9
 8008238:	080082b9 	.word	0x080082b9
 800823c:	080082b9 	.word	0x080082b9
 8008240:	080082b9 	.word	0x080082b9
 8008244:	080082b9 	.word	0x080082b9
 8008248:	080082b9 	.word	0x080082b9
 800824c:	080082b9 	.word	0x080082b9
 8008250:	080082ad 	.word	0x080082ad
 8008254:	080082b9 	.word	0x080082b9
 8008258:	080082b9 	.word	0x080082b9
 800825c:	080082b9 	.word	0x080082b9
 8008260:	080082b9 	.word	0x080082b9
 8008264:	080082b9 	.word	0x080082b9
 8008268:	080082b9 	.word	0x080082b9
 800826c:	080082b9 	.word	0x080082b9
 8008270:	080082a1 	.word	0x080082a1
 8008274:	080082b9 	.word	0x080082b9
 8008278:	080082b9 	.word	0x080082b9
 800827c:	080082b9 	.word	0x080082b9
 8008280:	080082b9 	.word	0x080082b9
 8008284:	080082b9 	.word	0x080082b9
 8008288:	080082b9 	.word	0x080082b9
 800828c:	080082b9 	.word	0x080082b9
 8008290:	08008295 	.word	0x08008295
  {
    case CRC_POLYLENGTH_7B:
      if (msb >= HAL_CRC_LENGTH_7B)
 8008294:	693b      	ldr	r3, [r7, #16]
 8008296:	2b06      	cmp	r3, #6
 8008298:	d913      	bls.n	80082c2 <HAL_CRCEx_Polynomial_Set+0xd2>
      {
        status =   HAL_ERROR;
 800829a:	2301      	movs	r3, #1
 800829c:	75fb      	strb	r3, [r7, #23]
      }
      break;
 800829e:	e010      	b.n	80082c2 <HAL_CRCEx_Polynomial_Set+0xd2>
    case CRC_POLYLENGTH_8B:
      if (msb >= HAL_CRC_LENGTH_8B)
 80082a0:	693b      	ldr	r3, [r7, #16]
 80082a2:	2b07      	cmp	r3, #7
 80082a4:	d90f      	bls.n	80082c6 <HAL_CRCEx_Polynomial_Set+0xd6>
      {
        status =   HAL_ERROR;
 80082a6:	2301      	movs	r3, #1
 80082a8:	75fb      	strb	r3, [r7, #23]
      }
      break;
 80082aa:	e00c      	b.n	80082c6 <HAL_CRCEx_Polynomial_Set+0xd6>
    case CRC_POLYLENGTH_16B:
      if (msb >= HAL_CRC_LENGTH_16B)
 80082ac:	693b      	ldr	r3, [r7, #16]
 80082ae:	2b0f      	cmp	r3, #15
 80082b0:	d90b      	bls.n	80082ca <HAL_CRCEx_Polynomial_Set+0xda>
      {
        status =   HAL_ERROR;
 80082b2:	2301      	movs	r3, #1
 80082b4:	75fb      	strb	r3, [r7, #23]
      }
      break;
 80082b6:	e008      	b.n	80082ca <HAL_CRCEx_Polynomial_Set+0xda>

    case CRC_POLYLENGTH_32B:
      /* no polynomial definition vs. polynomial length issue possible */
      break;
    default:
      status =  HAL_ERROR;
 80082b8:	2301      	movs	r3, #1
 80082ba:	75fb      	strb	r3, [r7, #23]
      break;
 80082bc:	e006      	b.n	80082cc <HAL_CRCEx_Polynomial_Set+0xdc>
      break;
 80082be:	bf00      	nop
 80082c0:	e004      	b.n	80082cc <HAL_CRCEx_Polynomial_Set+0xdc>
      break;
 80082c2:	bf00      	nop
 80082c4:	e002      	b.n	80082cc <HAL_CRCEx_Polynomial_Set+0xdc>
      break;
 80082c6:	bf00      	nop
 80082c8:	e000      	b.n	80082cc <HAL_CRCEx_Polynomial_Set+0xdc>
      break;
 80082ca:	bf00      	nop
  }
  if (status == HAL_OK)
 80082cc:	7dfb      	ldrb	r3, [r7, #23]
 80082ce:	2b00      	cmp	r3, #0
 80082d0:	d10d      	bne.n	80082ee <HAL_CRCEx_Polynomial_Set+0xfe>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 80082d2:	68fb      	ldr	r3, [r7, #12]
 80082d4:	681b      	ldr	r3, [r3, #0]
 80082d6:	68ba      	ldr	r2, [r7, #8]
 80082d8:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 80082da:	68fb      	ldr	r3, [r7, #12]
 80082dc:	681b      	ldr	r3, [r3, #0]
 80082de:	689b      	ldr	r3, [r3, #8]
 80082e0:	f023 0118 	bic.w	r1, r3, #24
 80082e4:	68fb      	ldr	r3, [r7, #12]
 80082e6:	681b      	ldr	r3, [r3, #0]
 80082e8:	687a      	ldr	r2, [r7, #4]
 80082ea:	430a      	orrs	r2, r1
 80082ec:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 80082ee:	7dfb      	ldrb	r3, [r7, #23]
}
 80082f0:	4618      	mov	r0, r3
 80082f2:	371c      	adds	r7, #28
 80082f4:	46bd      	mov	sp, r7
 80082f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082fa:	4770      	bx	lr

080082fc <HAL_GPIO_Init>:
 80082fc:	b480      	push	{r7}
 80082fe:	b089      	sub	sp, #36	; 0x24
 8008300:	af00      	add	r7, sp, #0
 8008302:	6078      	str	r0, [r7, #4]
 8008304:	6039      	str	r1, [r7, #0]
 8008306:	2300      	movs	r3, #0
 8008308:	61fb      	str	r3, [r7, #28]
 800830a:	2300      	movs	r3, #0
 800830c:	617b      	str	r3, [r7, #20]
 800830e:	2300      	movs	r3, #0
 8008310:	613b      	str	r3, [r7, #16]
 8008312:	2300      	movs	r3, #0
 8008314:	61bb      	str	r3, [r7, #24]
 8008316:	2300      	movs	r3, #0
 8008318:	61fb      	str	r3, [r7, #28]
 800831a:	e175      	b.n	8008608 <HAL_GPIO_Init+0x30c>
 800831c:	2201      	movs	r2, #1
 800831e:	69fb      	ldr	r3, [r7, #28]
 8008320:	fa02 f303 	lsl.w	r3, r2, r3
 8008324:	617b      	str	r3, [r7, #20]
 8008326:	683b      	ldr	r3, [r7, #0]
 8008328:	681b      	ldr	r3, [r3, #0]
 800832a:	697a      	ldr	r2, [r7, #20]
 800832c:	4013      	ands	r3, r2
 800832e:	613b      	str	r3, [r7, #16]
 8008330:	693a      	ldr	r2, [r7, #16]
 8008332:	697b      	ldr	r3, [r7, #20]
 8008334:	429a      	cmp	r2, r3
 8008336:	f040 8164 	bne.w	8008602 <HAL_GPIO_Init+0x306>
 800833a:	683b      	ldr	r3, [r7, #0]
 800833c:	685b      	ldr	r3, [r3, #4]
 800833e:	2b01      	cmp	r3, #1
 8008340:	d00b      	beq.n	800835a <HAL_GPIO_Init+0x5e>
 8008342:	683b      	ldr	r3, [r7, #0]
 8008344:	685b      	ldr	r3, [r3, #4]
 8008346:	2b02      	cmp	r3, #2
 8008348:	d007      	beq.n	800835a <HAL_GPIO_Init+0x5e>
 800834a:	683b      	ldr	r3, [r7, #0]
 800834c:	685b      	ldr	r3, [r3, #4]
 800834e:	2b11      	cmp	r3, #17
 8008350:	d003      	beq.n	800835a <HAL_GPIO_Init+0x5e>
 8008352:	683b      	ldr	r3, [r7, #0]
 8008354:	685b      	ldr	r3, [r3, #4]
 8008356:	2b12      	cmp	r3, #18
 8008358:	d130      	bne.n	80083bc <HAL_GPIO_Init+0xc0>
 800835a:	687b      	ldr	r3, [r7, #4]
 800835c:	689b      	ldr	r3, [r3, #8]
 800835e:	61bb      	str	r3, [r7, #24]
 8008360:	69fb      	ldr	r3, [r7, #28]
 8008362:	005b      	lsls	r3, r3, #1
 8008364:	2203      	movs	r2, #3
 8008366:	fa02 f303 	lsl.w	r3, r2, r3
 800836a:	43db      	mvns	r3, r3
 800836c:	69ba      	ldr	r2, [r7, #24]
 800836e:	4013      	ands	r3, r2
 8008370:	61bb      	str	r3, [r7, #24]
 8008372:	683b      	ldr	r3, [r7, #0]
 8008374:	68da      	ldr	r2, [r3, #12]
 8008376:	69fb      	ldr	r3, [r7, #28]
 8008378:	005b      	lsls	r3, r3, #1
 800837a:	fa02 f303 	lsl.w	r3, r2, r3
 800837e:	69ba      	ldr	r2, [r7, #24]
 8008380:	4313      	orrs	r3, r2
 8008382:	61bb      	str	r3, [r7, #24]
 8008384:	687b      	ldr	r3, [r7, #4]
 8008386:	69ba      	ldr	r2, [r7, #24]
 8008388:	609a      	str	r2, [r3, #8]
 800838a:	687b      	ldr	r3, [r7, #4]
 800838c:	685b      	ldr	r3, [r3, #4]
 800838e:	61bb      	str	r3, [r7, #24]
 8008390:	2201      	movs	r2, #1
 8008392:	69fb      	ldr	r3, [r7, #28]
 8008394:	fa02 f303 	lsl.w	r3, r2, r3
 8008398:	43db      	mvns	r3, r3
 800839a:	69ba      	ldr	r2, [r7, #24]
 800839c:	4013      	ands	r3, r2
 800839e:	61bb      	str	r3, [r7, #24]
 80083a0:	683b      	ldr	r3, [r7, #0]
 80083a2:	685b      	ldr	r3, [r3, #4]
 80083a4:	091b      	lsrs	r3, r3, #4
 80083a6:	f003 0201 	and.w	r2, r3, #1
 80083aa:	69fb      	ldr	r3, [r7, #28]
 80083ac:	fa02 f303 	lsl.w	r3, r2, r3
 80083b0:	69ba      	ldr	r2, [r7, #24]
 80083b2:	4313      	orrs	r3, r2
 80083b4:	61bb      	str	r3, [r7, #24]
 80083b6:	687b      	ldr	r3, [r7, #4]
 80083b8:	69ba      	ldr	r2, [r7, #24]
 80083ba:	605a      	str	r2, [r3, #4]
 80083bc:	687b      	ldr	r3, [r7, #4]
 80083be:	68db      	ldr	r3, [r3, #12]
 80083c0:	61bb      	str	r3, [r7, #24]
 80083c2:	69fb      	ldr	r3, [r7, #28]
 80083c4:	005b      	lsls	r3, r3, #1
 80083c6:	2203      	movs	r2, #3
 80083c8:	fa02 f303 	lsl.w	r3, r2, r3
 80083cc:	43db      	mvns	r3, r3
 80083ce:	69ba      	ldr	r2, [r7, #24]
 80083d0:	4013      	ands	r3, r2
 80083d2:	61bb      	str	r3, [r7, #24]
 80083d4:	683b      	ldr	r3, [r7, #0]
 80083d6:	689a      	ldr	r2, [r3, #8]
 80083d8:	69fb      	ldr	r3, [r7, #28]
 80083da:	005b      	lsls	r3, r3, #1
 80083dc:	fa02 f303 	lsl.w	r3, r2, r3
 80083e0:	69ba      	ldr	r2, [r7, #24]
 80083e2:	4313      	orrs	r3, r2
 80083e4:	61bb      	str	r3, [r7, #24]
 80083e6:	687b      	ldr	r3, [r7, #4]
 80083e8:	69ba      	ldr	r2, [r7, #24]
 80083ea:	60da      	str	r2, [r3, #12]
 80083ec:	683b      	ldr	r3, [r7, #0]
 80083ee:	685b      	ldr	r3, [r3, #4]
 80083f0:	2b02      	cmp	r3, #2
 80083f2:	d003      	beq.n	80083fc <HAL_GPIO_Init+0x100>
 80083f4:	683b      	ldr	r3, [r7, #0]
 80083f6:	685b      	ldr	r3, [r3, #4]
 80083f8:	2b12      	cmp	r3, #18
 80083fa:	d123      	bne.n	8008444 <HAL_GPIO_Init+0x148>
 80083fc:	69fb      	ldr	r3, [r7, #28]
 80083fe:	08da      	lsrs	r2, r3, #3
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	3208      	adds	r2, #8
 8008404:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008408:	61bb      	str	r3, [r7, #24]
 800840a:	69fb      	ldr	r3, [r7, #28]
 800840c:	f003 0307 	and.w	r3, r3, #7
 8008410:	009b      	lsls	r3, r3, #2
 8008412:	220f      	movs	r2, #15
 8008414:	fa02 f303 	lsl.w	r3, r2, r3
 8008418:	43db      	mvns	r3, r3
 800841a:	69ba      	ldr	r2, [r7, #24]
 800841c:	4013      	ands	r3, r2
 800841e:	61bb      	str	r3, [r7, #24]
 8008420:	683b      	ldr	r3, [r7, #0]
 8008422:	691a      	ldr	r2, [r3, #16]
 8008424:	69fb      	ldr	r3, [r7, #28]
 8008426:	f003 0307 	and.w	r3, r3, #7
 800842a:	009b      	lsls	r3, r3, #2
 800842c:	fa02 f303 	lsl.w	r3, r2, r3
 8008430:	69ba      	ldr	r2, [r7, #24]
 8008432:	4313      	orrs	r3, r2
 8008434:	61bb      	str	r3, [r7, #24]
 8008436:	69fb      	ldr	r3, [r7, #28]
 8008438:	08da      	lsrs	r2, r3, #3
 800843a:	687b      	ldr	r3, [r7, #4]
 800843c:	3208      	adds	r2, #8
 800843e:	69b9      	ldr	r1, [r7, #24]
 8008440:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8008444:	687b      	ldr	r3, [r7, #4]
 8008446:	681b      	ldr	r3, [r3, #0]
 8008448:	61bb      	str	r3, [r7, #24]
 800844a:	69fb      	ldr	r3, [r7, #28]
 800844c:	005b      	lsls	r3, r3, #1
 800844e:	2203      	movs	r2, #3
 8008450:	fa02 f303 	lsl.w	r3, r2, r3
 8008454:	43db      	mvns	r3, r3
 8008456:	69ba      	ldr	r2, [r7, #24]
 8008458:	4013      	ands	r3, r2
 800845a:	61bb      	str	r3, [r7, #24]
 800845c:	683b      	ldr	r3, [r7, #0]
 800845e:	685b      	ldr	r3, [r3, #4]
 8008460:	f003 0203 	and.w	r2, r3, #3
 8008464:	69fb      	ldr	r3, [r7, #28]
 8008466:	005b      	lsls	r3, r3, #1
 8008468:	fa02 f303 	lsl.w	r3, r2, r3
 800846c:	69ba      	ldr	r2, [r7, #24]
 800846e:	4313      	orrs	r3, r2
 8008470:	61bb      	str	r3, [r7, #24]
 8008472:	687b      	ldr	r3, [r7, #4]
 8008474:	69ba      	ldr	r2, [r7, #24]
 8008476:	601a      	str	r2, [r3, #0]
 8008478:	683b      	ldr	r3, [r7, #0]
 800847a:	685b      	ldr	r3, [r3, #4]
 800847c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008480:	2b00      	cmp	r3, #0
 8008482:	f000 80be 	beq.w	8008602 <HAL_GPIO_Init+0x306>
 8008486:	4b65      	ldr	r3, [pc, #404]	; (800861c <HAL_GPIO_Init+0x320>)
 8008488:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800848a:	4a64      	ldr	r2, [pc, #400]	; (800861c <HAL_GPIO_Init+0x320>)
 800848c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8008490:	6453      	str	r3, [r2, #68]	; 0x44
 8008492:	4b62      	ldr	r3, [pc, #392]	; (800861c <HAL_GPIO_Init+0x320>)
 8008494:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008496:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800849a:	60fb      	str	r3, [r7, #12]
 800849c:	68fb      	ldr	r3, [r7, #12]
 800849e:	4a60      	ldr	r2, [pc, #384]	; (8008620 <HAL_GPIO_Init+0x324>)
 80084a0:	69fb      	ldr	r3, [r7, #28]
 80084a2:	089b      	lsrs	r3, r3, #2
 80084a4:	3302      	adds	r3, #2
 80084a6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80084aa:	61bb      	str	r3, [r7, #24]
 80084ac:	69fb      	ldr	r3, [r7, #28]
 80084ae:	f003 0303 	and.w	r3, r3, #3
 80084b2:	009b      	lsls	r3, r3, #2
 80084b4:	220f      	movs	r2, #15
 80084b6:	fa02 f303 	lsl.w	r3, r2, r3
 80084ba:	43db      	mvns	r3, r3
 80084bc:	69ba      	ldr	r2, [r7, #24]
 80084be:	4013      	ands	r3, r2
 80084c0:	61bb      	str	r3, [r7, #24]
 80084c2:	687b      	ldr	r3, [r7, #4]
 80084c4:	4a57      	ldr	r2, [pc, #348]	; (8008624 <HAL_GPIO_Init+0x328>)
 80084c6:	4293      	cmp	r3, r2
 80084c8:	d037      	beq.n	800853a <HAL_GPIO_Init+0x23e>
 80084ca:	687b      	ldr	r3, [r7, #4]
 80084cc:	4a56      	ldr	r2, [pc, #344]	; (8008628 <HAL_GPIO_Init+0x32c>)
 80084ce:	4293      	cmp	r3, r2
 80084d0:	d031      	beq.n	8008536 <HAL_GPIO_Init+0x23a>
 80084d2:	687b      	ldr	r3, [r7, #4]
 80084d4:	4a55      	ldr	r2, [pc, #340]	; (800862c <HAL_GPIO_Init+0x330>)
 80084d6:	4293      	cmp	r3, r2
 80084d8:	d02b      	beq.n	8008532 <HAL_GPIO_Init+0x236>
 80084da:	687b      	ldr	r3, [r7, #4]
 80084dc:	4a54      	ldr	r2, [pc, #336]	; (8008630 <HAL_GPIO_Init+0x334>)
 80084de:	4293      	cmp	r3, r2
 80084e0:	d025      	beq.n	800852e <HAL_GPIO_Init+0x232>
 80084e2:	687b      	ldr	r3, [r7, #4]
 80084e4:	4a53      	ldr	r2, [pc, #332]	; (8008634 <HAL_GPIO_Init+0x338>)
 80084e6:	4293      	cmp	r3, r2
 80084e8:	d01f      	beq.n	800852a <HAL_GPIO_Init+0x22e>
 80084ea:	687b      	ldr	r3, [r7, #4]
 80084ec:	4a52      	ldr	r2, [pc, #328]	; (8008638 <HAL_GPIO_Init+0x33c>)
 80084ee:	4293      	cmp	r3, r2
 80084f0:	d019      	beq.n	8008526 <HAL_GPIO_Init+0x22a>
 80084f2:	687b      	ldr	r3, [r7, #4]
 80084f4:	4a51      	ldr	r2, [pc, #324]	; (800863c <HAL_GPIO_Init+0x340>)
 80084f6:	4293      	cmp	r3, r2
 80084f8:	d013      	beq.n	8008522 <HAL_GPIO_Init+0x226>
 80084fa:	687b      	ldr	r3, [r7, #4]
 80084fc:	4a50      	ldr	r2, [pc, #320]	; (8008640 <HAL_GPIO_Init+0x344>)
 80084fe:	4293      	cmp	r3, r2
 8008500:	d00d      	beq.n	800851e <HAL_GPIO_Init+0x222>
 8008502:	687b      	ldr	r3, [r7, #4]
 8008504:	4a4f      	ldr	r2, [pc, #316]	; (8008644 <HAL_GPIO_Init+0x348>)
 8008506:	4293      	cmp	r3, r2
 8008508:	d007      	beq.n	800851a <HAL_GPIO_Init+0x21e>
 800850a:	687b      	ldr	r3, [r7, #4]
 800850c:	4a4e      	ldr	r2, [pc, #312]	; (8008648 <HAL_GPIO_Init+0x34c>)
 800850e:	4293      	cmp	r3, r2
 8008510:	d101      	bne.n	8008516 <HAL_GPIO_Init+0x21a>
 8008512:	2309      	movs	r3, #9
 8008514:	e012      	b.n	800853c <HAL_GPIO_Init+0x240>
 8008516:	230a      	movs	r3, #10
 8008518:	e010      	b.n	800853c <HAL_GPIO_Init+0x240>
 800851a:	2308      	movs	r3, #8
 800851c:	e00e      	b.n	800853c <HAL_GPIO_Init+0x240>
 800851e:	2307      	movs	r3, #7
 8008520:	e00c      	b.n	800853c <HAL_GPIO_Init+0x240>
 8008522:	2306      	movs	r3, #6
 8008524:	e00a      	b.n	800853c <HAL_GPIO_Init+0x240>
 8008526:	2305      	movs	r3, #5
 8008528:	e008      	b.n	800853c <HAL_GPIO_Init+0x240>
 800852a:	2304      	movs	r3, #4
 800852c:	e006      	b.n	800853c <HAL_GPIO_Init+0x240>
 800852e:	2303      	movs	r3, #3
 8008530:	e004      	b.n	800853c <HAL_GPIO_Init+0x240>
 8008532:	2302      	movs	r3, #2
 8008534:	e002      	b.n	800853c <HAL_GPIO_Init+0x240>
 8008536:	2301      	movs	r3, #1
 8008538:	e000      	b.n	800853c <HAL_GPIO_Init+0x240>
 800853a:	2300      	movs	r3, #0
 800853c:	69fa      	ldr	r2, [r7, #28]
 800853e:	f002 0203 	and.w	r2, r2, #3
 8008542:	0092      	lsls	r2, r2, #2
 8008544:	4093      	lsls	r3, r2
 8008546:	69ba      	ldr	r2, [r7, #24]
 8008548:	4313      	orrs	r3, r2
 800854a:	61bb      	str	r3, [r7, #24]
 800854c:	4934      	ldr	r1, [pc, #208]	; (8008620 <HAL_GPIO_Init+0x324>)
 800854e:	69fb      	ldr	r3, [r7, #28]
 8008550:	089b      	lsrs	r3, r3, #2
 8008552:	3302      	adds	r3, #2
 8008554:	69ba      	ldr	r2, [r7, #24]
 8008556:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800855a:	4b3c      	ldr	r3, [pc, #240]	; (800864c <HAL_GPIO_Init+0x350>)
 800855c:	681b      	ldr	r3, [r3, #0]
 800855e:	61bb      	str	r3, [r7, #24]
 8008560:	693b      	ldr	r3, [r7, #16]
 8008562:	43db      	mvns	r3, r3
 8008564:	69ba      	ldr	r2, [r7, #24]
 8008566:	4013      	ands	r3, r2
 8008568:	61bb      	str	r3, [r7, #24]
 800856a:	683b      	ldr	r3, [r7, #0]
 800856c:	685b      	ldr	r3, [r3, #4]
 800856e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008572:	2b00      	cmp	r3, #0
 8008574:	d003      	beq.n	800857e <HAL_GPIO_Init+0x282>
 8008576:	69ba      	ldr	r2, [r7, #24]
 8008578:	693b      	ldr	r3, [r7, #16]
 800857a:	4313      	orrs	r3, r2
 800857c:	61bb      	str	r3, [r7, #24]
 800857e:	4a33      	ldr	r2, [pc, #204]	; (800864c <HAL_GPIO_Init+0x350>)
 8008580:	69bb      	ldr	r3, [r7, #24]
 8008582:	6013      	str	r3, [r2, #0]
 8008584:	4b31      	ldr	r3, [pc, #196]	; (800864c <HAL_GPIO_Init+0x350>)
 8008586:	685b      	ldr	r3, [r3, #4]
 8008588:	61bb      	str	r3, [r7, #24]
 800858a:	693b      	ldr	r3, [r7, #16]
 800858c:	43db      	mvns	r3, r3
 800858e:	69ba      	ldr	r2, [r7, #24]
 8008590:	4013      	ands	r3, r2
 8008592:	61bb      	str	r3, [r7, #24]
 8008594:	683b      	ldr	r3, [r7, #0]
 8008596:	685b      	ldr	r3, [r3, #4]
 8008598:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800859c:	2b00      	cmp	r3, #0
 800859e:	d003      	beq.n	80085a8 <HAL_GPIO_Init+0x2ac>
 80085a0:	69ba      	ldr	r2, [r7, #24]
 80085a2:	693b      	ldr	r3, [r7, #16]
 80085a4:	4313      	orrs	r3, r2
 80085a6:	61bb      	str	r3, [r7, #24]
 80085a8:	4a28      	ldr	r2, [pc, #160]	; (800864c <HAL_GPIO_Init+0x350>)
 80085aa:	69bb      	ldr	r3, [r7, #24]
 80085ac:	6053      	str	r3, [r2, #4]
 80085ae:	4b27      	ldr	r3, [pc, #156]	; (800864c <HAL_GPIO_Init+0x350>)
 80085b0:	689b      	ldr	r3, [r3, #8]
 80085b2:	61bb      	str	r3, [r7, #24]
 80085b4:	693b      	ldr	r3, [r7, #16]
 80085b6:	43db      	mvns	r3, r3
 80085b8:	69ba      	ldr	r2, [r7, #24]
 80085ba:	4013      	ands	r3, r2
 80085bc:	61bb      	str	r3, [r7, #24]
 80085be:	683b      	ldr	r3, [r7, #0]
 80085c0:	685b      	ldr	r3, [r3, #4]
 80085c2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80085c6:	2b00      	cmp	r3, #0
 80085c8:	d003      	beq.n	80085d2 <HAL_GPIO_Init+0x2d6>
 80085ca:	69ba      	ldr	r2, [r7, #24]
 80085cc:	693b      	ldr	r3, [r7, #16]
 80085ce:	4313      	orrs	r3, r2
 80085d0:	61bb      	str	r3, [r7, #24]
 80085d2:	4a1e      	ldr	r2, [pc, #120]	; (800864c <HAL_GPIO_Init+0x350>)
 80085d4:	69bb      	ldr	r3, [r7, #24]
 80085d6:	6093      	str	r3, [r2, #8]
 80085d8:	4b1c      	ldr	r3, [pc, #112]	; (800864c <HAL_GPIO_Init+0x350>)
 80085da:	68db      	ldr	r3, [r3, #12]
 80085dc:	61bb      	str	r3, [r7, #24]
 80085de:	693b      	ldr	r3, [r7, #16]
 80085e0:	43db      	mvns	r3, r3
 80085e2:	69ba      	ldr	r2, [r7, #24]
 80085e4:	4013      	ands	r3, r2
 80085e6:	61bb      	str	r3, [r7, #24]
 80085e8:	683b      	ldr	r3, [r7, #0]
 80085ea:	685b      	ldr	r3, [r3, #4]
 80085ec:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80085f0:	2b00      	cmp	r3, #0
 80085f2:	d003      	beq.n	80085fc <HAL_GPIO_Init+0x300>
 80085f4:	69ba      	ldr	r2, [r7, #24]
 80085f6:	693b      	ldr	r3, [r7, #16]
 80085f8:	4313      	orrs	r3, r2
 80085fa:	61bb      	str	r3, [r7, #24]
 80085fc:	4a13      	ldr	r2, [pc, #76]	; (800864c <HAL_GPIO_Init+0x350>)
 80085fe:	69bb      	ldr	r3, [r7, #24]
 8008600:	60d3      	str	r3, [r2, #12]
 8008602:	69fb      	ldr	r3, [r7, #28]
 8008604:	3301      	adds	r3, #1
 8008606:	61fb      	str	r3, [r7, #28]
 8008608:	69fb      	ldr	r3, [r7, #28]
 800860a:	2b0f      	cmp	r3, #15
 800860c:	f67f ae86 	bls.w	800831c <HAL_GPIO_Init+0x20>
 8008610:	bf00      	nop
 8008612:	3724      	adds	r7, #36	; 0x24
 8008614:	46bd      	mov	sp, r7
 8008616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800861a:	4770      	bx	lr
 800861c:	40023800 	.word	0x40023800
 8008620:	40013800 	.word	0x40013800
 8008624:	40020000 	.word	0x40020000
 8008628:	40020400 	.word	0x40020400
 800862c:	40020800 	.word	0x40020800
 8008630:	40020c00 	.word	0x40020c00
 8008634:	40021000 	.word	0x40021000
 8008638:	40021400 	.word	0x40021400
 800863c:	40021800 	.word	0x40021800
 8008640:	40021c00 	.word	0x40021c00
 8008644:	40022000 	.word	0x40022000
 8008648:	40022400 	.word	0x40022400
 800864c:	40013c00 	.word	0x40013c00

08008650 <HAL_PWREx_EnableOverDrive>:
 8008650:	b580      	push	{r7, lr}
 8008652:	b082      	sub	sp, #8
 8008654:	af00      	add	r7, sp, #0
 8008656:	2300      	movs	r3, #0
 8008658:	607b      	str	r3, [r7, #4]
 800865a:	4b23      	ldr	r3, [pc, #140]	; (80086e8 <HAL_PWREx_EnableOverDrive+0x98>)
 800865c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800865e:	4a22      	ldr	r2, [pc, #136]	; (80086e8 <HAL_PWREx_EnableOverDrive+0x98>)
 8008660:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008664:	6413      	str	r3, [r2, #64]	; 0x40
 8008666:	4b20      	ldr	r3, [pc, #128]	; (80086e8 <HAL_PWREx_EnableOverDrive+0x98>)
 8008668:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800866a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800866e:	603b      	str	r3, [r7, #0]
 8008670:	683b      	ldr	r3, [r7, #0]
 8008672:	4b1e      	ldr	r3, [pc, #120]	; (80086ec <HAL_PWREx_EnableOverDrive+0x9c>)
 8008674:	681b      	ldr	r3, [r3, #0]
 8008676:	4a1d      	ldr	r2, [pc, #116]	; (80086ec <HAL_PWREx_EnableOverDrive+0x9c>)
 8008678:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800867c:	6013      	str	r3, [r2, #0]
 800867e:	f7ff fc3d 	bl	8007efc <HAL_GetTick>
 8008682:	6078      	str	r0, [r7, #4]
 8008684:	e009      	b.n	800869a <HAL_PWREx_EnableOverDrive+0x4a>
 8008686:	f7ff fc39 	bl	8007efc <HAL_GetTick>
 800868a:	4602      	mov	r2, r0
 800868c:	687b      	ldr	r3, [r7, #4]
 800868e:	1ad3      	subs	r3, r2, r3
 8008690:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8008694:	d901      	bls.n	800869a <HAL_PWREx_EnableOverDrive+0x4a>
 8008696:	2303      	movs	r3, #3
 8008698:	e022      	b.n	80086e0 <HAL_PWREx_EnableOverDrive+0x90>
 800869a:	4b14      	ldr	r3, [pc, #80]	; (80086ec <HAL_PWREx_EnableOverDrive+0x9c>)
 800869c:	685b      	ldr	r3, [r3, #4]
 800869e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80086a2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80086a6:	d1ee      	bne.n	8008686 <HAL_PWREx_EnableOverDrive+0x36>
 80086a8:	4b10      	ldr	r3, [pc, #64]	; (80086ec <HAL_PWREx_EnableOverDrive+0x9c>)
 80086aa:	681b      	ldr	r3, [r3, #0]
 80086ac:	4a0f      	ldr	r2, [pc, #60]	; (80086ec <HAL_PWREx_EnableOverDrive+0x9c>)
 80086ae:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80086b2:	6013      	str	r3, [r2, #0]
 80086b4:	f7ff fc22 	bl	8007efc <HAL_GetTick>
 80086b8:	6078      	str	r0, [r7, #4]
 80086ba:	e009      	b.n	80086d0 <HAL_PWREx_EnableOverDrive+0x80>
 80086bc:	f7ff fc1e 	bl	8007efc <HAL_GetTick>
 80086c0:	4602      	mov	r2, r0
 80086c2:	687b      	ldr	r3, [r7, #4]
 80086c4:	1ad3      	subs	r3, r2, r3
 80086c6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80086ca:	d901      	bls.n	80086d0 <HAL_PWREx_EnableOverDrive+0x80>
 80086cc:	2303      	movs	r3, #3
 80086ce:	e007      	b.n	80086e0 <HAL_PWREx_EnableOverDrive+0x90>
 80086d0:	4b06      	ldr	r3, [pc, #24]	; (80086ec <HAL_PWREx_EnableOverDrive+0x9c>)
 80086d2:	685b      	ldr	r3, [r3, #4]
 80086d4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80086d8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80086dc:	d1ee      	bne.n	80086bc <HAL_PWREx_EnableOverDrive+0x6c>
 80086de:	2300      	movs	r3, #0
 80086e0:	4618      	mov	r0, r3
 80086e2:	3708      	adds	r7, #8
 80086e4:	46bd      	mov	sp, r7
 80086e6:	bd80      	pop	{r7, pc}
 80086e8:	40023800 	.word	0x40023800
 80086ec:	40007000 	.word	0x40007000

080086f0 <HAL_RCC_OscConfig>:
 80086f0:	b580      	push	{r7, lr}
 80086f2:	b086      	sub	sp, #24
 80086f4:	af00      	add	r7, sp, #0
 80086f6:	6078      	str	r0, [r7, #4]
 80086f8:	2300      	movs	r3, #0
 80086fa:	75fb      	strb	r3, [r7, #23]
 80086fc:	687b      	ldr	r3, [r7, #4]
 80086fe:	2b00      	cmp	r3, #0
 8008700:	d101      	bne.n	8008706 <HAL_RCC_OscConfig+0x16>
 8008702:	2301      	movs	r3, #1
 8008704:	e29b      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 8008706:	687b      	ldr	r3, [r7, #4]
 8008708:	681b      	ldr	r3, [r3, #0]
 800870a:	f003 0301 	and.w	r3, r3, #1
 800870e:	2b00      	cmp	r3, #0
 8008710:	f000 8087 	beq.w	8008822 <HAL_RCC_OscConfig+0x132>
 8008714:	4b96      	ldr	r3, [pc, #600]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008716:	689b      	ldr	r3, [r3, #8]
 8008718:	f003 030c 	and.w	r3, r3, #12
 800871c:	2b04      	cmp	r3, #4
 800871e:	d00c      	beq.n	800873a <HAL_RCC_OscConfig+0x4a>
 8008720:	4b93      	ldr	r3, [pc, #588]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008722:	689b      	ldr	r3, [r3, #8]
 8008724:	f003 030c 	and.w	r3, r3, #12
 8008728:	2b08      	cmp	r3, #8
 800872a:	d112      	bne.n	8008752 <HAL_RCC_OscConfig+0x62>
 800872c:	4b90      	ldr	r3, [pc, #576]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 800872e:	685b      	ldr	r3, [r3, #4]
 8008730:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008734:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008738:	d10b      	bne.n	8008752 <HAL_RCC_OscConfig+0x62>
 800873a:	4b8d      	ldr	r3, [pc, #564]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 800873c:	681b      	ldr	r3, [r3, #0]
 800873e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008742:	2b00      	cmp	r3, #0
 8008744:	d06c      	beq.n	8008820 <HAL_RCC_OscConfig+0x130>
 8008746:	687b      	ldr	r3, [r7, #4]
 8008748:	685b      	ldr	r3, [r3, #4]
 800874a:	2b00      	cmp	r3, #0
 800874c:	d168      	bne.n	8008820 <HAL_RCC_OscConfig+0x130>
 800874e:	2301      	movs	r3, #1
 8008750:	e275      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 8008752:	687b      	ldr	r3, [r7, #4]
 8008754:	685b      	ldr	r3, [r3, #4]
 8008756:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800875a:	d106      	bne.n	800876a <HAL_RCC_OscConfig+0x7a>
 800875c:	4b84      	ldr	r3, [pc, #528]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 800875e:	681b      	ldr	r3, [r3, #0]
 8008760:	4a83      	ldr	r2, [pc, #524]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008762:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008766:	6013      	str	r3, [r2, #0]
 8008768:	e02e      	b.n	80087c8 <HAL_RCC_OscConfig+0xd8>
 800876a:	687b      	ldr	r3, [r7, #4]
 800876c:	685b      	ldr	r3, [r3, #4]
 800876e:	2b00      	cmp	r3, #0
 8008770:	d10c      	bne.n	800878c <HAL_RCC_OscConfig+0x9c>
 8008772:	4b7f      	ldr	r3, [pc, #508]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008774:	681b      	ldr	r3, [r3, #0]
 8008776:	4a7e      	ldr	r2, [pc, #504]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008778:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800877c:	6013      	str	r3, [r2, #0]
 800877e:	4b7c      	ldr	r3, [pc, #496]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008780:	681b      	ldr	r3, [r3, #0]
 8008782:	4a7b      	ldr	r2, [pc, #492]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008784:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008788:	6013      	str	r3, [r2, #0]
 800878a:	e01d      	b.n	80087c8 <HAL_RCC_OscConfig+0xd8>
 800878c:	687b      	ldr	r3, [r7, #4]
 800878e:	685b      	ldr	r3, [r3, #4]
 8008790:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8008794:	d10c      	bne.n	80087b0 <HAL_RCC_OscConfig+0xc0>
 8008796:	4b76      	ldr	r3, [pc, #472]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008798:	681b      	ldr	r3, [r3, #0]
 800879a:	4a75      	ldr	r2, [pc, #468]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 800879c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80087a0:	6013      	str	r3, [r2, #0]
 80087a2:	4b73      	ldr	r3, [pc, #460]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80087a4:	681b      	ldr	r3, [r3, #0]
 80087a6:	4a72      	ldr	r2, [pc, #456]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80087a8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80087ac:	6013      	str	r3, [r2, #0]
 80087ae:	e00b      	b.n	80087c8 <HAL_RCC_OscConfig+0xd8>
 80087b0:	4b6f      	ldr	r3, [pc, #444]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80087b2:	681b      	ldr	r3, [r3, #0]
 80087b4:	4a6e      	ldr	r2, [pc, #440]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80087b6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80087ba:	6013      	str	r3, [r2, #0]
 80087bc:	4b6c      	ldr	r3, [pc, #432]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80087be:	681b      	ldr	r3, [r3, #0]
 80087c0:	4a6b      	ldr	r2, [pc, #428]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80087c2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80087c6:	6013      	str	r3, [r2, #0]
 80087c8:	687b      	ldr	r3, [r7, #4]
 80087ca:	685b      	ldr	r3, [r3, #4]
 80087cc:	2b00      	cmp	r3, #0
 80087ce:	d013      	beq.n	80087f8 <HAL_RCC_OscConfig+0x108>
 80087d0:	f7ff fb94 	bl	8007efc <HAL_GetTick>
 80087d4:	6138      	str	r0, [r7, #16]
 80087d6:	e008      	b.n	80087ea <HAL_RCC_OscConfig+0xfa>
 80087d8:	f7ff fb90 	bl	8007efc <HAL_GetTick>
 80087dc:	4602      	mov	r2, r0
 80087de:	693b      	ldr	r3, [r7, #16]
 80087e0:	1ad3      	subs	r3, r2, r3
 80087e2:	2b64      	cmp	r3, #100	; 0x64
 80087e4:	d901      	bls.n	80087ea <HAL_RCC_OscConfig+0xfa>
 80087e6:	2303      	movs	r3, #3
 80087e8:	e229      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 80087ea:	4b61      	ldr	r3, [pc, #388]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80087ec:	681b      	ldr	r3, [r3, #0]
 80087ee:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80087f2:	2b00      	cmp	r3, #0
 80087f4:	d0f0      	beq.n	80087d8 <HAL_RCC_OscConfig+0xe8>
 80087f6:	e014      	b.n	8008822 <HAL_RCC_OscConfig+0x132>
 80087f8:	f7ff fb80 	bl	8007efc <HAL_GetTick>
 80087fc:	6138      	str	r0, [r7, #16]
 80087fe:	e008      	b.n	8008812 <HAL_RCC_OscConfig+0x122>
 8008800:	f7ff fb7c 	bl	8007efc <HAL_GetTick>
 8008804:	4602      	mov	r2, r0
 8008806:	693b      	ldr	r3, [r7, #16]
 8008808:	1ad3      	subs	r3, r2, r3
 800880a:	2b64      	cmp	r3, #100	; 0x64
 800880c:	d901      	bls.n	8008812 <HAL_RCC_OscConfig+0x122>
 800880e:	2303      	movs	r3, #3
 8008810:	e215      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 8008812:	4b57      	ldr	r3, [pc, #348]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008814:	681b      	ldr	r3, [r3, #0]
 8008816:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800881a:	2b00      	cmp	r3, #0
 800881c:	d1f0      	bne.n	8008800 <HAL_RCC_OscConfig+0x110>
 800881e:	e000      	b.n	8008822 <HAL_RCC_OscConfig+0x132>
 8008820:	bf00      	nop
 8008822:	687b      	ldr	r3, [r7, #4]
 8008824:	681b      	ldr	r3, [r3, #0]
 8008826:	f003 0302 	and.w	r3, r3, #2
 800882a:	2b00      	cmp	r3, #0
 800882c:	d069      	beq.n	8008902 <HAL_RCC_OscConfig+0x212>
 800882e:	4b50      	ldr	r3, [pc, #320]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008830:	689b      	ldr	r3, [r3, #8]
 8008832:	f003 030c 	and.w	r3, r3, #12
 8008836:	2b00      	cmp	r3, #0
 8008838:	d00b      	beq.n	8008852 <HAL_RCC_OscConfig+0x162>
 800883a:	4b4d      	ldr	r3, [pc, #308]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 800883c:	689b      	ldr	r3, [r3, #8]
 800883e:	f003 030c 	and.w	r3, r3, #12
 8008842:	2b08      	cmp	r3, #8
 8008844:	d11c      	bne.n	8008880 <HAL_RCC_OscConfig+0x190>
 8008846:	4b4a      	ldr	r3, [pc, #296]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008848:	685b      	ldr	r3, [r3, #4]
 800884a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800884e:	2b00      	cmp	r3, #0
 8008850:	d116      	bne.n	8008880 <HAL_RCC_OscConfig+0x190>
 8008852:	4b47      	ldr	r3, [pc, #284]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008854:	681b      	ldr	r3, [r3, #0]
 8008856:	f003 0302 	and.w	r3, r3, #2
 800885a:	2b00      	cmp	r3, #0
 800885c:	d005      	beq.n	800886a <HAL_RCC_OscConfig+0x17a>
 800885e:	687b      	ldr	r3, [r7, #4]
 8008860:	68db      	ldr	r3, [r3, #12]
 8008862:	2b01      	cmp	r3, #1
 8008864:	d001      	beq.n	800886a <HAL_RCC_OscConfig+0x17a>
 8008866:	2301      	movs	r3, #1
 8008868:	e1e9      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 800886a:	4b41      	ldr	r3, [pc, #260]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 800886c:	681b      	ldr	r3, [r3, #0]
 800886e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8008872:	687b      	ldr	r3, [r7, #4]
 8008874:	691b      	ldr	r3, [r3, #16]
 8008876:	00db      	lsls	r3, r3, #3
 8008878:	493d      	ldr	r1, [pc, #244]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 800887a:	4313      	orrs	r3, r2
 800887c:	600b      	str	r3, [r1, #0]
 800887e:	e040      	b.n	8008902 <HAL_RCC_OscConfig+0x212>
 8008880:	687b      	ldr	r3, [r7, #4]
 8008882:	68db      	ldr	r3, [r3, #12]
 8008884:	2b00      	cmp	r3, #0
 8008886:	d023      	beq.n	80088d0 <HAL_RCC_OscConfig+0x1e0>
 8008888:	4b39      	ldr	r3, [pc, #228]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 800888a:	681b      	ldr	r3, [r3, #0]
 800888c:	4a38      	ldr	r2, [pc, #224]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 800888e:	f043 0301 	orr.w	r3, r3, #1
 8008892:	6013      	str	r3, [r2, #0]
 8008894:	f7ff fb32 	bl	8007efc <HAL_GetTick>
 8008898:	6138      	str	r0, [r7, #16]
 800889a:	e008      	b.n	80088ae <HAL_RCC_OscConfig+0x1be>
 800889c:	f7ff fb2e 	bl	8007efc <HAL_GetTick>
 80088a0:	4602      	mov	r2, r0
 80088a2:	693b      	ldr	r3, [r7, #16]
 80088a4:	1ad3      	subs	r3, r2, r3
 80088a6:	2b02      	cmp	r3, #2
 80088a8:	d901      	bls.n	80088ae <HAL_RCC_OscConfig+0x1be>
 80088aa:	2303      	movs	r3, #3
 80088ac:	e1c7      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 80088ae:	4b30      	ldr	r3, [pc, #192]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80088b0:	681b      	ldr	r3, [r3, #0]
 80088b2:	f003 0302 	and.w	r3, r3, #2
 80088b6:	2b00      	cmp	r3, #0
 80088b8:	d0f0      	beq.n	800889c <HAL_RCC_OscConfig+0x1ac>
 80088ba:	4b2d      	ldr	r3, [pc, #180]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80088bc:	681b      	ldr	r3, [r3, #0]
 80088be:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80088c2:	687b      	ldr	r3, [r7, #4]
 80088c4:	691b      	ldr	r3, [r3, #16]
 80088c6:	00db      	lsls	r3, r3, #3
 80088c8:	4929      	ldr	r1, [pc, #164]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80088ca:	4313      	orrs	r3, r2
 80088cc:	600b      	str	r3, [r1, #0]
 80088ce:	e018      	b.n	8008902 <HAL_RCC_OscConfig+0x212>
 80088d0:	4b27      	ldr	r3, [pc, #156]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80088d2:	681b      	ldr	r3, [r3, #0]
 80088d4:	4a26      	ldr	r2, [pc, #152]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80088d6:	f023 0301 	bic.w	r3, r3, #1
 80088da:	6013      	str	r3, [r2, #0]
 80088dc:	f7ff fb0e 	bl	8007efc <HAL_GetTick>
 80088e0:	6138      	str	r0, [r7, #16]
 80088e2:	e008      	b.n	80088f6 <HAL_RCC_OscConfig+0x206>
 80088e4:	f7ff fb0a 	bl	8007efc <HAL_GetTick>
 80088e8:	4602      	mov	r2, r0
 80088ea:	693b      	ldr	r3, [r7, #16]
 80088ec:	1ad3      	subs	r3, r2, r3
 80088ee:	2b02      	cmp	r3, #2
 80088f0:	d901      	bls.n	80088f6 <HAL_RCC_OscConfig+0x206>
 80088f2:	2303      	movs	r3, #3
 80088f4:	e1a3      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 80088f6:	4b1e      	ldr	r3, [pc, #120]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 80088f8:	681b      	ldr	r3, [r3, #0]
 80088fa:	f003 0302 	and.w	r3, r3, #2
 80088fe:	2b00      	cmp	r3, #0
 8008900:	d1f0      	bne.n	80088e4 <HAL_RCC_OscConfig+0x1f4>
 8008902:	687b      	ldr	r3, [r7, #4]
 8008904:	681b      	ldr	r3, [r3, #0]
 8008906:	f003 0308 	and.w	r3, r3, #8
 800890a:	2b00      	cmp	r3, #0
 800890c:	d038      	beq.n	8008980 <HAL_RCC_OscConfig+0x290>
 800890e:	687b      	ldr	r3, [r7, #4]
 8008910:	695b      	ldr	r3, [r3, #20]
 8008912:	2b00      	cmp	r3, #0
 8008914:	d019      	beq.n	800894a <HAL_RCC_OscConfig+0x25a>
 8008916:	4b16      	ldr	r3, [pc, #88]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008918:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800891a:	4a15      	ldr	r2, [pc, #84]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 800891c:	f043 0301 	orr.w	r3, r3, #1
 8008920:	6753      	str	r3, [r2, #116]	; 0x74
 8008922:	f7ff faeb 	bl	8007efc <HAL_GetTick>
 8008926:	6138      	str	r0, [r7, #16]
 8008928:	e008      	b.n	800893c <HAL_RCC_OscConfig+0x24c>
 800892a:	f7ff fae7 	bl	8007efc <HAL_GetTick>
 800892e:	4602      	mov	r2, r0
 8008930:	693b      	ldr	r3, [r7, #16]
 8008932:	1ad3      	subs	r3, r2, r3
 8008934:	2b02      	cmp	r3, #2
 8008936:	d901      	bls.n	800893c <HAL_RCC_OscConfig+0x24c>
 8008938:	2303      	movs	r3, #3
 800893a:	e180      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 800893c:	4b0c      	ldr	r3, [pc, #48]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 800893e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008940:	f003 0302 	and.w	r3, r3, #2
 8008944:	2b00      	cmp	r3, #0
 8008946:	d0f0      	beq.n	800892a <HAL_RCC_OscConfig+0x23a>
 8008948:	e01a      	b.n	8008980 <HAL_RCC_OscConfig+0x290>
 800894a:	4b09      	ldr	r3, [pc, #36]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 800894c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800894e:	4a08      	ldr	r2, [pc, #32]	; (8008970 <HAL_RCC_OscConfig+0x280>)
 8008950:	f023 0301 	bic.w	r3, r3, #1
 8008954:	6753      	str	r3, [r2, #116]	; 0x74
 8008956:	f7ff fad1 	bl	8007efc <HAL_GetTick>
 800895a:	6138      	str	r0, [r7, #16]
 800895c:	e00a      	b.n	8008974 <HAL_RCC_OscConfig+0x284>
 800895e:	f7ff facd 	bl	8007efc <HAL_GetTick>
 8008962:	4602      	mov	r2, r0
 8008964:	693b      	ldr	r3, [r7, #16]
 8008966:	1ad3      	subs	r3, r2, r3
 8008968:	2b02      	cmp	r3, #2
 800896a:	d903      	bls.n	8008974 <HAL_RCC_OscConfig+0x284>
 800896c:	2303      	movs	r3, #3
 800896e:	e166      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 8008970:	40023800 	.word	0x40023800
 8008974:	4b92      	ldr	r3, [pc, #584]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008976:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008978:	f003 0302 	and.w	r3, r3, #2
 800897c:	2b00      	cmp	r3, #0
 800897e:	d1ee      	bne.n	800895e <HAL_RCC_OscConfig+0x26e>
 8008980:	687b      	ldr	r3, [r7, #4]
 8008982:	681b      	ldr	r3, [r3, #0]
 8008984:	f003 0304 	and.w	r3, r3, #4
 8008988:	2b00      	cmp	r3, #0
 800898a:	f000 80a4 	beq.w	8008ad6 <HAL_RCC_OscConfig+0x3e6>
 800898e:	4b8c      	ldr	r3, [pc, #560]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008990:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008992:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008996:	2b00      	cmp	r3, #0
 8008998:	d10d      	bne.n	80089b6 <HAL_RCC_OscConfig+0x2c6>
 800899a:	4b89      	ldr	r3, [pc, #548]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 800899c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800899e:	4a88      	ldr	r2, [pc, #544]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 80089a0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80089a4:	6413      	str	r3, [r2, #64]	; 0x40
 80089a6:	4b86      	ldr	r3, [pc, #536]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 80089a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80089aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80089ae:	60bb      	str	r3, [r7, #8]
 80089b0:	68bb      	ldr	r3, [r7, #8]
 80089b2:	2301      	movs	r3, #1
 80089b4:	75fb      	strb	r3, [r7, #23]
 80089b6:	4b83      	ldr	r3, [pc, #524]	; (8008bc4 <HAL_RCC_OscConfig+0x4d4>)
 80089b8:	681b      	ldr	r3, [r3, #0]
 80089ba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80089be:	2b00      	cmp	r3, #0
 80089c0:	d118      	bne.n	80089f4 <HAL_RCC_OscConfig+0x304>
 80089c2:	4b80      	ldr	r3, [pc, #512]	; (8008bc4 <HAL_RCC_OscConfig+0x4d4>)
 80089c4:	681b      	ldr	r3, [r3, #0]
 80089c6:	4a7f      	ldr	r2, [pc, #508]	; (8008bc4 <HAL_RCC_OscConfig+0x4d4>)
 80089c8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80089cc:	6013      	str	r3, [r2, #0]
 80089ce:	f7ff fa95 	bl	8007efc <HAL_GetTick>
 80089d2:	6138      	str	r0, [r7, #16]
 80089d4:	e008      	b.n	80089e8 <HAL_RCC_OscConfig+0x2f8>
 80089d6:	f7ff fa91 	bl	8007efc <HAL_GetTick>
 80089da:	4602      	mov	r2, r0
 80089dc:	693b      	ldr	r3, [r7, #16]
 80089de:	1ad3      	subs	r3, r2, r3
 80089e0:	2b64      	cmp	r3, #100	; 0x64
 80089e2:	d901      	bls.n	80089e8 <HAL_RCC_OscConfig+0x2f8>
 80089e4:	2303      	movs	r3, #3
 80089e6:	e12a      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 80089e8:	4b76      	ldr	r3, [pc, #472]	; (8008bc4 <HAL_RCC_OscConfig+0x4d4>)
 80089ea:	681b      	ldr	r3, [r3, #0]
 80089ec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80089f0:	2b00      	cmp	r3, #0
 80089f2:	d0f0      	beq.n	80089d6 <HAL_RCC_OscConfig+0x2e6>
 80089f4:	687b      	ldr	r3, [r7, #4]
 80089f6:	689b      	ldr	r3, [r3, #8]
 80089f8:	2b01      	cmp	r3, #1
 80089fa:	d106      	bne.n	8008a0a <HAL_RCC_OscConfig+0x31a>
 80089fc:	4b70      	ldr	r3, [pc, #448]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 80089fe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008a00:	4a6f      	ldr	r2, [pc, #444]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a02:	f043 0301 	orr.w	r3, r3, #1
 8008a06:	6713      	str	r3, [r2, #112]	; 0x70
 8008a08:	e02d      	b.n	8008a66 <HAL_RCC_OscConfig+0x376>
 8008a0a:	687b      	ldr	r3, [r7, #4]
 8008a0c:	689b      	ldr	r3, [r3, #8]
 8008a0e:	2b00      	cmp	r3, #0
 8008a10:	d10c      	bne.n	8008a2c <HAL_RCC_OscConfig+0x33c>
 8008a12:	4b6b      	ldr	r3, [pc, #428]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a14:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008a16:	4a6a      	ldr	r2, [pc, #424]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a18:	f023 0301 	bic.w	r3, r3, #1
 8008a1c:	6713      	str	r3, [r2, #112]	; 0x70
 8008a1e:	4b68      	ldr	r3, [pc, #416]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a20:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008a22:	4a67      	ldr	r2, [pc, #412]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a24:	f023 0304 	bic.w	r3, r3, #4
 8008a28:	6713      	str	r3, [r2, #112]	; 0x70
 8008a2a:	e01c      	b.n	8008a66 <HAL_RCC_OscConfig+0x376>
 8008a2c:	687b      	ldr	r3, [r7, #4]
 8008a2e:	689b      	ldr	r3, [r3, #8]
 8008a30:	2b05      	cmp	r3, #5
 8008a32:	d10c      	bne.n	8008a4e <HAL_RCC_OscConfig+0x35e>
 8008a34:	4b62      	ldr	r3, [pc, #392]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a36:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008a38:	4a61      	ldr	r2, [pc, #388]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a3a:	f043 0304 	orr.w	r3, r3, #4
 8008a3e:	6713      	str	r3, [r2, #112]	; 0x70
 8008a40:	4b5f      	ldr	r3, [pc, #380]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a42:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008a44:	4a5e      	ldr	r2, [pc, #376]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a46:	f043 0301 	orr.w	r3, r3, #1
 8008a4a:	6713      	str	r3, [r2, #112]	; 0x70
 8008a4c:	e00b      	b.n	8008a66 <HAL_RCC_OscConfig+0x376>
 8008a4e:	4b5c      	ldr	r3, [pc, #368]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a50:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008a52:	4a5b      	ldr	r2, [pc, #364]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a54:	f023 0301 	bic.w	r3, r3, #1
 8008a58:	6713      	str	r3, [r2, #112]	; 0x70
 8008a5a:	4b59      	ldr	r3, [pc, #356]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a5c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008a5e:	4a58      	ldr	r2, [pc, #352]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a60:	f023 0304 	bic.w	r3, r3, #4
 8008a64:	6713      	str	r3, [r2, #112]	; 0x70
 8008a66:	687b      	ldr	r3, [r7, #4]
 8008a68:	689b      	ldr	r3, [r3, #8]
 8008a6a:	2b00      	cmp	r3, #0
 8008a6c:	d015      	beq.n	8008a9a <HAL_RCC_OscConfig+0x3aa>
 8008a6e:	f7ff fa45 	bl	8007efc <HAL_GetTick>
 8008a72:	6138      	str	r0, [r7, #16]
 8008a74:	e00a      	b.n	8008a8c <HAL_RCC_OscConfig+0x39c>
 8008a76:	f7ff fa41 	bl	8007efc <HAL_GetTick>
 8008a7a:	4602      	mov	r2, r0
 8008a7c:	693b      	ldr	r3, [r7, #16]
 8008a7e:	1ad3      	subs	r3, r2, r3
 8008a80:	f241 3288 	movw	r2, #5000	; 0x1388
 8008a84:	4293      	cmp	r3, r2
 8008a86:	d901      	bls.n	8008a8c <HAL_RCC_OscConfig+0x39c>
 8008a88:	2303      	movs	r3, #3
 8008a8a:	e0d8      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 8008a8c:	4b4c      	ldr	r3, [pc, #304]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008a8e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008a90:	f003 0302 	and.w	r3, r3, #2
 8008a94:	2b00      	cmp	r3, #0
 8008a96:	d0ee      	beq.n	8008a76 <HAL_RCC_OscConfig+0x386>
 8008a98:	e014      	b.n	8008ac4 <HAL_RCC_OscConfig+0x3d4>
 8008a9a:	f7ff fa2f 	bl	8007efc <HAL_GetTick>
 8008a9e:	6138      	str	r0, [r7, #16]
 8008aa0:	e00a      	b.n	8008ab8 <HAL_RCC_OscConfig+0x3c8>
 8008aa2:	f7ff fa2b 	bl	8007efc <HAL_GetTick>
 8008aa6:	4602      	mov	r2, r0
 8008aa8:	693b      	ldr	r3, [r7, #16]
 8008aaa:	1ad3      	subs	r3, r2, r3
 8008aac:	f241 3288 	movw	r2, #5000	; 0x1388
 8008ab0:	4293      	cmp	r3, r2
 8008ab2:	d901      	bls.n	8008ab8 <HAL_RCC_OscConfig+0x3c8>
 8008ab4:	2303      	movs	r3, #3
 8008ab6:	e0c2      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 8008ab8:	4b41      	ldr	r3, [pc, #260]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008aba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008abc:	f003 0302 	and.w	r3, r3, #2
 8008ac0:	2b00      	cmp	r3, #0
 8008ac2:	d1ee      	bne.n	8008aa2 <HAL_RCC_OscConfig+0x3b2>
 8008ac4:	7dfb      	ldrb	r3, [r7, #23]
 8008ac6:	2b01      	cmp	r3, #1
 8008ac8:	d105      	bne.n	8008ad6 <HAL_RCC_OscConfig+0x3e6>
 8008aca:	4b3d      	ldr	r3, [pc, #244]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008acc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008ace:	4a3c      	ldr	r2, [pc, #240]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008ad0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008ad4:	6413      	str	r3, [r2, #64]	; 0x40
 8008ad6:	687b      	ldr	r3, [r7, #4]
 8008ad8:	699b      	ldr	r3, [r3, #24]
 8008ada:	2b00      	cmp	r3, #0
 8008adc:	f000 80ae 	beq.w	8008c3c <HAL_RCC_OscConfig+0x54c>
 8008ae0:	4b37      	ldr	r3, [pc, #220]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008ae2:	689b      	ldr	r3, [r3, #8]
 8008ae4:	f003 030c 	and.w	r3, r3, #12
 8008ae8:	2b08      	cmp	r3, #8
 8008aea:	d06d      	beq.n	8008bc8 <HAL_RCC_OscConfig+0x4d8>
 8008aec:	687b      	ldr	r3, [r7, #4]
 8008aee:	699b      	ldr	r3, [r3, #24]
 8008af0:	2b02      	cmp	r3, #2
 8008af2:	d14b      	bne.n	8008b8c <HAL_RCC_OscConfig+0x49c>
 8008af4:	4b32      	ldr	r3, [pc, #200]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008af6:	681b      	ldr	r3, [r3, #0]
 8008af8:	4a31      	ldr	r2, [pc, #196]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008afa:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8008afe:	6013      	str	r3, [r2, #0]
 8008b00:	f7ff f9fc 	bl	8007efc <HAL_GetTick>
 8008b04:	6138      	str	r0, [r7, #16]
 8008b06:	e008      	b.n	8008b1a <HAL_RCC_OscConfig+0x42a>
 8008b08:	f7ff f9f8 	bl	8007efc <HAL_GetTick>
 8008b0c:	4602      	mov	r2, r0
 8008b0e:	693b      	ldr	r3, [r7, #16]
 8008b10:	1ad3      	subs	r3, r2, r3
 8008b12:	2b02      	cmp	r3, #2
 8008b14:	d901      	bls.n	8008b1a <HAL_RCC_OscConfig+0x42a>
 8008b16:	2303      	movs	r3, #3
 8008b18:	e091      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 8008b1a:	4b29      	ldr	r3, [pc, #164]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008b1c:	681b      	ldr	r3, [r3, #0]
 8008b1e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008b22:	2b00      	cmp	r3, #0
 8008b24:	d1f0      	bne.n	8008b08 <HAL_RCC_OscConfig+0x418>
 8008b26:	687b      	ldr	r3, [r7, #4]
 8008b28:	69da      	ldr	r2, [r3, #28]
 8008b2a:	687b      	ldr	r3, [r7, #4]
 8008b2c:	6a1b      	ldr	r3, [r3, #32]
 8008b2e:	431a      	orrs	r2, r3
 8008b30:	687b      	ldr	r3, [r7, #4]
 8008b32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008b34:	019b      	lsls	r3, r3, #6
 8008b36:	431a      	orrs	r2, r3
 8008b38:	687b      	ldr	r3, [r7, #4]
 8008b3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008b3c:	085b      	lsrs	r3, r3, #1
 8008b3e:	3b01      	subs	r3, #1
 8008b40:	041b      	lsls	r3, r3, #16
 8008b42:	431a      	orrs	r2, r3
 8008b44:	687b      	ldr	r3, [r7, #4]
 8008b46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008b48:	061b      	lsls	r3, r3, #24
 8008b4a:	431a      	orrs	r2, r3
 8008b4c:	687b      	ldr	r3, [r7, #4]
 8008b4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008b50:	071b      	lsls	r3, r3, #28
 8008b52:	491b      	ldr	r1, [pc, #108]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008b54:	4313      	orrs	r3, r2
 8008b56:	604b      	str	r3, [r1, #4]
 8008b58:	4b19      	ldr	r3, [pc, #100]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008b5a:	681b      	ldr	r3, [r3, #0]
 8008b5c:	4a18      	ldr	r2, [pc, #96]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008b5e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8008b62:	6013      	str	r3, [r2, #0]
 8008b64:	f7ff f9ca 	bl	8007efc <HAL_GetTick>
 8008b68:	6138      	str	r0, [r7, #16]
 8008b6a:	e008      	b.n	8008b7e <HAL_RCC_OscConfig+0x48e>
 8008b6c:	f7ff f9c6 	bl	8007efc <HAL_GetTick>
 8008b70:	4602      	mov	r2, r0
 8008b72:	693b      	ldr	r3, [r7, #16]
 8008b74:	1ad3      	subs	r3, r2, r3
 8008b76:	2b02      	cmp	r3, #2
 8008b78:	d901      	bls.n	8008b7e <HAL_RCC_OscConfig+0x48e>
 8008b7a:	2303      	movs	r3, #3
 8008b7c:	e05f      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 8008b7e:	4b10      	ldr	r3, [pc, #64]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008b80:	681b      	ldr	r3, [r3, #0]
 8008b82:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008b86:	2b00      	cmp	r3, #0
 8008b88:	d0f0      	beq.n	8008b6c <HAL_RCC_OscConfig+0x47c>
 8008b8a:	e057      	b.n	8008c3c <HAL_RCC_OscConfig+0x54c>
 8008b8c:	4b0c      	ldr	r3, [pc, #48]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008b8e:	681b      	ldr	r3, [r3, #0]
 8008b90:	4a0b      	ldr	r2, [pc, #44]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008b92:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8008b96:	6013      	str	r3, [r2, #0]
 8008b98:	f7ff f9b0 	bl	8007efc <HAL_GetTick>
 8008b9c:	6138      	str	r0, [r7, #16]
 8008b9e:	e008      	b.n	8008bb2 <HAL_RCC_OscConfig+0x4c2>
 8008ba0:	f7ff f9ac 	bl	8007efc <HAL_GetTick>
 8008ba4:	4602      	mov	r2, r0
 8008ba6:	693b      	ldr	r3, [r7, #16]
 8008ba8:	1ad3      	subs	r3, r2, r3
 8008baa:	2b02      	cmp	r3, #2
 8008bac:	d901      	bls.n	8008bb2 <HAL_RCC_OscConfig+0x4c2>
 8008bae:	2303      	movs	r3, #3
 8008bb0:	e045      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 8008bb2:	4b03      	ldr	r3, [pc, #12]	; (8008bc0 <HAL_RCC_OscConfig+0x4d0>)
 8008bb4:	681b      	ldr	r3, [r3, #0]
 8008bb6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008bba:	2b00      	cmp	r3, #0
 8008bbc:	d1f0      	bne.n	8008ba0 <HAL_RCC_OscConfig+0x4b0>
 8008bbe:	e03d      	b.n	8008c3c <HAL_RCC_OscConfig+0x54c>
 8008bc0:	40023800 	.word	0x40023800
 8008bc4:	40007000 	.word	0x40007000
 8008bc8:	4b1f      	ldr	r3, [pc, #124]	; (8008c48 <HAL_RCC_OscConfig+0x558>)
 8008bca:	685b      	ldr	r3, [r3, #4]
 8008bcc:	60fb      	str	r3, [r7, #12]
 8008bce:	687b      	ldr	r3, [r7, #4]
 8008bd0:	699b      	ldr	r3, [r3, #24]
 8008bd2:	2b01      	cmp	r3, #1
 8008bd4:	d030      	beq.n	8008c38 <HAL_RCC_OscConfig+0x548>
 8008bd6:	68fb      	ldr	r3, [r7, #12]
 8008bd8:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8008bdc:	687b      	ldr	r3, [r7, #4]
 8008bde:	69db      	ldr	r3, [r3, #28]
 8008be0:	429a      	cmp	r2, r3
 8008be2:	d129      	bne.n	8008c38 <HAL_RCC_OscConfig+0x548>
 8008be4:	68fb      	ldr	r3, [r7, #12]
 8008be6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8008bea:	687b      	ldr	r3, [r7, #4]
 8008bec:	6a1b      	ldr	r3, [r3, #32]
 8008bee:	429a      	cmp	r2, r3
 8008bf0:	d122      	bne.n	8008c38 <HAL_RCC_OscConfig+0x548>
 8008bf2:	68fa      	ldr	r2, [r7, #12]
 8008bf4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8008bf8:	4013      	ands	r3, r2
 8008bfa:	687a      	ldr	r2, [r7, #4]
 8008bfc:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8008bfe:	0192      	lsls	r2, r2, #6
 8008c00:	4293      	cmp	r3, r2
 8008c02:	d119      	bne.n	8008c38 <HAL_RCC_OscConfig+0x548>
 8008c04:	68fb      	ldr	r3, [r7, #12]
 8008c06:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8008c0a:	687b      	ldr	r3, [r7, #4]
 8008c0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008c0e:	085b      	lsrs	r3, r3, #1
 8008c10:	3b01      	subs	r3, #1
 8008c12:	041b      	lsls	r3, r3, #16
 8008c14:	429a      	cmp	r2, r3
 8008c16:	d10f      	bne.n	8008c38 <HAL_RCC_OscConfig+0x548>
 8008c18:	68fb      	ldr	r3, [r7, #12]
 8008c1a:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8008c1e:	687b      	ldr	r3, [r7, #4]
 8008c20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c22:	061b      	lsls	r3, r3, #24
 8008c24:	429a      	cmp	r2, r3
 8008c26:	d107      	bne.n	8008c38 <HAL_RCC_OscConfig+0x548>
 8008c28:	68fb      	ldr	r3, [r7, #12]
 8008c2a:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8008c2e:	687b      	ldr	r3, [r7, #4]
 8008c30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008c32:	071b      	lsls	r3, r3, #28
 8008c34:	429a      	cmp	r2, r3
 8008c36:	d001      	beq.n	8008c3c <HAL_RCC_OscConfig+0x54c>
 8008c38:	2301      	movs	r3, #1
 8008c3a:	e000      	b.n	8008c3e <HAL_RCC_OscConfig+0x54e>
 8008c3c:	2300      	movs	r3, #0
 8008c3e:	4618      	mov	r0, r3
 8008c40:	3718      	adds	r7, #24
 8008c42:	46bd      	mov	sp, r7
 8008c44:	bd80      	pop	{r7, pc}
 8008c46:	bf00      	nop
 8008c48:	40023800 	.word	0x40023800

08008c4c <HAL_RCC_ClockConfig>:
 8008c4c:	b580      	push	{r7, lr}
 8008c4e:	b084      	sub	sp, #16
 8008c50:	af00      	add	r7, sp, #0
 8008c52:	6078      	str	r0, [r7, #4]
 8008c54:	6039      	str	r1, [r7, #0]
 8008c56:	2300      	movs	r3, #0
 8008c58:	60fb      	str	r3, [r7, #12]
 8008c5a:	687b      	ldr	r3, [r7, #4]
 8008c5c:	2b00      	cmp	r3, #0
 8008c5e:	d101      	bne.n	8008c64 <HAL_RCC_ClockConfig+0x18>
 8008c60:	2301      	movs	r3, #1
 8008c62:	e0d0      	b.n	8008e06 <HAL_RCC_ClockConfig+0x1ba>
 8008c64:	4b6a      	ldr	r3, [pc, #424]	; (8008e10 <HAL_RCC_ClockConfig+0x1c4>)
 8008c66:	681b      	ldr	r3, [r3, #0]
 8008c68:	f003 030f 	and.w	r3, r3, #15
 8008c6c:	683a      	ldr	r2, [r7, #0]
 8008c6e:	429a      	cmp	r2, r3
 8008c70:	d910      	bls.n	8008c94 <HAL_RCC_ClockConfig+0x48>
 8008c72:	4b67      	ldr	r3, [pc, #412]	; (8008e10 <HAL_RCC_ClockConfig+0x1c4>)
 8008c74:	681b      	ldr	r3, [r3, #0]
 8008c76:	f023 020f 	bic.w	r2, r3, #15
 8008c7a:	4965      	ldr	r1, [pc, #404]	; (8008e10 <HAL_RCC_ClockConfig+0x1c4>)
 8008c7c:	683b      	ldr	r3, [r7, #0]
 8008c7e:	4313      	orrs	r3, r2
 8008c80:	600b      	str	r3, [r1, #0]
 8008c82:	4b63      	ldr	r3, [pc, #396]	; (8008e10 <HAL_RCC_ClockConfig+0x1c4>)
 8008c84:	681b      	ldr	r3, [r3, #0]
 8008c86:	f003 030f 	and.w	r3, r3, #15
 8008c8a:	683a      	ldr	r2, [r7, #0]
 8008c8c:	429a      	cmp	r2, r3
 8008c8e:	d001      	beq.n	8008c94 <HAL_RCC_ClockConfig+0x48>
 8008c90:	2301      	movs	r3, #1
 8008c92:	e0b8      	b.n	8008e06 <HAL_RCC_ClockConfig+0x1ba>
 8008c94:	687b      	ldr	r3, [r7, #4]
 8008c96:	681b      	ldr	r3, [r3, #0]
 8008c98:	f003 0302 	and.w	r3, r3, #2
 8008c9c:	2b00      	cmp	r3, #0
 8008c9e:	d020      	beq.n	8008ce2 <HAL_RCC_ClockConfig+0x96>
 8008ca0:	687b      	ldr	r3, [r7, #4]
 8008ca2:	681b      	ldr	r3, [r3, #0]
 8008ca4:	f003 0304 	and.w	r3, r3, #4
 8008ca8:	2b00      	cmp	r3, #0
 8008caa:	d005      	beq.n	8008cb8 <HAL_RCC_ClockConfig+0x6c>
 8008cac:	4b59      	ldr	r3, [pc, #356]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008cae:	689b      	ldr	r3, [r3, #8]
 8008cb0:	4a58      	ldr	r2, [pc, #352]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008cb2:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8008cb6:	6093      	str	r3, [r2, #8]
 8008cb8:	687b      	ldr	r3, [r7, #4]
 8008cba:	681b      	ldr	r3, [r3, #0]
 8008cbc:	f003 0308 	and.w	r3, r3, #8
 8008cc0:	2b00      	cmp	r3, #0
 8008cc2:	d005      	beq.n	8008cd0 <HAL_RCC_ClockConfig+0x84>
 8008cc4:	4b53      	ldr	r3, [pc, #332]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008cc6:	689b      	ldr	r3, [r3, #8]
 8008cc8:	4a52      	ldr	r2, [pc, #328]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008cca:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8008cce:	6093      	str	r3, [r2, #8]
 8008cd0:	4b50      	ldr	r3, [pc, #320]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008cd2:	689b      	ldr	r3, [r3, #8]
 8008cd4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8008cd8:	687b      	ldr	r3, [r7, #4]
 8008cda:	689b      	ldr	r3, [r3, #8]
 8008cdc:	494d      	ldr	r1, [pc, #308]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008cde:	4313      	orrs	r3, r2
 8008ce0:	608b      	str	r3, [r1, #8]
 8008ce2:	687b      	ldr	r3, [r7, #4]
 8008ce4:	681b      	ldr	r3, [r3, #0]
 8008ce6:	f003 0301 	and.w	r3, r3, #1
 8008cea:	2b00      	cmp	r3, #0
 8008cec:	d040      	beq.n	8008d70 <HAL_RCC_ClockConfig+0x124>
 8008cee:	687b      	ldr	r3, [r7, #4]
 8008cf0:	685b      	ldr	r3, [r3, #4]
 8008cf2:	2b01      	cmp	r3, #1
 8008cf4:	d107      	bne.n	8008d06 <HAL_RCC_ClockConfig+0xba>
 8008cf6:	4b47      	ldr	r3, [pc, #284]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008cf8:	681b      	ldr	r3, [r3, #0]
 8008cfa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008cfe:	2b00      	cmp	r3, #0
 8008d00:	d115      	bne.n	8008d2e <HAL_RCC_ClockConfig+0xe2>
 8008d02:	2301      	movs	r3, #1
 8008d04:	e07f      	b.n	8008e06 <HAL_RCC_ClockConfig+0x1ba>
 8008d06:	687b      	ldr	r3, [r7, #4]
 8008d08:	685b      	ldr	r3, [r3, #4]
 8008d0a:	2b02      	cmp	r3, #2
 8008d0c:	d107      	bne.n	8008d1e <HAL_RCC_ClockConfig+0xd2>
 8008d0e:	4b41      	ldr	r3, [pc, #260]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008d10:	681b      	ldr	r3, [r3, #0]
 8008d12:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008d16:	2b00      	cmp	r3, #0
 8008d18:	d109      	bne.n	8008d2e <HAL_RCC_ClockConfig+0xe2>
 8008d1a:	2301      	movs	r3, #1
 8008d1c:	e073      	b.n	8008e06 <HAL_RCC_ClockConfig+0x1ba>
 8008d1e:	4b3d      	ldr	r3, [pc, #244]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008d20:	681b      	ldr	r3, [r3, #0]
 8008d22:	f003 0302 	and.w	r3, r3, #2
 8008d26:	2b00      	cmp	r3, #0
 8008d28:	d101      	bne.n	8008d2e <HAL_RCC_ClockConfig+0xe2>
 8008d2a:	2301      	movs	r3, #1
 8008d2c:	e06b      	b.n	8008e06 <HAL_RCC_ClockConfig+0x1ba>
 8008d2e:	4b39      	ldr	r3, [pc, #228]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008d30:	689b      	ldr	r3, [r3, #8]
 8008d32:	f023 0203 	bic.w	r2, r3, #3
 8008d36:	687b      	ldr	r3, [r7, #4]
 8008d38:	685b      	ldr	r3, [r3, #4]
 8008d3a:	4936      	ldr	r1, [pc, #216]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008d3c:	4313      	orrs	r3, r2
 8008d3e:	608b      	str	r3, [r1, #8]
 8008d40:	f7ff f8dc 	bl	8007efc <HAL_GetTick>
 8008d44:	60f8      	str	r0, [r7, #12]
 8008d46:	e00a      	b.n	8008d5e <HAL_RCC_ClockConfig+0x112>
 8008d48:	f7ff f8d8 	bl	8007efc <HAL_GetTick>
 8008d4c:	4602      	mov	r2, r0
 8008d4e:	68fb      	ldr	r3, [r7, #12]
 8008d50:	1ad3      	subs	r3, r2, r3
 8008d52:	f241 3288 	movw	r2, #5000	; 0x1388
 8008d56:	4293      	cmp	r3, r2
 8008d58:	d901      	bls.n	8008d5e <HAL_RCC_ClockConfig+0x112>
 8008d5a:	2303      	movs	r3, #3
 8008d5c:	e053      	b.n	8008e06 <HAL_RCC_ClockConfig+0x1ba>
 8008d5e:	4b2d      	ldr	r3, [pc, #180]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008d60:	689b      	ldr	r3, [r3, #8]
 8008d62:	f003 020c 	and.w	r2, r3, #12
 8008d66:	687b      	ldr	r3, [r7, #4]
 8008d68:	685b      	ldr	r3, [r3, #4]
 8008d6a:	009b      	lsls	r3, r3, #2
 8008d6c:	429a      	cmp	r2, r3
 8008d6e:	d1eb      	bne.n	8008d48 <HAL_RCC_ClockConfig+0xfc>
 8008d70:	4b27      	ldr	r3, [pc, #156]	; (8008e10 <HAL_RCC_ClockConfig+0x1c4>)
 8008d72:	681b      	ldr	r3, [r3, #0]
 8008d74:	f003 030f 	and.w	r3, r3, #15
 8008d78:	683a      	ldr	r2, [r7, #0]
 8008d7a:	429a      	cmp	r2, r3
 8008d7c:	d210      	bcs.n	8008da0 <HAL_RCC_ClockConfig+0x154>
 8008d7e:	4b24      	ldr	r3, [pc, #144]	; (8008e10 <HAL_RCC_ClockConfig+0x1c4>)
 8008d80:	681b      	ldr	r3, [r3, #0]
 8008d82:	f023 020f 	bic.w	r2, r3, #15
 8008d86:	4922      	ldr	r1, [pc, #136]	; (8008e10 <HAL_RCC_ClockConfig+0x1c4>)
 8008d88:	683b      	ldr	r3, [r7, #0]
 8008d8a:	4313      	orrs	r3, r2
 8008d8c:	600b      	str	r3, [r1, #0]
 8008d8e:	4b20      	ldr	r3, [pc, #128]	; (8008e10 <HAL_RCC_ClockConfig+0x1c4>)
 8008d90:	681b      	ldr	r3, [r3, #0]
 8008d92:	f003 030f 	and.w	r3, r3, #15
 8008d96:	683a      	ldr	r2, [r7, #0]
 8008d98:	429a      	cmp	r2, r3
 8008d9a:	d001      	beq.n	8008da0 <HAL_RCC_ClockConfig+0x154>
 8008d9c:	2301      	movs	r3, #1
 8008d9e:	e032      	b.n	8008e06 <HAL_RCC_ClockConfig+0x1ba>
 8008da0:	687b      	ldr	r3, [r7, #4]
 8008da2:	681b      	ldr	r3, [r3, #0]
 8008da4:	f003 0304 	and.w	r3, r3, #4
 8008da8:	2b00      	cmp	r3, #0
 8008daa:	d008      	beq.n	8008dbe <HAL_RCC_ClockConfig+0x172>
 8008dac:	4b19      	ldr	r3, [pc, #100]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008dae:	689b      	ldr	r3, [r3, #8]
 8008db0:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8008db4:	687b      	ldr	r3, [r7, #4]
 8008db6:	68db      	ldr	r3, [r3, #12]
 8008db8:	4916      	ldr	r1, [pc, #88]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008dba:	4313      	orrs	r3, r2
 8008dbc:	608b      	str	r3, [r1, #8]
 8008dbe:	687b      	ldr	r3, [r7, #4]
 8008dc0:	681b      	ldr	r3, [r3, #0]
 8008dc2:	f003 0308 	and.w	r3, r3, #8
 8008dc6:	2b00      	cmp	r3, #0
 8008dc8:	d009      	beq.n	8008dde <HAL_RCC_ClockConfig+0x192>
 8008dca:	4b12      	ldr	r3, [pc, #72]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008dcc:	689b      	ldr	r3, [r3, #8]
 8008dce:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8008dd2:	687b      	ldr	r3, [r7, #4]
 8008dd4:	691b      	ldr	r3, [r3, #16]
 8008dd6:	00db      	lsls	r3, r3, #3
 8008dd8:	490e      	ldr	r1, [pc, #56]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008dda:	4313      	orrs	r3, r2
 8008ddc:	608b      	str	r3, [r1, #8]
 8008dde:	f000 f821 	bl	8008e24 <HAL_RCC_GetSysClockFreq>
 8008de2:	4601      	mov	r1, r0
 8008de4:	4b0b      	ldr	r3, [pc, #44]	; (8008e14 <HAL_RCC_ClockConfig+0x1c8>)
 8008de6:	689b      	ldr	r3, [r3, #8]
 8008de8:	091b      	lsrs	r3, r3, #4
 8008dea:	f003 030f 	and.w	r3, r3, #15
 8008dee:	4a0a      	ldr	r2, [pc, #40]	; (8008e18 <HAL_RCC_ClockConfig+0x1cc>)
 8008df0:	5cd3      	ldrb	r3, [r2, r3]
 8008df2:	fa21 f303 	lsr.w	r3, r1, r3
 8008df6:	4a09      	ldr	r2, [pc, #36]	; (8008e1c <HAL_RCC_ClockConfig+0x1d0>)
 8008df8:	6013      	str	r3, [r2, #0]
 8008dfa:	4b09      	ldr	r3, [pc, #36]	; (8008e20 <HAL_RCC_ClockConfig+0x1d4>)
 8008dfc:	681b      	ldr	r3, [r3, #0]
 8008dfe:	4618      	mov	r0, r3
 8008e00:	f7ff f838 	bl	8007e74 <HAL_InitTick>
 8008e04:	2300      	movs	r3, #0
 8008e06:	4618      	mov	r0, r3
 8008e08:	3710      	adds	r7, #16
 8008e0a:	46bd      	mov	sp, r7
 8008e0c:	bd80      	pop	{r7, pc}
 8008e0e:	bf00      	nop
 8008e10:	40023c00 	.word	0x40023c00
 8008e14:	40023800 	.word	0x40023800
 8008e18:	08015cbc 	.word	0x08015cbc
 8008e1c:	20000008 	.word	0x20000008
 8008e20:	2000000c 	.word	0x2000000c

08008e24 <HAL_RCC_GetSysClockFreq>:
 8008e24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008e26:	b085      	sub	sp, #20
 8008e28:	af00      	add	r7, sp, #0
 8008e2a:	2300      	movs	r3, #0
 8008e2c:	607b      	str	r3, [r7, #4]
 8008e2e:	2300      	movs	r3, #0
 8008e30:	60fb      	str	r3, [r7, #12]
 8008e32:	2300      	movs	r3, #0
 8008e34:	603b      	str	r3, [r7, #0]
 8008e36:	2300      	movs	r3, #0
 8008e38:	60bb      	str	r3, [r7, #8]
 8008e3a:	4b50      	ldr	r3, [pc, #320]	; (8008f7c <HAL_RCC_GetSysClockFreq+0x158>)
 8008e3c:	689b      	ldr	r3, [r3, #8]
 8008e3e:	f003 030c 	and.w	r3, r3, #12
 8008e42:	2b04      	cmp	r3, #4
 8008e44:	d007      	beq.n	8008e56 <HAL_RCC_GetSysClockFreq+0x32>
 8008e46:	2b08      	cmp	r3, #8
 8008e48:	d008      	beq.n	8008e5c <HAL_RCC_GetSysClockFreq+0x38>
 8008e4a:	2b00      	cmp	r3, #0
 8008e4c:	f040 808d 	bne.w	8008f6a <HAL_RCC_GetSysClockFreq+0x146>
 8008e50:	4b4b      	ldr	r3, [pc, #300]	; (8008f80 <HAL_RCC_GetSysClockFreq+0x15c>)
 8008e52:	60bb      	str	r3, [r7, #8]
 8008e54:	e08c      	b.n	8008f70 <HAL_RCC_GetSysClockFreq+0x14c>
 8008e56:	4b4b      	ldr	r3, [pc, #300]	; (8008f84 <HAL_RCC_GetSysClockFreq+0x160>)
 8008e58:	60bb      	str	r3, [r7, #8]
 8008e5a:	e089      	b.n	8008f70 <HAL_RCC_GetSysClockFreq+0x14c>
 8008e5c:	4b47      	ldr	r3, [pc, #284]	; (8008f7c <HAL_RCC_GetSysClockFreq+0x158>)
 8008e5e:	685b      	ldr	r3, [r3, #4]
 8008e60:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008e64:	607b      	str	r3, [r7, #4]
 8008e66:	4b45      	ldr	r3, [pc, #276]	; (8008f7c <HAL_RCC_GetSysClockFreq+0x158>)
 8008e68:	685b      	ldr	r3, [r3, #4]
 8008e6a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008e6e:	2b00      	cmp	r3, #0
 8008e70:	d023      	beq.n	8008eba <HAL_RCC_GetSysClockFreq+0x96>
 8008e72:	4b42      	ldr	r3, [pc, #264]	; (8008f7c <HAL_RCC_GetSysClockFreq+0x158>)
 8008e74:	685b      	ldr	r3, [r3, #4]
 8008e76:	099b      	lsrs	r3, r3, #6
 8008e78:	f04f 0400 	mov.w	r4, #0
 8008e7c:	f240 11ff 	movw	r1, #511	; 0x1ff
 8008e80:	f04f 0200 	mov.w	r2, #0
 8008e84:	ea03 0501 	and.w	r5, r3, r1
 8008e88:	ea04 0602 	and.w	r6, r4, r2
 8008e8c:	4a3d      	ldr	r2, [pc, #244]	; (8008f84 <HAL_RCC_GetSysClockFreq+0x160>)
 8008e8e:	fb02 f106 	mul.w	r1, r2, r6
 8008e92:	2200      	movs	r2, #0
 8008e94:	fb02 f205 	mul.w	r2, r2, r5
 8008e98:	440a      	add	r2, r1
 8008e9a:	493a      	ldr	r1, [pc, #232]	; (8008f84 <HAL_RCC_GetSysClockFreq+0x160>)
 8008e9c:	fba5 0101 	umull	r0, r1, r5, r1
 8008ea0:	1853      	adds	r3, r2, r1
 8008ea2:	4619      	mov	r1, r3
 8008ea4:	687b      	ldr	r3, [r7, #4]
 8008ea6:	f04f 0400 	mov.w	r4, #0
 8008eaa:	461a      	mov	r2, r3
 8008eac:	4623      	mov	r3, r4
 8008eae:	f7fe fb01 	bl	80074b4 <__aeabi_uldivmod>
 8008eb2:	4603      	mov	r3, r0
 8008eb4:	460c      	mov	r4, r1
 8008eb6:	60fb      	str	r3, [r7, #12]
 8008eb8:	e049      	b.n	8008f4e <HAL_RCC_GetSysClockFreq+0x12a>
 8008eba:	4b30      	ldr	r3, [pc, #192]	; (8008f7c <HAL_RCC_GetSysClockFreq+0x158>)
 8008ebc:	685b      	ldr	r3, [r3, #4]
 8008ebe:	099b      	lsrs	r3, r3, #6
 8008ec0:	f04f 0400 	mov.w	r4, #0
 8008ec4:	f240 11ff 	movw	r1, #511	; 0x1ff
 8008ec8:	f04f 0200 	mov.w	r2, #0
 8008ecc:	ea03 0501 	and.w	r5, r3, r1
 8008ed0:	ea04 0602 	and.w	r6, r4, r2
 8008ed4:	4629      	mov	r1, r5
 8008ed6:	4632      	mov	r2, r6
 8008ed8:	f04f 0300 	mov.w	r3, #0
 8008edc:	f04f 0400 	mov.w	r4, #0
 8008ee0:	0154      	lsls	r4, r2, #5
 8008ee2:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8008ee6:	014b      	lsls	r3, r1, #5
 8008ee8:	4619      	mov	r1, r3
 8008eea:	4622      	mov	r2, r4
 8008eec:	1b49      	subs	r1, r1, r5
 8008eee:	eb62 0206 	sbc.w	r2, r2, r6
 8008ef2:	f04f 0300 	mov.w	r3, #0
 8008ef6:	f04f 0400 	mov.w	r4, #0
 8008efa:	0194      	lsls	r4, r2, #6
 8008efc:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8008f00:	018b      	lsls	r3, r1, #6
 8008f02:	1a5b      	subs	r3, r3, r1
 8008f04:	eb64 0402 	sbc.w	r4, r4, r2
 8008f08:	f04f 0100 	mov.w	r1, #0
 8008f0c:	f04f 0200 	mov.w	r2, #0
 8008f10:	00e2      	lsls	r2, r4, #3
 8008f12:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8008f16:	00d9      	lsls	r1, r3, #3
 8008f18:	460b      	mov	r3, r1
 8008f1a:	4614      	mov	r4, r2
 8008f1c:	195b      	adds	r3, r3, r5
 8008f1e:	eb44 0406 	adc.w	r4, r4, r6
 8008f22:	f04f 0100 	mov.w	r1, #0
 8008f26:	f04f 0200 	mov.w	r2, #0
 8008f2a:	02a2      	lsls	r2, r4, #10
 8008f2c:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 8008f30:	0299      	lsls	r1, r3, #10
 8008f32:	460b      	mov	r3, r1
 8008f34:	4614      	mov	r4, r2
 8008f36:	4618      	mov	r0, r3
 8008f38:	4621      	mov	r1, r4
 8008f3a:	687b      	ldr	r3, [r7, #4]
 8008f3c:	f04f 0400 	mov.w	r4, #0
 8008f40:	461a      	mov	r2, r3
 8008f42:	4623      	mov	r3, r4
 8008f44:	f7fe fab6 	bl	80074b4 <__aeabi_uldivmod>
 8008f48:	4603      	mov	r3, r0
 8008f4a:	460c      	mov	r4, r1
 8008f4c:	60fb      	str	r3, [r7, #12]
 8008f4e:	4b0b      	ldr	r3, [pc, #44]	; (8008f7c <HAL_RCC_GetSysClockFreq+0x158>)
 8008f50:	685b      	ldr	r3, [r3, #4]
 8008f52:	0c1b      	lsrs	r3, r3, #16
 8008f54:	f003 0303 	and.w	r3, r3, #3
 8008f58:	3301      	adds	r3, #1
 8008f5a:	005b      	lsls	r3, r3, #1
 8008f5c:	603b      	str	r3, [r7, #0]
 8008f5e:	68fa      	ldr	r2, [r7, #12]
 8008f60:	683b      	ldr	r3, [r7, #0]
 8008f62:	fbb2 f3f3 	udiv	r3, r2, r3
 8008f66:	60bb      	str	r3, [r7, #8]
 8008f68:	e002      	b.n	8008f70 <HAL_RCC_GetSysClockFreq+0x14c>
 8008f6a:	4b05      	ldr	r3, [pc, #20]	; (8008f80 <HAL_RCC_GetSysClockFreq+0x15c>)
 8008f6c:	60bb      	str	r3, [r7, #8]
 8008f6e:	bf00      	nop
 8008f70:	68bb      	ldr	r3, [r7, #8]
 8008f72:	4618      	mov	r0, r3
 8008f74:	3714      	adds	r7, #20
 8008f76:	46bd      	mov	sp, r7
 8008f78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008f7a:	bf00      	nop
 8008f7c:	40023800 	.word	0x40023800
 8008f80:	00f42400 	.word	0x00f42400
 8008f84:	017d7840 	.word	0x017d7840

08008f88 <HAL_RCC_GetHCLKFreq>:
 8008f88:	b480      	push	{r7}
 8008f8a:	af00      	add	r7, sp, #0
 8008f8c:	4b03      	ldr	r3, [pc, #12]	; (8008f9c <HAL_RCC_GetHCLKFreq+0x14>)
 8008f8e:	681b      	ldr	r3, [r3, #0]
 8008f90:	4618      	mov	r0, r3
 8008f92:	46bd      	mov	sp, r7
 8008f94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f98:	4770      	bx	lr
 8008f9a:	bf00      	nop
 8008f9c:	20000008 	.word	0x20000008

08008fa0 <HAL_RCC_GetPCLK1Freq>:
 8008fa0:	b580      	push	{r7, lr}
 8008fa2:	af00      	add	r7, sp, #0
 8008fa4:	f7ff fff0 	bl	8008f88 <HAL_RCC_GetHCLKFreq>
 8008fa8:	4601      	mov	r1, r0
 8008faa:	4b05      	ldr	r3, [pc, #20]	; (8008fc0 <HAL_RCC_GetPCLK1Freq+0x20>)
 8008fac:	689b      	ldr	r3, [r3, #8]
 8008fae:	0a9b      	lsrs	r3, r3, #10
 8008fb0:	f003 0307 	and.w	r3, r3, #7
 8008fb4:	4a03      	ldr	r2, [pc, #12]	; (8008fc4 <HAL_RCC_GetPCLK1Freq+0x24>)
 8008fb6:	5cd3      	ldrb	r3, [r2, r3]
 8008fb8:	fa21 f303 	lsr.w	r3, r1, r3
 8008fbc:	4618      	mov	r0, r3
 8008fbe:	bd80      	pop	{r7, pc}
 8008fc0:	40023800 	.word	0x40023800
 8008fc4:	08015ccc 	.word	0x08015ccc

08008fc8 <HAL_RCC_GetPCLK2Freq>:
 8008fc8:	b580      	push	{r7, lr}
 8008fca:	af00      	add	r7, sp, #0
 8008fcc:	f7ff ffdc 	bl	8008f88 <HAL_RCC_GetHCLKFreq>
 8008fd0:	4601      	mov	r1, r0
 8008fd2:	4b05      	ldr	r3, [pc, #20]	; (8008fe8 <HAL_RCC_GetPCLK2Freq+0x20>)
 8008fd4:	689b      	ldr	r3, [r3, #8]
 8008fd6:	0b5b      	lsrs	r3, r3, #13
 8008fd8:	f003 0307 	and.w	r3, r3, #7
 8008fdc:	4a03      	ldr	r2, [pc, #12]	; (8008fec <HAL_RCC_GetPCLK2Freq+0x24>)
 8008fde:	5cd3      	ldrb	r3, [r2, r3]
 8008fe0:	fa21 f303 	lsr.w	r3, r1, r3
 8008fe4:	4618      	mov	r0, r3
 8008fe6:	bd80      	pop	{r7, pc}
 8008fe8:	40023800 	.word	0x40023800
 8008fec:	08015ccc 	.word	0x08015ccc

08008ff0 <HAL_RCCEx_PeriphCLKConfig>:
 8008ff0:	b580      	push	{r7, lr}
 8008ff2:	b088      	sub	sp, #32
 8008ff4:	af00      	add	r7, sp, #0
 8008ff6:	6078      	str	r0, [r7, #4]
 8008ff8:	2300      	movs	r3, #0
 8008ffa:	617b      	str	r3, [r7, #20]
 8008ffc:	2300      	movs	r3, #0
 8008ffe:	613b      	str	r3, [r7, #16]
 8009000:	2300      	movs	r3, #0
 8009002:	60fb      	str	r3, [r7, #12]
 8009004:	2300      	movs	r3, #0
 8009006:	61fb      	str	r3, [r7, #28]
 8009008:	2300      	movs	r3, #0
 800900a:	61bb      	str	r3, [r7, #24]
 800900c:	687b      	ldr	r3, [r7, #4]
 800900e:	681b      	ldr	r3, [r3, #0]
 8009010:	f003 0301 	and.w	r3, r3, #1
 8009014:	2b00      	cmp	r3, #0
 8009016:	d012      	beq.n	800903e <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8009018:	4b69      	ldr	r3, [pc, #420]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800901a:	689b      	ldr	r3, [r3, #8]
 800901c:	4a68      	ldr	r2, [pc, #416]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800901e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8009022:	6093      	str	r3, [r2, #8]
 8009024:	4b66      	ldr	r3, [pc, #408]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009026:	689a      	ldr	r2, [r3, #8]
 8009028:	687b      	ldr	r3, [r7, #4]
 800902a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800902c:	4964      	ldr	r1, [pc, #400]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800902e:	4313      	orrs	r3, r2
 8009030:	608b      	str	r3, [r1, #8]
 8009032:	687b      	ldr	r3, [r7, #4]
 8009034:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009036:	2b00      	cmp	r3, #0
 8009038:	d101      	bne.n	800903e <HAL_RCCEx_PeriphCLKConfig+0x4e>
 800903a:	2301      	movs	r3, #1
 800903c:	61fb      	str	r3, [r7, #28]
 800903e:	687b      	ldr	r3, [r7, #4]
 8009040:	681b      	ldr	r3, [r3, #0]
 8009042:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8009046:	2b00      	cmp	r3, #0
 8009048:	d017      	beq.n	800907a <HAL_RCCEx_PeriphCLKConfig+0x8a>
 800904a:	4b5d      	ldr	r3, [pc, #372]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800904c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009050:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8009054:	687b      	ldr	r3, [r7, #4]
 8009056:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009058:	4959      	ldr	r1, [pc, #356]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800905a:	4313      	orrs	r3, r2
 800905c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8009060:	687b      	ldr	r3, [r7, #4]
 8009062:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009064:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009068:	d101      	bne.n	800906e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 800906a:	2301      	movs	r3, #1
 800906c:	61fb      	str	r3, [r7, #28]
 800906e:	687b      	ldr	r3, [r7, #4]
 8009070:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009072:	2b00      	cmp	r3, #0
 8009074:	d101      	bne.n	800907a <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8009076:	2301      	movs	r3, #1
 8009078:	61bb      	str	r3, [r7, #24]
 800907a:	687b      	ldr	r3, [r7, #4]
 800907c:	681b      	ldr	r3, [r3, #0]
 800907e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009082:	2b00      	cmp	r3, #0
 8009084:	d017      	beq.n	80090b6 <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8009086:	4b4e      	ldr	r3, [pc, #312]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009088:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800908c:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8009090:	687b      	ldr	r3, [r7, #4]
 8009092:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009094:	494a      	ldr	r1, [pc, #296]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009096:	4313      	orrs	r3, r2
 8009098:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 800909c:	687b      	ldr	r3, [r7, #4]
 800909e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80090a0:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80090a4:	d101      	bne.n	80090aa <HAL_RCCEx_PeriphCLKConfig+0xba>
 80090a6:	2301      	movs	r3, #1
 80090a8:	61fb      	str	r3, [r7, #28]
 80090aa:	687b      	ldr	r3, [r7, #4]
 80090ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80090ae:	2b00      	cmp	r3, #0
 80090b0:	d101      	bne.n	80090b6 <HAL_RCCEx_PeriphCLKConfig+0xc6>
 80090b2:	2301      	movs	r3, #1
 80090b4:	61bb      	str	r3, [r7, #24]
 80090b6:	687b      	ldr	r3, [r7, #4]
 80090b8:	681b      	ldr	r3, [r3, #0]
 80090ba:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80090be:	2b00      	cmp	r3, #0
 80090c0:	d001      	beq.n	80090c6 <HAL_RCCEx_PeriphCLKConfig+0xd6>
 80090c2:	2301      	movs	r3, #1
 80090c4:	61fb      	str	r3, [r7, #28]
 80090c6:	687b      	ldr	r3, [r7, #4]
 80090c8:	681b      	ldr	r3, [r3, #0]
 80090ca:	f003 0320 	and.w	r3, r3, #32
 80090ce:	2b00      	cmp	r3, #0
 80090d0:	f000 808b 	beq.w	80091ea <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 80090d4:	4b3a      	ldr	r3, [pc, #232]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80090d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80090d8:	4a39      	ldr	r2, [pc, #228]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80090da:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80090de:	6413      	str	r3, [r2, #64]	; 0x40
 80090e0:	4b37      	ldr	r3, [pc, #220]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80090e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80090e4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80090e8:	60bb      	str	r3, [r7, #8]
 80090ea:	68bb      	ldr	r3, [r7, #8]
 80090ec:	4b35      	ldr	r3, [pc, #212]	; (80091c4 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80090ee:	681b      	ldr	r3, [r3, #0]
 80090f0:	4a34      	ldr	r2, [pc, #208]	; (80091c4 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80090f2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80090f6:	6013      	str	r3, [r2, #0]
 80090f8:	f7fe ff00 	bl	8007efc <HAL_GetTick>
 80090fc:	6178      	str	r0, [r7, #20]
 80090fe:	e008      	b.n	8009112 <HAL_RCCEx_PeriphCLKConfig+0x122>
 8009100:	f7fe fefc 	bl	8007efc <HAL_GetTick>
 8009104:	4602      	mov	r2, r0
 8009106:	697b      	ldr	r3, [r7, #20]
 8009108:	1ad3      	subs	r3, r2, r3
 800910a:	2b64      	cmp	r3, #100	; 0x64
 800910c:	d901      	bls.n	8009112 <HAL_RCCEx_PeriphCLKConfig+0x122>
 800910e:	2303      	movs	r3, #3
 8009110:	e38d      	b.n	800982e <HAL_RCCEx_PeriphCLKConfig+0x83e>
 8009112:	4b2c      	ldr	r3, [pc, #176]	; (80091c4 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8009114:	681b      	ldr	r3, [r3, #0]
 8009116:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800911a:	2b00      	cmp	r3, #0
 800911c:	d0f0      	beq.n	8009100 <HAL_RCCEx_PeriphCLKConfig+0x110>
 800911e:	4b28      	ldr	r3, [pc, #160]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009120:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009122:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009126:	613b      	str	r3, [r7, #16]
 8009128:	693b      	ldr	r3, [r7, #16]
 800912a:	2b00      	cmp	r3, #0
 800912c:	d035      	beq.n	800919a <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 800912e:	687b      	ldr	r3, [r7, #4]
 8009130:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009132:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009136:	693a      	ldr	r2, [r7, #16]
 8009138:	429a      	cmp	r2, r3
 800913a:	d02e      	beq.n	800919a <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 800913c:	4b20      	ldr	r3, [pc, #128]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800913e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009140:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009144:	613b      	str	r3, [r7, #16]
 8009146:	4b1e      	ldr	r3, [pc, #120]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009148:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800914a:	4a1d      	ldr	r2, [pc, #116]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800914c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009150:	6713      	str	r3, [r2, #112]	; 0x70
 8009152:	4b1b      	ldr	r3, [pc, #108]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009154:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009156:	4a1a      	ldr	r2, [pc, #104]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009158:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800915c:	6713      	str	r3, [r2, #112]	; 0x70
 800915e:	4a18      	ldr	r2, [pc, #96]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009160:	693b      	ldr	r3, [r7, #16]
 8009162:	6713      	str	r3, [r2, #112]	; 0x70
 8009164:	4b16      	ldr	r3, [pc, #88]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009166:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009168:	f003 0301 	and.w	r3, r3, #1
 800916c:	2b01      	cmp	r3, #1
 800916e:	d114      	bne.n	800919a <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8009170:	f7fe fec4 	bl	8007efc <HAL_GetTick>
 8009174:	6178      	str	r0, [r7, #20]
 8009176:	e00a      	b.n	800918e <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8009178:	f7fe fec0 	bl	8007efc <HAL_GetTick>
 800917c:	4602      	mov	r2, r0
 800917e:	697b      	ldr	r3, [r7, #20]
 8009180:	1ad3      	subs	r3, r2, r3
 8009182:	f241 3288 	movw	r2, #5000	; 0x1388
 8009186:	4293      	cmp	r3, r2
 8009188:	d901      	bls.n	800918e <HAL_RCCEx_PeriphCLKConfig+0x19e>
 800918a:	2303      	movs	r3, #3
 800918c:	e34f      	b.n	800982e <HAL_RCCEx_PeriphCLKConfig+0x83e>
 800918e:	4b0c      	ldr	r3, [pc, #48]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009190:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009192:	f003 0302 	and.w	r3, r3, #2
 8009196:	2b00      	cmp	r3, #0
 8009198:	d0ee      	beq.n	8009178 <HAL_RCCEx_PeriphCLKConfig+0x188>
 800919a:	687b      	ldr	r3, [r7, #4]
 800919c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800919e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80091a2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80091a6:	d111      	bne.n	80091cc <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 80091a8:	4b05      	ldr	r3, [pc, #20]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80091aa:	689b      	ldr	r3, [r3, #8]
 80091ac:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 80091b0:	687b      	ldr	r3, [r7, #4]
 80091b2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80091b4:	4b04      	ldr	r3, [pc, #16]	; (80091c8 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80091b6:	400b      	ands	r3, r1
 80091b8:	4901      	ldr	r1, [pc, #4]	; (80091c0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80091ba:	4313      	orrs	r3, r2
 80091bc:	608b      	str	r3, [r1, #8]
 80091be:	e00b      	b.n	80091d8 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 80091c0:	40023800 	.word	0x40023800
 80091c4:	40007000 	.word	0x40007000
 80091c8:	0ffffcff 	.word	0x0ffffcff
 80091cc:	4bb3      	ldr	r3, [pc, #716]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80091ce:	689b      	ldr	r3, [r3, #8]
 80091d0:	4ab2      	ldr	r2, [pc, #712]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80091d2:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 80091d6:	6093      	str	r3, [r2, #8]
 80091d8:	4bb0      	ldr	r3, [pc, #704]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80091da:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80091dc:	687b      	ldr	r3, [r7, #4]
 80091de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80091e0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80091e4:	49ad      	ldr	r1, [pc, #692]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80091e6:	4313      	orrs	r3, r2
 80091e8:	670b      	str	r3, [r1, #112]	; 0x70
 80091ea:	687b      	ldr	r3, [r7, #4]
 80091ec:	681b      	ldr	r3, [r3, #0]
 80091ee:	f003 0310 	and.w	r3, r3, #16
 80091f2:	2b00      	cmp	r3, #0
 80091f4:	d010      	beq.n	8009218 <HAL_RCCEx_PeriphCLKConfig+0x228>
 80091f6:	4ba9      	ldr	r3, [pc, #676]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80091f8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80091fc:	4aa7      	ldr	r2, [pc, #668]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80091fe:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8009202:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8009206:	4ba5      	ldr	r3, [pc, #660]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009208:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800920c:	687b      	ldr	r3, [r7, #4]
 800920e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009210:	49a2      	ldr	r1, [pc, #648]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009212:	4313      	orrs	r3, r2
 8009214:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8009218:	687b      	ldr	r3, [r7, #4]
 800921a:	681b      	ldr	r3, [r3, #0]
 800921c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8009220:	2b00      	cmp	r3, #0
 8009222:	d00a      	beq.n	800923a <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8009224:	4b9d      	ldr	r3, [pc, #628]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009226:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800922a:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800922e:	687b      	ldr	r3, [r7, #4]
 8009230:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009232:	499a      	ldr	r1, [pc, #616]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009234:	4313      	orrs	r3, r2
 8009236:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800923a:	687b      	ldr	r3, [r7, #4]
 800923c:	681b      	ldr	r3, [r3, #0]
 800923e:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8009242:	2b00      	cmp	r3, #0
 8009244:	d00a      	beq.n	800925c <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8009246:	4b95      	ldr	r3, [pc, #596]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009248:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800924c:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8009250:	687b      	ldr	r3, [r7, #4]
 8009252:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8009254:	4991      	ldr	r1, [pc, #580]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009256:	4313      	orrs	r3, r2
 8009258:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800925c:	687b      	ldr	r3, [r7, #4]
 800925e:	681b      	ldr	r3, [r3, #0]
 8009260:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009264:	2b00      	cmp	r3, #0
 8009266:	d00a      	beq.n	800927e <HAL_RCCEx_PeriphCLKConfig+0x28e>
 8009268:	4b8c      	ldr	r3, [pc, #560]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800926a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800926e:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8009272:	687b      	ldr	r3, [r7, #4]
 8009274:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009276:	4989      	ldr	r1, [pc, #548]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009278:	4313      	orrs	r3, r2
 800927a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800927e:	687b      	ldr	r3, [r7, #4]
 8009280:	681b      	ldr	r3, [r3, #0]
 8009282:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009286:	2b00      	cmp	r3, #0
 8009288:	d00a      	beq.n	80092a0 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 800928a:	4b84      	ldr	r3, [pc, #528]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800928c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009290:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8009294:	687b      	ldr	r3, [r7, #4]
 8009296:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009298:	4980      	ldr	r1, [pc, #512]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800929a:	4313      	orrs	r3, r2
 800929c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80092a0:	687b      	ldr	r3, [r7, #4]
 80092a2:	681b      	ldr	r3, [r3, #0]
 80092a4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80092a8:	2b00      	cmp	r3, #0
 80092aa:	d00a      	beq.n	80092c2 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 80092ac:	4b7b      	ldr	r3, [pc, #492]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80092ae:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80092b2:	f023 0203 	bic.w	r2, r3, #3
 80092b6:	687b      	ldr	r3, [r7, #4]
 80092b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80092ba:	4978      	ldr	r1, [pc, #480]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80092bc:	4313      	orrs	r3, r2
 80092be:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80092c2:	687b      	ldr	r3, [r7, #4]
 80092c4:	681b      	ldr	r3, [r3, #0]
 80092c6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80092ca:	2b00      	cmp	r3, #0
 80092cc:	d00a      	beq.n	80092e4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 80092ce:	4b73      	ldr	r3, [pc, #460]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80092d0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80092d4:	f023 020c 	bic.w	r2, r3, #12
 80092d8:	687b      	ldr	r3, [r7, #4]
 80092da:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80092dc:	496f      	ldr	r1, [pc, #444]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80092de:	4313      	orrs	r3, r2
 80092e0:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80092e4:	687b      	ldr	r3, [r7, #4]
 80092e6:	681b      	ldr	r3, [r3, #0]
 80092e8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80092ec:	2b00      	cmp	r3, #0
 80092ee:	d00a      	beq.n	8009306 <HAL_RCCEx_PeriphCLKConfig+0x316>
 80092f0:	4b6a      	ldr	r3, [pc, #424]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80092f2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80092f6:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 80092fa:	687b      	ldr	r3, [r7, #4]
 80092fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80092fe:	4967      	ldr	r1, [pc, #412]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009300:	4313      	orrs	r3, r2
 8009302:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009306:	687b      	ldr	r3, [r7, #4]
 8009308:	681b      	ldr	r3, [r3, #0]
 800930a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800930e:	2b00      	cmp	r3, #0
 8009310:	d00a      	beq.n	8009328 <HAL_RCCEx_PeriphCLKConfig+0x338>
 8009312:	4b62      	ldr	r3, [pc, #392]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009314:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009318:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 800931c:	687b      	ldr	r3, [r7, #4]
 800931e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009320:	495e      	ldr	r1, [pc, #376]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009322:	4313      	orrs	r3, r2
 8009324:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009328:	687b      	ldr	r3, [r7, #4]
 800932a:	681b      	ldr	r3, [r3, #0]
 800932c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8009330:	2b00      	cmp	r3, #0
 8009332:	d00a      	beq.n	800934a <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8009334:	4b59      	ldr	r3, [pc, #356]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009336:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800933a:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800933e:	687b      	ldr	r3, [r7, #4]
 8009340:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009342:	4956      	ldr	r1, [pc, #344]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009344:	4313      	orrs	r3, r2
 8009346:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800934a:	687b      	ldr	r3, [r7, #4]
 800934c:	681b      	ldr	r3, [r3, #0]
 800934e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009352:	2b00      	cmp	r3, #0
 8009354:	d00a      	beq.n	800936c <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8009356:	4b51      	ldr	r3, [pc, #324]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009358:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800935c:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8009360:	687b      	ldr	r3, [r7, #4]
 8009362:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009364:	494d      	ldr	r1, [pc, #308]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009366:	4313      	orrs	r3, r2
 8009368:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800936c:	687b      	ldr	r3, [r7, #4]
 800936e:	681b      	ldr	r3, [r3, #0]
 8009370:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8009374:	2b00      	cmp	r3, #0
 8009376:	d00a      	beq.n	800938e <HAL_RCCEx_PeriphCLKConfig+0x39e>
 8009378:	4b48      	ldr	r3, [pc, #288]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800937a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800937e:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8009382:	687b      	ldr	r3, [r7, #4]
 8009384:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009386:	4945      	ldr	r1, [pc, #276]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009388:	4313      	orrs	r3, r2
 800938a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800938e:	687b      	ldr	r3, [r7, #4]
 8009390:	681b      	ldr	r3, [r3, #0]
 8009392:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8009396:	2b00      	cmp	r3, #0
 8009398:	d00a      	beq.n	80093b0 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 800939a:	4b40      	ldr	r3, [pc, #256]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800939c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80093a0:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 80093a4:	687b      	ldr	r3, [r7, #4]
 80093a6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80093a8:	493c      	ldr	r1, [pc, #240]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80093aa:	4313      	orrs	r3, r2
 80093ac:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80093b0:	687b      	ldr	r3, [r7, #4]
 80093b2:	681b      	ldr	r3, [r3, #0]
 80093b4:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80093b8:	2b00      	cmp	r3, #0
 80093ba:	d00a      	beq.n	80093d2 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 80093bc:	4b37      	ldr	r3, [pc, #220]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80093be:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80093c2:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 80093c6:	687b      	ldr	r3, [r7, #4]
 80093c8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80093ca:	4934      	ldr	r1, [pc, #208]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80093cc:	4313      	orrs	r3, r2
 80093ce:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80093d2:	687b      	ldr	r3, [r7, #4]
 80093d4:	681b      	ldr	r3, [r3, #0]
 80093d6:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80093da:	2b00      	cmp	r3, #0
 80093dc:	d011      	beq.n	8009402 <HAL_RCCEx_PeriphCLKConfig+0x412>
 80093de:	4b2f      	ldr	r3, [pc, #188]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80093e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80093e4:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 80093e8:	687b      	ldr	r3, [r7, #4]
 80093ea:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80093ec:	492b      	ldr	r1, [pc, #172]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 80093ee:	4313      	orrs	r3, r2
 80093f0:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80093f4:	687b      	ldr	r3, [r7, #4]
 80093f6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80093f8:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80093fc:	d101      	bne.n	8009402 <HAL_RCCEx_PeriphCLKConfig+0x412>
 80093fe:	2301      	movs	r3, #1
 8009400:	61bb      	str	r3, [r7, #24]
 8009402:	687b      	ldr	r3, [r7, #4]
 8009404:	681b      	ldr	r3, [r3, #0]
 8009406:	f003 0308 	and.w	r3, r3, #8
 800940a:	2b00      	cmp	r3, #0
 800940c:	d001      	beq.n	8009412 <HAL_RCCEx_PeriphCLKConfig+0x422>
 800940e:	2301      	movs	r3, #1
 8009410:	61bb      	str	r3, [r7, #24]
 8009412:	687b      	ldr	r3, [r7, #4]
 8009414:	681b      	ldr	r3, [r3, #0]
 8009416:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800941a:	2b00      	cmp	r3, #0
 800941c:	d00a      	beq.n	8009434 <HAL_RCCEx_PeriphCLKConfig+0x444>
 800941e:	4b1f      	ldr	r3, [pc, #124]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009420:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009424:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8009428:	687b      	ldr	r3, [r7, #4]
 800942a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800942c:	491b      	ldr	r1, [pc, #108]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800942e:	4313      	orrs	r3, r2
 8009430:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009434:	687b      	ldr	r3, [r7, #4]
 8009436:	681b      	ldr	r3, [r3, #0]
 8009438:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800943c:	2b00      	cmp	r3, #0
 800943e:	d00b      	beq.n	8009458 <HAL_RCCEx_PeriphCLKConfig+0x468>
 8009440:	4b16      	ldr	r3, [pc, #88]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009442:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009446:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 800944a:	687b      	ldr	r3, [r7, #4]
 800944c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8009450:	4912      	ldr	r1, [pc, #72]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009452:	4313      	orrs	r3, r2
 8009454:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009458:	687b      	ldr	r3, [r7, #4]
 800945a:	681b      	ldr	r3, [r3, #0]
 800945c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8009460:	2b00      	cmp	r3, #0
 8009462:	d00b      	beq.n	800947c <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8009464:	4b0d      	ldr	r3, [pc, #52]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009466:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800946a:	f023 5200 	bic.w	r2, r3, #536870912	; 0x20000000
 800946e:	687b      	ldr	r3, [r7, #4]
 8009470:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009474:	4909      	ldr	r1, [pc, #36]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 8009476:	4313      	orrs	r3, r2
 8009478:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800947c:	687b      	ldr	r3, [r7, #4]
 800947e:	681b      	ldr	r3, [r3, #0]
 8009480:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009484:	2b00      	cmp	r3, #0
 8009486:	d00f      	beq.n	80094a8 <HAL_RCCEx_PeriphCLKConfig+0x4b8>
 8009488:	4b04      	ldr	r3, [pc, #16]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x4ac>)
 800948a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800948e:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 8009492:	687b      	ldr	r3, [r7, #4]
 8009494:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8009498:	e002      	b.n	80094a0 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 800949a:	bf00      	nop
 800949c:	40023800 	.word	0x40023800
 80094a0:	4985      	ldr	r1, [pc, #532]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 80094a2:	4313      	orrs	r3, r2
 80094a4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80094a8:	687b      	ldr	r3, [r7, #4]
 80094aa:	681b      	ldr	r3, [r3, #0]
 80094ac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80094b0:	2b00      	cmp	r3, #0
 80094b2:	d00b      	beq.n	80094cc <HAL_RCCEx_PeriphCLKConfig+0x4dc>
 80094b4:	4b80      	ldr	r3, [pc, #512]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 80094b6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80094ba:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 80094be:	687b      	ldr	r3, [r7, #4]
 80094c0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80094c4:	497c      	ldr	r1, [pc, #496]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 80094c6:	4313      	orrs	r3, r2
 80094c8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80094cc:	69fb      	ldr	r3, [r7, #28]
 80094ce:	2b01      	cmp	r3, #1
 80094d0:	d005      	beq.n	80094de <HAL_RCCEx_PeriphCLKConfig+0x4ee>
 80094d2:	687b      	ldr	r3, [r7, #4]
 80094d4:	681b      	ldr	r3, [r3, #0]
 80094d6:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80094da:	f040 80d6 	bne.w	800968a <HAL_RCCEx_PeriphCLKConfig+0x69a>
 80094de:	4b76      	ldr	r3, [pc, #472]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 80094e0:	681b      	ldr	r3, [r3, #0]
 80094e2:	4a75      	ldr	r2, [pc, #468]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 80094e4:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80094e8:	6013      	str	r3, [r2, #0]
 80094ea:	f7fe fd07 	bl	8007efc <HAL_GetTick>
 80094ee:	6178      	str	r0, [r7, #20]
 80094f0:	e008      	b.n	8009504 <HAL_RCCEx_PeriphCLKConfig+0x514>
 80094f2:	f7fe fd03 	bl	8007efc <HAL_GetTick>
 80094f6:	4602      	mov	r2, r0
 80094f8:	697b      	ldr	r3, [r7, #20]
 80094fa:	1ad3      	subs	r3, r2, r3
 80094fc:	2b64      	cmp	r3, #100	; 0x64
 80094fe:	d901      	bls.n	8009504 <HAL_RCCEx_PeriphCLKConfig+0x514>
 8009500:	2303      	movs	r3, #3
 8009502:	e194      	b.n	800982e <HAL_RCCEx_PeriphCLKConfig+0x83e>
 8009504:	4b6c      	ldr	r3, [pc, #432]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 8009506:	681b      	ldr	r3, [r3, #0]
 8009508:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800950c:	2b00      	cmp	r3, #0
 800950e:	d1f0      	bne.n	80094f2 <HAL_RCCEx_PeriphCLKConfig+0x502>
 8009510:	687b      	ldr	r3, [r7, #4]
 8009512:	681b      	ldr	r3, [r3, #0]
 8009514:	f003 0301 	and.w	r3, r3, #1
 8009518:	2b00      	cmp	r3, #0
 800951a:	d021      	beq.n	8009560 <HAL_RCCEx_PeriphCLKConfig+0x570>
 800951c:	687b      	ldr	r3, [r7, #4]
 800951e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009520:	2b00      	cmp	r3, #0
 8009522:	d11d      	bne.n	8009560 <HAL_RCCEx_PeriphCLKConfig+0x570>
 8009524:	4b64      	ldr	r3, [pc, #400]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 8009526:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800952a:	0c1b      	lsrs	r3, r3, #16
 800952c:	f003 0303 	and.w	r3, r3, #3
 8009530:	613b      	str	r3, [r7, #16]
 8009532:	4b61      	ldr	r3, [pc, #388]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 8009534:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009538:	0e1b      	lsrs	r3, r3, #24
 800953a:	f003 030f 	and.w	r3, r3, #15
 800953e:	60fb      	str	r3, [r7, #12]
 8009540:	687b      	ldr	r3, [r7, #4]
 8009542:	685b      	ldr	r3, [r3, #4]
 8009544:	019a      	lsls	r2, r3, #6
 8009546:	693b      	ldr	r3, [r7, #16]
 8009548:	041b      	lsls	r3, r3, #16
 800954a:	431a      	orrs	r2, r3
 800954c:	68fb      	ldr	r3, [r7, #12]
 800954e:	061b      	lsls	r3, r3, #24
 8009550:	431a      	orrs	r2, r3
 8009552:	687b      	ldr	r3, [r7, #4]
 8009554:	689b      	ldr	r3, [r3, #8]
 8009556:	071b      	lsls	r3, r3, #28
 8009558:	4957      	ldr	r1, [pc, #348]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 800955a:	4313      	orrs	r3, r2
 800955c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8009560:	687b      	ldr	r3, [r7, #4]
 8009562:	681b      	ldr	r3, [r3, #0]
 8009564:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8009568:	2b00      	cmp	r3, #0
 800956a:	d004      	beq.n	8009576 <HAL_RCCEx_PeriphCLKConfig+0x586>
 800956c:	687b      	ldr	r3, [r7, #4]
 800956e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009570:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009574:	d00a      	beq.n	800958c <HAL_RCCEx_PeriphCLKConfig+0x59c>
 8009576:	687b      	ldr	r3, [r7, #4]
 8009578:	681b      	ldr	r3, [r3, #0]
 800957a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800957e:	2b00      	cmp	r3, #0
 8009580:	d02e      	beq.n	80095e0 <HAL_RCCEx_PeriphCLKConfig+0x5f0>
 8009582:	687b      	ldr	r3, [r7, #4]
 8009584:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009586:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800958a:	d129      	bne.n	80095e0 <HAL_RCCEx_PeriphCLKConfig+0x5f0>
 800958c:	4b4a      	ldr	r3, [pc, #296]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 800958e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009592:	0c1b      	lsrs	r3, r3, #16
 8009594:	f003 0303 	and.w	r3, r3, #3
 8009598:	613b      	str	r3, [r7, #16]
 800959a:	4b47      	ldr	r3, [pc, #284]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 800959c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80095a0:	0f1b      	lsrs	r3, r3, #28
 80095a2:	f003 0307 	and.w	r3, r3, #7
 80095a6:	60fb      	str	r3, [r7, #12]
 80095a8:	687b      	ldr	r3, [r7, #4]
 80095aa:	685b      	ldr	r3, [r3, #4]
 80095ac:	019a      	lsls	r2, r3, #6
 80095ae:	693b      	ldr	r3, [r7, #16]
 80095b0:	041b      	lsls	r3, r3, #16
 80095b2:	431a      	orrs	r2, r3
 80095b4:	687b      	ldr	r3, [r7, #4]
 80095b6:	68db      	ldr	r3, [r3, #12]
 80095b8:	061b      	lsls	r3, r3, #24
 80095ba:	431a      	orrs	r2, r3
 80095bc:	68fb      	ldr	r3, [r7, #12]
 80095be:	071b      	lsls	r3, r3, #28
 80095c0:	493d      	ldr	r1, [pc, #244]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 80095c2:	4313      	orrs	r3, r2
 80095c4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 80095c8:	4b3b      	ldr	r3, [pc, #236]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 80095ca:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80095ce:	f023 021f 	bic.w	r2, r3, #31
 80095d2:	687b      	ldr	r3, [r7, #4]
 80095d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80095d6:	3b01      	subs	r3, #1
 80095d8:	4937      	ldr	r1, [pc, #220]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 80095da:	4313      	orrs	r3, r2
 80095dc:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80095e0:	687b      	ldr	r3, [r7, #4]
 80095e2:	681b      	ldr	r3, [r3, #0]
 80095e4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80095e8:	2b00      	cmp	r3, #0
 80095ea:	d01d      	beq.n	8009628 <HAL_RCCEx_PeriphCLKConfig+0x638>
 80095ec:	4b32      	ldr	r3, [pc, #200]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 80095ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80095f2:	0e1b      	lsrs	r3, r3, #24
 80095f4:	f003 030f 	and.w	r3, r3, #15
 80095f8:	613b      	str	r3, [r7, #16]
 80095fa:	4b2f      	ldr	r3, [pc, #188]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 80095fc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009600:	0f1b      	lsrs	r3, r3, #28
 8009602:	f003 0307 	and.w	r3, r3, #7
 8009606:	60fb      	str	r3, [r7, #12]
 8009608:	687b      	ldr	r3, [r7, #4]
 800960a:	685b      	ldr	r3, [r3, #4]
 800960c:	019a      	lsls	r2, r3, #6
 800960e:	687b      	ldr	r3, [r7, #4]
 8009610:	691b      	ldr	r3, [r3, #16]
 8009612:	041b      	lsls	r3, r3, #16
 8009614:	431a      	orrs	r2, r3
 8009616:	693b      	ldr	r3, [r7, #16]
 8009618:	061b      	lsls	r3, r3, #24
 800961a:	431a      	orrs	r2, r3
 800961c:	68fb      	ldr	r3, [r7, #12]
 800961e:	071b      	lsls	r3, r3, #28
 8009620:	4925      	ldr	r1, [pc, #148]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 8009622:	4313      	orrs	r3, r2
 8009624:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8009628:	687b      	ldr	r3, [r7, #4]
 800962a:	681b      	ldr	r3, [r3, #0]
 800962c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009630:	2b00      	cmp	r3, #0
 8009632:	d011      	beq.n	8009658 <HAL_RCCEx_PeriphCLKConfig+0x668>
 8009634:	687b      	ldr	r3, [r7, #4]
 8009636:	685b      	ldr	r3, [r3, #4]
 8009638:	019a      	lsls	r2, r3, #6
 800963a:	687b      	ldr	r3, [r7, #4]
 800963c:	691b      	ldr	r3, [r3, #16]
 800963e:	041b      	lsls	r3, r3, #16
 8009640:	431a      	orrs	r2, r3
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	68db      	ldr	r3, [r3, #12]
 8009646:	061b      	lsls	r3, r3, #24
 8009648:	431a      	orrs	r2, r3
 800964a:	687b      	ldr	r3, [r7, #4]
 800964c:	689b      	ldr	r3, [r3, #8]
 800964e:	071b      	lsls	r3, r3, #28
 8009650:	4919      	ldr	r1, [pc, #100]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 8009652:	4313      	orrs	r3, r2
 8009654:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8009658:	4b17      	ldr	r3, [pc, #92]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 800965a:	681b      	ldr	r3, [r3, #0]
 800965c:	4a16      	ldr	r2, [pc, #88]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 800965e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8009662:	6013      	str	r3, [r2, #0]
 8009664:	f7fe fc4a 	bl	8007efc <HAL_GetTick>
 8009668:	6178      	str	r0, [r7, #20]
 800966a:	e008      	b.n	800967e <HAL_RCCEx_PeriphCLKConfig+0x68e>
 800966c:	f7fe fc46 	bl	8007efc <HAL_GetTick>
 8009670:	4602      	mov	r2, r0
 8009672:	697b      	ldr	r3, [r7, #20]
 8009674:	1ad3      	subs	r3, r2, r3
 8009676:	2b64      	cmp	r3, #100	; 0x64
 8009678:	d901      	bls.n	800967e <HAL_RCCEx_PeriphCLKConfig+0x68e>
 800967a:	2303      	movs	r3, #3
 800967c:	e0d7      	b.n	800982e <HAL_RCCEx_PeriphCLKConfig+0x83e>
 800967e:	4b0e      	ldr	r3, [pc, #56]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 8009680:	681b      	ldr	r3, [r3, #0]
 8009682:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009686:	2b00      	cmp	r3, #0
 8009688:	d0f0      	beq.n	800966c <HAL_RCCEx_PeriphCLKConfig+0x67c>
 800968a:	69bb      	ldr	r3, [r7, #24]
 800968c:	2b01      	cmp	r3, #1
 800968e:	f040 80cd 	bne.w	800982c <HAL_RCCEx_PeriphCLKConfig+0x83c>
 8009692:	4b09      	ldr	r3, [pc, #36]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 8009694:	681b      	ldr	r3, [r3, #0]
 8009696:	4a08      	ldr	r2, [pc, #32]	; (80096b8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
 8009698:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800969c:	6013      	str	r3, [r2, #0]
 800969e:	f7fe fc2d 	bl	8007efc <HAL_GetTick>
 80096a2:	6178      	str	r0, [r7, #20]
 80096a4:	e00a      	b.n	80096bc <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 80096a6:	f7fe fc29 	bl	8007efc <HAL_GetTick>
 80096aa:	4602      	mov	r2, r0
 80096ac:	697b      	ldr	r3, [r7, #20]
 80096ae:	1ad3      	subs	r3, r2, r3
 80096b0:	2b64      	cmp	r3, #100	; 0x64
 80096b2:	d903      	bls.n	80096bc <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 80096b4:	2303      	movs	r3, #3
 80096b6:	e0ba      	b.n	800982e <HAL_RCCEx_PeriphCLKConfig+0x83e>
 80096b8:	40023800 	.word	0x40023800
 80096bc:	4b5e      	ldr	r3, [pc, #376]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 80096be:	681b      	ldr	r3, [r3, #0]
 80096c0:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80096c4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80096c8:	d0ed      	beq.n	80096a6 <HAL_RCCEx_PeriphCLKConfig+0x6b6>
 80096ca:	687b      	ldr	r3, [r7, #4]
 80096cc:	681b      	ldr	r3, [r3, #0]
 80096ce:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80096d2:	2b00      	cmp	r3, #0
 80096d4:	d003      	beq.n	80096de <HAL_RCCEx_PeriphCLKConfig+0x6ee>
 80096d6:	687b      	ldr	r3, [r7, #4]
 80096d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80096da:	2b00      	cmp	r3, #0
 80096dc:	d009      	beq.n	80096f2 <HAL_RCCEx_PeriphCLKConfig+0x702>
 80096de:	687b      	ldr	r3, [r7, #4]
 80096e0:	681b      	ldr	r3, [r3, #0]
 80096e2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80096e6:	2b00      	cmp	r3, #0
 80096e8:	d02e      	beq.n	8009748 <HAL_RCCEx_PeriphCLKConfig+0x758>
 80096ea:	687b      	ldr	r3, [r7, #4]
 80096ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80096ee:	2b00      	cmp	r3, #0
 80096f0:	d12a      	bne.n	8009748 <HAL_RCCEx_PeriphCLKConfig+0x758>
 80096f2:	4b51      	ldr	r3, [pc, #324]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 80096f4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80096f8:	0c1b      	lsrs	r3, r3, #16
 80096fa:	f003 0303 	and.w	r3, r3, #3
 80096fe:	613b      	str	r3, [r7, #16]
 8009700:	4b4d      	ldr	r3, [pc, #308]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 8009702:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8009706:	0f1b      	lsrs	r3, r3, #28
 8009708:	f003 0307 	and.w	r3, r3, #7
 800970c:	60fb      	str	r3, [r7, #12]
 800970e:	687b      	ldr	r3, [r7, #4]
 8009710:	695b      	ldr	r3, [r3, #20]
 8009712:	019a      	lsls	r2, r3, #6
 8009714:	693b      	ldr	r3, [r7, #16]
 8009716:	041b      	lsls	r3, r3, #16
 8009718:	431a      	orrs	r2, r3
 800971a:	687b      	ldr	r3, [r7, #4]
 800971c:	699b      	ldr	r3, [r3, #24]
 800971e:	061b      	lsls	r3, r3, #24
 8009720:	431a      	orrs	r2, r3
 8009722:	68fb      	ldr	r3, [r7, #12]
 8009724:	071b      	lsls	r3, r3, #28
 8009726:	4944      	ldr	r1, [pc, #272]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 8009728:	4313      	orrs	r3, r2
 800972a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800972e:	4b42      	ldr	r3, [pc, #264]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 8009730:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009734:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8009738:	687b      	ldr	r3, [r7, #4]
 800973a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800973c:	3b01      	subs	r3, #1
 800973e:	021b      	lsls	r3, r3, #8
 8009740:	493d      	ldr	r1, [pc, #244]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 8009742:	4313      	orrs	r3, r2
 8009744:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8009748:	687b      	ldr	r3, [r7, #4]
 800974a:	681b      	ldr	r3, [r3, #0]
 800974c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8009750:	2b00      	cmp	r3, #0
 8009752:	d022      	beq.n	800979a <HAL_RCCEx_PeriphCLKConfig+0x7aa>
 8009754:	687b      	ldr	r3, [r7, #4]
 8009756:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009758:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800975c:	d11d      	bne.n	800979a <HAL_RCCEx_PeriphCLKConfig+0x7aa>
 800975e:	4b36      	ldr	r3, [pc, #216]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 8009760:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8009764:	0e1b      	lsrs	r3, r3, #24
 8009766:	f003 030f 	and.w	r3, r3, #15
 800976a:	613b      	str	r3, [r7, #16]
 800976c:	4b32      	ldr	r3, [pc, #200]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 800976e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8009772:	0f1b      	lsrs	r3, r3, #28
 8009774:	f003 0307 	and.w	r3, r3, #7
 8009778:	60fb      	str	r3, [r7, #12]
 800977a:	687b      	ldr	r3, [r7, #4]
 800977c:	695b      	ldr	r3, [r3, #20]
 800977e:	019a      	lsls	r2, r3, #6
 8009780:	687b      	ldr	r3, [r7, #4]
 8009782:	6a1b      	ldr	r3, [r3, #32]
 8009784:	041b      	lsls	r3, r3, #16
 8009786:	431a      	orrs	r2, r3
 8009788:	693b      	ldr	r3, [r7, #16]
 800978a:	061b      	lsls	r3, r3, #24
 800978c:	431a      	orrs	r2, r3
 800978e:	68fb      	ldr	r3, [r7, #12]
 8009790:	071b      	lsls	r3, r3, #28
 8009792:	4929      	ldr	r1, [pc, #164]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 8009794:	4313      	orrs	r3, r2
 8009796:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800979a:	687b      	ldr	r3, [r7, #4]
 800979c:	681b      	ldr	r3, [r3, #0]
 800979e:	f003 0308 	and.w	r3, r3, #8
 80097a2:	2b00      	cmp	r3, #0
 80097a4:	d028      	beq.n	80097f8 <HAL_RCCEx_PeriphCLKConfig+0x808>
 80097a6:	4b24      	ldr	r3, [pc, #144]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 80097a8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80097ac:	0e1b      	lsrs	r3, r3, #24
 80097ae:	f003 030f 	and.w	r3, r3, #15
 80097b2:	613b      	str	r3, [r7, #16]
 80097b4:	4b20      	ldr	r3, [pc, #128]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 80097b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80097ba:	0c1b      	lsrs	r3, r3, #16
 80097bc:	f003 0303 	and.w	r3, r3, #3
 80097c0:	60fb      	str	r3, [r7, #12]
 80097c2:	687b      	ldr	r3, [r7, #4]
 80097c4:	695b      	ldr	r3, [r3, #20]
 80097c6:	019a      	lsls	r2, r3, #6
 80097c8:	68fb      	ldr	r3, [r7, #12]
 80097ca:	041b      	lsls	r3, r3, #16
 80097cc:	431a      	orrs	r2, r3
 80097ce:	693b      	ldr	r3, [r7, #16]
 80097d0:	061b      	lsls	r3, r3, #24
 80097d2:	431a      	orrs	r2, r3
 80097d4:	687b      	ldr	r3, [r7, #4]
 80097d6:	69db      	ldr	r3, [r3, #28]
 80097d8:	071b      	lsls	r3, r3, #28
 80097da:	4917      	ldr	r1, [pc, #92]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 80097dc:	4313      	orrs	r3, r2
 80097de:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80097e2:	4b15      	ldr	r3, [pc, #84]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 80097e4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80097e8:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80097ec:	687b      	ldr	r3, [r7, #4]
 80097ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80097f0:	4911      	ldr	r1, [pc, #68]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 80097f2:	4313      	orrs	r3, r2
 80097f4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80097f8:	4b0f      	ldr	r3, [pc, #60]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 80097fa:	681b      	ldr	r3, [r3, #0]
 80097fc:	4a0e      	ldr	r2, [pc, #56]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 80097fe:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009802:	6013      	str	r3, [r2, #0]
 8009804:	f7fe fb7a 	bl	8007efc <HAL_GetTick>
 8009808:	6178      	str	r0, [r7, #20]
 800980a:	e008      	b.n	800981e <HAL_RCCEx_PeriphCLKConfig+0x82e>
 800980c:	f7fe fb76 	bl	8007efc <HAL_GetTick>
 8009810:	4602      	mov	r2, r0
 8009812:	697b      	ldr	r3, [r7, #20]
 8009814:	1ad3      	subs	r3, r2, r3
 8009816:	2b64      	cmp	r3, #100	; 0x64
 8009818:	d901      	bls.n	800981e <HAL_RCCEx_PeriphCLKConfig+0x82e>
 800981a:	2303      	movs	r3, #3
 800981c:	e007      	b.n	800982e <HAL_RCCEx_PeriphCLKConfig+0x83e>
 800981e:	4b06      	ldr	r3, [pc, #24]	; (8009838 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 8009820:	681b      	ldr	r3, [r3, #0]
 8009822:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009826:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800982a:	d1ef      	bne.n	800980c <HAL_RCCEx_PeriphCLKConfig+0x81c>
 800982c:	2300      	movs	r3, #0
 800982e:	4618      	mov	r0, r3
 8009830:	3720      	adds	r7, #32
 8009832:	46bd      	mov	sp, r7
 8009834:	bd80      	pop	{r7, pc}
 8009836:	bf00      	nop
 8009838:	40023800 	.word	0x40023800

0800983c <HAL_UART_Init>:
 800983c:	b580      	push	{r7, lr}
 800983e:	b082      	sub	sp, #8
 8009840:	af00      	add	r7, sp, #0
 8009842:	6078      	str	r0, [r7, #4]
 8009844:	687b      	ldr	r3, [r7, #4]
 8009846:	2b00      	cmp	r3, #0
 8009848:	d101      	bne.n	800984e <HAL_UART_Init+0x12>
 800984a:	2301      	movs	r3, #1
 800984c:	e040      	b.n	80098d0 <HAL_UART_Init+0x94>
 800984e:	687b      	ldr	r3, [r7, #4]
 8009850:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009852:	2b00      	cmp	r3, #0
 8009854:	d106      	bne.n	8009864 <HAL_UART_Init+0x28>
 8009856:	687b      	ldr	r3, [r7, #4]
 8009858:	2200      	movs	r2, #0
 800985a:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800985e:	6878      	ldr	r0, [r7, #4]
 8009860:	f7fe f9cc 	bl	8007bfc <HAL_UART_MspInit>
 8009864:	687b      	ldr	r3, [r7, #4]
 8009866:	2224      	movs	r2, #36	; 0x24
 8009868:	675a      	str	r2, [r3, #116]	; 0x74
 800986a:	687b      	ldr	r3, [r7, #4]
 800986c:	681b      	ldr	r3, [r3, #0]
 800986e:	681a      	ldr	r2, [r3, #0]
 8009870:	687b      	ldr	r3, [r7, #4]
 8009872:	681b      	ldr	r3, [r3, #0]
 8009874:	f022 0201 	bic.w	r2, r2, #1
 8009878:	601a      	str	r2, [r3, #0]
 800987a:	6878      	ldr	r0, [r7, #4]
 800987c:	f000 f98a 	bl	8009b94 <UART_SetConfig>
 8009880:	4603      	mov	r3, r0
 8009882:	2b01      	cmp	r3, #1
 8009884:	d101      	bne.n	800988a <HAL_UART_Init+0x4e>
 8009886:	2301      	movs	r3, #1
 8009888:	e022      	b.n	80098d0 <HAL_UART_Init+0x94>
 800988a:	687b      	ldr	r3, [r7, #4]
 800988c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800988e:	2b00      	cmp	r3, #0
 8009890:	d002      	beq.n	8009898 <HAL_UART_Init+0x5c>
 8009892:	6878      	ldr	r0, [r7, #4]
 8009894:	f000 fc28 	bl	800a0e8 <UART_AdvFeatureConfig>
 8009898:	687b      	ldr	r3, [r7, #4]
 800989a:	681b      	ldr	r3, [r3, #0]
 800989c:	685a      	ldr	r2, [r3, #4]
 800989e:	687b      	ldr	r3, [r7, #4]
 80098a0:	681b      	ldr	r3, [r3, #0]
 80098a2:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80098a6:	605a      	str	r2, [r3, #4]
 80098a8:	687b      	ldr	r3, [r7, #4]
 80098aa:	681b      	ldr	r3, [r3, #0]
 80098ac:	689a      	ldr	r2, [r3, #8]
 80098ae:	687b      	ldr	r3, [r7, #4]
 80098b0:	681b      	ldr	r3, [r3, #0]
 80098b2:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80098b6:	609a      	str	r2, [r3, #8]
 80098b8:	687b      	ldr	r3, [r7, #4]
 80098ba:	681b      	ldr	r3, [r3, #0]
 80098bc:	681a      	ldr	r2, [r3, #0]
 80098be:	687b      	ldr	r3, [r7, #4]
 80098c0:	681b      	ldr	r3, [r3, #0]
 80098c2:	f042 0201 	orr.w	r2, r2, #1
 80098c6:	601a      	str	r2, [r3, #0]
 80098c8:	6878      	ldr	r0, [r7, #4]
 80098ca:	f000 fcaf 	bl	800a22c <UART_CheckIdleState>
 80098ce:	4603      	mov	r3, r0
 80098d0:	4618      	mov	r0, r3
 80098d2:	3708      	adds	r7, #8
 80098d4:	46bd      	mov	sp, r7
 80098d6:	bd80      	pop	{r7, pc}

080098d8 <HAL_UART_Transmit>:
 80098d8:	b580      	push	{r7, lr}
 80098da:	b08a      	sub	sp, #40	; 0x28
 80098dc:	af02      	add	r7, sp, #8
 80098de:	60f8      	str	r0, [r7, #12]
 80098e0:	60b9      	str	r1, [r7, #8]
 80098e2:	603b      	str	r3, [r7, #0]
 80098e4:	4613      	mov	r3, r2
 80098e6:	80fb      	strh	r3, [r7, #6]
 80098e8:	68fb      	ldr	r3, [r7, #12]
 80098ea:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80098ec:	2b20      	cmp	r3, #32
 80098ee:	d17f      	bne.n	80099f0 <HAL_UART_Transmit+0x118>
 80098f0:	68bb      	ldr	r3, [r7, #8]
 80098f2:	2b00      	cmp	r3, #0
 80098f4:	d002      	beq.n	80098fc <HAL_UART_Transmit+0x24>
 80098f6:	88fb      	ldrh	r3, [r7, #6]
 80098f8:	2b00      	cmp	r3, #0
 80098fa:	d101      	bne.n	8009900 <HAL_UART_Transmit+0x28>
 80098fc:	2301      	movs	r3, #1
 80098fe:	e078      	b.n	80099f2 <HAL_UART_Transmit+0x11a>
 8009900:	68fb      	ldr	r3, [r7, #12]
 8009902:	f893 3070 	ldrb.w	r3, [r3, #112]	; 0x70
 8009906:	2b01      	cmp	r3, #1
 8009908:	d101      	bne.n	800990e <HAL_UART_Transmit+0x36>
 800990a:	2302      	movs	r3, #2
 800990c:	e071      	b.n	80099f2 <HAL_UART_Transmit+0x11a>
 800990e:	68fb      	ldr	r3, [r7, #12]
 8009910:	2201      	movs	r2, #1
 8009912:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 8009916:	68fb      	ldr	r3, [r7, #12]
 8009918:	2200      	movs	r2, #0
 800991a:	67da      	str	r2, [r3, #124]	; 0x7c
 800991c:	68fb      	ldr	r3, [r7, #12]
 800991e:	2221      	movs	r2, #33	; 0x21
 8009920:	675a      	str	r2, [r3, #116]	; 0x74
 8009922:	f7fe faeb 	bl	8007efc <HAL_GetTick>
 8009926:	6178      	str	r0, [r7, #20]
 8009928:	68fb      	ldr	r3, [r7, #12]
 800992a:	88fa      	ldrh	r2, [r7, #6]
 800992c:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8009930:	68fb      	ldr	r3, [r7, #12]
 8009932:	88fa      	ldrh	r2, [r7, #6]
 8009934:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8009938:	68fb      	ldr	r3, [r7, #12]
 800993a:	689b      	ldr	r3, [r3, #8]
 800993c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009940:	d108      	bne.n	8009954 <HAL_UART_Transmit+0x7c>
 8009942:	68fb      	ldr	r3, [r7, #12]
 8009944:	691b      	ldr	r3, [r3, #16]
 8009946:	2b00      	cmp	r3, #0
 8009948:	d104      	bne.n	8009954 <HAL_UART_Transmit+0x7c>
 800994a:	2300      	movs	r3, #0
 800994c:	61fb      	str	r3, [r7, #28]
 800994e:	68bb      	ldr	r3, [r7, #8]
 8009950:	61bb      	str	r3, [r7, #24]
 8009952:	e003      	b.n	800995c <HAL_UART_Transmit+0x84>
 8009954:	68bb      	ldr	r3, [r7, #8]
 8009956:	61fb      	str	r3, [r7, #28]
 8009958:	2300      	movs	r3, #0
 800995a:	61bb      	str	r3, [r7, #24]
 800995c:	68fb      	ldr	r3, [r7, #12]
 800995e:	2200      	movs	r2, #0
 8009960:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 8009964:	e02c      	b.n	80099c0 <HAL_UART_Transmit+0xe8>
 8009966:	683b      	ldr	r3, [r7, #0]
 8009968:	9300      	str	r3, [sp, #0]
 800996a:	697b      	ldr	r3, [r7, #20]
 800996c:	2200      	movs	r2, #0
 800996e:	2180      	movs	r1, #128	; 0x80
 8009970:	68f8      	ldr	r0, [r7, #12]
 8009972:	f000 fca0 	bl	800a2b6 <UART_WaitOnFlagUntilTimeout>
 8009976:	4603      	mov	r3, r0
 8009978:	2b00      	cmp	r3, #0
 800997a:	d001      	beq.n	8009980 <HAL_UART_Transmit+0xa8>
 800997c:	2303      	movs	r3, #3
 800997e:	e038      	b.n	80099f2 <HAL_UART_Transmit+0x11a>
 8009980:	69fb      	ldr	r3, [r7, #28]
 8009982:	2b00      	cmp	r3, #0
 8009984:	d10b      	bne.n	800999e <HAL_UART_Transmit+0xc6>
 8009986:	69bb      	ldr	r3, [r7, #24]
 8009988:	881b      	ldrh	r3, [r3, #0]
 800998a:	461a      	mov	r2, r3
 800998c:	68fb      	ldr	r3, [r7, #12]
 800998e:	681b      	ldr	r3, [r3, #0]
 8009990:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009994:	629a      	str	r2, [r3, #40]	; 0x28
 8009996:	69bb      	ldr	r3, [r7, #24]
 8009998:	3302      	adds	r3, #2
 800999a:	61bb      	str	r3, [r7, #24]
 800999c:	e007      	b.n	80099ae <HAL_UART_Transmit+0xd6>
 800999e:	69fb      	ldr	r3, [r7, #28]
 80099a0:	781a      	ldrb	r2, [r3, #0]
 80099a2:	68fb      	ldr	r3, [r7, #12]
 80099a4:	681b      	ldr	r3, [r3, #0]
 80099a6:	629a      	str	r2, [r3, #40]	; 0x28
 80099a8:	69fb      	ldr	r3, [r7, #28]
 80099aa:	3301      	adds	r3, #1
 80099ac:	61fb      	str	r3, [r7, #28]
 80099ae:	68fb      	ldr	r3, [r7, #12]
 80099b0:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 80099b4:	b29b      	uxth	r3, r3
 80099b6:	3b01      	subs	r3, #1
 80099b8:	b29a      	uxth	r2, r3
 80099ba:	68fb      	ldr	r3, [r7, #12]
 80099bc:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 80099c0:	68fb      	ldr	r3, [r7, #12]
 80099c2:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 80099c6:	b29b      	uxth	r3, r3
 80099c8:	2b00      	cmp	r3, #0
 80099ca:	d1cc      	bne.n	8009966 <HAL_UART_Transmit+0x8e>
 80099cc:	683b      	ldr	r3, [r7, #0]
 80099ce:	9300      	str	r3, [sp, #0]
 80099d0:	697b      	ldr	r3, [r7, #20]
 80099d2:	2200      	movs	r2, #0
 80099d4:	2140      	movs	r1, #64	; 0x40
 80099d6:	68f8      	ldr	r0, [r7, #12]
 80099d8:	f000 fc6d 	bl	800a2b6 <UART_WaitOnFlagUntilTimeout>
 80099dc:	4603      	mov	r3, r0
 80099de:	2b00      	cmp	r3, #0
 80099e0:	d001      	beq.n	80099e6 <HAL_UART_Transmit+0x10e>
 80099e2:	2303      	movs	r3, #3
 80099e4:	e005      	b.n	80099f2 <HAL_UART_Transmit+0x11a>
 80099e6:	68fb      	ldr	r3, [r7, #12]
 80099e8:	2220      	movs	r2, #32
 80099ea:	675a      	str	r2, [r3, #116]	; 0x74
 80099ec:	2300      	movs	r3, #0
 80099ee:	e000      	b.n	80099f2 <HAL_UART_Transmit+0x11a>
 80099f0:	2302      	movs	r3, #2
 80099f2:	4618      	mov	r0, r3
 80099f4:	3720      	adds	r7, #32
 80099f6:	46bd      	mov	sp, r7
 80099f8:	bd80      	pop	{r7, pc}

080099fa <HAL_UART_Receive>:
 80099fa:	b580      	push	{r7, lr}
 80099fc:	b08a      	sub	sp, #40	; 0x28
 80099fe:	af02      	add	r7, sp, #8
 8009a00:	60f8      	str	r0, [r7, #12]
 8009a02:	60b9      	str	r1, [r7, #8]
 8009a04:	603b      	str	r3, [r7, #0]
 8009a06:	4613      	mov	r3, r2
 8009a08:	80fb      	strh	r3, [r7, #6]
 8009a0a:	68fb      	ldr	r3, [r7, #12]
 8009a0c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009a0e:	2b20      	cmp	r3, #32
 8009a10:	f040 80ba 	bne.w	8009b88 <HAL_UART_Receive+0x18e>
 8009a14:	68bb      	ldr	r3, [r7, #8]
 8009a16:	2b00      	cmp	r3, #0
 8009a18:	d002      	beq.n	8009a20 <HAL_UART_Receive+0x26>
 8009a1a:	88fb      	ldrh	r3, [r7, #6]
 8009a1c:	2b00      	cmp	r3, #0
 8009a1e:	d101      	bne.n	8009a24 <HAL_UART_Receive+0x2a>
 8009a20:	2301      	movs	r3, #1
 8009a22:	e0b2      	b.n	8009b8a <HAL_UART_Receive+0x190>
 8009a24:	68fb      	ldr	r3, [r7, #12]
 8009a26:	f893 3070 	ldrb.w	r3, [r3, #112]	; 0x70
 8009a2a:	2b01      	cmp	r3, #1
 8009a2c:	d101      	bne.n	8009a32 <HAL_UART_Receive+0x38>
 8009a2e:	2302      	movs	r3, #2
 8009a30:	e0ab      	b.n	8009b8a <HAL_UART_Receive+0x190>
 8009a32:	68fb      	ldr	r3, [r7, #12]
 8009a34:	2201      	movs	r2, #1
 8009a36:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 8009a3a:	68fb      	ldr	r3, [r7, #12]
 8009a3c:	2200      	movs	r2, #0
 8009a3e:	67da      	str	r2, [r3, #124]	; 0x7c
 8009a40:	68fb      	ldr	r3, [r7, #12]
 8009a42:	2222      	movs	r2, #34	; 0x22
 8009a44:	679a      	str	r2, [r3, #120]	; 0x78
 8009a46:	f7fe fa59 	bl	8007efc <HAL_GetTick>
 8009a4a:	6178      	str	r0, [r7, #20]
 8009a4c:	68fb      	ldr	r3, [r7, #12]
 8009a4e:	88fa      	ldrh	r2, [r7, #6]
 8009a50:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 8009a54:	68fb      	ldr	r3, [r7, #12]
 8009a56:	88fa      	ldrh	r2, [r7, #6]
 8009a58:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8009a5c:	68fb      	ldr	r3, [r7, #12]
 8009a5e:	689b      	ldr	r3, [r3, #8]
 8009a60:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009a64:	d10e      	bne.n	8009a84 <HAL_UART_Receive+0x8a>
 8009a66:	68fb      	ldr	r3, [r7, #12]
 8009a68:	691b      	ldr	r3, [r3, #16]
 8009a6a:	2b00      	cmp	r3, #0
 8009a6c:	d105      	bne.n	8009a7a <HAL_UART_Receive+0x80>
 8009a6e:	68fb      	ldr	r3, [r7, #12]
 8009a70:	f240 12ff 	movw	r2, #511	; 0x1ff
 8009a74:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8009a78:	e02d      	b.n	8009ad6 <HAL_UART_Receive+0xdc>
 8009a7a:	68fb      	ldr	r3, [r7, #12]
 8009a7c:	22ff      	movs	r2, #255	; 0xff
 8009a7e:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8009a82:	e028      	b.n	8009ad6 <HAL_UART_Receive+0xdc>
 8009a84:	68fb      	ldr	r3, [r7, #12]
 8009a86:	689b      	ldr	r3, [r3, #8]
 8009a88:	2b00      	cmp	r3, #0
 8009a8a:	d10d      	bne.n	8009aa8 <HAL_UART_Receive+0xae>
 8009a8c:	68fb      	ldr	r3, [r7, #12]
 8009a8e:	691b      	ldr	r3, [r3, #16]
 8009a90:	2b00      	cmp	r3, #0
 8009a92:	d104      	bne.n	8009a9e <HAL_UART_Receive+0xa4>
 8009a94:	68fb      	ldr	r3, [r7, #12]
 8009a96:	22ff      	movs	r2, #255	; 0xff
 8009a98:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8009a9c:	e01b      	b.n	8009ad6 <HAL_UART_Receive+0xdc>
 8009a9e:	68fb      	ldr	r3, [r7, #12]
 8009aa0:	227f      	movs	r2, #127	; 0x7f
 8009aa2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8009aa6:	e016      	b.n	8009ad6 <HAL_UART_Receive+0xdc>
 8009aa8:	68fb      	ldr	r3, [r7, #12]
 8009aaa:	689b      	ldr	r3, [r3, #8]
 8009aac:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009ab0:	d10d      	bne.n	8009ace <HAL_UART_Receive+0xd4>
 8009ab2:	68fb      	ldr	r3, [r7, #12]
 8009ab4:	691b      	ldr	r3, [r3, #16]
 8009ab6:	2b00      	cmp	r3, #0
 8009ab8:	d104      	bne.n	8009ac4 <HAL_UART_Receive+0xca>
 8009aba:	68fb      	ldr	r3, [r7, #12]
 8009abc:	227f      	movs	r2, #127	; 0x7f
 8009abe:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8009ac2:	e008      	b.n	8009ad6 <HAL_UART_Receive+0xdc>
 8009ac4:	68fb      	ldr	r3, [r7, #12]
 8009ac6:	223f      	movs	r2, #63	; 0x3f
 8009ac8:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8009acc:	e003      	b.n	8009ad6 <HAL_UART_Receive+0xdc>
 8009ace:	68fb      	ldr	r3, [r7, #12]
 8009ad0:	2200      	movs	r2, #0
 8009ad2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8009ad6:	68fb      	ldr	r3, [r7, #12]
 8009ad8:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8009adc:	827b      	strh	r3, [r7, #18]
 8009ade:	68fb      	ldr	r3, [r7, #12]
 8009ae0:	689b      	ldr	r3, [r3, #8]
 8009ae2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009ae6:	d108      	bne.n	8009afa <HAL_UART_Receive+0x100>
 8009ae8:	68fb      	ldr	r3, [r7, #12]
 8009aea:	691b      	ldr	r3, [r3, #16]
 8009aec:	2b00      	cmp	r3, #0
 8009aee:	d104      	bne.n	8009afa <HAL_UART_Receive+0x100>
 8009af0:	2300      	movs	r3, #0
 8009af2:	61fb      	str	r3, [r7, #28]
 8009af4:	68bb      	ldr	r3, [r7, #8]
 8009af6:	61bb      	str	r3, [r7, #24]
 8009af8:	e003      	b.n	8009b02 <HAL_UART_Receive+0x108>
 8009afa:	68bb      	ldr	r3, [r7, #8]
 8009afc:	61fb      	str	r3, [r7, #28]
 8009afe:	2300      	movs	r3, #0
 8009b00:	61bb      	str	r3, [r7, #24]
 8009b02:	68fb      	ldr	r3, [r7, #12]
 8009b04:	2200      	movs	r2, #0
 8009b06:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 8009b0a:	e032      	b.n	8009b72 <HAL_UART_Receive+0x178>
 8009b0c:	683b      	ldr	r3, [r7, #0]
 8009b0e:	9300      	str	r3, [sp, #0]
 8009b10:	697b      	ldr	r3, [r7, #20]
 8009b12:	2200      	movs	r2, #0
 8009b14:	2120      	movs	r1, #32
 8009b16:	68f8      	ldr	r0, [r7, #12]
 8009b18:	f000 fbcd 	bl	800a2b6 <UART_WaitOnFlagUntilTimeout>
 8009b1c:	4603      	mov	r3, r0
 8009b1e:	2b00      	cmp	r3, #0
 8009b20:	d001      	beq.n	8009b26 <HAL_UART_Receive+0x12c>
 8009b22:	2303      	movs	r3, #3
 8009b24:	e031      	b.n	8009b8a <HAL_UART_Receive+0x190>
 8009b26:	69fb      	ldr	r3, [r7, #28]
 8009b28:	2b00      	cmp	r3, #0
 8009b2a:	d10c      	bne.n	8009b46 <HAL_UART_Receive+0x14c>
 8009b2c:	68fb      	ldr	r3, [r7, #12]
 8009b2e:	681b      	ldr	r3, [r3, #0]
 8009b30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b32:	b29a      	uxth	r2, r3
 8009b34:	8a7b      	ldrh	r3, [r7, #18]
 8009b36:	4013      	ands	r3, r2
 8009b38:	b29a      	uxth	r2, r3
 8009b3a:	69bb      	ldr	r3, [r7, #24]
 8009b3c:	801a      	strh	r2, [r3, #0]
 8009b3e:	69bb      	ldr	r3, [r7, #24]
 8009b40:	3302      	adds	r3, #2
 8009b42:	61bb      	str	r3, [r7, #24]
 8009b44:	e00c      	b.n	8009b60 <HAL_UART_Receive+0x166>
 8009b46:	68fb      	ldr	r3, [r7, #12]
 8009b48:	681b      	ldr	r3, [r3, #0]
 8009b4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b4c:	b2da      	uxtb	r2, r3
 8009b4e:	8a7b      	ldrh	r3, [r7, #18]
 8009b50:	b2db      	uxtb	r3, r3
 8009b52:	4013      	ands	r3, r2
 8009b54:	b2da      	uxtb	r2, r3
 8009b56:	69fb      	ldr	r3, [r7, #28]
 8009b58:	701a      	strb	r2, [r3, #0]
 8009b5a:	69fb      	ldr	r3, [r7, #28]
 8009b5c:	3301      	adds	r3, #1
 8009b5e:	61fb      	str	r3, [r7, #28]
 8009b60:	68fb      	ldr	r3, [r7, #12]
 8009b62:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8009b66:	b29b      	uxth	r3, r3
 8009b68:	3b01      	subs	r3, #1
 8009b6a:	b29a      	uxth	r2, r3
 8009b6c:	68fb      	ldr	r3, [r7, #12]
 8009b6e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8009b72:	68fb      	ldr	r3, [r7, #12]
 8009b74:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8009b78:	b29b      	uxth	r3, r3
 8009b7a:	2b00      	cmp	r3, #0
 8009b7c:	d1c6      	bne.n	8009b0c <HAL_UART_Receive+0x112>
 8009b7e:	68fb      	ldr	r3, [r7, #12]
 8009b80:	2220      	movs	r2, #32
 8009b82:	679a      	str	r2, [r3, #120]	; 0x78
 8009b84:	2300      	movs	r3, #0
 8009b86:	e000      	b.n	8009b8a <HAL_UART_Receive+0x190>
 8009b88:	2302      	movs	r3, #2
 8009b8a:	4618      	mov	r0, r3
 8009b8c:	3720      	adds	r7, #32
 8009b8e:	46bd      	mov	sp, r7
 8009b90:	bd80      	pop	{r7, pc}
	...

08009b94 <UART_SetConfig>:
 8009b94:	b580      	push	{r7, lr}
 8009b96:	b088      	sub	sp, #32
 8009b98:	af00      	add	r7, sp, #0
 8009b9a:	6078      	str	r0, [r7, #4]
 8009b9c:	2300      	movs	r3, #0
 8009b9e:	61bb      	str	r3, [r7, #24]
 8009ba0:	2300      	movs	r3, #0
 8009ba2:	75fb      	strb	r3, [r7, #23]
 8009ba4:	687b      	ldr	r3, [r7, #4]
 8009ba6:	689a      	ldr	r2, [r3, #8]
 8009ba8:	687b      	ldr	r3, [r7, #4]
 8009baa:	691b      	ldr	r3, [r3, #16]
 8009bac:	431a      	orrs	r2, r3
 8009bae:	687b      	ldr	r3, [r7, #4]
 8009bb0:	695b      	ldr	r3, [r3, #20]
 8009bb2:	431a      	orrs	r2, r3
 8009bb4:	687b      	ldr	r3, [r7, #4]
 8009bb6:	69db      	ldr	r3, [r3, #28]
 8009bb8:	4313      	orrs	r3, r2
 8009bba:	613b      	str	r3, [r7, #16]
 8009bbc:	687b      	ldr	r3, [r7, #4]
 8009bbe:	681b      	ldr	r3, [r3, #0]
 8009bc0:	681a      	ldr	r2, [r3, #0]
 8009bc2:	4bb1      	ldr	r3, [pc, #708]	; (8009e88 <UART_SetConfig+0x2f4>)
 8009bc4:	4013      	ands	r3, r2
 8009bc6:	687a      	ldr	r2, [r7, #4]
 8009bc8:	6812      	ldr	r2, [r2, #0]
 8009bca:	6939      	ldr	r1, [r7, #16]
 8009bcc:	430b      	orrs	r3, r1
 8009bce:	6013      	str	r3, [r2, #0]
 8009bd0:	687b      	ldr	r3, [r7, #4]
 8009bd2:	681b      	ldr	r3, [r3, #0]
 8009bd4:	685b      	ldr	r3, [r3, #4]
 8009bd6:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8009bda:	687b      	ldr	r3, [r7, #4]
 8009bdc:	68da      	ldr	r2, [r3, #12]
 8009bde:	687b      	ldr	r3, [r7, #4]
 8009be0:	681b      	ldr	r3, [r3, #0]
 8009be2:	430a      	orrs	r2, r1
 8009be4:	605a      	str	r2, [r3, #4]
 8009be6:	687b      	ldr	r3, [r7, #4]
 8009be8:	699b      	ldr	r3, [r3, #24]
 8009bea:	613b      	str	r3, [r7, #16]
 8009bec:	687b      	ldr	r3, [r7, #4]
 8009bee:	6a1b      	ldr	r3, [r3, #32]
 8009bf0:	693a      	ldr	r2, [r7, #16]
 8009bf2:	4313      	orrs	r3, r2
 8009bf4:	613b      	str	r3, [r7, #16]
 8009bf6:	687b      	ldr	r3, [r7, #4]
 8009bf8:	681b      	ldr	r3, [r3, #0]
 8009bfa:	689b      	ldr	r3, [r3, #8]
 8009bfc:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8009c00:	687b      	ldr	r3, [r7, #4]
 8009c02:	681b      	ldr	r3, [r3, #0]
 8009c04:	693a      	ldr	r2, [r7, #16]
 8009c06:	430a      	orrs	r2, r1
 8009c08:	609a      	str	r2, [r3, #8]
 8009c0a:	687b      	ldr	r3, [r7, #4]
 8009c0c:	681b      	ldr	r3, [r3, #0]
 8009c0e:	4a9f      	ldr	r2, [pc, #636]	; (8009e8c <UART_SetConfig+0x2f8>)
 8009c10:	4293      	cmp	r3, r2
 8009c12:	d121      	bne.n	8009c58 <UART_SetConfig+0xc4>
 8009c14:	4b9e      	ldr	r3, [pc, #632]	; (8009e90 <UART_SetConfig+0x2fc>)
 8009c16:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009c1a:	f003 0303 	and.w	r3, r3, #3
 8009c1e:	2b03      	cmp	r3, #3
 8009c20:	d816      	bhi.n	8009c50 <UART_SetConfig+0xbc>
 8009c22:	a201      	add	r2, pc, #4	; (adr r2, 8009c28 <UART_SetConfig+0x94>)
 8009c24:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009c28:	08009c39 	.word	0x08009c39
 8009c2c:	08009c45 	.word	0x08009c45
 8009c30:	08009c3f 	.word	0x08009c3f
 8009c34:	08009c4b 	.word	0x08009c4b
 8009c38:	2301      	movs	r3, #1
 8009c3a:	77fb      	strb	r3, [r7, #31]
 8009c3c:	e151      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009c3e:	2302      	movs	r3, #2
 8009c40:	77fb      	strb	r3, [r7, #31]
 8009c42:	e14e      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009c44:	2304      	movs	r3, #4
 8009c46:	77fb      	strb	r3, [r7, #31]
 8009c48:	e14b      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009c4a:	2308      	movs	r3, #8
 8009c4c:	77fb      	strb	r3, [r7, #31]
 8009c4e:	e148      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009c50:	2310      	movs	r3, #16
 8009c52:	77fb      	strb	r3, [r7, #31]
 8009c54:	bf00      	nop
 8009c56:	e144      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009c58:	687b      	ldr	r3, [r7, #4]
 8009c5a:	681b      	ldr	r3, [r3, #0]
 8009c5c:	4a8d      	ldr	r2, [pc, #564]	; (8009e94 <UART_SetConfig+0x300>)
 8009c5e:	4293      	cmp	r3, r2
 8009c60:	d134      	bne.n	8009ccc <UART_SetConfig+0x138>
 8009c62:	4b8b      	ldr	r3, [pc, #556]	; (8009e90 <UART_SetConfig+0x2fc>)
 8009c64:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009c68:	f003 030c 	and.w	r3, r3, #12
 8009c6c:	2b0c      	cmp	r3, #12
 8009c6e:	d829      	bhi.n	8009cc4 <UART_SetConfig+0x130>
 8009c70:	a201      	add	r2, pc, #4	; (adr r2, 8009c78 <UART_SetConfig+0xe4>)
 8009c72:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009c76:	bf00      	nop
 8009c78:	08009cad 	.word	0x08009cad
 8009c7c:	08009cc5 	.word	0x08009cc5
 8009c80:	08009cc5 	.word	0x08009cc5
 8009c84:	08009cc5 	.word	0x08009cc5
 8009c88:	08009cb9 	.word	0x08009cb9
 8009c8c:	08009cc5 	.word	0x08009cc5
 8009c90:	08009cc5 	.word	0x08009cc5
 8009c94:	08009cc5 	.word	0x08009cc5
 8009c98:	08009cb3 	.word	0x08009cb3
 8009c9c:	08009cc5 	.word	0x08009cc5
 8009ca0:	08009cc5 	.word	0x08009cc5
 8009ca4:	08009cc5 	.word	0x08009cc5
 8009ca8:	08009cbf 	.word	0x08009cbf
 8009cac:	2300      	movs	r3, #0
 8009cae:	77fb      	strb	r3, [r7, #31]
 8009cb0:	e117      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009cb2:	2302      	movs	r3, #2
 8009cb4:	77fb      	strb	r3, [r7, #31]
 8009cb6:	e114      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009cb8:	2304      	movs	r3, #4
 8009cba:	77fb      	strb	r3, [r7, #31]
 8009cbc:	e111      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009cbe:	2308      	movs	r3, #8
 8009cc0:	77fb      	strb	r3, [r7, #31]
 8009cc2:	e10e      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009cc4:	2310      	movs	r3, #16
 8009cc6:	77fb      	strb	r3, [r7, #31]
 8009cc8:	bf00      	nop
 8009cca:	e10a      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009ccc:	687b      	ldr	r3, [r7, #4]
 8009cce:	681b      	ldr	r3, [r3, #0]
 8009cd0:	4a71      	ldr	r2, [pc, #452]	; (8009e98 <UART_SetConfig+0x304>)
 8009cd2:	4293      	cmp	r3, r2
 8009cd4:	d120      	bne.n	8009d18 <UART_SetConfig+0x184>
 8009cd6:	4b6e      	ldr	r3, [pc, #440]	; (8009e90 <UART_SetConfig+0x2fc>)
 8009cd8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009cdc:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8009ce0:	2b10      	cmp	r3, #16
 8009ce2:	d00f      	beq.n	8009d04 <UART_SetConfig+0x170>
 8009ce4:	2b10      	cmp	r3, #16
 8009ce6:	d802      	bhi.n	8009cee <UART_SetConfig+0x15a>
 8009ce8:	2b00      	cmp	r3, #0
 8009cea:	d005      	beq.n	8009cf8 <UART_SetConfig+0x164>
 8009cec:	e010      	b.n	8009d10 <UART_SetConfig+0x17c>
 8009cee:	2b20      	cmp	r3, #32
 8009cf0:	d005      	beq.n	8009cfe <UART_SetConfig+0x16a>
 8009cf2:	2b30      	cmp	r3, #48	; 0x30
 8009cf4:	d009      	beq.n	8009d0a <UART_SetConfig+0x176>
 8009cf6:	e00b      	b.n	8009d10 <UART_SetConfig+0x17c>
 8009cf8:	2300      	movs	r3, #0
 8009cfa:	77fb      	strb	r3, [r7, #31]
 8009cfc:	e0f1      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009cfe:	2302      	movs	r3, #2
 8009d00:	77fb      	strb	r3, [r7, #31]
 8009d02:	e0ee      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009d04:	2304      	movs	r3, #4
 8009d06:	77fb      	strb	r3, [r7, #31]
 8009d08:	e0eb      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009d0a:	2308      	movs	r3, #8
 8009d0c:	77fb      	strb	r3, [r7, #31]
 8009d0e:	e0e8      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009d10:	2310      	movs	r3, #16
 8009d12:	77fb      	strb	r3, [r7, #31]
 8009d14:	bf00      	nop
 8009d16:	e0e4      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009d18:	687b      	ldr	r3, [r7, #4]
 8009d1a:	681b      	ldr	r3, [r3, #0]
 8009d1c:	4a5f      	ldr	r2, [pc, #380]	; (8009e9c <UART_SetConfig+0x308>)
 8009d1e:	4293      	cmp	r3, r2
 8009d20:	d120      	bne.n	8009d64 <UART_SetConfig+0x1d0>
 8009d22:	4b5b      	ldr	r3, [pc, #364]	; (8009e90 <UART_SetConfig+0x2fc>)
 8009d24:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009d28:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8009d2c:	2b40      	cmp	r3, #64	; 0x40
 8009d2e:	d00f      	beq.n	8009d50 <UART_SetConfig+0x1bc>
 8009d30:	2b40      	cmp	r3, #64	; 0x40
 8009d32:	d802      	bhi.n	8009d3a <UART_SetConfig+0x1a6>
 8009d34:	2b00      	cmp	r3, #0
 8009d36:	d005      	beq.n	8009d44 <UART_SetConfig+0x1b0>
 8009d38:	e010      	b.n	8009d5c <UART_SetConfig+0x1c8>
 8009d3a:	2b80      	cmp	r3, #128	; 0x80
 8009d3c:	d005      	beq.n	8009d4a <UART_SetConfig+0x1b6>
 8009d3e:	2bc0      	cmp	r3, #192	; 0xc0
 8009d40:	d009      	beq.n	8009d56 <UART_SetConfig+0x1c2>
 8009d42:	e00b      	b.n	8009d5c <UART_SetConfig+0x1c8>
 8009d44:	2300      	movs	r3, #0
 8009d46:	77fb      	strb	r3, [r7, #31]
 8009d48:	e0cb      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009d4a:	2302      	movs	r3, #2
 8009d4c:	77fb      	strb	r3, [r7, #31]
 8009d4e:	e0c8      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009d50:	2304      	movs	r3, #4
 8009d52:	77fb      	strb	r3, [r7, #31]
 8009d54:	e0c5      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009d56:	2308      	movs	r3, #8
 8009d58:	77fb      	strb	r3, [r7, #31]
 8009d5a:	e0c2      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009d5c:	2310      	movs	r3, #16
 8009d5e:	77fb      	strb	r3, [r7, #31]
 8009d60:	bf00      	nop
 8009d62:	e0be      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009d64:	687b      	ldr	r3, [r7, #4]
 8009d66:	681b      	ldr	r3, [r3, #0]
 8009d68:	4a4d      	ldr	r2, [pc, #308]	; (8009ea0 <UART_SetConfig+0x30c>)
 8009d6a:	4293      	cmp	r3, r2
 8009d6c:	d124      	bne.n	8009db8 <UART_SetConfig+0x224>
 8009d6e:	4b48      	ldr	r3, [pc, #288]	; (8009e90 <UART_SetConfig+0x2fc>)
 8009d70:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009d74:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009d78:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009d7c:	d012      	beq.n	8009da4 <UART_SetConfig+0x210>
 8009d7e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009d82:	d802      	bhi.n	8009d8a <UART_SetConfig+0x1f6>
 8009d84:	2b00      	cmp	r3, #0
 8009d86:	d007      	beq.n	8009d98 <UART_SetConfig+0x204>
 8009d88:	e012      	b.n	8009db0 <UART_SetConfig+0x21c>
 8009d8a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009d8e:	d006      	beq.n	8009d9e <UART_SetConfig+0x20a>
 8009d90:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009d94:	d009      	beq.n	8009daa <UART_SetConfig+0x216>
 8009d96:	e00b      	b.n	8009db0 <UART_SetConfig+0x21c>
 8009d98:	2300      	movs	r3, #0
 8009d9a:	77fb      	strb	r3, [r7, #31]
 8009d9c:	e0a1      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009d9e:	2302      	movs	r3, #2
 8009da0:	77fb      	strb	r3, [r7, #31]
 8009da2:	e09e      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009da4:	2304      	movs	r3, #4
 8009da6:	77fb      	strb	r3, [r7, #31]
 8009da8:	e09b      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009daa:	2308      	movs	r3, #8
 8009dac:	77fb      	strb	r3, [r7, #31]
 8009dae:	e098      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009db0:	2310      	movs	r3, #16
 8009db2:	77fb      	strb	r3, [r7, #31]
 8009db4:	bf00      	nop
 8009db6:	e094      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009db8:	687b      	ldr	r3, [r7, #4]
 8009dba:	681b      	ldr	r3, [r3, #0]
 8009dbc:	4a39      	ldr	r2, [pc, #228]	; (8009ea4 <UART_SetConfig+0x310>)
 8009dbe:	4293      	cmp	r3, r2
 8009dc0:	d124      	bne.n	8009e0c <UART_SetConfig+0x278>
 8009dc2:	4b33      	ldr	r3, [pc, #204]	; (8009e90 <UART_SetConfig+0x2fc>)
 8009dc4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009dc8:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8009dcc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009dd0:	d012      	beq.n	8009df8 <UART_SetConfig+0x264>
 8009dd2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009dd6:	d802      	bhi.n	8009dde <UART_SetConfig+0x24a>
 8009dd8:	2b00      	cmp	r3, #0
 8009dda:	d007      	beq.n	8009dec <UART_SetConfig+0x258>
 8009ddc:	e012      	b.n	8009e04 <UART_SetConfig+0x270>
 8009dde:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009de2:	d006      	beq.n	8009df2 <UART_SetConfig+0x25e>
 8009de4:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8009de8:	d009      	beq.n	8009dfe <UART_SetConfig+0x26a>
 8009dea:	e00b      	b.n	8009e04 <UART_SetConfig+0x270>
 8009dec:	2301      	movs	r3, #1
 8009dee:	77fb      	strb	r3, [r7, #31]
 8009df0:	e077      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009df2:	2302      	movs	r3, #2
 8009df4:	77fb      	strb	r3, [r7, #31]
 8009df6:	e074      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009df8:	2304      	movs	r3, #4
 8009dfa:	77fb      	strb	r3, [r7, #31]
 8009dfc:	e071      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009dfe:	2308      	movs	r3, #8
 8009e00:	77fb      	strb	r3, [r7, #31]
 8009e02:	e06e      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009e04:	2310      	movs	r3, #16
 8009e06:	77fb      	strb	r3, [r7, #31]
 8009e08:	bf00      	nop
 8009e0a:	e06a      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009e0c:	687b      	ldr	r3, [r7, #4]
 8009e0e:	681b      	ldr	r3, [r3, #0]
 8009e10:	4a25      	ldr	r2, [pc, #148]	; (8009ea8 <UART_SetConfig+0x314>)
 8009e12:	4293      	cmp	r3, r2
 8009e14:	d124      	bne.n	8009e60 <UART_SetConfig+0x2cc>
 8009e16:	4b1e      	ldr	r3, [pc, #120]	; (8009e90 <UART_SetConfig+0x2fc>)
 8009e18:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009e1c:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8009e20:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009e24:	d012      	beq.n	8009e4c <UART_SetConfig+0x2b8>
 8009e26:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009e2a:	d802      	bhi.n	8009e32 <UART_SetConfig+0x29e>
 8009e2c:	2b00      	cmp	r3, #0
 8009e2e:	d007      	beq.n	8009e40 <UART_SetConfig+0x2ac>
 8009e30:	e012      	b.n	8009e58 <UART_SetConfig+0x2c4>
 8009e32:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009e36:	d006      	beq.n	8009e46 <UART_SetConfig+0x2b2>
 8009e38:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8009e3c:	d009      	beq.n	8009e52 <UART_SetConfig+0x2be>
 8009e3e:	e00b      	b.n	8009e58 <UART_SetConfig+0x2c4>
 8009e40:	2300      	movs	r3, #0
 8009e42:	77fb      	strb	r3, [r7, #31]
 8009e44:	e04d      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009e46:	2302      	movs	r3, #2
 8009e48:	77fb      	strb	r3, [r7, #31]
 8009e4a:	e04a      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009e4c:	2304      	movs	r3, #4
 8009e4e:	77fb      	strb	r3, [r7, #31]
 8009e50:	e047      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009e52:	2308      	movs	r3, #8
 8009e54:	77fb      	strb	r3, [r7, #31]
 8009e56:	e044      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009e58:	2310      	movs	r3, #16
 8009e5a:	77fb      	strb	r3, [r7, #31]
 8009e5c:	bf00      	nop
 8009e5e:	e040      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009e60:	687b      	ldr	r3, [r7, #4]
 8009e62:	681b      	ldr	r3, [r3, #0]
 8009e64:	4a11      	ldr	r2, [pc, #68]	; (8009eac <UART_SetConfig+0x318>)
 8009e66:	4293      	cmp	r3, r2
 8009e68:	d139      	bne.n	8009ede <UART_SetConfig+0x34a>
 8009e6a:	4b09      	ldr	r3, [pc, #36]	; (8009e90 <UART_SetConfig+0x2fc>)
 8009e6c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009e70:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8009e74:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009e78:	d027      	beq.n	8009eca <UART_SetConfig+0x336>
 8009e7a:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009e7e:	d817      	bhi.n	8009eb0 <UART_SetConfig+0x31c>
 8009e80:	2b00      	cmp	r3, #0
 8009e82:	d01c      	beq.n	8009ebe <UART_SetConfig+0x32a>
 8009e84:	e027      	b.n	8009ed6 <UART_SetConfig+0x342>
 8009e86:	bf00      	nop
 8009e88:	efff69f3 	.word	0xefff69f3
 8009e8c:	40011000 	.word	0x40011000
 8009e90:	40023800 	.word	0x40023800
 8009e94:	40004400 	.word	0x40004400
 8009e98:	40004800 	.word	0x40004800
 8009e9c:	40004c00 	.word	0x40004c00
 8009ea0:	40005000 	.word	0x40005000
 8009ea4:	40011400 	.word	0x40011400
 8009ea8:	40007800 	.word	0x40007800
 8009eac:	40007c00 	.word	0x40007c00
 8009eb0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009eb4:	d006      	beq.n	8009ec4 <UART_SetConfig+0x330>
 8009eb6:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8009eba:	d009      	beq.n	8009ed0 <UART_SetConfig+0x33c>
 8009ebc:	e00b      	b.n	8009ed6 <UART_SetConfig+0x342>
 8009ebe:	2300      	movs	r3, #0
 8009ec0:	77fb      	strb	r3, [r7, #31]
 8009ec2:	e00e      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009ec4:	2302      	movs	r3, #2
 8009ec6:	77fb      	strb	r3, [r7, #31]
 8009ec8:	e00b      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009eca:	2304      	movs	r3, #4
 8009ecc:	77fb      	strb	r3, [r7, #31]
 8009ece:	e008      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009ed0:	2308      	movs	r3, #8
 8009ed2:	77fb      	strb	r3, [r7, #31]
 8009ed4:	e005      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009ed6:	2310      	movs	r3, #16
 8009ed8:	77fb      	strb	r3, [r7, #31]
 8009eda:	bf00      	nop
 8009edc:	e001      	b.n	8009ee2 <UART_SetConfig+0x34e>
 8009ede:	2310      	movs	r3, #16
 8009ee0:	77fb      	strb	r3, [r7, #31]
 8009ee2:	687b      	ldr	r3, [r7, #4]
 8009ee4:	69db      	ldr	r3, [r3, #28]
 8009ee6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009eea:	d17f      	bne.n	8009fec <UART_SetConfig+0x458>
 8009eec:	7ffb      	ldrb	r3, [r7, #31]
 8009eee:	2b08      	cmp	r3, #8
 8009ef0:	d85c      	bhi.n	8009fac <UART_SetConfig+0x418>
 8009ef2:	a201      	add	r2, pc, #4	; (adr r2, 8009ef8 <UART_SetConfig+0x364>)
 8009ef4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009ef8:	08009f1d 	.word	0x08009f1d
 8009efc:	08009f3d 	.word	0x08009f3d
 8009f00:	08009f5d 	.word	0x08009f5d
 8009f04:	08009fad 	.word	0x08009fad
 8009f08:	08009f75 	.word	0x08009f75
 8009f0c:	08009fad 	.word	0x08009fad
 8009f10:	08009fad 	.word	0x08009fad
 8009f14:	08009fad 	.word	0x08009fad
 8009f18:	08009f95 	.word	0x08009f95
 8009f1c:	f7ff f840 	bl	8008fa0 <HAL_RCC_GetPCLK1Freq>
 8009f20:	60f8      	str	r0, [r7, #12]
 8009f22:	68fb      	ldr	r3, [r7, #12]
 8009f24:	005a      	lsls	r2, r3, #1
 8009f26:	687b      	ldr	r3, [r7, #4]
 8009f28:	685b      	ldr	r3, [r3, #4]
 8009f2a:	085b      	lsrs	r3, r3, #1
 8009f2c:	441a      	add	r2, r3
 8009f2e:	687b      	ldr	r3, [r7, #4]
 8009f30:	685b      	ldr	r3, [r3, #4]
 8009f32:	fbb2 f3f3 	udiv	r3, r2, r3
 8009f36:	b29b      	uxth	r3, r3
 8009f38:	61bb      	str	r3, [r7, #24]
 8009f3a:	e03a      	b.n	8009fb2 <UART_SetConfig+0x41e>
 8009f3c:	f7ff f844 	bl	8008fc8 <HAL_RCC_GetPCLK2Freq>
 8009f40:	60f8      	str	r0, [r7, #12]
 8009f42:	68fb      	ldr	r3, [r7, #12]
 8009f44:	005a      	lsls	r2, r3, #1
 8009f46:	687b      	ldr	r3, [r7, #4]
 8009f48:	685b      	ldr	r3, [r3, #4]
 8009f4a:	085b      	lsrs	r3, r3, #1
 8009f4c:	441a      	add	r2, r3
 8009f4e:	687b      	ldr	r3, [r7, #4]
 8009f50:	685b      	ldr	r3, [r3, #4]
 8009f52:	fbb2 f3f3 	udiv	r3, r2, r3
 8009f56:	b29b      	uxth	r3, r3
 8009f58:	61bb      	str	r3, [r7, #24]
 8009f5a:	e02a      	b.n	8009fb2 <UART_SetConfig+0x41e>
 8009f5c:	687b      	ldr	r3, [r7, #4]
 8009f5e:	685b      	ldr	r3, [r3, #4]
 8009f60:	085a      	lsrs	r2, r3, #1
 8009f62:	4b5f      	ldr	r3, [pc, #380]	; (800a0e0 <UART_SetConfig+0x54c>)
 8009f64:	4413      	add	r3, r2
 8009f66:	687a      	ldr	r2, [r7, #4]
 8009f68:	6852      	ldr	r2, [r2, #4]
 8009f6a:	fbb3 f3f2 	udiv	r3, r3, r2
 8009f6e:	b29b      	uxth	r3, r3
 8009f70:	61bb      	str	r3, [r7, #24]
 8009f72:	e01e      	b.n	8009fb2 <UART_SetConfig+0x41e>
 8009f74:	f7fe ff56 	bl	8008e24 <HAL_RCC_GetSysClockFreq>
 8009f78:	60f8      	str	r0, [r7, #12]
 8009f7a:	68fb      	ldr	r3, [r7, #12]
 8009f7c:	005a      	lsls	r2, r3, #1
 8009f7e:	687b      	ldr	r3, [r7, #4]
 8009f80:	685b      	ldr	r3, [r3, #4]
 8009f82:	085b      	lsrs	r3, r3, #1
 8009f84:	441a      	add	r2, r3
 8009f86:	687b      	ldr	r3, [r7, #4]
 8009f88:	685b      	ldr	r3, [r3, #4]
 8009f8a:	fbb2 f3f3 	udiv	r3, r2, r3
 8009f8e:	b29b      	uxth	r3, r3
 8009f90:	61bb      	str	r3, [r7, #24]
 8009f92:	e00e      	b.n	8009fb2 <UART_SetConfig+0x41e>
 8009f94:	687b      	ldr	r3, [r7, #4]
 8009f96:	685b      	ldr	r3, [r3, #4]
 8009f98:	085b      	lsrs	r3, r3, #1
 8009f9a:	f503 3280 	add.w	r2, r3, #65536	; 0x10000
 8009f9e:	687b      	ldr	r3, [r7, #4]
 8009fa0:	685b      	ldr	r3, [r3, #4]
 8009fa2:	fbb2 f3f3 	udiv	r3, r2, r3
 8009fa6:	b29b      	uxth	r3, r3
 8009fa8:	61bb      	str	r3, [r7, #24]
 8009faa:	e002      	b.n	8009fb2 <UART_SetConfig+0x41e>
 8009fac:	2301      	movs	r3, #1
 8009fae:	75fb      	strb	r3, [r7, #23]
 8009fb0:	bf00      	nop
 8009fb2:	69bb      	ldr	r3, [r7, #24]
 8009fb4:	2b0f      	cmp	r3, #15
 8009fb6:	d916      	bls.n	8009fe6 <UART_SetConfig+0x452>
 8009fb8:	69bb      	ldr	r3, [r7, #24]
 8009fba:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009fbe:	d212      	bcs.n	8009fe6 <UART_SetConfig+0x452>
 8009fc0:	69bb      	ldr	r3, [r7, #24]
 8009fc2:	b29b      	uxth	r3, r3
 8009fc4:	f023 030f 	bic.w	r3, r3, #15
 8009fc8:	817b      	strh	r3, [r7, #10]
 8009fca:	69bb      	ldr	r3, [r7, #24]
 8009fcc:	085b      	lsrs	r3, r3, #1
 8009fce:	b29b      	uxth	r3, r3
 8009fd0:	f003 0307 	and.w	r3, r3, #7
 8009fd4:	b29a      	uxth	r2, r3
 8009fd6:	897b      	ldrh	r3, [r7, #10]
 8009fd8:	4313      	orrs	r3, r2
 8009fda:	817b      	strh	r3, [r7, #10]
 8009fdc:	687b      	ldr	r3, [r7, #4]
 8009fde:	681b      	ldr	r3, [r3, #0]
 8009fe0:	897a      	ldrh	r2, [r7, #10]
 8009fe2:	60da      	str	r2, [r3, #12]
 8009fe4:	e070      	b.n	800a0c8 <UART_SetConfig+0x534>
 8009fe6:	2301      	movs	r3, #1
 8009fe8:	75fb      	strb	r3, [r7, #23]
 8009fea:	e06d      	b.n	800a0c8 <UART_SetConfig+0x534>
 8009fec:	7ffb      	ldrb	r3, [r7, #31]
 8009fee:	2b08      	cmp	r3, #8
 8009ff0:	d859      	bhi.n	800a0a6 <UART_SetConfig+0x512>
 8009ff2:	a201      	add	r2, pc, #4	; (adr r2, 8009ff8 <UART_SetConfig+0x464>)
 8009ff4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009ff8:	0800a01d 	.word	0x0800a01d
 8009ffc:	0800a03b 	.word	0x0800a03b
 800a000:	0800a059 	.word	0x0800a059
 800a004:	0800a0a7 	.word	0x0800a0a7
 800a008:	0800a071 	.word	0x0800a071
 800a00c:	0800a0a7 	.word	0x0800a0a7
 800a010:	0800a0a7 	.word	0x0800a0a7
 800a014:	0800a0a7 	.word	0x0800a0a7
 800a018:	0800a08f 	.word	0x0800a08f
 800a01c:	f7fe ffc0 	bl	8008fa0 <HAL_RCC_GetPCLK1Freq>
 800a020:	60f8      	str	r0, [r7, #12]
 800a022:	687b      	ldr	r3, [r7, #4]
 800a024:	685b      	ldr	r3, [r3, #4]
 800a026:	085a      	lsrs	r2, r3, #1
 800a028:	68fb      	ldr	r3, [r7, #12]
 800a02a:	441a      	add	r2, r3
 800a02c:	687b      	ldr	r3, [r7, #4]
 800a02e:	685b      	ldr	r3, [r3, #4]
 800a030:	fbb2 f3f3 	udiv	r3, r2, r3
 800a034:	b29b      	uxth	r3, r3
 800a036:	61bb      	str	r3, [r7, #24]
 800a038:	e038      	b.n	800a0ac <UART_SetConfig+0x518>
 800a03a:	f7fe ffc5 	bl	8008fc8 <HAL_RCC_GetPCLK2Freq>
 800a03e:	60f8      	str	r0, [r7, #12]
 800a040:	687b      	ldr	r3, [r7, #4]
 800a042:	685b      	ldr	r3, [r3, #4]
 800a044:	085a      	lsrs	r2, r3, #1
 800a046:	68fb      	ldr	r3, [r7, #12]
 800a048:	441a      	add	r2, r3
 800a04a:	687b      	ldr	r3, [r7, #4]
 800a04c:	685b      	ldr	r3, [r3, #4]
 800a04e:	fbb2 f3f3 	udiv	r3, r2, r3
 800a052:	b29b      	uxth	r3, r3
 800a054:	61bb      	str	r3, [r7, #24]
 800a056:	e029      	b.n	800a0ac <UART_SetConfig+0x518>
 800a058:	687b      	ldr	r3, [r7, #4]
 800a05a:	685b      	ldr	r3, [r3, #4]
 800a05c:	085a      	lsrs	r2, r3, #1
 800a05e:	4b21      	ldr	r3, [pc, #132]	; (800a0e4 <UART_SetConfig+0x550>)
 800a060:	4413      	add	r3, r2
 800a062:	687a      	ldr	r2, [r7, #4]
 800a064:	6852      	ldr	r2, [r2, #4]
 800a066:	fbb3 f3f2 	udiv	r3, r3, r2
 800a06a:	b29b      	uxth	r3, r3
 800a06c:	61bb      	str	r3, [r7, #24]
 800a06e:	e01d      	b.n	800a0ac <UART_SetConfig+0x518>
 800a070:	f7fe fed8 	bl	8008e24 <HAL_RCC_GetSysClockFreq>
 800a074:	60f8      	str	r0, [r7, #12]
 800a076:	687b      	ldr	r3, [r7, #4]
 800a078:	685b      	ldr	r3, [r3, #4]
 800a07a:	085a      	lsrs	r2, r3, #1
 800a07c:	68fb      	ldr	r3, [r7, #12]
 800a07e:	441a      	add	r2, r3
 800a080:	687b      	ldr	r3, [r7, #4]
 800a082:	685b      	ldr	r3, [r3, #4]
 800a084:	fbb2 f3f3 	udiv	r3, r2, r3
 800a088:	b29b      	uxth	r3, r3
 800a08a:	61bb      	str	r3, [r7, #24]
 800a08c:	e00e      	b.n	800a0ac <UART_SetConfig+0x518>
 800a08e:	687b      	ldr	r3, [r7, #4]
 800a090:	685b      	ldr	r3, [r3, #4]
 800a092:	085b      	lsrs	r3, r3, #1
 800a094:	f503 4200 	add.w	r2, r3, #32768	; 0x8000
 800a098:	687b      	ldr	r3, [r7, #4]
 800a09a:	685b      	ldr	r3, [r3, #4]
 800a09c:	fbb2 f3f3 	udiv	r3, r2, r3
 800a0a0:	b29b      	uxth	r3, r3
 800a0a2:	61bb      	str	r3, [r7, #24]
 800a0a4:	e002      	b.n	800a0ac <UART_SetConfig+0x518>
 800a0a6:	2301      	movs	r3, #1
 800a0a8:	75fb      	strb	r3, [r7, #23]
 800a0aa:	bf00      	nop
 800a0ac:	69bb      	ldr	r3, [r7, #24]
 800a0ae:	2b0f      	cmp	r3, #15
 800a0b0:	d908      	bls.n	800a0c4 <UART_SetConfig+0x530>
 800a0b2:	69bb      	ldr	r3, [r7, #24]
 800a0b4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a0b8:	d204      	bcs.n	800a0c4 <UART_SetConfig+0x530>
 800a0ba:	687b      	ldr	r3, [r7, #4]
 800a0bc:	681b      	ldr	r3, [r3, #0]
 800a0be:	69ba      	ldr	r2, [r7, #24]
 800a0c0:	60da      	str	r2, [r3, #12]
 800a0c2:	e001      	b.n	800a0c8 <UART_SetConfig+0x534>
 800a0c4:	2301      	movs	r3, #1
 800a0c6:	75fb      	strb	r3, [r7, #23]
 800a0c8:	687b      	ldr	r3, [r7, #4]
 800a0ca:	2200      	movs	r2, #0
 800a0cc:	661a      	str	r2, [r3, #96]	; 0x60
 800a0ce:	687b      	ldr	r3, [r7, #4]
 800a0d0:	2200      	movs	r2, #0
 800a0d2:	665a      	str	r2, [r3, #100]	; 0x64
 800a0d4:	7dfb      	ldrb	r3, [r7, #23]
 800a0d6:	4618      	mov	r0, r3
 800a0d8:	3720      	adds	r7, #32
 800a0da:	46bd      	mov	sp, r7
 800a0dc:	bd80      	pop	{r7, pc}
 800a0de:	bf00      	nop
 800a0e0:	01e84800 	.word	0x01e84800
 800a0e4:	00f42400 	.word	0x00f42400

0800a0e8 <UART_AdvFeatureConfig>:
 800a0e8:	b480      	push	{r7}
 800a0ea:	b083      	sub	sp, #12
 800a0ec:	af00      	add	r7, sp, #0
 800a0ee:	6078      	str	r0, [r7, #4]
 800a0f0:	687b      	ldr	r3, [r7, #4]
 800a0f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a0f4:	f003 0301 	and.w	r3, r3, #1
 800a0f8:	2b00      	cmp	r3, #0
 800a0fa:	d00a      	beq.n	800a112 <UART_AdvFeatureConfig+0x2a>
 800a0fc:	687b      	ldr	r3, [r7, #4]
 800a0fe:	681b      	ldr	r3, [r3, #0]
 800a100:	685b      	ldr	r3, [r3, #4]
 800a102:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800a106:	687b      	ldr	r3, [r7, #4]
 800a108:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800a10a:	687b      	ldr	r3, [r7, #4]
 800a10c:	681b      	ldr	r3, [r3, #0]
 800a10e:	430a      	orrs	r2, r1
 800a110:	605a      	str	r2, [r3, #4]
 800a112:	687b      	ldr	r3, [r7, #4]
 800a114:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a116:	f003 0302 	and.w	r3, r3, #2
 800a11a:	2b00      	cmp	r3, #0
 800a11c:	d00a      	beq.n	800a134 <UART_AdvFeatureConfig+0x4c>
 800a11e:	687b      	ldr	r3, [r7, #4]
 800a120:	681b      	ldr	r3, [r3, #0]
 800a122:	685b      	ldr	r3, [r3, #4]
 800a124:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 800a128:	687b      	ldr	r3, [r7, #4]
 800a12a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a12c:	687b      	ldr	r3, [r7, #4]
 800a12e:	681b      	ldr	r3, [r3, #0]
 800a130:	430a      	orrs	r2, r1
 800a132:	605a      	str	r2, [r3, #4]
 800a134:	687b      	ldr	r3, [r7, #4]
 800a136:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a138:	f003 0304 	and.w	r3, r3, #4
 800a13c:	2b00      	cmp	r3, #0
 800a13e:	d00a      	beq.n	800a156 <UART_AdvFeatureConfig+0x6e>
 800a140:	687b      	ldr	r3, [r7, #4]
 800a142:	681b      	ldr	r3, [r3, #0]
 800a144:	685b      	ldr	r3, [r3, #4]
 800a146:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800a14a:	687b      	ldr	r3, [r7, #4]
 800a14c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a14e:	687b      	ldr	r3, [r7, #4]
 800a150:	681b      	ldr	r3, [r3, #0]
 800a152:	430a      	orrs	r2, r1
 800a154:	605a      	str	r2, [r3, #4]
 800a156:	687b      	ldr	r3, [r7, #4]
 800a158:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a15a:	f003 0308 	and.w	r3, r3, #8
 800a15e:	2b00      	cmp	r3, #0
 800a160:	d00a      	beq.n	800a178 <UART_AdvFeatureConfig+0x90>
 800a162:	687b      	ldr	r3, [r7, #4]
 800a164:	681b      	ldr	r3, [r3, #0]
 800a166:	685b      	ldr	r3, [r3, #4]
 800a168:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 800a16c:	687b      	ldr	r3, [r7, #4]
 800a16e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a170:	687b      	ldr	r3, [r7, #4]
 800a172:	681b      	ldr	r3, [r3, #0]
 800a174:	430a      	orrs	r2, r1
 800a176:	605a      	str	r2, [r3, #4]
 800a178:	687b      	ldr	r3, [r7, #4]
 800a17a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a17c:	f003 0310 	and.w	r3, r3, #16
 800a180:	2b00      	cmp	r3, #0
 800a182:	d00a      	beq.n	800a19a <UART_AdvFeatureConfig+0xb2>
 800a184:	687b      	ldr	r3, [r7, #4]
 800a186:	681b      	ldr	r3, [r3, #0]
 800a188:	689b      	ldr	r3, [r3, #8]
 800a18a:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 800a18e:	687b      	ldr	r3, [r7, #4]
 800a190:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800a192:	687b      	ldr	r3, [r7, #4]
 800a194:	681b      	ldr	r3, [r3, #0]
 800a196:	430a      	orrs	r2, r1
 800a198:	609a      	str	r2, [r3, #8]
 800a19a:	687b      	ldr	r3, [r7, #4]
 800a19c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a19e:	f003 0320 	and.w	r3, r3, #32
 800a1a2:	2b00      	cmp	r3, #0
 800a1a4:	d00a      	beq.n	800a1bc <UART_AdvFeatureConfig+0xd4>
 800a1a6:	687b      	ldr	r3, [r7, #4]
 800a1a8:	681b      	ldr	r3, [r3, #0]
 800a1aa:	689b      	ldr	r3, [r3, #8]
 800a1ac:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 800a1b0:	687b      	ldr	r3, [r7, #4]
 800a1b2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a1b4:	687b      	ldr	r3, [r7, #4]
 800a1b6:	681b      	ldr	r3, [r3, #0]
 800a1b8:	430a      	orrs	r2, r1
 800a1ba:	609a      	str	r2, [r3, #8]
 800a1bc:	687b      	ldr	r3, [r7, #4]
 800a1be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a1c0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a1c4:	2b00      	cmp	r3, #0
 800a1c6:	d01a      	beq.n	800a1fe <UART_AdvFeatureConfig+0x116>
 800a1c8:	687b      	ldr	r3, [r7, #4]
 800a1ca:	681b      	ldr	r3, [r3, #0]
 800a1cc:	685b      	ldr	r3, [r3, #4]
 800a1ce:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800a1d2:	687b      	ldr	r3, [r7, #4]
 800a1d4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800a1d6:	687b      	ldr	r3, [r7, #4]
 800a1d8:	681b      	ldr	r3, [r3, #0]
 800a1da:	430a      	orrs	r2, r1
 800a1dc:	605a      	str	r2, [r3, #4]
 800a1de:	687b      	ldr	r3, [r7, #4]
 800a1e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a1e2:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800a1e6:	d10a      	bne.n	800a1fe <UART_AdvFeatureConfig+0x116>
 800a1e8:	687b      	ldr	r3, [r7, #4]
 800a1ea:	681b      	ldr	r3, [r3, #0]
 800a1ec:	685b      	ldr	r3, [r3, #4]
 800a1ee:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800a1f2:	687b      	ldr	r3, [r7, #4]
 800a1f4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a1f6:	687b      	ldr	r3, [r7, #4]
 800a1f8:	681b      	ldr	r3, [r3, #0]
 800a1fa:	430a      	orrs	r2, r1
 800a1fc:	605a      	str	r2, [r3, #4]
 800a1fe:	687b      	ldr	r3, [r7, #4]
 800a200:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a202:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800a206:	2b00      	cmp	r3, #0
 800a208:	d00a      	beq.n	800a220 <UART_AdvFeatureConfig+0x138>
 800a20a:	687b      	ldr	r3, [r7, #4]
 800a20c:	681b      	ldr	r3, [r3, #0]
 800a20e:	685b      	ldr	r3, [r3, #4]
 800a210:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 800a214:	687b      	ldr	r3, [r7, #4]
 800a216:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800a218:	687b      	ldr	r3, [r7, #4]
 800a21a:	681b      	ldr	r3, [r3, #0]
 800a21c:	430a      	orrs	r2, r1
 800a21e:	605a      	str	r2, [r3, #4]
 800a220:	bf00      	nop
 800a222:	370c      	adds	r7, #12
 800a224:	46bd      	mov	sp, r7
 800a226:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a22a:	4770      	bx	lr

0800a22c <UART_CheckIdleState>:
 800a22c:	b580      	push	{r7, lr}
 800a22e:	b086      	sub	sp, #24
 800a230:	af02      	add	r7, sp, #8
 800a232:	6078      	str	r0, [r7, #4]
 800a234:	687b      	ldr	r3, [r7, #4]
 800a236:	2200      	movs	r2, #0
 800a238:	67da      	str	r2, [r3, #124]	; 0x7c
 800a23a:	f7fd fe5f 	bl	8007efc <HAL_GetTick>
 800a23e:	60f8      	str	r0, [r7, #12]
 800a240:	687b      	ldr	r3, [r7, #4]
 800a242:	681b      	ldr	r3, [r3, #0]
 800a244:	681b      	ldr	r3, [r3, #0]
 800a246:	f003 0308 	and.w	r3, r3, #8
 800a24a:	2b08      	cmp	r3, #8
 800a24c:	d10e      	bne.n	800a26c <UART_CheckIdleState+0x40>
 800a24e:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800a252:	9300      	str	r3, [sp, #0]
 800a254:	68fb      	ldr	r3, [r7, #12]
 800a256:	2200      	movs	r2, #0
 800a258:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800a25c:	6878      	ldr	r0, [r7, #4]
 800a25e:	f000 f82a 	bl	800a2b6 <UART_WaitOnFlagUntilTimeout>
 800a262:	4603      	mov	r3, r0
 800a264:	2b00      	cmp	r3, #0
 800a266:	d001      	beq.n	800a26c <UART_CheckIdleState+0x40>
 800a268:	2303      	movs	r3, #3
 800a26a:	e020      	b.n	800a2ae <UART_CheckIdleState+0x82>
 800a26c:	687b      	ldr	r3, [r7, #4]
 800a26e:	681b      	ldr	r3, [r3, #0]
 800a270:	681b      	ldr	r3, [r3, #0]
 800a272:	f003 0304 	and.w	r3, r3, #4
 800a276:	2b04      	cmp	r3, #4
 800a278:	d10e      	bne.n	800a298 <UART_CheckIdleState+0x6c>
 800a27a:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800a27e:	9300      	str	r3, [sp, #0]
 800a280:	68fb      	ldr	r3, [r7, #12]
 800a282:	2200      	movs	r2, #0
 800a284:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800a288:	6878      	ldr	r0, [r7, #4]
 800a28a:	f000 f814 	bl	800a2b6 <UART_WaitOnFlagUntilTimeout>
 800a28e:	4603      	mov	r3, r0
 800a290:	2b00      	cmp	r3, #0
 800a292:	d001      	beq.n	800a298 <UART_CheckIdleState+0x6c>
 800a294:	2303      	movs	r3, #3
 800a296:	e00a      	b.n	800a2ae <UART_CheckIdleState+0x82>
 800a298:	687b      	ldr	r3, [r7, #4]
 800a29a:	2220      	movs	r2, #32
 800a29c:	675a      	str	r2, [r3, #116]	; 0x74
 800a29e:	687b      	ldr	r3, [r7, #4]
 800a2a0:	2220      	movs	r2, #32
 800a2a2:	679a      	str	r2, [r3, #120]	; 0x78
 800a2a4:	687b      	ldr	r3, [r7, #4]
 800a2a6:	2200      	movs	r2, #0
 800a2a8:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800a2ac:	2300      	movs	r3, #0
 800a2ae:	4618      	mov	r0, r3
 800a2b0:	3710      	adds	r7, #16
 800a2b2:	46bd      	mov	sp, r7
 800a2b4:	bd80      	pop	{r7, pc}

0800a2b6 <UART_WaitOnFlagUntilTimeout>:
 800a2b6:	b580      	push	{r7, lr}
 800a2b8:	b084      	sub	sp, #16
 800a2ba:	af00      	add	r7, sp, #0
 800a2bc:	60f8      	str	r0, [r7, #12]
 800a2be:	60b9      	str	r1, [r7, #8]
 800a2c0:	603b      	str	r3, [r7, #0]
 800a2c2:	4613      	mov	r3, r2
 800a2c4:	71fb      	strb	r3, [r7, #7]
 800a2c6:	e05d      	b.n	800a384 <UART_WaitOnFlagUntilTimeout+0xce>
 800a2c8:	69bb      	ldr	r3, [r7, #24]
 800a2ca:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a2ce:	d059      	beq.n	800a384 <UART_WaitOnFlagUntilTimeout+0xce>
 800a2d0:	f7fd fe14 	bl	8007efc <HAL_GetTick>
 800a2d4:	4602      	mov	r2, r0
 800a2d6:	683b      	ldr	r3, [r7, #0]
 800a2d8:	1ad3      	subs	r3, r2, r3
 800a2da:	69ba      	ldr	r2, [r7, #24]
 800a2dc:	429a      	cmp	r2, r3
 800a2de:	d302      	bcc.n	800a2e6 <UART_WaitOnFlagUntilTimeout+0x30>
 800a2e0:	69bb      	ldr	r3, [r7, #24]
 800a2e2:	2b00      	cmp	r3, #0
 800a2e4:	d11b      	bne.n	800a31e <UART_WaitOnFlagUntilTimeout+0x68>
 800a2e6:	68fb      	ldr	r3, [r7, #12]
 800a2e8:	681b      	ldr	r3, [r3, #0]
 800a2ea:	681a      	ldr	r2, [r3, #0]
 800a2ec:	68fb      	ldr	r3, [r7, #12]
 800a2ee:	681b      	ldr	r3, [r3, #0]
 800a2f0:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800a2f4:	601a      	str	r2, [r3, #0]
 800a2f6:	68fb      	ldr	r3, [r7, #12]
 800a2f8:	681b      	ldr	r3, [r3, #0]
 800a2fa:	689a      	ldr	r2, [r3, #8]
 800a2fc:	68fb      	ldr	r3, [r7, #12]
 800a2fe:	681b      	ldr	r3, [r3, #0]
 800a300:	f022 0201 	bic.w	r2, r2, #1
 800a304:	609a      	str	r2, [r3, #8]
 800a306:	68fb      	ldr	r3, [r7, #12]
 800a308:	2220      	movs	r2, #32
 800a30a:	675a      	str	r2, [r3, #116]	; 0x74
 800a30c:	68fb      	ldr	r3, [r7, #12]
 800a30e:	2220      	movs	r2, #32
 800a310:	679a      	str	r2, [r3, #120]	; 0x78
 800a312:	68fb      	ldr	r3, [r7, #12]
 800a314:	2200      	movs	r2, #0
 800a316:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800a31a:	2303      	movs	r3, #3
 800a31c:	e042      	b.n	800a3a4 <UART_WaitOnFlagUntilTimeout+0xee>
 800a31e:	68fb      	ldr	r3, [r7, #12]
 800a320:	681b      	ldr	r3, [r3, #0]
 800a322:	681b      	ldr	r3, [r3, #0]
 800a324:	f003 0304 	and.w	r3, r3, #4
 800a328:	2b00      	cmp	r3, #0
 800a32a:	d02b      	beq.n	800a384 <UART_WaitOnFlagUntilTimeout+0xce>
 800a32c:	68fb      	ldr	r3, [r7, #12]
 800a32e:	681b      	ldr	r3, [r3, #0]
 800a330:	69db      	ldr	r3, [r3, #28]
 800a332:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800a336:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a33a:	d123      	bne.n	800a384 <UART_WaitOnFlagUntilTimeout+0xce>
 800a33c:	68fb      	ldr	r3, [r7, #12]
 800a33e:	681b      	ldr	r3, [r3, #0]
 800a340:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800a344:	621a      	str	r2, [r3, #32]
 800a346:	68fb      	ldr	r3, [r7, #12]
 800a348:	681b      	ldr	r3, [r3, #0]
 800a34a:	681a      	ldr	r2, [r3, #0]
 800a34c:	68fb      	ldr	r3, [r7, #12]
 800a34e:	681b      	ldr	r3, [r3, #0]
 800a350:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800a354:	601a      	str	r2, [r3, #0]
 800a356:	68fb      	ldr	r3, [r7, #12]
 800a358:	681b      	ldr	r3, [r3, #0]
 800a35a:	689a      	ldr	r2, [r3, #8]
 800a35c:	68fb      	ldr	r3, [r7, #12]
 800a35e:	681b      	ldr	r3, [r3, #0]
 800a360:	f022 0201 	bic.w	r2, r2, #1
 800a364:	609a      	str	r2, [r3, #8]
 800a366:	68fb      	ldr	r3, [r7, #12]
 800a368:	2220      	movs	r2, #32
 800a36a:	675a      	str	r2, [r3, #116]	; 0x74
 800a36c:	68fb      	ldr	r3, [r7, #12]
 800a36e:	2220      	movs	r2, #32
 800a370:	679a      	str	r2, [r3, #120]	; 0x78
 800a372:	68fb      	ldr	r3, [r7, #12]
 800a374:	2220      	movs	r2, #32
 800a376:	67da      	str	r2, [r3, #124]	; 0x7c
 800a378:	68fb      	ldr	r3, [r7, #12]
 800a37a:	2200      	movs	r2, #0
 800a37c:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800a380:	2303      	movs	r3, #3
 800a382:	e00f      	b.n	800a3a4 <UART_WaitOnFlagUntilTimeout+0xee>
 800a384:	68fb      	ldr	r3, [r7, #12]
 800a386:	681b      	ldr	r3, [r3, #0]
 800a388:	69da      	ldr	r2, [r3, #28]
 800a38a:	68bb      	ldr	r3, [r7, #8]
 800a38c:	4013      	ands	r3, r2
 800a38e:	68ba      	ldr	r2, [r7, #8]
 800a390:	429a      	cmp	r2, r3
 800a392:	bf0c      	ite	eq
 800a394:	2301      	moveq	r3, #1
 800a396:	2300      	movne	r3, #0
 800a398:	b2db      	uxtb	r3, r3
 800a39a:	461a      	mov	r2, r3
 800a39c:	79fb      	ldrb	r3, [r7, #7]
 800a39e:	429a      	cmp	r2, r3
 800a3a0:	d092      	beq.n	800a2c8 <UART_WaitOnFlagUntilTimeout+0x12>
 800a3a2:	2300      	movs	r3, #0
 800a3a4:	4618      	mov	r0, r3
 800a3a6:	3710      	adds	r7, #16
 800a3a8:	46bd      	mov	sp, r7
 800a3aa:	bd80      	pop	{r7, pc}

0800a3ac <aiPbMgrInit>:
    const aiPbCmdFunc *funcs;
    uint32_t  n_func;
} pbContextMgr;

void aiPbMgrInit(const aiPbCmdFunc *funcs)
{
 800a3ac:	b5b0      	push	{r4, r5, r7, lr}
 800a3ae:	b088      	sub	sp, #32
 800a3b0:	af00      	add	r7, sp, #0
 800a3b2:	6178      	str	r0, [r7, #20]
    const aiPbCmdFunc *cfunc;
    pbContextMgr.input = pb_istream_from_uart(0);
 800a3b4:	4c1a      	ldr	r4, [pc, #104]	; (800a420 <aiPbMgrInit+0x74>)
 800a3b6:	463b      	mov	r3, r7
 800a3b8:	2100      	movs	r1, #0
 800a3ba:	4618      	mov	r0, r3
 800a3bc:	f001 fc9a 	bl	800bcf4 <pb_istream_from_uart>
 800a3c0:	463b      	mov	r3, r7
 800a3c2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800a3c4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    pbContextMgr.output = pb_ostream_to_uart(0);
 800a3c8:	4c15      	ldr	r4, [pc, #84]	; (800a420 <aiPbMgrInit+0x74>)
 800a3ca:	463b      	mov	r3, r7
 800a3cc:	2100      	movs	r1, #0
 800a3ce:	4618      	mov	r0, r3
 800a3d0:	f001 fc6c 	bl	800bcac <pb_ostream_to_uart>
 800a3d4:	3410      	adds	r4, #16
 800a3d6:	463d      	mov	r5, r7
 800a3d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a3da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a3dc:	682b      	ldr	r3, [r5, #0]
 800a3de:	6023      	str	r3, [r4, #0]

    pbContextMgr.n_func = 0;
 800a3e0:	4b0f      	ldr	r3, [pc, #60]	; (800a420 <aiPbMgrInit+0x74>)
 800a3e2:	2200      	movs	r2, #0
 800a3e4:	629a      	str	r2, [r3, #40]	; 0x28
    pbContextMgr.funcs = NULL;
 800a3e6:	4b0e      	ldr	r3, [pc, #56]	; (800a420 <aiPbMgrInit+0x74>)
 800a3e8:	2200      	movs	r2, #0
 800a3ea:	625a      	str	r2, [r3, #36]	; 0x24

    if (funcs) {
 800a3ec:	697b      	ldr	r3, [r7, #20]
 800a3ee:	2b00      	cmp	r3, #0
 800a3f0:	d011      	beq.n	800a416 <aiPbMgrInit+0x6a>
        cfunc = funcs;
 800a3f2:	697b      	ldr	r3, [r7, #20]
 800a3f4:	61fb      	str	r3, [r7, #28]
        while (cfunc->process) {
 800a3f6:	e007      	b.n	800a408 <aiPbMgrInit+0x5c>
            pbContextMgr.n_func++;
 800a3f8:	4b09      	ldr	r3, [pc, #36]	; (800a420 <aiPbMgrInit+0x74>)
 800a3fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a3fc:	3301      	adds	r3, #1
 800a3fe:	4a08      	ldr	r2, [pc, #32]	; (800a420 <aiPbMgrInit+0x74>)
 800a400:	6293      	str	r3, [r2, #40]	; 0x28
            cfunc++;
 800a402:	69fb      	ldr	r3, [r7, #28]
 800a404:	330c      	adds	r3, #12
 800a406:	61fb      	str	r3, [r7, #28]
        while (cfunc->process) {
 800a408:	69fb      	ldr	r3, [r7, #28]
 800a40a:	685b      	ldr	r3, [r3, #4]
 800a40c:	2b00      	cmp	r3, #0
 800a40e:	d1f3      	bne.n	800a3f8 <aiPbMgrInit+0x4c>
        }
        pbContextMgr.funcs = funcs;
 800a410:	4a03      	ldr	r2, [pc, #12]	; (800a420 <aiPbMgrInit+0x74>)
 800a412:	697b      	ldr	r3, [r7, #20]
 800a414:	6253      	str	r3, [r2, #36]	; 0x24
    }
}
 800a416:	bf00      	nop
 800a418:	3720      	adds	r7, #32
 800a41a:	46bd      	mov	sp, r7
 800a41c:	bdb0      	pop	{r4, r5, r7, pc}
 800a41e:	bf00      	nop
 800a420:	200008e4 	.word	0x200008e4

0800a424 <aiPbMgrSendResp>:

/*---------------------------------------------------------------------------*/

void aiPbMgrSendResp(const reqMsg *req, respMsg *resp,
        EnumState state)
{
 800a424:	b580      	push	{r7, lr}
 800a426:	b084      	sub	sp, #16
 800a428:	af00      	add	r7, sp, #0
 800a42a:	60f8      	str	r0, [r7, #12]
 800a42c:	60b9      	str	r1, [r7, #8]
 800a42e:	4613      	mov	r3, r2
 800a430:	71fb      	strb	r3, [r7, #7]
    resp->reqid = req->reqid;
 800a432:	68fb      	ldr	r3, [r7, #12]
 800a434:	681a      	ldr	r2, [r3, #0]
 800a436:	68bb      	ldr	r3, [r7, #8]
 800a438:	601a      	str	r2, [r3, #0]
    resp->state = state;
 800a43a:	68bb      	ldr	r3, [r7, #8]
 800a43c:	79fa      	ldrb	r2, [r7, #7]
 800a43e:	711a      	strb	r2, [r3, #4]
    pb_encode(&pbContextMgr.output, respMsg_fields, resp);
 800a440:	68ba      	ldr	r2, [r7, #8]
 800a442:	4905      	ldr	r1, [pc, #20]	; (800a458 <aiPbMgrSendResp+0x34>)
 800a444:	4805      	ldr	r0, [pc, #20]	; (800a45c <aiPbMgrSendResp+0x38>)
 800a446:	f005 f82f 	bl	800f4a8 <pb_encode>
    ioFlushWrite();
 800a44a:	f001 fb4f 	bl	800baec <ioFlushWrite>
}
 800a44e:	bf00      	nop
 800a450:	3710      	adds	r7, #16
 800a452:	46bd      	mov	sp, r7
 800a454:	bd80      	pop	{r7, pc}
 800a456:	bf00      	nop
 800a458:	08016974 	.word	0x08016974
 800a45c:	200008f4 	.word	0x200008f4

0800a460 <aiPbMgrSendAck>:

void aiPbMgrSendAck(const reqMsg *req, respMsg *resp,
        EnumState state, uint32_t param, EnumError error)
{
 800a460:	b580      	push	{r7, lr}
 800a462:	b084      	sub	sp, #16
 800a464:	af00      	add	r7, sp, #0
 800a466:	60f8      	str	r0, [r7, #12]
 800a468:	60b9      	str	r1, [r7, #8]
 800a46a:	603b      	str	r3, [r7, #0]
 800a46c:	4613      	mov	r3, r2
 800a46e:	71fb      	strb	r3, [r7, #7]
    resp->which_payload = respMsg_ack_tag;
 800a470:	68bb      	ldr	r3, [r7, #8]
 800a472:	220c      	movs	r2, #12
 800a474:	80da      	strh	r2, [r3, #6]
    resp->payload.ack.param = param;
 800a476:	68bb      	ldr	r3, [r7, #8]
 800a478:	683a      	ldr	r2, [r7, #0]
 800a47a:	609a      	str	r2, [r3, #8]
    resp->payload.ack.error = error;
 800a47c:	68bb      	ldr	r3, [r7, #8]
 800a47e:	7e3a      	ldrb	r2, [r7, #24]
 800a480:	731a      	strb	r2, [r3, #12]
    aiPbMgrSendResp(req, resp, state);
 800a482:	79fb      	ldrb	r3, [r7, #7]
 800a484:	461a      	mov	r2, r3
 800a486:	68b9      	ldr	r1, [r7, #8]
 800a488:	68f8      	ldr	r0, [r7, #12]
 800a48a:	f7ff ffcb 	bl	800a424 <aiPbMgrSendResp>
}
 800a48e:	bf00      	nop
 800a490:	3710      	adds	r7, #16
 800a492:	46bd      	mov	sp, r7
 800a494:	bd80      	pop	{r7, pc}
	...

0800a498 <aiPbMgrWaitAck>:

bool aiPbMgrWaitAck(void)
{
 800a498:	b580      	push	{r7, lr}
 800a49a:	b084      	sub	sp, #16
 800a49c:	af00      	add	r7, sp, #0
    bool res;
    ackMsg ack = ackMsg_init_default;
 800a49e:	2300      	movs	r3, #0
 800a4a0:	607b      	str	r3, [r7, #4]
 800a4a2:	2300      	movs	r3, #0
 800a4a4:	723b      	strb	r3, [r7, #8]
    res = pb_decode_delimited(&pbContextMgr.input, ackMsg_fields, &ack);
 800a4a6:	1d3b      	adds	r3, r7, #4
 800a4a8:	461a      	mov	r2, r3
 800a4aa:	4906      	ldr	r1, [pc, #24]	; (800a4c4 <aiPbMgrWaitAck+0x2c>)
 800a4ac:	4806      	ldr	r0, [pc, #24]	; (800a4c8 <aiPbMgrWaitAck+0x30>)
 800a4ae:	f003 ffb1 	bl	800e414 <pb_decode_delimited>
 800a4b2:	4603      	mov	r3, r0
 800a4b4:	73fb      	strb	r3, [r7, #15]
    ioFlushRead();
 800a4b6:	f001 fb87 	bl	800bbc8 <ioFlushRead>
    return res;
 800a4ba:	7bfb      	ldrb	r3, [r7, #15]
}
 800a4bc:	4618      	mov	r0, r3
 800a4be:	3710      	adds	r7, #16
 800a4c0:	46bd      	mov	sp, r7
 800a4c2:	bd80      	pop	{r7, pc}
 800a4c4:	080168c8 	.word	0x080168c8
 800a4c8:	200008e4 	.word	0x200008e4

0800a4cc <aiPbAiBufferSize>:
    uint32_t err;
    void *msg;
};

uint32_t aiPbAiBufferSize(const ai_buffer *buffer)
{
 800a4cc:	b480      	push	{r7}
 800a4ce:	b083      	sub	sp, #12
 800a4d0:	af00      	add	r7, sp, #0
 800a4d2:	6078      	str	r0, [r7, #4]
    if (!buffer)
 800a4d4:	687b      	ldr	r3, [r7, #4]
 800a4d6:	2b00      	cmp	r3, #0
 800a4d8:	d101      	bne.n	800a4de <aiPbAiBufferSize+0x12>
        return 0;
 800a4da:	2300      	movs	r3, #0
 800a4dc:	e00d      	b.n	800a4fa <aiPbAiBufferSize+0x2e>
    else
        return buffer->channels * buffer->height
 800a4de:	687b      	ldr	r3, [r7, #4]
 800a4e0:	68db      	ldr	r3, [r3, #12]
 800a4e2:	687a      	ldr	r2, [r7, #4]
 800a4e4:	88d2      	ldrh	r2, [r2, #6]
 800a4e6:	fb02 f303 	mul.w	r3, r2, r3
                * buffer->width * buffer->n_batches;
 800a4ea:	687a      	ldr	r2, [r7, #4]
 800a4ec:	8912      	ldrh	r2, [r2, #8]
 800a4ee:	fb02 f303 	mul.w	r3, r2, r3
 800a4f2:	687a      	ldr	r2, [r7, #4]
 800a4f4:	8892      	ldrh	r2, [r2, #4]
 800a4f6:	fb02 f303 	mul.w	r3, r2, r3
}
 800a4fa:	4618      	mov	r0, r3
 800a4fc:	370c      	adds	r7, #12
 800a4fe:	46bd      	mov	sp, r7
 800a500:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a504:	4770      	bx	lr

0800a506 <aiPbMsgFmtToAiFmt>:

static ai_buffer_format aiPbMsgFmtToAiFmt(const uint32_t msgFmt)
{
 800a506:	b480      	push	{r7}
 800a508:	b083      	sub	sp, #12
 800a50a:	af00      	add	r7, sp, #0
 800a50c:	6078      	str	r0, [r7, #4]
    return (ai_buffer_format)msgFmt;
 800a50e:	687b      	ldr	r3, [r7, #4]
}
 800a510:	4618      	mov	r0, r3
 800a512:	370c      	adds	r7, #12
 800a514:	46bd      	mov	sp, r7
 800a516:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a51a:	4770      	bx	lr

0800a51c <aiPbAiFmtToMsgFmt>:

static uint32_t aiPbAiFmtToMsgFmt(const ai_buffer_format aiFmt)
{
 800a51c:	b480      	push	{r7}
 800a51e:	b083      	sub	sp, #12
 800a520:	af00      	add	r7, sp, #0
 800a522:	6078      	str	r0, [r7, #4]
    return (uint32_t)aiFmt;
 800a524:	687b      	ldr	r3, [r7, #4]
}
 800a526:	4618      	mov	r0, r3
 800a528:	370c      	adds	r7, #12
 800a52a:	46bd      	mov	sp, r7
 800a52c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a530:	4770      	bx	lr

0800a532 <aiPbBufferGetItemSize>:

static size_t aiPbBufferGetItemSize(ai_buffer_format format)
{
 800a532:	b480      	push	{r7}
 800a534:	b083      	sub	sp, #12
 800a536:	af00      	add	r7, sp, #0
 800a538:	6078      	str	r0, [r7, #4]
    return (size_t)AI_BUFFER_BYTE_SIZE(1,format);
 800a53a:	687b      	ldr	r3, [r7, #4]
 800a53c:	11db      	asrs	r3, r3, #7
 800a53e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a542:	3304      	adds	r3, #4
 800a544:	10db      	asrs	r3, r3, #3
}
 800a546:	4618      	mov	r0, r3
 800a548:	370c      	adds	r7, #12
 800a54a:	46bd      	mov	sp, r7
 800a54c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a550:	4770      	bx	lr

0800a552 <aiPbBuffer_read_cb3>:

static bool aiPbBuffer_read_cb3(pb_istream_t *stream, const pb_field_t *field,
        void **arg)
{
 800a552:	b580      	push	{r7, lr}
 800a554:	b08c      	sub	sp, #48	; 0x30
 800a556:	af00      	add	r7, sp, #0
 800a558:	60f8      	str	r0, [r7, #12]
 800a55a:	60b9      	str	r1, [r7, #8]
 800a55c:	607a      	str	r2, [r7, #4]
    struct aiPbMgrBuffer *bm = (struct aiPbMgrBuffer *)*arg;
 800a55e:	687b      	ldr	r3, [r7, #4]
 800a560:	681b      	ldr	r3, [r3, #0]
 800a562:	627b      	str	r3, [r7, #36]	; 0x24
    ai_buffer_format format;
    size_t itsize;

    UNUSED(field);

    int maxr = bm->n_max;
 800a564:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a566:	685b      	ldr	r3, [r3, #4]
 800a568:	62fb      	str	r3, [r7, #44]	; 0x2c
    msg = (aiBufferByteMsg *)bm->msg;
 800a56a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a56c:	691b      	ldr	r3, [r3, #16]
 800a56e:	623b      	str	r3, [r7, #32]
    format = aiPbMsgFmtToAiFmt(msg->shape.format);
 800a570:	6a3b      	ldr	r3, [r7, #32]
 800a572:	681b      	ldr	r3, [r3, #0]
 800a574:	4618      	mov	r0, r3
 800a576:	f7ff ffc6 	bl	800a506 <aiPbMsgFmtToAiFmt>
 800a57a:	61f8      	str	r0, [r7, #28]

    /* todo(jmd) - adding scale/zeropoint values */

    /* Check shape/format */
    bm->err = EnumError_E_NONE;
 800a57c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a57e:	2200      	movs	r2, #0
 800a580:	60da      	str	r2, [r3, #12]
    if ((format == AI_BUFFER_FORMAT_NONE) || (format != bm->buffer->format)) {
 800a582:	69fb      	ldr	r3, [r7, #28]
 800a584:	2b40      	cmp	r3, #64	; 0x40
 800a586:	d005      	beq.n	800a594 <aiPbBuffer_read_cb3+0x42>
 800a588:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a58a:	681b      	ldr	r3, [r3, #0]
 800a58c:	681b      	ldr	r3, [r3, #0]
 800a58e:	69fa      	ldr	r2, [r7, #28]
 800a590:	429a      	cmp	r2, r3
 800a592:	d005      	beq.n	800a5a0 <aiPbBuffer_read_cb3+0x4e>
        maxr = 0;
 800a594:	2300      	movs	r3, #0
 800a596:	62fb      	str	r3, [r7, #44]	; 0x2c
        bm->err = EnumError_E_INVALID_FORMAT;
 800a598:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a59a:	2202      	movs	r2, #2
 800a59c:	60da      	str	r2, [r3, #12]
 800a59e:	e020      	b.n	800a5e2 <aiPbBuffer_read_cb3+0x90>
    } else if ((msg->shape.channels != bm->buffer->channels) ||
 800a5a0:	6a3b      	ldr	r3, [r7, #32]
 800a5a2:	691a      	ldr	r2, [r3, #16]
 800a5a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a5a6:	681b      	ldr	r3, [r3, #0]
 800a5a8:	68db      	ldr	r3, [r3, #12]
 800a5aa:	429a      	cmp	r2, r3
 800a5ac:	d114      	bne.n	800a5d8 <aiPbBuffer_read_cb3+0x86>
            (msg->shape.height != bm->buffer->height) ||
 800a5ae:	6a3b      	ldr	r3, [r7, #32]
 800a5b0:	689b      	ldr	r3, [r3, #8]
 800a5b2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a5b4:	6812      	ldr	r2, [r2, #0]
 800a5b6:	88d2      	ldrh	r2, [r2, #6]
    } else if ((msg->shape.channels != bm->buffer->channels) ||
 800a5b8:	4293      	cmp	r3, r2
 800a5ba:	d10d      	bne.n	800a5d8 <aiPbBuffer_read_cb3+0x86>
            (msg->shape.width != bm->buffer->width) ||
 800a5bc:	6a3b      	ldr	r3, [r7, #32]
 800a5be:	68db      	ldr	r3, [r3, #12]
 800a5c0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a5c2:	6812      	ldr	r2, [r2, #0]
 800a5c4:	8912      	ldrh	r2, [r2, #8]
            (msg->shape.height != bm->buffer->height) ||
 800a5c6:	4293      	cmp	r3, r2
 800a5c8:	d106      	bne.n	800a5d8 <aiPbBuffer_read_cb3+0x86>
            (msg->shape.n_batches != bm->buffer->n_batches)) {
 800a5ca:	6a3b      	ldr	r3, [r7, #32]
 800a5cc:	685b      	ldr	r3, [r3, #4]
 800a5ce:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a5d0:	6812      	ldr	r2, [r2, #0]
 800a5d2:	8892      	ldrh	r2, [r2, #4]
            (msg->shape.width != bm->buffer->width) ||
 800a5d4:	4293      	cmp	r3, r2
 800a5d6:	d004      	beq.n	800a5e2 <aiPbBuffer_read_cb3+0x90>
        maxr = 0;
 800a5d8:	2300      	movs	r3, #0
 800a5da:	62fb      	str	r3, [r7, #44]	; 0x2c
        bm->err = EnumError_E_INVALID_SHAPE;
 800a5dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a5de:	2205      	movs	r2, #5
 800a5e0:	60da      	str	r2, [r3, #12]
    }

    itsize = aiPbBufferGetItemSize(format);
 800a5e2:	69f8      	ldr	r0, [r7, #28]
 800a5e4:	f7ff ffa5 	bl	800a532 <aiPbBufferGetItemSize>
 800a5e8:	61b8      	str	r0, [r7, #24]

    /* Read data */
    uint8_t *pw = (uint8_t *)bm->buffer->data;
 800a5ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a5ec:	681b      	ldr	r3, [r3, #0]
 800a5ee:	691b      	ldr	r3, [r3, #16]
 800a5f0:	62bb      	str	r3, [r7, #40]	; 0x28
    while (stream->bytes_left) {
 800a5f2:	e027      	b.n	800a644 <aiPbBuffer_read_cb3+0xf2>
        uint64_t number;
        if (!pb_read(stream, (pb_byte_t *)&number, itsize))
 800a5f4:	f107 0310 	add.w	r3, r7, #16
 800a5f8:	69ba      	ldr	r2, [r7, #24]
 800a5fa:	4619      	mov	r1, r3
 800a5fc:	68f8      	ldr	r0, [r7, #12]
 800a5fe:	f002 fee1 	bl	800d3c4 <pb_read>
 800a602:	4603      	mov	r3, r0
 800a604:	f083 0301 	eor.w	r3, r3, #1
 800a608:	b2db      	uxtb	r3, r3
 800a60a:	2b00      	cmp	r3, #0
 800a60c:	d001      	beq.n	800a612 <aiPbBuffer_read_cb3+0xc0>
            return false;
 800a60e:	2300      	movs	r3, #0
 800a610:	e02a      	b.n	800a668 <aiPbBuffer_read_cb3+0x116>
        if (maxr > 0) {
 800a612:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a614:	2b00      	cmp	r3, #0
 800a616:	dd10      	ble.n	800a63a <aiPbBuffer_read_cb3+0xe8>
            if (pw) {
 800a618:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a61a:	2b00      	cmp	r3, #0
 800a61c:	d00a      	beq.n	800a634 <aiPbBuffer_read_cb3+0xe2>
                memcpy(pw, &number, itsize);
 800a61e:	f107 0310 	add.w	r3, r7, #16
 800a622:	69ba      	ldr	r2, [r7, #24]
 800a624:	4619      	mov	r1, r3
 800a626:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800a628:	f005 fbd5 	bl	800fdd6 <memcpy>
                pw += itsize;
 800a62c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a62e:	69bb      	ldr	r3, [r7, #24]
 800a630:	4413      	add	r3, r2
 800a632:	62bb      	str	r3, [r7, #40]	; 0x28
            }
            maxr--;
 800a634:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a636:	3b01      	subs	r3, #1
 800a638:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
        bm->n_ops++;
 800a63a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a63c:	689b      	ldr	r3, [r3, #8]
 800a63e:	1c5a      	adds	r2, r3, #1
 800a640:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a642:	609a      	str	r2, [r3, #8]
    while (stream->bytes_left) {
 800a644:	68fb      	ldr	r3, [r7, #12]
 800a646:	689b      	ldr	r3, [r3, #8]
 800a648:	2b00      	cmp	r3, #0
 800a64a:	d1d3      	bne.n	800a5f4 <aiPbBuffer_read_cb3+0xa2>
    }

    /* Check nb_op */
    if ((bm->err == EnumError_E_NONE) && (bm->n_ops != bm->n_max))
 800a64c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a64e:	68db      	ldr	r3, [r3, #12]
 800a650:	2b00      	cmp	r3, #0
 800a652:	d108      	bne.n	800a666 <aiPbBuffer_read_cb3+0x114>
 800a654:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a656:	689a      	ldr	r2, [r3, #8]
 800a658:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a65a:	685b      	ldr	r3, [r3, #4]
 800a65c:	429a      	cmp	r2, r3
 800a65e:	d002      	beq.n	800a666 <aiPbBuffer_read_cb3+0x114>
        bm->err = EnumError_E_INVALID_SIZE;
 800a660:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a662:	2201      	movs	r2, #1
 800a664:	60da      	str	r2, [r3, #12]

    return true;
 800a666:	2301      	movs	r3, #1
}
 800a668:	4618      	mov	r0, r3
 800a66a:	3730      	adds	r7, #48	; 0x30
 800a66c:	46bd      	mov	sp, r7
 800a66e:	bd80      	pop	{r7, pc}

0800a670 <aiPbBuffer_write_cb3>:

static bool aiPbBuffer_write_cb3(pb_ostream_t *stream, const pb_field_t *field,
        void * const *arg)
{
 800a670:	b580      	push	{r7, lr}
 800a672:	b08a      	sub	sp, #40	; 0x28
 800a674:	af00      	add	r7, sp, #0
 800a676:	60f8      	str	r0, [r7, #12]
 800a678:	60b9      	str	r1, [r7, #8]
 800a67a:	607a      	str	r2, [r7, #4]
    struct aiPbMgrBuffer *bm = (struct aiPbMgrBuffer *)*arg;
 800a67c:	687b      	ldr	r3, [r7, #4]
 800a67e:	681b      	ldr	r3, [r3, #0]
 800a680:	627b      	str	r3, [r7, #36]	; 0x24
    size_t itsize;

    int maxw = bm->n_max;
 800a682:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a684:	685b      	ldr	r3, [r3, #4]
 800a686:	623b      	str	r3, [r7, #32]
    ai_buffer_format format;

    if ((maxw == 0) || (!bm->buffer))
 800a688:	6a3b      	ldr	r3, [r7, #32]
 800a68a:	2b00      	cmp	r3, #0
 800a68c:	d003      	beq.n	800a696 <aiPbBuffer_write_cb3+0x26>
 800a68e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a690:	681b      	ldr	r3, [r3, #0]
 800a692:	2b00      	cmp	r3, #0
 800a694:	d101      	bne.n	800a69a <aiPbBuffer_write_cb3+0x2a>
        return true;
 800a696:	2301      	movs	r3, #1
 800a698:	e02c      	b.n	800a6f4 <aiPbBuffer_write_cb3+0x84>

    format = bm->buffer->format;
 800a69a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a69c:	681b      	ldr	r3, [r3, #0]
 800a69e:	681b      	ldr	r3, [r3, #0]
 800a6a0:	61fb      	str	r3, [r7, #28]

    itsize = aiPbBufferGetItemSize(format);
 800a6a2:	69f8      	ldr	r0, [r7, #28]
 800a6a4:	f7ff ff45 	bl	800a532 <aiPbBufferGetItemSize>
 800a6a8:	61b8      	str	r0, [r7, #24]

    /* Write data */
    pb_byte_t *pr = (pb_byte_t *)bm->buffer->data;
 800a6aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a6ac:	681b      	ldr	r3, [r3, #0]
 800a6ae:	691b      	ldr	r3, [r3, #16]
 800a6b0:	617b      	str	r3, [r7, #20]

    if (!pb_encode_tag_for_field(stream, field))
 800a6b2:	68b9      	ldr	r1, [r7, #8]
 800a6b4:	68f8      	ldr	r0, [r7, #12]
 800a6b6:	f005 f867 	bl	800f788 <pb_encode_tag_for_field>
 800a6ba:	4603      	mov	r3, r0
 800a6bc:	f083 0301 	eor.w	r3, r3, #1
 800a6c0:	b2db      	uxtb	r3, r3
 800a6c2:	2b00      	cmp	r3, #0
 800a6c4:	d001      	beq.n	800a6ca <aiPbBuffer_write_cb3+0x5a>
        return false;
 800a6c6:	2300      	movs	r3, #0
 800a6c8:	e014      	b.n	800a6f4 <aiPbBuffer_write_cb3+0x84>

    if (!pb_encode_string(stream, pr, itsize * maxw))
 800a6ca:	6a3b      	ldr	r3, [r7, #32]
 800a6cc:	69ba      	ldr	r2, [r7, #24]
 800a6ce:	fb02 f303 	mul.w	r3, r2, r3
 800a6d2:	461a      	mov	r2, r3
 800a6d4:	6979      	ldr	r1, [r7, #20]
 800a6d6:	68f8      	ldr	r0, [r7, #12]
 800a6d8:	f005 f8a0 	bl	800f81c <pb_encode_string>
 800a6dc:	4603      	mov	r3, r0
 800a6de:	f083 0301 	eor.w	r3, r3, #1
 800a6e2:	b2db      	uxtb	r3, r3
 800a6e4:	2b00      	cmp	r3, #0
 800a6e6:	d001      	beq.n	800a6ec <aiPbBuffer_write_cb3+0x7c>
        return false;
 800a6e8:	2300      	movs	r3, #0
 800a6ea:	e003      	b.n	800a6f4 <aiPbBuffer_write_cb3+0x84>

    bm->n_ops = maxw;
 800a6ec:	6a3a      	ldr	r2, [r7, #32]
 800a6ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a6f0:	609a      	str	r2, [r3, #8]

    return true;
 800a6f2:	2301      	movs	r3, #1
}
 800a6f4:	4618      	mov	r0, r3
 800a6f6:	3728      	adds	r7, #40	; 0x28
 800a6f8:	46bd      	mov	sp, r7
 800a6fa:	bd80      	pop	{r7, pc}

0800a6fc <aiPbMgrReceiveAiBuffer3>:

bool aiPbMgrReceiveAiBuffer3(const reqMsg *req, respMsg *resp,
        EnumState state, ai_buffer *buffer)
{
 800a6fc:	b580      	push	{r7, lr}
 800a6fe:	b096      	sub	sp, #88	; 0x58
 800a700:	af02      	add	r7, sp, #8
 800a702:	60f8      	str	r0, [r7, #12]
 800a704:	60b9      	str	r1, [r7, #8]
 800a706:	603b      	str	r3, [r7, #0]
 800a708:	4613      	mov	r3, r2
 800a70a:	71fb      	strb	r3, [r7, #7]
    aiBufferByteMsg msg;
    struct aiPbMgrBuffer hdlb;
    bool res = true;
 800a70c:	2301      	movs	r3, #1
 800a70e:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f

    hdlb.n_ops = 0;
 800a712:	2300      	movs	r3, #0
 800a714:	61fb      	str	r3, [r7, #28]
    hdlb.buffer = buffer;
 800a716:	683b      	ldr	r3, [r7, #0]
 800a718:	617b      	str	r3, [r7, #20]
    hdlb.err = EnumError_E_NONE;
 800a71a:	2300      	movs	r3, #0
 800a71c:	623b      	str	r3, [r7, #32]
    hdlb.n_max = aiPbAiBufferSize(buffer);
 800a71e:	6838      	ldr	r0, [r7, #0]
 800a720:	f7ff fed4 	bl	800a4cc <aiPbAiBufferSize>
 800a724:	4603      	mov	r3, r0
 800a726:	61bb      	str	r3, [r7, #24]
    hdlb.msg = &msg;
 800a728:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800a72c:	627b      	str	r3, [r7, #36]	; 0x24

    msg.datas.funcs.decode = &aiPbBuffer_read_cb3;
 800a72e:	4b1b      	ldr	r3, [pc, #108]	; (800a79c <aiPbMgrReceiveAiBuffer3+0xa0>)
 800a730:	647b      	str	r3, [r7, #68]	; 0x44
    msg.datas.arg = &hdlb;
 800a732:	f107 0314 	add.w	r3, r7, #20
 800a736:	64bb      	str	r3, [r7, #72]	; 0x48

    /* Waiting buffer message */
    pb_decode_delimited(&pbContextMgr.input, aiBufferByteMsg_fields, &msg);
 800a738:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800a73c:	461a      	mov	r2, r3
 800a73e:	4918      	ldr	r1, [pc, #96]	; (800a7a0 <aiPbMgrReceiveAiBuffer3+0xa4>)
 800a740:	4818      	ldr	r0, [pc, #96]	; (800a7a4 <aiPbMgrReceiveAiBuffer3+0xa8>)
 800a742:	f003 fe67 	bl	800e414 <pb_decode_delimited>
    ioFlushRead();
 800a746:	f001 fa3f 	bl	800bbc8 <ioFlushRead>

    /* Send ACK and wait ACK (or send ACK only if error) */
    if (hdlb.err) {
 800a74a:	6a3b      	ldr	r3, [r7, #32]
 800a74c:	2b00      	cmp	r3, #0
 800a74e:	d00d      	beq.n	800a76c <aiPbMgrReceiveAiBuffer3+0x70>
        aiPbMgrSendAck(req, resp, EnumState_S_ERROR, hdlb.err,
 800a750:	6a3a      	ldr	r2, [r7, #32]
                (EnumError)hdlb.err);
 800a752:	6a3b      	ldr	r3, [r7, #32]
        aiPbMgrSendAck(req, resp, EnumState_S_ERROR, hdlb.err,
 800a754:	b2db      	uxtb	r3, r3
 800a756:	9300      	str	r3, [sp, #0]
 800a758:	4613      	mov	r3, r2
 800a75a:	2204      	movs	r2, #4
 800a75c:	68b9      	ldr	r1, [r7, #8]
 800a75e:	68f8      	ldr	r0, [r7, #12]
 800a760:	f7ff fe7e 	bl	800a460 <aiPbMgrSendAck>
        res = false;
 800a764:	2300      	movs	r3, #0
 800a766:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 800a76a:	e010      	b.n	800a78e <aiPbMgrReceiveAiBuffer3+0x92>
    } else {
        aiPbMgrSendAck(req, resp, state, hdlb.n_ops, EnumError_E_NONE);
 800a76c:	69f9      	ldr	r1, [r7, #28]
 800a76e:	79fa      	ldrb	r2, [r7, #7]
 800a770:	2300      	movs	r3, #0
 800a772:	9300      	str	r3, [sp, #0]
 800a774:	460b      	mov	r3, r1
 800a776:	68b9      	ldr	r1, [r7, #8]
 800a778:	68f8      	ldr	r0, [r7, #12]
 800a77a:	f7ff fe71 	bl	800a460 <aiPbMgrSendAck>
        if ((state == EnumState_S_WAITING) ||
 800a77e:	79fb      	ldrb	r3, [r7, #7]
 800a780:	2b01      	cmp	r3, #1
 800a782:	d002      	beq.n	800a78a <aiPbMgrReceiveAiBuffer3+0x8e>
 800a784:	79fb      	ldrb	r3, [r7, #7]
 800a786:	2b02      	cmp	r3, #2
 800a788:	d101      	bne.n	800a78e <aiPbMgrReceiveAiBuffer3+0x92>
                (state == EnumState_S_PROCESSING))
            aiPbMgrWaitAck();
 800a78a:	f7ff fe85 	bl	800a498 <aiPbMgrWaitAck>
    }

    return res;
 800a78e:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
}
 800a792:	4618      	mov	r0, r3
 800a794:	3750      	adds	r7, #80	; 0x50
 800a796:	46bd      	mov	sp, r7
 800a798:	bd80      	pop	{r7, pc}
 800a79a:	bf00      	nop
 800a79c:	0800a553 	.word	0x0800a553
 800a7a0:	0801681c 	.word	0x0801681c
 800a7a4:	200008e4 	.word	0x200008e4

0800a7a8 <aiPbMgrSetMetaInfo>:

static void aiPbMgrSetMetaInfo(const ai_buffer_meta_info *meta_info, const int idx,
		aiBufferShapeMsg *shape)
{
 800a7a8:	b480      	push	{r7}
 800a7aa:	b085      	sub	sp, #20
 800a7ac:	af00      	add	r7, sp, #0
 800a7ae:	60f8      	str	r0, [r7, #12]
 800a7b0:	60b9      	str	r1, [r7, #8]
 800a7b2:	607a      	str	r2, [r7, #4]
	shape->scale = 0.0f;
 800a7b4:	687b      	ldr	r3, [r7, #4]
 800a7b6:	f04f 0200 	mov.w	r2, #0
 800a7ba:	615a      	str	r2, [r3, #20]
	shape->zeropoint = 0;
 800a7bc:	687b      	ldr	r3, [r7, #4]
 800a7be:	2200      	movs	r2, #0
 800a7c0:	619a      	str	r2, [r3, #24]
	if (AI_BUFFER_META_INFO_INTQ(meta_info)) {
 800a7c2:	68fb      	ldr	r3, [r7, #12]
 800a7c4:	2b00      	cmp	r3, #0
 800a7c6:	f000 811e 	beq.w	800aa06 <aiPbMgrSetMetaInfo+0x25e>
 800a7ca:	68fb      	ldr	r3, [r7, #12]
 800a7cc:	681b      	ldr	r3, [r3, #0]
 800a7ce:	f003 0301 	and.w	r3, r3, #1
 800a7d2:	2b00      	cmp	r3, #0
 800a7d4:	f000 8117 	beq.w	800aa06 <aiPbMgrSetMetaInfo+0x25e>
 800a7d8:	68fb      	ldr	r3, [r7, #12]
 800a7da:	685b      	ldr	r3, [r3, #4]
 800a7dc:	2b00      	cmp	r3, #0
 800a7de:	f000 8112 	beq.w	800aa06 <aiPbMgrSetMetaInfo+0x25e>
		shape->scale = AI_BUFFER_META_INFO_INTQ_GET_SCALE(meta_info, idx);
 800a7e2:	68fb      	ldr	r3, [r7, #12]
 800a7e4:	2b00      	cmp	r3, #0
 800a7e6:	d04f      	beq.n	800a888 <aiPbMgrSetMetaInfo+0xe0>
 800a7e8:	68fb      	ldr	r3, [r7, #12]
 800a7ea:	681b      	ldr	r3, [r3, #0]
 800a7ec:	f003 0301 	and.w	r3, r3, #1
 800a7f0:	2b00      	cmp	r3, #0
 800a7f2:	d049      	beq.n	800a888 <aiPbMgrSetMetaInfo+0xe0>
 800a7f4:	68fb      	ldr	r3, [r7, #12]
 800a7f6:	685b      	ldr	r3, [r3, #4]
 800a7f8:	2b00      	cmp	r3, #0
 800a7fa:	d045      	beq.n	800a888 <aiPbMgrSetMetaInfo+0xe0>
 800a7fc:	68fb      	ldr	r3, [r7, #12]
 800a7fe:	2b00      	cmp	r3, #0
 800a800:	d03f      	beq.n	800a882 <aiPbMgrSetMetaInfo+0xda>
 800a802:	68fb      	ldr	r3, [r7, #12]
 800a804:	681b      	ldr	r3, [r3, #0]
 800a806:	f003 0301 	and.w	r3, r3, #1
 800a80a:	2b00      	cmp	r3, #0
 800a80c:	d039      	beq.n	800a882 <aiPbMgrSetMetaInfo+0xda>
 800a80e:	68fb      	ldr	r3, [r7, #12]
 800a810:	685b      	ldr	r3, [r3, #4]
 800a812:	2b00      	cmp	r3, #0
 800a814:	d035      	beq.n	800a882 <aiPbMgrSetMetaInfo+0xda>
 800a816:	68fb      	ldr	r3, [r7, #12]
 800a818:	2b00      	cmp	r3, #0
 800a81a:	d008      	beq.n	800a82e <aiPbMgrSetMetaInfo+0x86>
 800a81c:	68fb      	ldr	r3, [r7, #12]
 800a81e:	681b      	ldr	r3, [r3, #0]
 800a820:	f003 0301 	and.w	r3, r3, #1
 800a824:	2b00      	cmp	r3, #0
 800a826:	d002      	beq.n	800a82e <aiPbMgrSetMetaInfo+0x86>
 800a828:	68fb      	ldr	r3, [r7, #12]
 800a82a:	685b      	ldr	r3, [r3, #4]
 800a82c:	e000      	b.n	800a830 <aiPbMgrSetMetaInfo+0x88>
 800a82e:	2300      	movs	r3, #0
 800a830:	685b      	ldr	r3, [r3, #4]
 800a832:	2b00      	cmp	r3, #0
 800a834:	d025      	beq.n	800a882 <aiPbMgrSetMetaInfo+0xda>
 800a836:	68fb      	ldr	r3, [r7, #12]
 800a838:	2b00      	cmp	r3, #0
 800a83a:	d008      	beq.n	800a84e <aiPbMgrSetMetaInfo+0xa6>
 800a83c:	68fb      	ldr	r3, [r7, #12]
 800a83e:	681b      	ldr	r3, [r3, #0]
 800a840:	f003 0301 	and.w	r3, r3, #1
 800a844:	2b00      	cmp	r3, #0
 800a846:	d002      	beq.n	800a84e <aiPbMgrSetMetaInfo+0xa6>
 800a848:	68fb      	ldr	r3, [r7, #12]
 800a84a:	685b      	ldr	r3, [r3, #4]
 800a84c:	e000      	b.n	800a850 <aiPbMgrSetMetaInfo+0xa8>
 800a84e:	2300      	movs	r3, #0
 800a850:	885b      	ldrh	r3, [r3, #2]
 800a852:	461a      	mov	r2, r3
 800a854:	68bb      	ldr	r3, [r7, #8]
 800a856:	4293      	cmp	r3, r2
 800a858:	da13      	bge.n	800a882 <aiPbMgrSetMetaInfo+0xda>
 800a85a:	68fb      	ldr	r3, [r7, #12]
 800a85c:	2b00      	cmp	r3, #0
 800a85e:	d008      	beq.n	800a872 <aiPbMgrSetMetaInfo+0xca>
 800a860:	68fb      	ldr	r3, [r7, #12]
 800a862:	681b      	ldr	r3, [r3, #0]
 800a864:	f003 0301 	and.w	r3, r3, #1
 800a868:	2b00      	cmp	r3, #0
 800a86a:	d002      	beq.n	800a872 <aiPbMgrSetMetaInfo+0xca>
 800a86c:	68fb      	ldr	r3, [r7, #12]
 800a86e:	685b      	ldr	r3, [r3, #4]
 800a870:	e000      	b.n	800a874 <aiPbMgrSetMetaInfo+0xcc>
 800a872:	2300      	movs	r3, #0
 800a874:	685b      	ldr	r3, [r3, #4]
 800a876:	681a      	ldr	r2, [r3, #0]
 800a878:	68bb      	ldr	r3, [r7, #8]
 800a87a:	009b      	lsls	r3, r3, #2
 800a87c:	4413      	add	r3, r2
 800a87e:	681b      	ldr	r3, [r3, #0]
 800a880:	e004      	b.n	800a88c <aiPbMgrSetMetaInfo+0xe4>
 800a882:	f04f 0300 	mov.w	r3, #0
 800a886:	e001      	b.n	800a88c <aiPbMgrSetMetaInfo+0xe4>
 800a888:	f04f 0300 	mov.w	r3, #0
 800a88c:	687a      	ldr	r2, [r7, #4]
 800a88e:	6153      	str	r3, [r2, #20]
		shape->zeropoint = AI_BUFFER_META_INFO_INTQ_GET_ZEROPOINT(meta_info, idx);
 800a890:	68fb      	ldr	r3, [r7, #12]
 800a892:	2b00      	cmp	r3, #0
 800a894:	f000 80b4 	beq.w	800aa00 <aiPbMgrSetMetaInfo+0x258>
 800a898:	68fb      	ldr	r3, [r7, #12]
 800a89a:	681b      	ldr	r3, [r3, #0]
 800a89c:	f003 0301 	and.w	r3, r3, #1
 800a8a0:	2b00      	cmp	r3, #0
 800a8a2:	f000 80ad 	beq.w	800aa00 <aiPbMgrSetMetaInfo+0x258>
 800a8a6:	68fb      	ldr	r3, [r7, #12]
 800a8a8:	685b      	ldr	r3, [r3, #4]
 800a8aa:	2b00      	cmp	r3, #0
 800a8ac:	f000 80a8 	beq.w	800aa00 <aiPbMgrSetMetaInfo+0x258>
 800a8b0:	68fb      	ldr	r3, [r7, #12]
 800a8b2:	2b00      	cmp	r3, #0
 800a8b4:	d05f      	beq.n	800a976 <aiPbMgrSetMetaInfo+0x1ce>
 800a8b6:	68fb      	ldr	r3, [r7, #12]
 800a8b8:	681b      	ldr	r3, [r3, #0]
 800a8ba:	f003 0301 	and.w	r3, r3, #1
 800a8be:	2b00      	cmp	r3, #0
 800a8c0:	d059      	beq.n	800a976 <aiPbMgrSetMetaInfo+0x1ce>
 800a8c2:	68fb      	ldr	r3, [r7, #12]
 800a8c4:	685b      	ldr	r3, [r3, #4]
 800a8c6:	2b00      	cmp	r3, #0
 800a8c8:	d055      	beq.n	800a976 <aiPbMgrSetMetaInfo+0x1ce>
 800a8ca:	68fb      	ldr	r3, [r7, #12]
 800a8cc:	2b00      	cmp	r3, #0
 800a8ce:	d008      	beq.n	800a8e2 <aiPbMgrSetMetaInfo+0x13a>
 800a8d0:	68fb      	ldr	r3, [r7, #12]
 800a8d2:	681b      	ldr	r3, [r3, #0]
 800a8d4:	f003 0301 	and.w	r3, r3, #1
 800a8d8:	2b00      	cmp	r3, #0
 800a8da:	d002      	beq.n	800a8e2 <aiPbMgrSetMetaInfo+0x13a>
 800a8dc:	68fb      	ldr	r3, [r7, #12]
 800a8de:	685b      	ldr	r3, [r3, #4]
 800a8e0:	e000      	b.n	800a8e4 <aiPbMgrSetMetaInfo+0x13c>
 800a8e2:	2300      	movs	r3, #0
 800a8e4:	881b      	ldrh	r3, [r3, #0]
 800a8e6:	f003 0302 	and.w	r3, r3, #2
 800a8ea:	2b00      	cmp	r3, #0
 800a8ec:	d043      	beq.n	800a976 <aiPbMgrSetMetaInfo+0x1ce>
 800a8ee:	68fb      	ldr	r3, [r7, #12]
 800a8f0:	2b00      	cmp	r3, #0
 800a8f2:	d03e      	beq.n	800a972 <aiPbMgrSetMetaInfo+0x1ca>
 800a8f4:	68fb      	ldr	r3, [r7, #12]
 800a8f6:	681b      	ldr	r3, [r3, #0]
 800a8f8:	f003 0301 	and.w	r3, r3, #1
 800a8fc:	2b00      	cmp	r3, #0
 800a8fe:	d038      	beq.n	800a972 <aiPbMgrSetMetaInfo+0x1ca>
 800a900:	68fb      	ldr	r3, [r7, #12]
 800a902:	685b      	ldr	r3, [r3, #4]
 800a904:	2b00      	cmp	r3, #0
 800a906:	d034      	beq.n	800a972 <aiPbMgrSetMetaInfo+0x1ca>
 800a908:	68fb      	ldr	r3, [r7, #12]
 800a90a:	2b00      	cmp	r3, #0
 800a90c:	d008      	beq.n	800a920 <aiPbMgrSetMetaInfo+0x178>
 800a90e:	68fb      	ldr	r3, [r7, #12]
 800a910:	681b      	ldr	r3, [r3, #0]
 800a912:	f003 0301 	and.w	r3, r3, #1
 800a916:	2b00      	cmp	r3, #0
 800a918:	d002      	beq.n	800a920 <aiPbMgrSetMetaInfo+0x178>
 800a91a:	68fb      	ldr	r3, [r7, #12]
 800a91c:	685b      	ldr	r3, [r3, #4]
 800a91e:	e000      	b.n	800a922 <aiPbMgrSetMetaInfo+0x17a>
 800a920:	2300      	movs	r3, #0
 800a922:	685b      	ldr	r3, [r3, #4]
 800a924:	2b00      	cmp	r3, #0
 800a926:	d024      	beq.n	800a972 <aiPbMgrSetMetaInfo+0x1ca>
 800a928:	68fb      	ldr	r3, [r7, #12]
 800a92a:	2b00      	cmp	r3, #0
 800a92c:	d008      	beq.n	800a940 <aiPbMgrSetMetaInfo+0x198>
 800a92e:	68fb      	ldr	r3, [r7, #12]
 800a930:	681b      	ldr	r3, [r3, #0]
 800a932:	f003 0301 	and.w	r3, r3, #1
 800a936:	2b00      	cmp	r3, #0
 800a938:	d002      	beq.n	800a940 <aiPbMgrSetMetaInfo+0x198>
 800a93a:	68fb      	ldr	r3, [r7, #12]
 800a93c:	685b      	ldr	r3, [r3, #4]
 800a93e:	e000      	b.n	800a942 <aiPbMgrSetMetaInfo+0x19a>
 800a940:	2300      	movs	r3, #0
 800a942:	885b      	ldrh	r3, [r3, #2]
 800a944:	461a      	mov	r2, r3
 800a946:	68bb      	ldr	r3, [r7, #8]
 800a948:	4293      	cmp	r3, r2
 800a94a:	da12      	bge.n	800a972 <aiPbMgrSetMetaInfo+0x1ca>
 800a94c:	68fb      	ldr	r3, [r7, #12]
 800a94e:	2b00      	cmp	r3, #0
 800a950:	d008      	beq.n	800a964 <aiPbMgrSetMetaInfo+0x1bc>
 800a952:	68fb      	ldr	r3, [r7, #12]
 800a954:	681b      	ldr	r3, [r3, #0]
 800a956:	f003 0301 	and.w	r3, r3, #1
 800a95a:	2b00      	cmp	r3, #0
 800a95c:	d002      	beq.n	800a964 <aiPbMgrSetMetaInfo+0x1bc>
 800a95e:	68fb      	ldr	r3, [r7, #12]
 800a960:	685b      	ldr	r3, [r3, #4]
 800a962:	e000      	b.n	800a966 <aiPbMgrSetMetaInfo+0x1be>
 800a964:	2300      	movs	r3, #0
 800a966:	685b      	ldr	r3, [r3, #4]
 800a968:	685a      	ldr	r2, [r3, #4]
 800a96a:	68bb      	ldr	r3, [r7, #8]
 800a96c:	4413      	add	r3, r2
 800a96e:	781b      	ldrb	r3, [r3, #0]
 800a970:	e047      	b.n	800aa02 <aiPbMgrSetMetaInfo+0x25a>
 800a972:	2300      	movs	r3, #0
 800a974:	e045      	b.n	800aa02 <aiPbMgrSetMetaInfo+0x25a>
 800a976:	68fb      	ldr	r3, [r7, #12]
 800a978:	2b00      	cmp	r3, #0
 800a97a:	d03f      	beq.n	800a9fc <aiPbMgrSetMetaInfo+0x254>
 800a97c:	68fb      	ldr	r3, [r7, #12]
 800a97e:	681b      	ldr	r3, [r3, #0]
 800a980:	f003 0301 	and.w	r3, r3, #1
 800a984:	2b00      	cmp	r3, #0
 800a986:	d039      	beq.n	800a9fc <aiPbMgrSetMetaInfo+0x254>
 800a988:	68fb      	ldr	r3, [r7, #12]
 800a98a:	685b      	ldr	r3, [r3, #4]
 800a98c:	2b00      	cmp	r3, #0
 800a98e:	d035      	beq.n	800a9fc <aiPbMgrSetMetaInfo+0x254>
 800a990:	68fb      	ldr	r3, [r7, #12]
 800a992:	2b00      	cmp	r3, #0
 800a994:	d008      	beq.n	800a9a8 <aiPbMgrSetMetaInfo+0x200>
 800a996:	68fb      	ldr	r3, [r7, #12]
 800a998:	681b      	ldr	r3, [r3, #0]
 800a99a:	f003 0301 	and.w	r3, r3, #1
 800a99e:	2b00      	cmp	r3, #0
 800a9a0:	d002      	beq.n	800a9a8 <aiPbMgrSetMetaInfo+0x200>
 800a9a2:	68fb      	ldr	r3, [r7, #12]
 800a9a4:	685b      	ldr	r3, [r3, #4]
 800a9a6:	e000      	b.n	800a9aa <aiPbMgrSetMetaInfo+0x202>
 800a9a8:	2300      	movs	r3, #0
 800a9aa:	685b      	ldr	r3, [r3, #4]
 800a9ac:	2b00      	cmp	r3, #0
 800a9ae:	d025      	beq.n	800a9fc <aiPbMgrSetMetaInfo+0x254>
 800a9b0:	68fb      	ldr	r3, [r7, #12]
 800a9b2:	2b00      	cmp	r3, #0
 800a9b4:	d008      	beq.n	800a9c8 <aiPbMgrSetMetaInfo+0x220>
 800a9b6:	68fb      	ldr	r3, [r7, #12]
 800a9b8:	681b      	ldr	r3, [r3, #0]
 800a9ba:	f003 0301 	and.w	r3, r3, #1
 800a9be:	2b00      	cmp	r3, #0
 800a9c0:	d002      	beq.n	800a9c8 <aiPbMgrSetMetaInfo+0x220>
 800a9c2:	68fb      	ldr	r3, [r7, #12]
 800a9c4:	685b      	ldr	r3, [r3, #4]
 800a9c6:	e000      	b.n	800a9ca <aiPbMgrSetMetaInfo+0x222>
 800a9c8:	2300      	movs	r3, #0
 800a9ca:	885b      	ldrh	r3, [r3, #2]
 800a9cc:	461a      	mov	r2, r3
 800a9ce:	68bb      	ldr	r3, [r7, #8]
 800a9d0:	4293      	cmp	r3, r2
 800a9d2:	da13      	bge.n	800a9fc <aiPbMgrSetMetaInfo+0x254>
 800a9d4:	68fb      	ldr	r3, [r7, #12]
 800a9d6:	2b00      	cmp	r3, #0
 800a9d8:	d008      	beq.n	800a9ec <aiPbMgrSetMetaInfo+0x244>
 800a9da:	68fb      	ldr	r3, [r7, #12]
 800a9dc:	681b      	ldr	r3, [r3, #0]
 800a9de:	f003 0301 	and.w	r3, r3, #1
 800a9e2:	2b00      	cmp	r3, #0
 800a9e4:	d002      	beq.n	800a9ec <aiPbMgrSetMetaInfo+0x244>
 800a9e6:	68fb      	ldr	r3, [r7, #12]
 800a9e8:	685b      	ldr	r3, [r3, #4]
 800a9ea:	e000      	b.n	800a9ee <aiPbMgrSetMetaInfo+0x246>
 800a9ec:	2300      	movs	r3, #0
 800a9ee:	685b      	ldr	r3, [r3, #4]
 800a9f0:	685a      	ldr	r2, [r3, #4]
 800a9f2:	68bb      	ldr	r3, [r7, #8]
 800a9f4:	4413      	add	r3, r2
 800a9f6:	f993 3000 	ldrsb.w	r3, [r3]
 800a9fa:	e002      	b.n	800aa02 <aiPbMgrSetMetaInfo+0x25a>
 800a9fc:	2300      	movs	r3, #0
 800a9fe:	e000      	b.n	800aa02 <aiPbMgrSetMetaInfo+0x25a>
 800aa00:	2300      	movs	r3, #0
 800aa02:	687a      	ldr	r2, [r7, #4]
 800aa04:	6193      	str	r3, [r2, #24]
	}
}
 800aa06:	bf00      	nop
 800aa08:	3714      	adds	r7, #20
 800aa0a:	46bd      	mov	sp, r7
 800aa0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa10:	4770      	bx	lr
	...

0800aa14 <aiPbMgrSendAiBuffer3>:

bool aiPbMgrSendAiBuffer3(const reqMsg *req, respMsg *resp, EnumState state,
        uint32_t type, uint32_t id, ai_float dur_ms, const ai_buffer *buffer)
{
 800aa14:	b580      	push	{r7, lr}
 800aa16:	b08c      	sub	sp, #48	; 0x30
 800aa18:	af00      	add	r7, sp, #0
 800aa1a:	6178      	str	r0, [r7, #20]
 800aa1c:	6139      	str	r1, [r7, #16]
 800aa1e:	60bb      	str	r3, [r7, #8]
 800aa20:	ed87 0a01 	vstr	s0, [r7, #4]
 800aa24:	4613      	mov	r3, r2
 800aa26:	73fb      	strb	r3, [r7, #15]
    struct aiPbMgrBuffer hdlb;
    const ai_buffer_meta_info *meta_info = AI_BUFFER_META_INFO(buffer);
 800aa28:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800aa2a:	695b      	ldr	r3, [r3, #20]
 800aa2c:	62fb      	str	r3, [r7, #44]	; 0x2c

#if defined(AI_PB_FULL_IO) && (AI_PB_FULL_IO == 1)
    const int is_io = AI_BUFFER_FMT_FLAG_IS_IO & buffer->format;
#endif

    hdlb.n_ops = 0;
 800aa2e:	2300      	movs	r3, #0
 800aa30:	623b      	str	r3, [r7, #32]
    hdlb.buffer = (ai_buffer *)buffer;
 800aa32:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800aa34:	61bb      	str	r3, [r7, #24]
    hdlb.err = EnumError_E_NONE;
 800aa36:	2300      	movs	r3, #0
 800aa38:	627b      	str	r3, [r7, #36]	; 0x24
    hdlb.n_max = aiPbAiBufferSize(buffer);
 800aa3a:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 800aa3c:	f7ff fd46 	bl	800a4cc <aiPbAiBufferSize>
 800aa40:	4603      	mov	r3, r0
 800aa42:	61fb      	str	r3, [r7, #28]
    hdlb.msg = NULL;
 800aa44:	2300      	movs	r3, #0
 800aa46:	62bb      	str	r3, [r7, #40]	; 0x28
#if defined(AI_PB_FULL_IO) && (AI_PB_FULL_IO == 1)
    if ((type & PB_BUFFER_TYPE_SEND_WITHOUT_DATA) && (!is_io)) {
        hdlb.n_max  = 0;
    }
#else
    if (type & PB_BUFFER_TYPE_SEND_WITHOUT_DATA) {
 800aa48:	68bb      	ldr	r3, [r7, #8]
 800aa4a:	2b00      	cmp	r3, #0
 800aa4c:	da01      	bge.n	800aa52 <aiPbMgrSendAiBuffer3+0x3e>
        hdlb.n_max  = 0;
 800aa4e:	2300      	movs	r3, #0
 800aa50:	61fb      	str	r3, [r7, #28]
    }
#endif
    type &= (~PB_BUFFER_TYPE_SEND_WITHOUT_DATA);
 800aa52:	68bb      	ldr	r3, [r7, #8]
 800aa54:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800aa58:	60bb      	str	r3, [r7, #8]

    /* Fill Node sub-message */
    resp->which_payload = respMsg_node_tag;
 800aa5a:	693b      	ldr	r3, [r7, #16]
 800aa5c:	220e      	movs	r2, #14
 800aa5e:	80da      	strh	r2, [r3, #6]
    resp->payload.node.type = type;
 800aa60:	693b      	ldr	r3, [r7, #16]
 800aa62:	68ba      	ldr	r2, [r7, #8]
 800aa64:	609a      	str	r2, [r3, #8]
    resp->payload.node.id = id;
 800aa66:	693b      	ldr	r3, [r7, #16]
 800aa68:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800aa6a:	60da      	str	r2, [r3, #12]
    resp->payload.node.duration = dur_ms;
 800aa6c:	693b      	ldr	r3, [r7, #16]
 800aa6e:	687a      	ldr	r2, [r7, #4]
 800aa70:	611a      	str	r2, [r3, #16]
    resp->payload.node.buffer.shape.format = aiPbAiFmtToMsgFmt(buffer->format);
 800aa72:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800aa74:	681b      	ldr	r3, [r3, #0]
 800aa76:	4618      	mov	r0, r3
 800aa78:	f7ff fd50 	bl	800a51c <aiPbAiFmtToMsgFmt>
 800aa7c:	4602      	mov	r2, r0
 800aa7e:	693b      	ldr	r3, [r7, #16]
 800aa80:	615a      	str	r2, [r3, #20]
    resp->payload.node.buffer.shape.n_batches = buffer->n_batches;
 800aa82:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800aa84:	889b      	ldrh	r3, [r3, #4]
 800aa86:	461a      	mov	r2, r3
 800aa88:	693b      	ldr	r3, [r7, #16]
 800aa8a:	619a      	str	r2, [r3, #24]
    resp->payload.node.buffer.shape.height = buffer->height;
 800aa8c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800aa8e:	88db      	ldrh	r3, [r3, #6]
 800aa90:	461a      	mov	r2, r3
 800aa92:	693b      	ldr	r3, [r7, #16]
 800aa94:	61da      	str	r2, [r3, #28]
    resp->payload.node.buffer.shape.width = buffer->width;
 800aa96:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800aa98:	891b      	ldrh	r3, [r3, #8]
 800aa9a:	461a      	mov	r2, r3
 800aa9c:	693b      	ldr	r3, [r7, #16]
 800aa9e:	621a      	str	r2, [r3, #32]
    resp->payload.node.buffer.shape.channels = buffer->channels;
 800aaa0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800aaa2:	68da      	ldr	r2, [r3, #12]
 800aaa4:	693b      	ldr	r3, [r7, #16]
 800aaa6:	625a      	str	r2, [r3, #36]	; 0x24
    aiPbMgrSetMetaInfo(meta_info, 0, &resp->payload.node.buffer.shape);
 800aaa8:	693b      	ldr	r3, [r7, #16]
 800aaaa:	3314      	adds	r3, #20
 800aaac:	461a      	mov	r2, r3
 800aaae:	2100      	movs	r1, #0
 800aab0:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800aab2:	f7ff fe79 	bl	800a7a8 <aiPbMgrSetMetaInfo>

    resp->payload.node.buffer.datas.funcs.encode = &aiPbBuffer_write_cb3;
 800aab6:	693b      	ldr	r3, [r7, #16]
 800aab8:	4a0b      	ldr	r2, [pc, #44]	; (800aae8 <aiPbMgrSendAiBuffer3+0xd4>)
 800aaba:	631a      	str	r2, [r3, #48]	; 0x30
    resp->payload.node.buffer.datas.arg = &hdlb;
 800aabc:	693b      	ldr	r3, [r7, #16]
 800aabe:	f107 0218 	add.w	r2, r7, #24
 800aac2:	635a      	str	r2, [r3, #52]	; 0x34

    /* Send msg */
    aiPbMgrSendResp(req, resp, state);
 800aac4:	7bfb      	ldrb	r3, [r7, #15]
 800aac6:	461a      	mov	r2, r3
 800aac8:	6939      	ldr	r1, [r7, #16]
 800aaca:	6978      	ldr	r0, [r7, #20]
 800aacc:	f7ff fcaa 	bl	800a424 <aiPbMgrSendResp>

    /* Waiting ACK */
    if (state == EnumState_S_PROCESSING)
 800aad0:	7bfb      	ldrb	r3, [r7, #15]
 800aad2:	2b02      	cmp	r3, #2
 800aad4:	d103      	bne.n	800aade <aiPbMgrSendAiBuffer3+0xca>
        return aiPbMgrWaitAck();
 800aad6:	f7ff fcdf 	bl	800a498 <aiPbMgrWaitAck>
 800aada:	4603      	mov	r3, r0
 800aadc:	e000      	b.n	800aae0 <aiPbMgrSendAiBuffer3+0xcc>
    else
        return true;
 800aade:	2301      	movs	r3, #1
}
 800aae0:	4618      	mov	r0, r3
 800aae2:	3730      	adds	r7, #48	; 0x30
 800aae4:	46bd      	mov	sp, r7
 800aae6:	bd80      	pop	{r7, pc}
 800aae8:	0800a671 	.word	0x0800a671

0800aaec <aiPbCmdSync>:

/*---------------------------------------------------------------------------*/

void aiPbCmdSync(const reqMsg *req, respMsg *resp, void *param)
{
 800aaec:	b580      	push	{r7, lr}
 800aaee:	b084      	sub	sp, #16
 800aaf0:	af00      	add	r7, sp, #0
 800aaf2:	60f8      	str	r0, [r7, #12]
 800aaf4:	60b9      	str	r1, [r7, #8]
 800aaf6:	607a      	str	r2, [r7, #4]
    resp->which_payload = respMsg_sync_tag;
 800aaf8:	68bb      	ldr	r3, [r7, #8]
 800aafa:	220a      	movs	r2, #10
 800aafc:	80da      	strh	r2, [r3, #6]
    resp->payload.sync.version =
 800aafe:	68bb      	ldr	r3, [r7, #8]
 800ab00:	f240 2201 	movw	r2, #513	; 0x201
 800ab04:	609a      	str	r2, [r3, #8]
            EnumVersion_P_VERSION_MAJOR << 8 |
            EnumVersion_P_VERSION_MINOR;

    resp->payload.sync.capability = EnumCapability_CAP_FIXED_POINT;
 800ab06:	68bb      	ldr	r3, [r7, #8]
 800ab08:	2202      	movs	r2, #2
 800ab0a:	60da      	str	r2, [r3, #12]

#if defined(AI_PB_TEST) && (AI_PB_TEST == 1)
    resp->payload.sync.capability |= EnumCapability_CAP_SELF_TEST;
#endif

    if (param)
 800ab0c:	687b      	ldr	r3, [r7, #4]
 800ab0e:	2b00      	cmp	r3, #0
 800ab10:	d005      	beq.n	800ab1e <aiPbCmdSync+0x32>
        resp->payload.sync.capability |= (uint32_t)param;
 800ab12:	68bb      	ldr	r3, [r7, #8]
 800ab14:	68da      	ldr	r2, [r3, #12]
 800ab16:	687b      	ldr	r3, [r7, #4]
 800ab18:	431a      	orrs	r2, r3
 800ab1a:	68bb      	ldr	r3, [r7, #8]
 800ab1c:	60da      	str	r2, [r3, #12]

    aiPbMgrSendResp(req, resp, EnumState_S_IDLE);
 800ab1e:	2200      	movs	r2, #0
 800ab20:	68b9      	ldr	r1, [r7, #8]
 800ab22:	68f8      	ldr	r0, [r7, #12]
 800ab24:	f7ff fc7e 	bl	800a424 <aiPbMgrSendResp>
}
 800ab28:	bf00      	nop
 800ab2a:	3710      	adds	r7, #16
 800ab2c:	46bd      	mov	sp, r7
 800ab2e:	bd80      	pop	{r7, pc}

0800ab30 <aiPbCmdSysInfo>:

void aiPbCmdSysInfo(const reqMsg *req, respMsg *resp, void *param)
{
 800ab30:	b580      	push	{r7, lr}
 800ab32:	b084      	sub	sp, #16
 800ab34:	af00      	add	r7, sp, #0
 800ab36:	60f8      	str	r0, [r7, #12]
 800ab38:	60b9      	str	r1, [r7, #8]
 800ab3a:	607a      	str	r2, [r7, #4]
    UNUSED(param);
    resp->which_payload = respMsg_sinfo_tag;
 800ab3c:	68bb      	ldr	r3, [r7, #8]
 800ab3e:	220b      	movs	r2, #11
 800ab40:	80da      	strh	r2, [r3, #6]
    resp->payload.sinfo.devid = HAL_GetDEVID();
 800ab42:	f7fd f9fd 	bl	8007f40 <HAL_GetDEVID>
 800ab46:	4602      	mov	r2, r0
 800ab48:	68bb      	ldr	r3, [r7, #8]
 800ab4a:	609a      	str	r2, [r3, #8]
    resp->payload.sinfo.sclock = HAL_RCC_GetSysClockFreq();
 800ab4c:	f7fe f96a 	bl	8008e24 <HAL_RCC_GetSysClockFreq>
 800ab50:	4602      	mov	r2, r0
 800ab52:	68bb      	ldr	r3, [r7, #8]
 800ab54:	60da      	str	r2, [r3, #12]
    resp->payload.sinfo.hclock = HAL_RCC_GetHCLKFreq();
 800ab56:	f7fe fa17 	bl	8008f88 <HAL_RCC_GetHCLKFreq>
 800ab5a:	4602      	mov	r2, r0
 800ab5c:	68bb      	ldr	r3, [r7, #8]
 800ab5e:	611a      	str	r2, [r3, #16]
    resp->payload.sinfo.cache = getFlashCacheConf();
 800ab60:	f000 fb74 	bl	800b24c <getFlashCacheConf>
 800ab64:	4602      	mov	r2, r0
 800ab66:	68bb      	ldr	r3, [r7, #8]
 800ab68:	615a      	str	r2, [r3, #20]

    aiPbMgrSendResp(req, resp, EnumState_S_IDLE);
 800ab6a:	2200      	movs	r2, #0
 800ab6c:	68b9      	ldr	r1, [r7, #8]
 800ab6e:	68f8      	ldr	r0, [r7, #12]
 800ab70:	f7ff fc58 	bl	800a424 <aiPbMgrSendResp>
}
 800ab74:	bf00      	nop
 800ab76:	3710      	adds	r7, #16
 800ab78:	46bd      	mov	sp, r7
 800ab7a:	bd80      	pop	{r7, pc}

0800ab7c <init_aibuffer_msg>:


static void init_aibuffer_msg(const ai_buffer *aibuffer, aiBufferShapeMsg *msg)
{
 800ab7c:	b580      	push	{r7, lr}
 800ab7e:	b084      	sub	sp, #16
 800ab80:	af00      	add	r7, sp, #0
 800ab82:	6078      	str	r0, [r7, #4]
 800ab84:	6039      	str	r1, [r7, #0]
    if ((!aibuffer) || (!msg))
 800ab86:	687b      	ldr	r3, [r7, #4]
 800ab88:	2b00      	cmp	r3, #0
 800ab8a:	d026      	beq.n	800abda <init_aibuffer_msg+0x5e>
 800ab8c:	683b      	ldr	r3, [r7, #0]
 800ab8e:	2b00      	cmp	r3, #0
 800ab90:	d023      	beq.n	800abda <init_aibuffer_msg+0x5e>
        return;

    const ai_buffer_meta_info *meta_info = AI_BUFFER_META_INFO(aibuffer);
 800ab92:	687b      	ldr	r3, [r7, #4]
 800ab94:	695b      	ldr	r3, [r3, #20]
 800ab96:	60fb      	str	r3, [r7, #12]

    msg->format = aiPbAiFmtToMsgFmt(aibuffer->format);
 800ab98:	687b      	ldr	r3, [r7, #4]
 800ab9a:	681b      	ldr	r3, [r3, #0]
 800ab9c:	4618      	mov	r0, r3
 800ab9e:	f7ff fcbd 	bl	800a51c <aiPbAiFmtToMsgFmt>
 800aba2:	4602      	mov	r2, r0
 800aba4:	683b      	ldr	r3, [r7, #0]
 800aba6:	601a      	str	r2, [r3, #0]
    msg->channels = aibuffer->channels;
 800aba8:	687b      	ldr	r3, [r7, #4]
 800abaa:	68da      	ldr	r2, [r3, #12]
 800abac:	683b      	ldr	r3, [r7, #0]
 800abae:	611a      	str	r2, [r3, #16]
    msg->height = aibuffer->height;
 800abb0:	687b      	ldr	r3, [r7, #4]
 800abb2:	88db      	ldrh	r3, [r3, #6]
 800abb4:	461a      	mov	r2, r3
 800abb6:	683b      	ldr	r3, [r7, #0]
 800abb8:	609a      	str	r2, [r3, #8]
    msg->width = aibuffer->width;
 800abba:	687b      	ldr	r3, [r7, #4]
 800abbc:	891b      	ldrh	r3, [r3, #8]
 800abbe:	461a      	mov	r2, r3
 800abc0:	683b      	ldr	r3, [r7, #0]
 800abc2:	60da      	str	r2, [r3, #12]
    msg->n_batches = aibuffer->n_batches;
 800abc4:	687b      	ldr	r3, [r7, #4]
 800abc6:	889b      	ldrh	r3, [r3, #4]
 800abc8:	461a      	mov	r2, r3
 800abca:	683b      	ldr	r3, [r7, #0]
 800abcc:	605a      	str	r2, [r3, #4]
    aiPbMgrSetMetaInfo(meta_info, 0, msg);
 800abce:	683a      	ldr	r2, [r7, #0]
 800abd0:	2100      	movs	r1, #0
 800abd2:	68f8      	ldr	r0, [r7, #12]
 800abd4:	f7ff fde8 	bl	800a7a8 <aiPbMgrSetMetaInfo>
 800abd8:	e000      	b.n	800abdc <init_aibuffer_msg+0x60>
        return;
 800abda:	bf00      	nop
}
 800abdc:	3710      	adds	r7, #16
 800abde:	46bd      	mov	sp, r7
 800abe0:	bd80      	pop	{r7, pc}
	...

0800abe4 <nn_shape_w_cb>:

static bool nn_shape_w_cb(pb_ostream_t *stream, const pb_field_t *field,
        const ai_buffer *aibuffer, int maxw)
{
 800abe4:	b580      	push	{r7, lr}
 800abe6:	b08c      	sub	sp, #48	; 0x30
 800abe8:	af00      	add	r7, sp, #0
 800abea:	60f8      	str	r0, [r7, #12]
 800abec:	60b9      	str	r1, [r7, #8]
 800abee:	607a      	str	r2, [r7, #4]
 800abf0:	603b      	str	r3, [r7, #0]
    aiBufferShapeMsg msg;

    for (int i = 0; i < maxw; i++) {
 800abf2:	2300      	movs	r3, #0
 800abf4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800abf6:	e02b      	b.n	800ac50 <nn_shape_w_cb+0x6c>
        if (!pb_encode_tag_for_field(stream, field))
 800abf8:	68b9      	ldr	r1, [r7, #8]
 800abfa:	68f8      	ldr	r0, [r7, #12]
 800abfc:	f004 fdc4 	bl	800f788 <pb_encode_tag_for_field>
 800ac00:	4603      	mov	r3, r0
 800ac02:	f083 0301 	eor.w	r3, r3, #1
 800ac06:	b2db      	uxtb	r3, r3
 800ac08:	2b00      	cmp	r3, #0
 800ac0a:	d001      	beq.n	800ac10 <nn_shape_w_cb+0x2c>
            return false;
 800ac0c:	2300      	movs	r3, #0
 800ac0e:	e024      	b.n	800ac5a <nn_shape_w_cb+0x76>

        init_aibuffer_msg(&aibuffer[i], &msg);
 800ac10:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800ac12:	4613      	mov	r3, r2
 800ac14:	005b      	lsls	r3, r3, #1
 800ac16:	4413      	add	r3, r2
 800ac18:	00db      	lsls	r3, r3, #3
 800ac1a:	461a      	mov	r2, r3
 800ac1c:	687b      	ldr	r3, [r7, #4]
 800ac1e:	4413      	add	r3, r2
 800ac20:	f107 0210 	add.w	r2, r7, #16
 800ac24:	4611      	mov	r1, r2
 800ac26:	4618      	mov	r0, r3
 800ac28:	f7ff ffa8 	bl	800ab7c <init_aibuffer_msg>

        if (!pb_encode_submessage(stream, aiBufferShapeMsg_fields, &msg))
 800ac2c:	f107 0310 	add.w	r3, r7, #16
 800ac30:	461a      	mov	r2, r3
 800ac32:	490c      	ldr	r1, [pc, #48]	; (800ac64 <nn_shape_w_cb+0x80>)
 800ac34:	68f8      	ldr	r0, [r7, #12]
 800ac36:	f004 fe11 	bl	800f85c <pb_encode_submessage>
 800ac3a:	4603      	mov	r3, r0
 800ac3c:	f083 0301 	eor.w	r3, r3, #1
 800ac40:	b2db      	uxtb	r3, r3
 800ac42:	2b00      	cmp	r3, #0
 800ac44:	d001      	beq.n	800ac4a <nn_shape_w_cb+0x66>
            return false;
 800ac46:	2300      	movs	r3, #0
 800ac48:	e007      	b.n	800ac5a <nn_shape_w_cb+0x76>
    for (int i = 0; i < maxw; i++) {
 800ac4a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ac4c:	3301      	adds	r3, #1
 800ac4e:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ac50:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800ac52:	683b      	ldr	r3, [r7, #0]
 800ac54:	429a      	cmp	r2, r3
 800ac56:	dbcf      	blt.n	800abf8 <nn_shape_w_cb+0x14>
    }
    return true;
 800ac58:	2301      	movs	r3, #1
}
 800ac5a:	4618      	mov	r0, r3
 800ac5c:	3730      	adds	r7, #48	; 0x30
 800ac5e:	46bd      	mov	sp, r7
 800ac60:	bd80      	pop	{r7, pc}
 800ac62:	bf00      	nop
 800ac64:	08016668 	.word	0x08016668

0800ac68 <nn_inputs_w_cb>:

static bool nn_inputs_w_cb(pb_ostream_t *stream, const pb_field_t *field,
        void * const *arg)
{
 800ac68:	b580      	push	{r7, lr}
 800ac6a:	b086      	sub	sp, #24
 800ac6c:	af00      	add	r7, sp, #0
 800ac6e:	60f8      	str	r0, [r7, #12]
 800ac70:	60b9      	str	r1, [r7, #8]
 800ac72:	607a      	str	r2, [r7, #4]
    ai_network_report *report = (ai_network_report *)*arg;
 800ac74:	687b      	ldr	r3, [r7, #4]
 800ac76:	681b      	ldr	r3, [r3, #0]
 800ac78:	617b      	str	r3, [r7, #20]

    if (!report)
 800ac7a:	697b      	ldr	r3, [r7, #20]
 800ac7c:	2b00      	cmp	r3, #0
 800ac7e:	d101      	bne.n	800ac84 <nn_inputs_w_cb+0x1c>
        return true;
 800ac80:	2301      	movs	r3, #1
 800ac82:	e008      	b.n	800ac96 <nn_inputs_w_cb+0x2e>

    return nn_shape_w_cb(stream, field, &report->inputs[0], report->n_inputs);
 800ac84:	697b      	ldr	r3, [r7, #20]
 800ac86:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ac88:	697b      	ldr	r3, [r7, #20]
 800ac8a:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
 800ac8c:	68b9      	ldr	r1, [r7, #8]
 800ac8e:	68f8      	ldr	r0, [r7, #12]
 800ac90:	f7ff ffa8 	bl	800abe4 <nn_shape_w_cb>
 800ac94:	4603      	mov	r3, r0
}
 800ac96:	4618      	mov	r0, r3
 800ac98:	3718      	adds	r7, #24
 800ac9a:	46bd      	mov	sp, r7
 800ac9c:	bd80      	pop	{r7, pc}

0800ac9e <nn_outputs_w_cb>:

static bool nn_outputs_w_cb(pb_ostream_t *stream, const pb_field_t *field,
        void * const *arg)
{
 800ac9e:	b580      	push	{r7, lr}
 800aca0:	b086      	sub	sp, #24
 800aca2:	af00      	add	r7, sp, #0
 800aca4:	60f8      	str	r0, [r7, #12]
 800aca6:	60b9      	str	r1, [r7, #8]
 800aca8:	607a      	str	r2, [r7, #4]
    ai_network_report *report = (ai_network_report *)*arg;
 800acaa:	687b      	ldr	r3, [r7, #4]
 800acac:	681b      	ldr	r3, [r3, #0]
 800acae:	617b      	str	r3, [r7, #20]

    if (!report)
 800acb0:	697b      	ldr	r3, [r7, #20]
 800acb2:	2b00      	cmp	r3, #0
 800acb4:	d101      	bne.n	800acba <nn_outputs_w_cb+0x1c>
        return true;
 800acb6:	2301      	movs	r3, #1
 800acb8:	e008      	b.n	800accc <nn_outputs_w_cb+0x2e>

    return nn_shape_w_cb(stream, field, &report->outputs[0], report->n_outputs);
 800acba:	697b      	ldr	r3, [r7, #20]
 800acbc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800acbe:	697b      	ldr	r3, [r7, #20]
 800acc0:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 800acc2:	68b9      	ldr	r1, [r7, #8]
 800acc4:	68f8      	ldr	r0, [r7, #12]
 800acc6:	f7ff ff8d 	bl	800abe4 <nn_shape_w_cb>
 800acca:	4603      	mov	r3, r0
}
 800accc:	4618      	mov	r0, r3
 800acce:	3718      	adds	r7, #24
 800acd0:	46bd      	mov	sp, r7
 800acd2:	bd80      	pop	{r7, pc}

0800acd4 <aiPbStrCopy>:

void aiPbStrCopy(const char *src, char *dst, uint32_t max)
{
 800acd4:	b580      	push	{r7, lr}
 800acd6:	b088      	sub	sp, #32
 800acd8:	af00      	add	r7, sp, #0
 800acda:	60f8      	str	r0, [r7, #12]
 800acdc:	60b9      	str	r1, [r7, #8]
 800acde:	607a      	str	r2, [r7, #4]
    const char undef[] = "UNDEFINED";
 800ace0:	4a19      	ldr	r2, [pc, #100]	; (800ad48 <aiPbStrCopy+0x74>)
 800ace2:	f107 0310 	add.w	r3, r7, #16
 800ace6:	ca07      	ldmia	r2, {r0, r1, r2}
 800ace8:	c303      	stmia	r3!, {r0, r1}
 800acea:	801a      	strh	r2, [r3, #0]
    size_t l = strlen(src);
 800acec:	68f8      	ldr	r0, [r7, #12]
 800acee:	f7fc f8ba 	bl	8006e66 <strlen>
 800acf2:	61f8      	str	r0, [r7, #28]

    if (l > max)
 800acf4:	69fa      	ldr	r2, [r7, #28]
 800acf6:	687b      	ldr	r3, [r7, #4]
 800acf8:	429a      	cmp	r2, r3
 800acfa:	d902      	bls.n	800ad02 <aiPbStrCopy+0x2e>
        l = max-1;
 800acfc:	687b      	ldr	r3, [r7, #4]
 800acfe:	3b01      	subs	r3, #1
 800ad00:	61fb      	str	r3, [r7, #28]

    if (!dst)
 800ad02:	68bb      	ldr	r3, [r7, #8]
 800ad04:	2b00      	cmp	r3, #0
 800ad06:	d01b      	beq.n	800ad40 <aiPbStrCopy+0x6c>
        return;

    if (src && l)
 800ad08:	68fb      	ldr	r3, [r7, #12]
 800ad0a:	2b00      	cmp	r3, #0
 800ad0c:	d00a      	beq.n	800ad24 <aiPbStrCopy+0x50>
 800ad0e:	69fb      	ldr	r3, [r7, #28]
 800ad10:	2b00      	cmp	r3, #0
 800ad12:	d007      	beq.n	800ad24 <aiPbStrCopy+0x50>
        memcpy(dst, src, l+1);
 800ad14:	69fb      	ldr	r3, [r7, #28]
 800ad16:	3301      	adds	r3, #1
 800ad18:	461a      	mov	r2, r3
 800ad1a:	68f9      	ldr	r1, [r7, #12]
 800ad1c:	68b8      	ldr	r0, [r7, #8]
 800ad1e:	f005 f85a 	bl	800fdd6 <memcpy>
 800ad22:	e00e      	b.n	800ad42 <aiPbStrCopy+0x6e>
    else
        memcpy(dst, undef, strlen(undef)+1);
 800ad24:	f107 0310 	add.w	r3, r7, #16
 800ad28:	4618      	mov	r0, r3
 800ad2a:	f7fc f89c 	bl	8006e66 <strlen>
 800ad2e:	4603      	mov	r3, r0
 800ad30:	1c5a      	adds	r2, r3, #1
 800ad32:	f107 0310 	add.w	r3, r7, #16
 800ad36:	4619      	mov	r1, r3
 800ad38:	68b8      	ldr	r0, [r7, #8]
 800ad3a:	f005 f84c 	bl	800fdd6 <memcpy>
 800ad3e:	e000      	b.n	800ad42 <aiPbStrCopy+0x6e>
        return;
 800ad40:	bf00      	nop
}
 800ad42:	3720      	adds	r7, #32
 800ad44:	46bd      	mov	sp, r7
 800ad46:	bd80      	pop	{r7, pc}
 800ad48:	080151b4 	.word	0x080151b4

0800ad4c <aiPbVersionToUint32>:

uint32_t aiPbVersionToUint32(const ai_platform_version *ver)
{
 800ad4c:	b480      	push	{r7}
 800ad4e:	b083      	sub	sp, #12
 800ad50:	af00      	add	r7, sp, #0
 800ad52:	6078      	str	r0, [r7, #4]
    if (!ver)
 800ad54:	687b      	ldr	r3, [r7, #4]
 800ad56:	2b00      	cmp	r3, #0
 800ad58:	d101      	bne.n	800ad5e <aiPbVersionToUint32+0x12>
        return 0;
 800ad5a:	2300      	movs	r3, #0
 800ad5c:	e00d      	b.n	800ad7a <aiPbVersionToUint32+0x2e>

    return ver->major << 24 | ver->minor << 16
 800ad5e:	687b      	ldr	r3, [r7, #4]
 800ad60:	781b      	ldrb	r3, [r3, #0]
 800ad62:	061a      	lsls	r2, r3, #24
 800ad64:	687b      	ldr	r3, [r7, #4]
 800ad66:	785b      	ldrb	r3, [r3, #1]
 800ad68:	041b      	lsls	r3, r3, #16
 800ad6a:	431a      	orrs	r2, r3
            | ver->micro << 8 | ver->reserved;
 800ad6c:	687b      	ldr	r3, [r7, #4]
 800ad6e:	789b      	ldrb	r3, [r3, #2]
 800ad70:	021b      	lsls	r3, r3, #8
 800ad72:	4313      	orrs	r3, r2
 800ad74:	687a      	ldr	r2, [r7, #4]
 800ad76:	78d2      	ldrb	r2, [r2, #3]
 800ad78:	4313      	orrs	r3, r2
}
 800ad7a:	4618      	mov	r0, r3
 800ad7c:	370c      	adds	r7, #12
 800ad7e:	46bd      	mov	sp, r7
 800ad80:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad84:	4770      	bx	lr
	...

0800ad88 <aiPbMgrSendNNInfo>:

void aiPbMgrSendNNInfo(const reqMsg *req, respMsg *resp,
        EnumState state, const ai_network_report *nn)
{
 800ad88:	b580      	push	{r7, lr}
 800ad8a:	b084      	sub	sp, #16
 800ad8c:	af00      	add	r7, sp, #0
 800ad8e:	60f8      	str	r0, [r7, #12]
 800ad90:	60b9      	str	r1, [r7, #8]
 800ad92:	603b      	str	r3, [r7, #0]
 800ad94:	4613      	mov	r3, r2
 800ad96:	71fb      	strb	r3, [r7, #7]
    resp->which_payload = respMsg_ninfo_tag;
 800ad98:	68bb      	ldr	r3, [r7, #8]
 800ad9a:	2214      	movs	r2, #20
 800ad9c:	80da      	strh	r2, [r3, #6]

    aiPbStrCopy(nn->model_name,
 800ad9e:	683b      	ldr	r3, [r7, #0]
 800ada0:	6818      	ldr	r0, [r3, #0]
 800ada2:	68bb      	ldr	r3, [r7, #8]
 800ada4:	3308      	adds	r3, #8
 800ada6:	2240      	movs	r2, #64	; 0x40
 800ada8:	4619      	mov	r1, r3
 800adaa:	f7ff ff93 	bl	800acd4 <aiPbStrCopy>
            &resp->payload.ninfo.model_name[0],
            sizeof(resp->payload.ninfo.model_name));
    aiPbStrCopy(nn->model_signature,
 800adae:	683b      	ldr	r3, [r7, #0]
 800adb0:	6858      	ldr	r0, [r3, #4]
 800adb2:	68bb      	ldr	r3, [r7, #8]
 800adb4:	3348      	adds	r3, #72	; 0x48
 800adb6:	2240      	movs	r2, #64	; 0x40
 800adb8:	4619      	mov	r1, r3
 800adba:	f7ff ff8b 	bl	800acd4 <aiPbStrCopy>
            &resp->payload.ninfo.model_signature[0],
            sizeof(resp->payload.ninfo.model_signature));
    aiPbStrCopy(nn->model_datetime,
 800adbe:	683b      	ldr	r3, [r7, #0]
 800adc0:	6898      	ldr	r0, [r3, #8]
 800adc2:	68bb      	ldr	r3, [r7, #8]
 800adc4:	3388      	adds	r3, #136	; 0x88
 800adc6:	2240      	movs	r2, #64	; 0x40
 800adc8:	4619      	mov	r1, r3
 800adca:	f7ff ff83 	bl	800acd4 <aiPbStrCopy>
            &resp->payload.ninfo.model_datetime[0],
            sizeof(resp->payload.ninfo.model_datetime));
    aiPbStrCopy(nn->compile_datetime,
 800adce:	683b      	ldr	r3, [r7, #0]
 800add0:	68d8      	ldr	r0, [r3, #12]
 800add2:	68bb      	ldr	r3, [r7, #8]
 800add4:	33c8      	adds	r3, #200	; 0xc8
 800add6:	2240      	movs	r2, #64	; 0x40
 800add8:	4619      	mov	r1, r3
 800adda:	f7ff ff7b 	bl	800acd4 <aiPbStrCopy>
            &resp->payload.ninfo.compile_datetime[0],
            sizeof(resp->payload.ninfo.compile_datetime));
    aiPbStrCopy(nn->runtime_revision,
 800adde:	683b      	ldr	r3, [r7, #0]
 800ade0:	6918      	ldr	r0, [r3, #16]
 800ade2:	68bb      	ldr	r3, [r7, #8]
 800ade4:	f503 7384 	add.w	r3, r3, #264	; 0x108
 800ade8:	2240      	movs	r2, #64	; 0x40
 800adea:	4619      	mov	r1, r3
 800adec:	f7ff ff72 	bl	800acd4 <aiPbStrCopy>
            &resp->payload.ninfo.runtime_revision[0],
            sizeof(resp->payload.ninfo.runtime_revision));
    aiPbStrCopy(nn->tool_revision,
 800adf0:	683b      	ldr	r3, [r7, #0]
 800adf2:	6998      	ldr	r0, [r3, #24]
 800adf4:	68bb      	ldr	r3, [r7, #8]
 800adf6:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800adfa:	2240      	movs	r2, #64	; 0x40
 800adfc:	4619      	mov	r1, r3
 800adfe:	f7ff ff69 	bl	800acd4 <aiPbStrCopy>
            &resp->payload.ninfo.tool_revision[0],
            sizeof(resp->payload.ninfo.tool_revision));

    resp->payload.ninfo.n_inputs = nn->n_inputs;
 800ae02:	683b      	ldr	r3, [r7, #0]
 800ae04:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
 800ae06:	461a      	mov	r2, r3
 800ae08:	68bb      	ldr	r3, [r7, #8]
 800ae0a:	f8c3 21a0 	str.w	r2, [r3, #416]	; 0x1a0
    resp->payload.ninfo.n_outputs = nn->n_outputs;
 800ae0e:	683b      	ldr	r3, [r7, #0]
 800ae10:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 800ae12:	461a      	mov	r2, r3
 800ae14:	68bb      	ldr	r3, [r7, #8]
 800ae16:	f8c3 21a4 	str.w	r2, [r3, #420]	; 0x1a4
    resp->payload.ninfo.n_nodes = nn->n_nodes;
 800ae1a:	683b      	ldr	r3, [r7, #0]
 800ae1c:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 800ae1e:	68bb      	ldr	r3, [r7, #8]
 800ae20:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    resp->payload.ninfo.n_macc = nn->n_macc;
 800ae24:	683b      	ldr	r3, [r7, #0]
 800ae26:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ae28:	68bb      	ldr	r3, [r7, #8]
 800ae2a:	f8c3 219c 	str.w	r2, [r3, #412]	; 0x19c

    resp->payload.ninfo.signature = nn->signature;
 800ae2e:	683b      	ldr	r3, [r7, #0]
 800ae30:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800ae32:	68bb      	ldr	r3, [r7, #8]
 800ae34:	f8c3 21f4 	str.w	r2, [r3, #500]	; 0x1f4
    resp->payload.ninfo.api_version =
            aiPbVersionToUint32(&nn->api_version);
 800ae38:	683b      	ldr	r3, [r7, #0]
 800ae3a:	3324      	adds	r3, #36	; 0x24
 800ae3c:	4618      	mov	r0, r3
 800ae3e:	f7ff ff85 	bl	800ad4c <aiPbVersionToUint32>
 800ae42:	4602      	mov	r2, r0
    resp->payload.ninfo.api_version =
 800ae44:	68bb      	ldr	r3, [r7, #8]
 800ae46:	f8c3 2194 	str.w	r2, [r3, #404]	; 0x194
    resp->payload.ninfo.interface_api_version =
            aiPbVersionToUint32(&nn->interface_api_version);
 800ae4a:	683b      	ldr	r3, [r7, #0]
 800ae4c:	3328      	adds	r3, #40	; 0x28
 800ae4e:	4618      	mov	r0, r3
 800ae50:	f7ff ff7c 	bl	800ad4c <aiPbVersionToUint32>
 800ae54:	4602      	mov	r2, r0
    resp->payload.ninfo.interface_api_version =
 800ae56:	68bb      	ldr	r3, [r7, #8]
 800ae58:	f8c3 2198 	str.w	r2, [r3, #408]	; 0x198
    resp->payload.ninfo.runtime_version =
            aiPbVersionToUint32(&nn->runtime_version);
 800ae5c:	683b      	ldr	r3, [r7, #0]
 800ae5e:	3314      	adds	r3, #20
 800ae60:	4618      	mov	r0, r3
 800ae62:	f7ff ff73 	bl	800ad4c <aiPbVersionToUint32>
 800ae66:	4602      	mov	r2, r0
    resp->payload.ninfo.runtime_version =
 800ae68:	68bb      	ldr	r3, [r7, #8]
 800ae6a:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
    resp->payload.ninfo.tool_version =
            aiPbVersionToUint32(&nn->tool_version);
 800ae6e:	683b      	ldr	r3, [r7, #0]
 800ae70:	331c      	adds	r3, #28
 800ae72:	4618      	mov	r0, r3
 800ae74:	f7ff ff6a 	bl	800ad4c <aiPbVersionToUint32>
 800ae78:	4602      	mov	r2, r0
    resp->payload.ninfo.tool_version =
 800ae7a:	68bb      	ldr	r3, [r7, #8]
 800ae7c:	f8c3 218c 	str.w	r2, [r3, #396]	; 0x18c
    resp->payload.ninfo.tool_api_version =
            aiPbVersionToUint32(&nn->tool_api_version);
 800ae80:	683b      	ldr	r3, [r7, #0]
 800ae82:	3320      	adds	r3, #32
 800ae84:	4618      	mov	r0, r3
 800ae86:	f7ff ff61 	bl	800ad4c <aiPbVersionToUint32>
 800ae8a:	4602      	mov	r2, r0
    resp->payload.ninfo.tool_api_version =
 800ae8c:	68bb      	ldr	r3, [r7, #8]
 800ae8e:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190

    init_aibuffer_msg(&nn->activations, &resp->payload.ninfo.activations);
 800ae92:	683b      	ldr	r3, [r7, #0]
 800ae94:	f103 023c 	add.w	r2, r3, #60	; 0x3c
 800ae98:	68bb      	ldr	r3, [r7, #8]
 800ae9a:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 800ae9e:	4619      	mov	r1, r3
 800aea0:	4610      	mov	r0, r2
 800aea2:	f7ff fe6b 	bl	800ab7c <init_aibuffer_msg>
    init_aibuffer_msg(&nn->params, &resp->payload.ninfo.weights);
 800aea6:	683b      	ldr	r3, [r7, #0]
 800aea8:	f103 0254 	add.w	r2, r3, #84	; 0x54
 800aeac:	68bb      	ldr	r3, [r7, #8]
 800aeae:	f503 73ec 	add.w	r3, r3, #472	; 0x1d8
 800aeb2:	4619      	mov	r1, r3
 800aeb4:	4610      	mov	r0, r2
 800aeb6:	f7ff fe61 	bl	800ab7c <init_aibuffer_msg>

    resp->payload.ninfo.inputs.funcs.encode = nn_inputs_w_cb;
 800aeba:	68bb      	ldr	r3, [r7, #8]
 800aebc:	4a0c      	ldr	r2, [pc, #48]	; (800aef0 <aiPbMgrSendNNInfo+0x168>)
 800aebe:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    resp->payload.ninfo.inputs.arg = (void *)nn;
 800aec2:	68bb      	ldr	r3, [r7, #8]
 800aec4:	683a      	ldr	r2, [r7, #0]
 800aec6:	f8c3 21b0 	str.w	r2, [r3, #432]	; 0x1b0

    resp->payload.ninfo.outputs.funcs.encode = nn_outputs_w_cb;
 800aeca:	68bb      	ldr	r3, [r7, #8]
 800aecc:	4a09      	ldr	r2, [pc, #36]	; (800aef4 <aiPbMgrSendNNInfo+0x16c>)
 800aece:	f8c3 21b4 	str.w	r2, [r3, #436]	; 0x1b4
    resp->payload.ninfo.outputs.arg = (void *)nn;
 800aed2:	68bb      	ldr	r3, [r7, #8]
 800aed4:	683a      	ldr	r2, [r7, #0]
 800aed6:	f8c3 21b8 	str.w	r2, [r3, #440]	; 0x1b8

    aiPbMgrSendResp(req, resp, state);
 800aeda:	79fb      	ldrb	r3, [r7, #7]
 800aedc:	461a      	mov	r2, r3
 800aede:	68b9      	ldr	r1, [r7, #8]
 800aee0:	68f8      	ldr	r0, [r7, #12]
 800aee2:	f7ff fa9f 	bl	800a424 <aiPbMgrSendResp>
}
 800aee6:	bf00      	nop
 800aee8:	3710      	adds	r7, #16
 800aeea:	46bd      	mov	sp, r7
 800aeec:	bd80      	pop	{r7, pc}
 800aeee:	bf00      	nop
 800aef0:	0800ac69 	.word	0x0800ac69
 800aef4:	0800ac9f 	.word	0x0800ac9f

0800aef8 <crcIpInit>:
#error Only STM32H7, STM32F7, STM32F4, STM32L4, STM32L5 or STM32F3 device are supported
#endif
#endif

void crcIpInit(void)
{
 800aef8:	b580      	push	{r7, lr}
 800aefa:	b082      	sub	sp, #8
 800aefc:	af00      	add	r7, sp, #0
#if defined(STM32H7)
    /* By default the CRC IP clock is enabled */
    __HAL_RCC_CRC_CLK_ENABLE();
#else
    if (!__HAL_RCC_CRC_IS_CLK_ENABLED())
 800aefe:	4b0c      	ldr	r3, [pc, #48]	; (800af30 <crcIpInit+0x38>)
 800af00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800af02:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800af06:	2b00      	cmp	r3, #0
 800af08:	d102      	bne.n	800af10 <crcIpInit+0x18>
        printf("W: CRC IP clock is NOT enabled\r\n");
 800af0a:	480a      	ldr	r0, [pc, #40]	; (800af34 <crcIpInit+0x3c>)
 800af0c:	f005 fccc 	bl	80108a8 <puts>

    /* By default the CRC IP clock is enabled */
    __HAL_RCC_CRC_CLK_ENABLE();
 800af10:	4b07      	ldr	r3, [pc, #28]	; (800af30 <crcIpInit+0x38>)
 800af12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800af14:	4a06      	ldr	r2, [pc, #24]	; (800af30 <crcIpInit+0x38>)
 800af16:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800af1a:	6313      	str	r3, [r2, #48]	; 0x30
 800af1c:	4b04      	ldr	r3, [pc, #16]	; (800af30 <crcIpInit+0x38>)
 800af1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800af20:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800af24:	607b      	str	r3, [r7, #4]
 800af26:	687b      	ldr	r3, [r7, #4]
#endif
}
 800af28:	bf00      	nop
 800af2a:	3708      	adds	r7, #8
 800af2c:	46bd      	mov	sp, r7
 800af2e:	bd80      	pop	{r7, pc}
 800af30:	40023800 	.word	0x40023800
 800af34:	080151c0 	.word	0x080151c0

0800af38 <dwtIpInit>:

void dwtIpInit(void)
{
 800af38:	b480      	push	{r7}
 800af3a:	af00      	add	r7, sp, #0
    CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 800af3c:	4b0b      	ldr	r3, [pc, #44]	; (800af6c <dwtIpInit+0x34>)
 800af3e:	68db      	ldr	r3, [r3, #12]
 800af40:	4a0a      	ldr	r2, [pc, #40]	; (800af6c <dwtIpInit+0x34>)
 800af42:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800af46:	60d3      	str	r3, [r2, #12]

#ifdef STM32F7
    DWT->LAR = 0xC5ACCE55;
 800af48:	4b09      	ldr	r3, [pc, #36]	; (800af70 <dwtIpInit+0x38>)
 800af4a:	4a0a      	ldr	r2, [pc, #40]	; (800af74 <dwtIpInit+0x3c>)
 800af4c:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
#endif

    DWT->CYCCNT = 0;
 800af50:	4b07      	ldr	r3, [pc, #28]	; (800af70 <dwtIpInit+0x38>)
 800af52:	2200      	movs	r2, #0
 800af54:	605a      	str	r2, [r3, #4]
    DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk | DWT_CTRL_CPIEVTENA_Msk;
 800af56:	4b06      	ldr	r3, [pc, #24]	; (800af70 <dwtIpInit+0x38>)
 800af58:	681a      	ldr	r2, [r3, #0]
 800af5a:	4905      	ldr	r1, [pc, #20]	; (800af70 <dwtIpInit+0x38>)
 800af5c:	4b06      	ldr	r3, [pc, #24]	; (800af78 <dwtIpInit+0x40>)
 800af5e:	4313      	orrs	r3, r2
 800af60:	600b      	str	r3, [r1, #0]
}
 800af62:	bf00      	nop
 800af64:	46bd      	mov	sp, r7
 800af66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af6a:	4770      	bx	lr
 800af6c:	e000edf0 	.word	0xe000edf0
 800af70:	e0001000 	.word	0xe0001000
 800af74:	c5acce55 	.word	0xc5acce55
 800af78:	00020001 	.word	0x00020001

0800af7c <dwtReset>:

void dwtReset(void)
{
 800af7c:	b480      	push	{r7}
 800af7e:	af00      	add	r7, sp, #0
    DWT->CYCCNT = 0; /* Clear DWT cycle counter */
 800af80:	4b03      	ldr	r3, [pc, #12]	; (800af90 <dwtReset+0x14>)
 800af82:	2200      	movs	r2, #0
 800af84:	605a      	str	r2, [r3, #4]
}
 800af86:	bf00      	nop
 800af88:	46bd      	mov	sp, r7
 800af8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af8e:	4770      	bx	lr
 800af90:	e0001000 	.word	0xe0001000

0800af94 <dwtGetCycles>:

uint32_t dwtGetCycles(void)
{
 800af94:	b480      	push	{r7}
 800af96:	af00      	add	r7, sp, #0
    return DWT->CYCCNT;
 800af98:	4b03      	ldr	r3, [pc, #12]	; (800afa8 <dwtGetCycles+0x14>)
 800af9a:	685b      	ldr	r3, [r3, #4]
}
 800af9c:	4618      	mov	r0, r3
 800af9e:	46bd      	mov	sp, r7
 800afa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afa4:	4770      	bx	lr
 800afa6:	bf00      	nop
 800afa8:	e0001000 	.word	0xe0001000

0800afac <systemCoreClock>:

uint32_t systemCoreClock(void)
{
 800afac:	b580      	push	{r7, lr}
 800afae:	af00      	add	r7, sp, #0
#if !defined(STM32H7)
    return HAL_RCC_GetHCLKFreq();
 800afb0:	f7fd ffea 	bl	8008f88 <HAL_RCC_GetHCLKFreq>
 800afb4:	4603      	mov	r3, r0
#else
    return HAL_RCC_GetSysClockFreq();
#endif
}
 800afb6:	4618      	mov	r0, r3
 800afb8:	bd80      	pop	{r7, pc}
	...

0800afbc <dwtCyclesToFloatMs>:
    return 0;
}


float dwtCyclesToFloatMs(uint64_t clks)
{
 800afbc:	b580      	push	{r7, lr}
 800afbe:	b084      	sub	sp, #16
 800afc0:	af00      	add	r7, sp, #0
 800afc2:	e9c7 0100 	strd	r0, r1, [r7]
    float res;
    float fcpu = (float)systemCoreClock();
 800afc6:	f7ff fff1 	bl	800afac <systemCoreClock>
 800afca:	ee07 0a90 	vmov	s15, r0
 800afce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800afd2:	edc7 7a03 	vstr	s15, [r7, #12]
    res = ((float)clks * (float)1000.0) / fcpu;
 800afd6:	e9d7 0100 	ldrd	r0, r1, [r7]
 800afda:	f7fc fa25 	bl	8007428 <__aeabi_ul2f>
 800afde:	ee07 0a10 	vmov	s14, r0
 800afe2:	eddf 7a09 	vldr	s15, [pc, #36]	; 800b008 <dwtCyclesToFloatMs+0x4c>
 800afe6:	ee67 6a27 	vmul.f32	s13, s14, s15
 800afea:	ed97 7a03 	vldr	s14, [r7, #12]
 800afee:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800aff2:	edc7 7a02 	vstr	s15, [r7, #8]
    return res;
 800aff6:	68bb      	ldr	r3, [r7, #8]
 800aff8:	ee07 3a90 	vmov	s15, r3
}
 800affc:	eeb0 0a67 	vmov.f32	s0, s15
 800b000:	3710      	adds	r7, #16
 800b002:	46bd      	mov	sp, r7
 800b004:	bd80      	pop	{r7, pc}
 800b006:	bf00      	nop
 800b008:	447a0000 	.word	0x447a0000

0800b00c <devIdToStr>:


__STATIC_INLINE const char *devIdToStr(uint16_t dev_id)
{
 800b00c:	b480      	push	{r7}
 800b00e:	b085      	sub	sp, #20
 800b010:	af00      	add	r7, sp, #0
 800b012:	4603      	mov	r3, r0
 800b014:	80fb      	strh	r3, [r7, #6]
	/* DEV_ID field from DBGMCU register */
    const char *str;
    switch (dev_id) {
 800b016:	88fb      	ldrh	r3, [r7, #6]
 800b018:	f2a3 4315 	subw	r3, r3, #1045	; 0x415
 800b01c:	2b5d      	cmp	r3, #93	; 0x5d
 800b01e:	f200 80e0 	bhi.w	800b1e2 <devIdToStr+0x1d6>
 800b022:	a201      	add	r2, pc, #4	; (adr r2, 800b028 <devIdToStr+0x1c>)
 800b024:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b028:	0800b1c5 	.word	0x0800b1c5
 800b02c:	0800b1e3 	.word	0x0800b1e3
 800b030:	0800b1e3 	.word	0x0800b1e3
 800b034:	0800b1e3 	.word	0x0800b1e3
 800b038:	0800b1e3 	.word	0x0800b1e3
 800b03c:	0800b1e3 	.word	0x0800b1e3
 800b040:	0800b1e3 	.word	0x0800b1e3
 800b044:	0800b1e3 	.word	0x0800b1e3
 800b048:	0800b1e3 	.word	0x0800b1e3
 800b04c:	0800b1e3 	.word	0x0800b1e3
 800b050:	0800b1e3 	.word	0x0800b1e3
 800b054:	0800b1e3 	.word	0x0800b1e3
 800b058:	0800b1e3 	.word	0x0800b1e3
 800b05c:	0800b1a1 	.word	0x0800b1a1
 800b060:	0800b1e3 	.word	0x0800b1e3
 800b064:	0800b1e3 	.word	0x0800b1e3
 800b068:	0800b1e3 	.word	0x0800b1e3
 800b06c:	0800b1e3 	.word	0x0800b1e3
 800b070:	0800b1e3 	.word	0x0800b1e3
 800b074:	0800b1e3 	.word	0x0800b1e3
 800b078:	0800b1e3 	.word	0x0800b1e3
 800b07c:	0800b1e3 	.word	0x0800b1e3
 800b080:	0800b1e3 	.word	0x0800b1e3
 800b084:	0800b1e3 	.word	0x0800b1e3
 800b088:	0800b1e3 	.word	0x0800b1e3
 800b08c:	0800b1e3 	.word	0x0800b1e3
 800b090:	0800b1e3 	.word	0x0800b1e3
 800b094:	0800b1e3 	.word	0x0800b1e3
 800b098:	0800b1b3 	.word	0x0800b1b3
 800b09c:	0800b1e3 	.word	0x0800b1e3
 800b0a0:	0800b1e3 	.word	0x0800b1e3
 800b0a4:	0800b1e3 	.word	0x0800b1e3
 800b0a8:	0800b1b9 	.word	0x0800b1b9
 800b0ac:	0800b1e3 	.word	0x0800b1e3
 800b0b0:	0800b1e3 	.word	0x0800b1e3
 800b0b4:	0800b1a7 	.word	0x0800b1a7
 800b0b8:	0800b1e3 	.word	0x0800b1e3
 800b0bc:	0800b1e3 	.word	0x0800b1e3
 800b0c0:	0800b1e3 	.word	0x0800b1e3
 800b0c4:	0800b1e3 	.word	0x0800b1e3
 800b0c8:	0800b1e3 	.word	0x0800b1e3
 800b0cc:	0800b1e3 	.word	0x0800b1e3
 800b0d0:	0800b1e3 	.word	0x0800b1e3
 800b0d4:	0800b1e3 	.word	0x0800b1e3
 800b0d8:	0800b1e3 	.word	0x0800b1e3
 800b0dc:	0800b1e3 	.word	0x0800b1e3
 800b0e0:	0800b1e3 	.word	0x0800b1e3
 800b0e4:	0800b1e3 	.word	0x0800b1e3
 800b0e8:	0800b1e3 	.word	0x0800b1e3
 800b0ec:	0800b1ad 	.word	0x0800b1ad
 800b0f0:	0800b1e3 	.word	0x0800b1e3
 800b0f4:	0800b1e3 	.word	0x0800b1e3
 800b0f8:	0800b1d7 	.word	0x0800b1d7
 800b0fc:	0800b1e3 	.word	0x0800b1e3
 800b100:	0800b1e3 	.word	0x0800b1e3
 800b104:	0800b1e3 	.word	0x0800b1e3
 800b108:	0800b1e3 	.word	0x0800b1e3
 800b10c:	0800b1e3 	.word	0x0800b1e3
 800b110:	0800b1e3 	.word	0x0800b1e3
 800b114:	0800b1dd 	.word	0x0800b1dd
 800b118:	0800b1e3 	.word	0x0800b1e3
 800b11c:	0800b1e3 	.word	0x0800b1e3
 800b120:	0800b1e3 	.word	0x0800b1e3
 800b124:	0800b1e3 	.word	0x0800b1e3
 800b128:	0800b1e3 	.word	0x0800b1e3
 800b12c:	0800b1e3 	.word	0x0800b1e3
 800b130:	0800b1e3 	.word	0x0800b1e3
 800b134:	0800b1e3 	.word	0x0800b1e3
 800b138:	0800b1e3 	.word	0x0800b1e3
 800b13c:	0800b1e3 	.word	0x0800b1e3
 800b140:	0800b1e3 	.word	0x0800b1e3
 800b144:	0800b1e3 	.word	0x0800b1e3
 800b148:	0800b1e3 	.word	0x0800b1e3
 800b14c:	0800b1e3 	.word	0x0800b1e3
 800b150:	0800b1e3 	.word	0x0800b1e3
 800b154:	0800b1e3 	.word	0x0800b1e3
 800b158:	0800b1e3 	.word	0x0800b1e3
 800b15c:	0800b1bf 	.word	0x0800b1bf
 800b160:	0800b1e3 	.word	0x0800b1e3
 800b164:	0800b1e3 	.word	0x0800b1e3
 800b168:	0800b1e3 	.word	0x0800b1e3
 800b16c:	0800b1e3 	.word	0x0800b1e3
 800b170:	0800b1e3 	.word	0x0800b1e3
 800b174:	0800b1e3 	.word	0x0800b1e3
 800b178:	0800b1e3 	.word	0x0800b1e3
 800b17c:	0800b1e3 	.word	0x0800b1e3
 800b180:	0800b1e3 	.word	0x0800b1e3
 800b184:	0800b1e3 	.word	0x0800b1e3
 800b188:	0800b1e3 	.word	0x0800b1e3
 800b18c:	0800b1e3 	.word	0x0800b1e3
 800b190:	0800b1e3 	.word	0x0800b1e3
 800b194:	0800b1cb 	.word	0x0800b1cb
 800b198:	0800b1e3 	.word	0x0800b1e3
 800b19c:	0800b1d1 	.word	0x0800b1d1
    case 0x422: str = "STM32F303xB/C"; break;
 800b1a0:	4b14      	ldr	r3, [pc, #80]	; (800b1f4 <devIdToStr+0x1e8>)
 800b1a2:	60fb      	str	r3, [r7, #12]
 800b1a4:	e01f      	b.n	800b1e6 <devIdToStr+0x1da>
    case 0x438: str = "STM32F303x6/8"; break;
 800b1a6:	4b14      	ldr	r3, [pc, #80]	; (800b1f8 <devIdToStr+0x1ec>)
 800b1a8:	60fb      	str	r3, [r7, #12]
 800b1aa:	e01c      	b.n	800b1e6 <devIdToStr+0x1da>
    case 0x446: str = "STM32F303xD/E"; break;
 800b1ac:	4b13      	ldr	r3, [pc, #76]	; (800b1fc <devIdToStr+0x1f0>)
 800b1ae:	60fb      	str	r3, [r7, #12]
 800b1b0:	e019      	b.n	800b1e6 <devIdToStr+0x1da>
    case 0x431: str = "STM32F411xC/E"; break;
 800b1b2:	4b13      	ldr	r3, [pc, #76]	; (800b200 <devIdToStr+0x1f4>)
 800b1b4:	60fb      	str	r3, [r7, #12]
 800b1b6:	e016      	b.n	800b1e6 <devIdToStr+0x1da>
    case 0x435: str = "STM32L43xxx"; break;
 800b1b8:	4b12      	ldr	r3, [pc, #72]	; (800b204 <devIdToStr+0x1f8>)
 800b1ba:	60fb      	str	r3, [r7, #12]
 800b1bc:	e013      	b.n	800b1e6 <devIdToStr+0x1da>
    case 0x462: str = "STM32L45xxx"; break;
 800b1be:	4b12      	ldr	r3, [pc, #72]	; (800b208 <devIdToStr+0x1fc>)
 800b1c0:	60fb      	str	r3, [r7, #12]
 800b1c2:	e010      	b.n	800b1e6 <devIdToStr+0x1da>
    case 0x415: str = "STM32L4x6xx"; break;
 800b1c4:	4b11      	ldr	r3, [pc, #68]	; (800b20c <devIdToStr+0x200>)
 800b1c6:	60fb      	str	r3, [r7, #12]
 800b1c8:	e00d      	b.n	800b1e6 <devIdToStr+0x1da>
    case 0x470: str = "STM32L4Rxxx"; break;
 800b1ca:	4b11      	ldr	r3, [pc, #68]	; (800b210 <devIdToStr+0x204>)
 800b1cc:	60fb      	str	r3, [r7, #12]
 800b1ce:	e00a      	b.n	800b1e6 <devIdToStr+0x1da>
    case 0x472: str = "STM32L5[5,6]2xx"; break;
 800b1d0:	4b10      	ldr	r3, [pc, #64]	; (800b214 <devIdToStr+0x208>)
 800b1d2:	60fb      	str	r3, [r7, #12]
 800b1d4:	e007      	b.n	800b1e6 <devIdToStr+0x1da>
    case 0x449: str = "STM32F74xxx"; break;
 800b1d6:	4b10      	ldr	r3, [pc, #64]	; (800b218 <devIdToStr+0x20c>)
 800b1d8:	60fb      	str	r3, [r7, #12]
 800b1da:	e004      	b.n	800b1e6 <devIdToStr+0x1da>
    case 0x450: str = "STM32H743/753 and STM32H750"; break;
 800b1dc:	4b0f      	ldr	r3, [pc, #60]	; (800b21c <devIdToStr+0x210>)
 800b1de:	60fb      	str	r3, [r7, #12]
 800b1e0:	e001      	b.n	800b1e6 <devIdToStr+0x1da>
    default:    str = "UNKNOWN";
 800b1e2:	4b0f      	ldr	r3, [pc, #60]	; (800b220 <devIdToStr+0x214>)
 800b1e4:	60fb      	str	r3, [r7, #12]
    }
    return str;
 800b1e6:	68fb      	ldr	r3, [r7, #12]
}
 800b1e8:	4618      	mov	r0, r3
 800b1ea:	3714      	adds	r7, #20
 800b1ec:	46bd      	mov	sp, r7
 800b1ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1f2:	4770      	bx	lr
 800b1f4:	080151e0 	.word	0x080151e0
 800b1f8:	080151f0 	.word	0x080151f0
 800b1fc:	08015200 	.word	0x08015200
 800b200:	08015210 	.word	0x08015210
 800b204:	08015220 	.word	0x08015220
 800b208:	0801522c 	.word	0x0801522c
 800b20c:	08015238 	.word	0x08015238
 800b210:	08015244 	.word	0x08015244
 800b214:	08015250 	.word	0x08015250
 800b218:	08015260 	.word	0x08015260
 800b21c:	0801526c 	.word	0x0801526c
 800b220:	08015288 	.word	0x08015288

0800b224 <bitToStr>:

#if !defined(STM32F3)
__STATIC_INLINE const char* bitToStr(uint32_t val)
{
 800b224:	b480      	push	{r7}
 800b226:	b083      	sub	sp, #12
 800b228:	af00      	add	r7, sp, #0
 800b22a:	6078      	str	r0, [r7, #4]
    if (val)
 800b22c:	687b      	ldr	r3, [r7, #4]
 800b22e:	2b00      	cmp	r3, #0
 800b230:	d001      	beq.n	800b236 <bitToStr+0x12>
        return "True";
 800b232:	4b04      	ldr	r3, [pc, #16]	; (800b244 <bitToStr+0x20>)
 800b234:	e000      	b.n	800b238 <bitToStr+0x14>
    else
        return "False";
 800b236:	4b04      	ldr	r3, [pc, #16]	; (800b248 <bitToStr+0x24>)
}
 800b238:	4618      	mov	r0, r3
 800b23a:	370c      	adds	r7, #12
 800b23c:	46bd      	mov	sp, r7
 800b23e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b242:	4770      	bx	lr
 800b244:	08015290 	.word	0x08015290
 800b248:	08015298 	.word	0x08015298

0800b24c <getFlashCacheConf>:


static uint32_t mconf;

uint32_t getFlashCacheConf(void)
{
 800b24c:	b480      	push	{r7}
 800b24e:	af00      	add	r7, sp, #0
    return mconf;
 800b250:	4b03      	ldr	r3, [pc, #12]	; (800b260 <getFlashCacheConf+0x14>)
 800b252:	681b      	ldr	r3, [r3, #0]
}
 800b254:	4618      	mov	r0, r3
 800b256:	46bd      	mov	sp, r7
 800b258:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b25c:	4770      	bx	lr
 800b25e:	bf00      	nop
 800b260:	20000910 	.word	0x20000910

0800b264 <logDeviceConf>:

void logDeviceConf(void)
{
 800b264:	b5b0      	push	{r4, r5, r7, lr}
 800b266:	b084      	sub	sp, #16
 800b268:	af02      	add	r7, sp, #8
#if !defined(STM32L5)
    uint32_t acr = FLASH->ACR ;
 800b26a:	4b53      	ldr	r3, [pc, #332]	; (800b3b8 <logDeviceConf+0x154>)
 800b26c:	681b      	ldr	r3, [r3, #0]
 800b26e:	607b      	str	r3, [r7, #4]
#endif
    uint32_t val;

    printf("STM32 Runtime configuration...\r\n");
 800b270:	4852      	ldr	r0, [pc, #328]	; (800b3bc <logDeviceConf+0x158>)
 800b272:	f005 fb19 	bl	80108a8 <puts>

    printf(" Device       : DevID:0x%08x (%s) RevID:0x%08x\r\n",
            (int)HAL_GetDEVID(),
 800b276:	f7fc fe63 	bl	8007f40 <HAL_GetDEVID>
 800b27a:	4603      	mov	r3, r0
    printf(" Device       : DevID:0x%08x (%s) RevID:0x%08x\r\n",
 800b27c:	461c      	mov	r4, r3
            devIdToStr(HAL_GetDEVID()),
 800b27e:	f7fc fe5f 	bl	8007f40 <HAL_GetDEVID>
 800b282:	4603      	mov	r3, r0
    printf(" Device       : DevID:0x%08x (%s) RevID:0x%08x\r\n",
 800b284:	b29b      	uxth	r3, r3
 800b286:	4618      	mov	r0, r3
 800b288:	f7ff fec0 	bl	800b00c <devIdToStr>
 800b28c:	4605      	mov	r5, r0
            (int)HAL_GetREVID()
 800b28e:	f7fc fe4b 	bl	8007f28 <HAL_GetREVID>
 800b292:	4603      	mov	r3, r0
    printf(" Device       : DevID:0x%08x (%s) RevID:0x%08x\r\n",
 800b294:	462a      	mov	r2, r5
 800b296:	4621      	mov	r1, r4
 800b298:	4849      	ldr	r0, [pc, #292]	; (800b3c0 <logDeviceConf+0x15c>)
 800b29a:	f005 fa91 	bl	80107c0 <iprintf>
    );

    printf(" Core Arch.   : M%d - %s %s\r\n",
 800b29e:	4b49      	ldr	r3, [pc, #292]	; (800b3c4 <logDeviceConf+0x160>)
 800b2a0:	4a49      	ldr	r2, [pc, #292]	; (800b3c8 <logDeviceConf+0x164>)
 800b2a2:	2107      	movs	r1, #7
 800b2a4:	4849      	ldr	r0, [pc, #292]	; (800b3cc <logDeviceConf+0x168>)
 800b2a6:	f005 fa8b 	bl	80107c0 <iprintf>
            ""
#endif
    );

#if (__FPU_PRESENT == 1) && __FPU_USED
    mconf = (1 << 16);  /* FPU present and used */
 800b2aa:	4b49      	ldr	r3, [pc, #292]	; (800b3d0 <logDeviceConf+0x16c>)
 800b2ac:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800b2b0:	601a      	str	r2, [r3, #0]
#endif

    printf(" HAL version  : 0x%08x\r\n", (int)HAL_GetHalVersion());
 800b2b2:	f7fc fe2f 	bl	8007f14 <HAL_GetHalVersion>
 800b2b6:	4603      	mov	r3, r0
 800b2b8:	4619      	mov	r1, r3
 800b2ba:	4846      	ldr	r0, [pc, #280]	; (800b3d4 <logDeviceConf+0x170>)
 800b2bc:	f005 fa80 	bl	80107c0 <iprintf>

    val = systemCoreClock()/1000000;
 800b2c0:	f7ff fe74 	bl	800afac <systemCoreClock>
 800b2c4:	4602      	mov	r2, r0
 800b2c6:	4b44      	ldr	r3, [pc, #272]	; (800b3d8 <logDeviceConf+0x174>)
 800b2c8:	fba3 2302 	umull	r2, r3, r3, r2
 800b2cc:	0c9b      	lsrs	r3, r3, #18
 800b2ce:	603b      	str	r3, [r7, #0]

#if !defined(STM32H7)
    printf(" system clock : %u MHz\r\n", (int)val);
 800b2d0:	683b      	ldr	r3, [r7, #0]
 800b2d2:	4619      	mov	r1, r3
 800b2d4:	4841      	ldr	r0, [pc, #260]	; (800b3dc <logDeviceConf+0x178>)
 800b2d6:	f005 fa73 	bl	80107c0 <iprintf>
    printf(" SYSCLK clock : %u MHz\r\n", (int)val);
    printf(" HCLK clock   : %u MHz\r\n", (int)HAL_RCC_GetHCLKFreq()/1000000);
#endif

#if defined(STM32F7) || defined(STM32H7)
    val = SCB->CCR;
 800b2da:	4b41      	ldr	r3, [pc, #260]	; (800b3e0 <logDeviceConf+0x17c>)
 800b2dc:	695b      	ldr	r3, [r3, #20]
 800b2de:	603b      	str	r3, [r7, #0]
#if !defined(STM32H7)
    mconf |= (2 << 24);  /* F7 conf. */
 800b2e0:	4b3b      	ldr	r3, [pc, #236]	; (800b3d0 <logDeviceConf+0x16c>)
 800b2e2:	681b      	ldr	r3, [r3, #0]
 800b2e4:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800b2e8:	4a39      	ldr	r2, [pc, #228]	; (800b3d0 <logDeviceConf+0x16c>)
 800b2ea:	6013      	str	r3, [r2, #0]
    mconf |= ((acr & FLASH_ACR_LATENCY_Msk) >> FLASH_ACR_LATENCY_Pos);
 800b2ec:	687b      	ldr	r3, [r7, #4]
 800b2ee:	f003 020f 	and.w	r2, r3, #15
 800b2f2:	4b37      	ldr	r3, [pc, #220]	; (800b3d0 <logDeviceConf+0x16c>)
 800b2f4:	681b      	ldr	r3, [r3, #0]
 800b2f6:	4313      	orrs	r3, r2
 800b2f8:	4a35      	ldr	r2, [pc, #212]	; (800b3d0 <logDeviceConf+0x16c>)
 800b2fa:	6013      	str	r3, [r2, #0]
    if ((acr & FLASH_ACR_PRFTEN_Msk) >> FLASH_ACR_PRFTEN_Pos)
 800b2fc:	687b      	ldr	r3, [r7, #4]
 800b2fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b302:	2b00      	cmp	r3, #0
 800b304:	d005      	beq.n	800b312 <logDeviceConf+0xae>
        mconf |= (1 << 8);
 800b306:	4b32      	ldr	r3, [pc, #200]	; (800b3d0 <logDeviceConf+0x16c>)
 800b308:	681b      	ldr	r3, [r3, #0]
 800b30a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b30e:	4a30      	ldr	r2, [pc, #192]	; (800b3d0 <logDeviceConf+0x16c>)
 800b310:	6013      	str	r3, [r2, #0]
    if ((acr & FLASH_ACR_ARTEN_Msk) >> FLASH_ACR_ARTEN_Pos)
 800b312:	687b      	ldr	r3, [r7, #4]
 800b314:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800b318:	2b00      	cmp	r3, #0
 800b31a:	d005      	beq.n	800b328 <logDeviceConf+0xc4>
        mconf |= (1 << 9);
 800b31c:	4b2c      	ldr	r3, [pc, #176]	; (800b3d0 <logDeviceConf+0x16c>)
 800b31e:	681b      	ldr	r3, [r3, #0]
 800b320:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800b324:	4a2a      	ldr	r2, [pc, #168]	; (800b3d0 <logDeviceConf+0x16c>)
 800b326:	6013      	str	r3, [r2, #0]
    printf(" FLASH conf.  : ACR=0x%08x - Prefetch=%s ART=%s latency=%d\r\n",
 800b328:	687c      	ldr	r4, [r7, #4]
            (int)acr,
            bitToStr((acr & FLASH_ACR_PRFTEN_Msk) >> FLASH_ACR_PRFTEN_Pos),
 800b32a:	687b      	ldr	r3, [r7, #4]
 800b32c:	0a1b      	lsrs	r3, r3, #8
    printf(" FLASH conf.  : ACR=0x%08x - Prefetch=%s ART=%s latency=%d\r\n",
 800b32e:	f003 0301 	and.w	r3, r3, #1
 800b332:	4618      	mov	r0, r3
 800b334:	f7ff ff76 	bl	800b224 <bitToStr>
 800b338:	4605      	mov	r5, r0
            bitToStr((acr & FLASH_ACR_ARTEN_Msk) >> FLASH_ACR_ARTEN_Pos),
 800b33a:	687b      	ldr	r3, [r7, #4]
 800b33c:	0a5b      	lsrs	r3, r3, #9
    printf(" FLASH conf.  : ACR=0x%08x - Prefetch=%s ART=%s latency=%d\r\n",
 800b33e:	f003 0301 	and.w	r3, r3, #1
 800b342:	4618      	mov	r0, r3
 800b344:	f7ff ff6e 	bl	800b224 <bitToStr>
 800b348:	4602      	mov	r2, r0
            (int)((acr & FLASH_ACR_LATENCY_Msk) >> FLASH_ACR_LATENCY_Pos));
 800b34a:	687b      	ldr	r3, [r7, #4]
    printf(" FLASH conf.  : ACR=0x%08x - Prefetch=%s ART=%s latency=%d\r\n",
 800b34c:	f003 030f 	and.w	r3, r3, #15
 800b350:	9300      	str	r3, [sp, #0]
 800b352:	4613      	mov	r3, r2
 800b354:	462a      	mov	r2, r5
 800b356:	4621      	mov	r1, r4
 800b358:	4822      	ldr	r0, [pc, #136]	; (800b3e4 <logDeviceConf+0x180>)
 800b35a:	f005 fa31 	bl	80107c0 <iprintf>
    printf(" FLASH conf.  : ACR=0x%08x - latency=%d\r\n",
            (int)acr,
            (int)((acr & FLASH_ACR_LATENCY_Msk) >> FLASH_ACR_LATENCY_Pos));
#endif
#if !defined(CORE_M4)
    if (val & SCB_CCR_IC_Msk)
 800b35e:	683b      	ldr	r3, [r7, #0]
 800b360:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800b364:	2b00      	cmp	r3, #0
 800b366:	d005      	beq.n	800b374 <logDeviceConf+0x110>
        mconf |= (1 << 10);
 800b368:	4b19      	ldr	r3, [pc, #100]	; (800b3d0 <logDeviceConf+0x16c>)
 800b36a:	681b      	ldr	r3, [r3, #0]
 800b36c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800b370:	4a17      	ldr	r2, [pc, #92]	; (800b3d0 <logDeviceConf+0x16c>)
 800b372:	6013      	str	r3, [r2, #0]
    if (val & SCB_CCR_DC_Msk)
 800b374:	683b      	ldr	r3, [r7, #0]
 800b376:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800b37a:	2b00      	cmp	r3, #0
 800b37c:	d005      	beq.n	800b38a <logDeviceConf+0x126>
        mconf |= (1 << 11);
 800b37e:	4b14      	ldr	r3, [pc, #80]	; (800b3d0 <logDeviceConf+0x16c>)
 800b380:	681b      	ldr	r3, [r3, #0]
 800b382:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800b386:	4a12      	ldr	r2, [pc, #72]	; (800b3d0 <logDeviceConf+0x16c>)
 800b388:	6013      	str	r3, [r2, #0]
    printf(" CACHE conf.  : $I/$D=(%s,%s)\r\n",
 800b38a:	683b      	ldr	r3, [r7, #0]
 800b38c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800b390:	4618      	mov	r0, r3
 800b392:	f7ff ff47 	bl	800b224 <bitToStr>
 800b396:	4604      	mov	r4, r0
 800b398:	683b      	ldr	r3, [r7, #0]
 800b39a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800b39e:	4618      	mov	r0, r3
 800b3a0:	f7ff ff40 	bl	800b224 <bitToStr>
 800b3a4:	4603      	mov	r3, r0
 800b3a6:	461a      	mov	r2, r3
 800b3a8:	4621      	mov	r1, r4
 800b3aa:	480f      	ldr	r0, [pc, #60]	; (800b3e8 <logDeviceConf+0x184>)
 800b3ac:	f005 fa08 	bl	80107c0 <iprintf>
#endif
#if defined(STM32L5)
    printf(" ICACHE       : %s\r\n", bitToStr(READ_BIT(ICACHE->CR, ICACHE_CR_EN)));
#endif
#endif
}
 800b3b0:	bf00      	nop
 800b3b2:	3708      	adds	r7, #8
 800b3b4:	46bd      	mov	sp, r7
 800b3b6:	bdb0      	pop	{r4, r5, r7, pc}
 800b3b8:	40023c00 	.word	0x40023c00
 800b3bc:	080152a0 	.word	0x080152a0
 800b3c0:	080152c0 	.word	0x080152c0
 800b3c4:	080152f4 	.word	0x080152f4
 800b3c8:	08015300 	.word	0x08015300
 800b3cc:	0801530c 	.word	0x0801530c
 800b3d0:	20000910 	.word	0x20000910
 800b3d4:	0801532c 	.word	0x0801532c
 800b3d8:	431bde83 	.word	0x431bde83
 800b3dc:	08015348 	.word	0x08015348
 800b3e0:	e000ed00 	.word	0xe000ed00
 800b3e4:	08015364 	.word	0x08015364
 800b3e8:	080153a4 	.word	0x080153a4

0800b3ec <disableInts>:

uint32_t disableInts(void)
{
 800b3ec:	b480      	push	{r7}
 800b3ee:	b083      	sub	sp, #12
 800b3f0:	af00      	add	r7, sp, #0
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800b3f2:	f3ef 8310 	mrs	r3, PRIMASK
 800b3f6:	603b      	str	r3, [r7, #0]
  return(result);
 800b3f8:	683b      	ldr	r3, [r7, #0]
    uint32_t state;

    state = __get_PRIMASK();
 800b3fa:	607b      	str	r3, [r7, #4]
  __ASM volatile ("cpsid i" : : : "memory");
 800b3fc:	b672      	cpsid	i
    __disable_irq();

    return state;
 800b3fe:	687b      	ldr	r3, [r7, #4]
}
 800b400:	4618      	mov	r0, r3
 800b402:	370c      	adds	r7, #12
 800b404:	46bd      	mov	sp, r7
 800b406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b40a:	4770      	bx	lr

0800b40c <restoreInts>:

void restoreInts(uint32_t state)
{
 800b40c:	b480      	push	{r7}
 800b40e:	b085      	sub	sp, #20
 800b410:	af00      	add	r7, sp, #0
 800b412:	6078      	str	r0, [r7, #4]
 800b414:	687b      	ldr	r3, [r7, #4]
 800b416:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800b418:	68fb      	ldr	r3, [r7, #12]
 800b41a:	f383 8810 	msr	PRIMASK, r3
   __set_PRIMASK(state);
}
 800b41e:	bf00      	nop
 800b420:	3714      	adds	r7, #20
 800b422:	46bd      	mov	sp, r7
 800b424:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b428:	4770      	bx	lr
	...

0800b42c <_write>:
#if defined(__GNUC__)

int _write(int fd, const void *buff, int count);

int _write(int fd, const void *buff, int count)
{
 800b42c:	b580      	push	{r7, lr}
 800b42e:	b086      	sub	sp, #24
 800b430:	af00      	add	r7, sp, #0
 800b432:	60f8      	str	r0, [r7, #12]
 800b434:	60b9      	str	r1, [r7, #8]
 800b436:	607a      	str	r2, [r7, #4]
    HAL_StatusTypeDef status;

    if ((count < 0) && (fd != STDOUT_FILENO) && (fd != STDERR_FILENO)) {
 800b438:	687b      	ldr	r3, [r7, #4]
 800b43a:	2b00      	cmp	r3, #0
 800b43c:	da0d      	bge.n	800b45a <_write+0x2e>
 800b43e:	68fb      	ldr	r3, [r7, #12]
 800b440:	2b01      	cmp	r3, #1
 800b442:	d00a      	beq.n	800b45a <_write+0x2e>
 800b444:	68fb      	ldr	r3, [r7, #12]
 800b446:	2b02      	cmp	r3, #2
 800b448:	d007      	beq.n	800b45a <_write+0x2e>
        errno = EBADF;
 800b44a:	f004 fc7b 	bl	800fd44 <__errno>
 800b44e:	4602      	mov	r2, r0
 800b450:	2309      	movs	r3, #9
 800b452:	6013      	str	r3, [r2, #0]
        return -1;
 800b454:	f04f 33ff 	mov.w	r3, #4294967295
 800b458:	e016      	b.n	800b488 <_write+0x5c>
    }

    if (_ioWriteAllowed)
 800b45a:	4b0d      	ldr	r3, [pc, #52]	; (800b490 <_write+0x64>)
 800b45c:	781b      	ldrb	r3, [r3, #0]
 800b45e:	2b00      	cmp	r3, #0
 800b460:	d00a      	beq.n	800b478 <_write+0x4c>
        status = HAL_UART_Transmit(&UartHandle, (uint8_t *)buff, count,
 800b462:	687b      	ldr	r3, [r7, #4]
 800b464:	b29a      	uxth	r2, r3
 800b466:	f04f 33ff 	mov.w	r3, #4294967295
 800b46a:	68b9      	ldr	r1, [r7, #8]
 800b46c:	4809      	ldr	r0, [pc, #36]	; (800b494 <_write+0x68>)
 800b46e:	f7fe fa33 	bl	80098d8 <HAL_UART_Transmit>
 800b472:	4603      	mov	r3, r0
 800b474:	75fb      	strb	r3, [r7, #23]
 800b476:	e001      	b.n	800b47c <_write+0x50>
                HAL_MAX_DELAY);
    else
        status = HAL_OK;
 800b478:	2300      	movs	r3, #0
 800b47a:	75fb      	strb	r3, [r7, #23]

    return (status == HAL_OK ? count : 0);
 800b47c:	7dfb      	ldrb	r3, [r7, #23]
 800b47e:	2b00      	cmp	r3, #0
 800b480:	d101      	bne.n	800b486 <_write+0x5a>
 800b482:	687b      	ldr	r3, [r7, #4]
 800b484:	e000      	b.n	800b488 <_write+0x5c>
 800b486:	2300      	movs	r3, #0
}
 800b488:	4618      	mov	r0, r3
 800b48a:	3718      	adds	r7, #24
 800b48c:	46bd      	mov	sp, r7
 800b48e:	bd80      	pop	{r7, pc}
 800b490:	20000011 	.word	0x20000011
 800b494:	20000bdc 	.word	0x20000bdc

0800b498 <aiLogErr>:
 * AI-related functions
 * -----------------------------------------------------------------------------
 */

void aiLogErr(const ai_error err, const char *fct)
{
 800b498:	b580      	push	{r7, lr}
 800b49a:	b082      	sub	sp, #8
 800b49c:	af00      	add	r7, sp, #0
 800b49e:	6078      	str	r0, [r7, #4]
 800b4a0:	6039      	str	r1, [r7, #0]
    if (fct)
 800b4a2:	683b      	ldr	r3, [r7, #0]
 800b4a4:	2b00      	cmp	r3, #0
 800b4a6:	d009      	beq.n	800b4bc <aiLogErr+0x24>
        printf("E: AI error (%s) - type=%d code=%d\r\n", fct,
                err.type, err.code);
 800b4a8:	793b      	ldrb	r3, [r7, #4]
        printf("E: AI error (%s) - type=%d code=%d\r\n", fct,
 800b4aa:	461a      	mov	r2, r3
                err.type, err.code);
 800b4ac:	687b      	ldr	r3, [r7, #4]
 800b4ae:	f3c3 2317 	ubfx	r3, r3, #8, #24
        printf("E: AI error (%s) - type=%d code=%d\r\n", fct,
 800b4b2:	6839      	ldr	r1, [r7, #0]
 800b4b4:	4808      	ldr	r0, [pc, #32]	; (800b4d8 <aiLogErr+0x40>)
 800b4b6:	f005 f983 	bl	80107c0 <iprintf>
    else
        printf("E: AI error - type=%d code=%d\r\n", err.type, err.code);
}
 800b4ba:	e008      	b.n	800b4ce <aiLogErr+0x36>
        printf("E: AI error - type=%d code=%d\r\n", err.type, err.code);
 800b4bc:	793b      	ldrb	r3, [r7, #4]
 800b4be:	4619      	mov	r1, r3
 800b4c0:	687b      	ldr	r3, [r7, #4]
 800b4c2:	f3c3 2317 	ubfx	r3, r3, #8, #24
 800b4c6:	461a      	mov	r2, r3
 800b4c8:	4804      	ldr	r0, [pc, #16]	; (800b4dc <aiLogErr+0x44>)
 800b4ca:	f005 f979 	bl	80107c0 <iprintf>
}
 800b4ce:	bf00      	nop
 800b4d0:	3708      	adds	r7, #8
 800b4d2:	46bd      	mov	sp, r7
 800b4d4:	bd80      	pop	{r7, pc}
 800b4d6:	bf00      	nop
 800b4d8:	080153c4 	.word	0x080153c4
 800b4dc:	080153ec 	.word	0x080153ec

0800b4e0 <aiBufferSize>:

ai_u32 aiBufferSize(const ai_buffer* buffer)
{
 800b4e0:	b480      	push	{r7}
 800b4e2:	b083      	sub	sp, #12
 800b4e4:	af00      	add	r7, sp, #0
 800b4e6:	6078      	str	r0, [r7, #4]
    return buffer->height * buffer->width * buffer->channels;
 800b4e8:	687b      	ldr	r3, [r7, #4]
 800b4ea:	88db      	ldrh	r3, [r3, #6]
 800b4ec:	461a      	mov	r2, r3
 800b4ee:	687b      	ldr	r3, [r7, #4]
 800b4f0:	891b      	ldrh	r3, [r3, #8]
 800b4f2:	fb03 f302 	mul.w	r3, r3, r2
 800b4f6:	461a      	mov	r2, r3
 800b4f8:	687b      	ldr	r3, [r7, #4]
 800b4fa:	68db      	ldr	r3, [r3, #12]
 800b4fc:	fb03 f302 	mul.w	r3, r3, r2
}
 800b500:	4618      	mov	r0, r3
 800b502:	370c      	adds	r7, #12
 800b504:	46bd      	mov	sp, r7
 800b506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b50a:	4770      	bx	lr

0800b50c <aiPrintLayoutBuffer>:

__STATIC_INLINE void aiPrintLayoutBuffer(const char *msg, int idx,
        const ai_buffer* buffer)
{
 800b50c:	b580      	push	{r7, lr}
 800b50e:	b08a      	sub	sp, #40	; 0x28
 800b510:	af02      	add	r7, sp, #8
 800b512:	60f8      	str	r0, [r7, #12]
 800b514:	60b9      	str	r1, [r7, #8]
 800b516:	607a      	str	r2, [r7, #4]
    uint32_t type_id = AI_BUFFER_FMT_GET_TYPE(buffer->format);
 800b518:	687b      	ldr	r3, [r7, #4]
 800b51a:	681b      	ldr	r3, [r3, #0]
 800b51c:	145b      	asrs	r3, r3, #17
 800b51e:	f003 030f 	and.w	r3, r3, #15
 800b522:	61fb      	str	r3, [r7, #28]
    printf("%s[%d] ",msg, idx);
 800b524:	68ba      	ldr	r2, [r7, #8]
 800b526:	68f9      	ldr	r1, [r7, #12]
 800b528:	4897      	ldr	r0, [pc, #604]	; (800b788 <aiPrintLayoutBuffer+0x27c>)
 800b52a:	f005 f949 	bl	80107c0 <iprintf>
    if (type_id == AI_BUFFER_FMT_TYPE_Q) {
 800b52e:	69fb      	ldr	r3, [r7, #28]
 800b530:	2b02      	cmp	r3, #2
 800b532:	f040 818c 	bne.w	800b84e <aiPrintLayoutBuffer+0x342>
        printf(" %s%d,",
        		AI_BUFFER_FMT_GET_SIGN(buffer->format)?"s":"u",
 800b536:	687b      	ldr	r3, [r7, #4]
 800b538:	681b      	ldr	r3, [r3, #0]
 800b53a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
        printf(" %s%d,",
 800b53e:	2b00      	cmp	r3, #0
 800b540:	d001      	beq.n	800b546 <aiPrintLayoutBuffer+0x3a>
 800b542:	4992      	ldr	r1, [pc, #584]	; (800b78c <aiPrintLayoutBuffer+0x280>)
 800b544:	e000      	b.n	800b548 <aiPrintLayoutBuffer+0x3c>
 800b546:	4992      	ldr	r1, [pc, #584]	; (800b790 <aiPrintLayoutBuffer+0x284>)
                (int)AI_BUFFER_FMT_GET_BITS(buffer->format));
 800b548:	687b      	ldr	r3, [r7, #4]
 800b54a:	681b      	ldr	r3, [r3, #0]
 800b54c:	11db      	asrs	r3, r3, #7
        printf(" %s%d,",
 800b54e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b552:	461a      	mov	r2, r3
 800b554:	488f      	ldr	r0, [pc, #572]	; (800b794 <aiPrintLayoutBuffer+0x288>)
 800b556:	f005 f933 	bl	80107c0 <iprintf>
        if (AI_BUFFER_META_INFO_INTQ(buffer->meta_info)) {
 800b55a:	687b      	ldr	r3, [r7, #4]
 800b55c:	695b      	ldr	r3, [r3, #20]
 800b55e:	2b00      	cmp	r3, #0
 800b560:	f000 8157 	beq.w	800b812 <aiPrintLayoutBuffer+0x306>
 800b564:	687b      	ldr	r3, [r7, #4]
 800b566:	695b      	ldr	r3, [r3, #20]
 800b568:	681b      	ldr	r3, [r3, #0]
 800b56a:	f003 0301 	and.w	r3, r3, #1
 800b56e:	2b00      	cmp	r3, #0
 800b570:	f000 814f 	beq.w	800b812 <aiPrintLayoutBuffer+0x306>
 800b574:	687b      	ldr	r3, [r7, #4]
 800b576:	695b      	ldr	r3, [r3, #20]
 800b578:	685b      	ldr	r3, [r3, #4]
 800b57a:	2b00      	cmp	r3, #0
 800b57c:	f000 8149 	beq.w	800b812 <aiPrintLayoutBuffer+0x306>
    		ai_float scale = AI_BUFFER_META_INFO_INTQ_GET_SCALE(buffer->meta_info, 0);
 800b580:	687b      	ldr	r3, [r7, #4]
 800b582:	695b      	ldr	r3, [r3, #20]
 800b584:	2b00      	cmp	r3, #0
 800b586:	d058      	beq.n	800b63a <aiPrintLayoutBuffer+0x12e>
 800b588:	687b      	ldr	r3, [r7, #4]
 800b58a:	695b      	ldr	r3, [r3, #20]
 800b58c:	681b      	ldr	r3, [r3, #0]
 800b58e:	f003 0301 	and.w	r3, r3, #1
 800b592:	2b00      	cmp	r3, #0
 800b594:	d051      	beq.n	800b63a <aiPrintLayoutBuffer+0x12e>
 800b596:	687b      	ldr	r3, [r7, #4]
 800b598:	695b      	ldr	r3, [r3, #20]
 800b59a:	685b      	ldr	r3, [r3, #4]
 800b59c:	2b00      	cmp	r3, #0
 800b59e:	d04c      	beq.n	800b63a <aiPrintLayoutBuffer+0x12e>
 800b5a0:	687b      	ldr	r3, [r7, #4]
 800b5a2:	695b      	ldr	r3, [r3, #20]
 800b5a4:	2b00      	cmp	r3, #0
 800b5a6:	d045      	beq.n	800b634 <aiPrintLayoutBuffer+0x128>
 800b5a8:	687b      	ldr	r3, [r7, #4]
 800b5aa:	695b      	ldr	r3, [r3, #20]
 800b5ac:	681b      	ldr	r3, [r3, #0]
 800b5ae:	f003 0301 	and.w	r3, r3, #1
 800b5b2:	2b00      	cmp	r3, #0
 800b5b4:	d03e      	beq.n	800b634 <aiPrintLayoutBuffer+0x128>
 800b5b6:	687b      	ldr	r3, [r7, #4]
 800b5b8:	695b      	ldr	r3, [r3, #20]
 800b5ba:	685b      	ldr	r3, [r3, #4]
 800b5bc:	2b00      	cmp	r3, #0
 800b5be:	d039      	beq.n	800b634 <aiPrintLayoutBuffer+0x128>
 800b5c0:	687b      	ldr	r3, [r7, #4]
 800b5c2:	695b      	ldr	r3, [r3, #20]
 800b5c4:	2b00      	cmp	r3, #0
 800b5c6:	d00a      	beq.n	800b5de <aiPrintLayoutBuffer+0xd2>
 800b5c8:	687b      	ldr	r3, [r7, #4]
 800b5ca:	695b      	ldr	r3, [r3, #20]
 800b5cc:	681b      	ldr	r3, [r3, #0]
 800b5ce:	f003 0301 	and.w	r3, r3, #1
 800b5d2:	2b00      	cmp	r3, #0
 800b5d4:	d003      	beq.n	800b5de <aiPrintLayoutBuffer+0xd2>
 800b5d6:	687b      	ldr	r3, [r7, #4]
 800b5d8:	695b      	ldr	r3, [r3, #20]
 800b5da:	685b      	ldr	r3, [r3, #4]
 800b5dc:	e000      	b.n	800b5e0 <aiPrintLayoutBuffer+0xd4>
 800b5de:	2300      	movs	r3, #0
 800b5e0:	685b      	ldr	r3, [r3, #4]
 800b5e2:	2b00      	cmp	r3, #0
 800b5e4:	d026      	beq.n	800b634 <aiPrintLayoutBuffer+0x128>
 800b5e6:	687b      	ldr	r3, [r7, #4]
 800b5e8:	695b      	ldr	r3, [r3, #20]
 800b5ea:	2b00      	cmp	r3, #0
 800b5ec:	d00a      	beq.n	800b604 <aiPrintLayoutBuffer+0xf8>
 800b5ee:	687b      	ldr	r3, [r7, #4]
 800b5f0:	695b      	ldr	r3, [r3, #20]
 800b5f2:	681b      	ldr	r3, [r3, #0]
 800b5f4:	f003 0301 	and.w	r3, r3, #1
 800b5f8:	2b00      	cmp	r3, #0
 800b5fa:	d003      	beq.n	800b604 <aiPrintLayoutBuffer+0xf8>
 800b5fc:	687b      	ldr	r3, [r7, #4]
 800b5fe:	695b      	ldr	r3, [r3, #20]
 800b600:	685b      	ldr	r3, [r3, #4]
 800b602:	e000      	b.n	800b606 <aiPrintLayoutBuffer+0xfa>
 800b604:	2300      	movs	r3, #0
 800b606:	885b      	ldrh	r3, [r3, #2]
 800b608:	2b00      	cmp	r3, #0
 800b60a:	d013      	beq.n	800b634 <aiPrintLayoutBuffer+0x128>
 800b60c:	687b      	ldr	r3, [r7, #4]
 800b60e:	695b      	ldr	r3, [r3, #20]
 800b610:	2b00      	cmp	r3, #0
 800b612:	d00a      	beq.n	800b62a <aiPrintLayoutBuffer+0x11e>
 800b614:	687b      	ldr	r3, [r7, #4]
 800b616:	695b      	ldr	r3, [r3, #20]
 800b618:	681b      	ldr	r3, [r3, #0]
 800b61a:	f003 0301 	and.w	r3, r3, #1
 800b61e:	2b00      	cmp	r3, #0
 800b620:	d003      	beq.n	800b62a <aiPrintLayoutBuffer+0x11e>
 800b622:	687b      	ldr	r3, [r7, #4]
 800b624:	695b      	ldr	r3, [r3, #20]
 800b626:	685b      	ldr	r3, [r3, #4]
 800b628:	e000      	b.n	800b62c <aiPrintLayoutBuffer+0x120>
 800b62a:	2300      	movs	r3, #0
 800b62c:	685b      	ldr	r3, [r3, #4]
 800b62e:	681b      	ldr	r3, [r3, #0]
 800b630:	681b      	ldr	r3, [r3, #0]
 800b632:	e004      	b.n	800b63e <aiPrintLayoutBuffer+0x132>
 800b634:	f04f 0300 	mov.w	r3, #0
 800b638:	e001      	b.n	800b63e <aiPrintLayoutBuffer+0x132>
 800b63a:	f04f 0300 	mov.w	r3, #0
 800b63e:	61bb      	str	r3, [r7, #24]
    		int zero_point = AI_BUFFER_META_INFO_INTQ_GET_ZEROPOINT(buffer->meta_info, 0);
 800b640:	687b      	ldr	r3, [r7, #4]
 800b642:	695b      	ldr	r3, [r3, #20]
 800b644:	2b00      	cmp	r3, #0
 800b646:	f000 80d6 	beq.w	800b7f6 <aiPrintLayoutBuffer+0x2ea>
 800b64a:	687b      	ldr	r3, [r7, #4]
 800b64c:	695b      	ldr	r3, [r3, #20]
 800b64e:	681b      	ldr	r3, [r3, #0]
 800b650:	f003 0301 	and.w	r3, r3, #1
 800b654:	2b00      	cmp	r3, #0
 800b656:	f000 80ce 	beq.w	800b7f6 <aiPrintLayoutBuffer+0x2ea>
 800b65a:	687b      	ldr	r3, [r7, #4]
 800b65c:	695b      	ldr	r3, [r3, #20]
 800b65e:	685b      	ldr	r3, [r3, #4]
 800b660:	2b00      	cmp	r3, #0
 800b662:	f000 80c8 	beq.w	800b7f6 <aiPrintLayoutBuffer+0x2ea>
 800b666:	687b      	ldr	r3, [r7, #4]
 800b668:	695b      	ldr	r3, [r3, #20]
 800b66a:	2b00      	cmp	r3, #0
 800b66c:	d06c      	beq.n	800b748 <aiPrintLayoutBuffer+0x23c>
 800b66e:	687b      	ldr	r3, [r7, #4]
 800b670:	695b      	ldr	r3, [r3, #20]
 800b672:	681b      	ldr	r3, [r3, #0]
 800b674:	f003 0301 	and.w	r3, r3, #1
 800b678:	2b00      	cmp	r3, #0
 800b67a:	d065      	beq.n	800b748 <aiPrintLayoutBuffer+0x23c>
 800b67c:	687b      	ldr	r3, [r7, #4]
 800b67e:	695b      	ldr	r3, [r3, #20]
 800b680:	685b      	ldr	r3, [r3, #4]
 800b682:	2b00      	cmp	r3, #0
 800b684:	d060      	beq.n	800b748 <aiPrintLayoutBuffer+0x23c>
 800b686:	687b      	ldr	r3, [r7, #4]
 800b688:	695b      	ldr	r3, [r3, #20]
 800b68a:	2b00      	cmp	r3, #0
 800b68c:	d00a      	beq.n	800b6a4 <aiPrintLayoutBuffer+0x198>
 800b68e:	687b      	ldr	r3, [r7, #4]
 800b690:	695b      	ldr	r3, [r3, #20]
 800b692:	681b      	ldr	r3, [r3, #0]
 800b694:	f003 0301 	and.w	r3, r3, #1
 800b698:	2b00      	cmp	r3, #0
 800b69a:	d003      	beq.n	800b6a4 <aiPrintLayoutBuffer+0x198>
 800b69c:	687b      	ldr	r3, [r7, #4]
 800b69e:	695b      	ldr	r3, [r3, #20]
 800b6a0:	685b      	ldr	r3, [r3, #4]
 800b6a2:	e000      	b.n	800b6a6 <aiPrintLayoutBuffer+0x19a>
 800b6a4:	2300      	movs	r3, #0
 800b6a6:	881b      	ldrh	r3, [r3, #0]
 800b6a8:	f003 0302 	and.w	r3, r3, #2
 800b6ac:	2b00      	cmp	r3, #0
 800b6ae:	d04b      	beq.n	800b748 <aiPrintLayoutBuffer+0x23c>
 800b6b0:	687b      	ldr	r3, [r7, #4]
 800b6b2:	695b      	ldr	r3, [r3, #20]
 800b6b4:	2b00      	cmp	r3, #0
 800b6b6:	d045      	beq.n	800b744 <aiPrintLayoutBuffer+0x238>
 800b6b8:	687b      	ldr	r3, [r7, #4]
 800b6ba:	695b      	ldr	r3, [r3, #20]
 800b6bc:	681b      	ldr	r3, [r3, #0]
 800b6be:	f003 0301 	and.w	r3, r3, #1
 800b6c2:	2b00      	cmp	r3, #0
 800b6c4:	d03e      	beq.n	800b744 <aiPrintLayoutBuffer+0x238>
 800b6c6:	687b      	ldr	r3, [r7, #4]
 800b6c8:	695b      	ldr	r3, [r3, #20]
 800b6ca:	685b      	ldr	r3, [r3, #4]
 800b6cc:	2b00      	cmp	r3, #0
 800b6ce:	d039      	beq.n	800b744 <aiPrintLayoutBuffer+0x238>
 800b6d0:	687b      	ldr	r3, [r7, #4]
 800b6d2:	695b      	ldr	r3, [r3, #20]
 800b6d4:	2b00      	cmp	r3, #0
 800b6d6:	d00a      	beq.n	800b6ee <aiPrintLayoutBuffer+0x1e2>
 800b6d8:	687b      	ldr	r3, [r7, #4]
 800b6da:	695b      	ldr	r3, [r3, #20]
 800b6dc:	681b      	ldr	r3, [r3, #0]
 800b6de:	f003 0301 	and.w	r3, r3, #1
 800b6e2:	2b00      	cmp	r3, #0
 800b6e4:	d003      	beq.n	800b6ee <aiPrintLayoutBuffer+0x1e2>
 800b6e6:	687b      	ldr	r3, [r7, #4]
 800b6e8:	695b      	ldr	r3, [r3, #20]
 800b6ea:	685b      	ldr	r3, [r3, #4]
 800b6ec:	e000      	b.n	800b6f0 <aiPrintLayoutBuffer+0x1e4>
 800b6ee:	2300      	movs	r3, #0
 800b6f0:	685b      	ldr	r3, [r3, #4]
 800b6f2:	2b00      	cmp	r3, #0
 800b6f4:	d026      	beq.n	800b744 <aiPrintLayoutBuffer+0x238>
 800b6f6:	687b      	ldr	r3, [r7, #4]
 800b6f8:	695b      	ldr	r3, [r3, #20]
 800b6fa:	2b00      	cmp	r3, #0
 800b6fc:	d00a      	beq.n	800b714 <aiPrintLayoutBuffer+0x208>
 800b6fe:	687b      	ldr	r3, [r7, #4]
 800b700:	695b      	ldr	r3, [r3, #20]
 800b702:	681b      	ldr	r3, [r3, #0]
 800b704:	f003 0301 	and.w	r3, r3, #1
 800b708:	2b00      	cmp	r3, #0
 800b70a:	d003      	beq.n	800b714 <aiPrintLayoutBuffer+0x208>
 800b70c:	687b      	ldr	r3, [r7, #4]
 800b70e:	695b      	ldr	r3, [r3, #20]
 800b710:	685b      	ldr	r3, [r3, #4]
 800b712:	e000      	b.n	800b716 <aiPrintLayoutBuffer+0x20a>
 800b714:	2300      	movs	r3, #0
 800b716:	885b      	ldrh	r3, [r3, #2]
 800b718:	2b00      	cmp	r3, #0
 800b71a:	d013      	beq.n	800b744 <aiPrintLayoutBuffer+0x238>
 800b71c:	687b      	ldr	r3, [r7, #4]
 800b71e:	695b      	ldr	r3, [r3, #20]
 800b720:	2b00      	cmp	r3, #0
 800b722:	d00a      	beq.n	800b73a <aiPrintLayoutBuffer+0x22e>
 800b724:	687b      	ldr	r3, [r7, #4]
 800b726:	695b      	ldr	r3, [r3, #20]
 800b728:	681b      	ldr	r3, [r3, #0]
 800b72a:	f003 0301 	and.w	r3, r3, #1
 800b72e:	2b00      	cmp	r3, #0
 800b730:	d003      	beq.n	800b73a <aiPrintLayoutBuffer+0x22e>
 800b732:	687b      	ldr	r3, [r7, #4]
 800b734:	695b      	ldr	r3, [r3, #20]
 800b736:	685b      	ldr	r3, [r3, #4]
 800b738:	e000      	b.n	800b73c <aiPrintLayoutBuffer+0x230>
 800b73a:	2300      	movs	r3, #0
 800b73c:	685b      	ldr	r3, [r3, #4]
 800b73e:	685b      	ldr	r3, [r3, #4]
 800b740:	781b      	ldrb	r3, [r3, #0]
 800b742:	e057      	b.n	800b7f4 <aiPrintLayoutBuffer+0x2e8>
 800b744:	2300      	movs	r3, #0
 800b746:	e055      	b.n	800b7f4 <aiPrintLayoutBuffer+0x2e8>
 800b748:	687b      	ldr	r3, [r7, #4]
 800b74a:	695b      	ldr	r3, [r3, #20]
 800b74c:	2b00      	cmp	r3, #0
 800b74e:	d04f      	beq.n	800b7f0 <aiPrintLayoutBuffer+0x2e4>
 800b750:	687b      	ldr	r3, [r7, #4]
 800b752:	695b      	ldr	r3, [r3, #20]
 800b754:	681b      	ldr	r3, [r3, #0]
 800b756:	f003 0301 	and.w	r3, r3, #1
 800b75a:	2b00      	cmp	r3, #0
 800b75c:	d048      	beq.n	800b7f0 <aiPrintLayoutBuffer+0x2e4>
 800b75e:	687b      	ldr	r3, [r7, #4]
 800b760:	695b      	ldr	r3, [r3, #20]
 800b762:	685b      	ldr	r3, [r3, #4]
 800b764:	2b00      	cmp	r3, #0
 800b766:	d043      	beq.n	800b7f0 <aiPrintLayoutBuffer+0x2e4>
 800b768:	687b      	ldr	r3, [r7, #4]
 800b76a:	695b      	ldr	r3, [r3, #20]
 800b76c:	2b00      	cmp	r3, #0
 800b76e:	d013      	beq.n	800b798 <aiPrintLayoutBuffer+0x28c>
 800b770:	687b      	ldr	r3, [r7, #4]
 800b772:	695b      	ldr	r3, [r3, #20]
 800b774:	681b      	ldr	r3, [r3, #0]
 800b776:	f003 0301 	and.w	r3, r3, #1
 800b77a:	2b00      	cmp	r3, #0
 800b77c:	d00c      	beq.n	800b798 <aiPrintLayoutBuffer+0x28c>
 800b77e:	687b      	ldr	r3, [r7, #4]
 800b780:	695b      	ldr	r3, [r3, #20]
 800b782:	685b      	ldr	r3, [r3, #4]
 800b784:	e009      	b.n	800b79a <aiPrintLayoutBuffer+0x28e>
 800b786:	bf00      	nop
 800b788:	0801540c 	.word	0x0801540c
 800b78c:	08015414 	.word	0x08015414
 800b790:	08015418 	.word	0x08015418
 800b794:	0801541c 	.word	0x0801541c
 800b798:	2300      	movs	r3, #0
 800b79a:	685b      	ldr	r3, [r3, #4]
 800b79c:	2b00      	cmp	r3, #0
 800b79e:	d027      	beq.n	800b7f0 <aiPrintLayoutBuffer+0x2e4>
 800b7a0:	687b      	ldr	r3, [r7, #4]
 800b7a2:	695b      	ldr	r3, [r3, #20]
 800b7a4:	2b00      	cmp	r3, #0
 800b7a6:	d00a      	beq.n	800b7be <aiPrintLayoutBuffer+0x2b2>
 800b7a8:	687b      	ldr	r3, [r7, #4]
 800b7aa:	695b      	ldr	r3, [r3, #20]
 800b7ac:	681b      	ldr	r3, [r3, #0]
 800b7ae:	f003 0301 	and.w	r3, r3, #1
 800b7b2:	2b00      	cmp	r3, #0
 800b7b4:	d003      	beq.n	800b7be <aiPrintLayoutBuffer+0x2b2>
 800b7b6:	687b      	ldr	r3, [r7, #4]
 800b7b8:	695b      	ldr	r3, [r3, #20]
 800b7ba:	685b      	ldr	r3, [r3, #4]
 800b7bc:	e000      	b.n	800b7c0 <aiPrintLayoutBuffer+0x2b4>
 800b7be:	2300      	movs	r3, #0
 800b7c0:	885b      	ldrh	r3, [r3, #2]
 800b7c2:	2b00      	cmp	r3, #0
 800b7c4:	d014      	beq.n	800b7f0 <aiPrintLayoutBuffer+0x2e4>
 800b7c6:	687b      	ldr	r3, [r7, #4]
 800b7c8:	695b      	ldr	r3, [r3, #20]
 800b7ca:	2b00      	cmp	r3, #0
 800b7cc:	d00a      	beq.n	800b7e4 <aiPrintLayoutBuffer+0x2d8>
 800b7ce:	687b      	ldr	r3, [r7, #4]
 800b7d0:	695b      	ldr	r3, [r3, #20]
 800b7d2:	681b      	ldr	r3, [r3, #0]
 800b7d4:	f003 0301 	and.w	r3, r3, #1
 800b7d8:	2b00      	cmp	r3, #0
 800b7da:	d003      	beq.n	800b7e4 <aiPrintLayoutBuffer+0x2d8>
 800b7dc:	687b      	ldr	r3, [r7, #4]
 800b7de:	695b      	ldr	r3, [r3, #20]
 800b7e0:	685b      	ldr	r3, [r3, #4]
 800b7e2:	e000      	b.n	800b7e6 <aiPrintLayoutBuffer+0x2da>
 800b7e4:	2300      	movs	r3, #0
 800b7e6:	685b      	ldr	r3, [r3, #4]
 800b7e8:	685b      	ldr	r3, [r3, #4]
 800b7ea:	f993 3000 	ldrsb.w	r3, [r3]
 800b7ee:	e001      	b.n	800b7f4 <aiPrintLayoutBuffer+0x2e8>
 800b7f0:	2300      	movs	r3, #0
 800b7f2:	e001      	b.n	800b7f8 <aiPrintLayoutBuffer+0x2ec>
 800b7f4:	e000      	b.n	800b7f8 <aiPrintLayoutBuffer+0x2ec>
 800b7f6:	2300      	movs	r3, #0
 800b7f8:	617b      	str	r3, [r7, #20]
    		printf(" scale=%f, zero=%d,", (float)scale, (int)zero_point);
 800b7fa:	edd7 7a06 	vldr	s15, [r7, #24]
 800b7fe:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800b802:	697b      	ldr	r3, [r7, #20]
 800b804:	9300      	str	r3, [sp, #0]
 800b806:	ec53 2b17 	vmov	r2, r3, d7
 800b80a:	4833      	ldr	r0, [pc, #204]	; (800b8d8 <aiPrintLayoutBuffer+0x3cc>)
 800b80c:	f004 ffd8 	bl	80107c0 <iprintf>
        if (AI_BUFFER_META_INFO_INTQ(buffer->meta_info)) {
 800b810:	e02d      	b.n	800b86e <aiPrintLayoutBuffer+0x362>
    	} else {
    		printf("Q%d.%d,",
    				(int)AI_BUFFER_FMT_GET_BITS(buffer->format)
 800b812:	687b      	ldr	r3, [r7, #4]
 800b814:	681b      	ldr	r3, [r3, #0]
 800b816:	11db      	asrs	r3, r3, #7
 800b818:	f003 027f 	and.w	r2, r3, #127	; 0x7f
					- ((int)AI_BUFFER_FMT_GET_FBITS(buffer->format) +
 800b81c:	687b      	ldr	r3, [r7, #4]
 800b81e:	681b      	ldr	r3, [r3, #0]
 800b820:	b2db      	uxtb	r3, r3
 800b822:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b826:	f1a3 0140 	sub.w	r1, r3, #64	; 0x40
					(int)AI_BUFFER_FMT_GET_SIGN(buffer->format)),
 800b82a:	687b      	ldr	r3, [r7, #4]
 800b82c:	681b      	ldr	r3, [r3, #0]
 800b82e:	15db      	asrs	r3, r3, #23
 800b830:	f003 0301 	and.w	r3, r3, #1
					- ((int)AI_BUFFER_FMT_GET_FBITS(buffer->format) +
 800b834:	440b      	add	r3, r1
    		printf("Q%d.%d,",
 800b836:	1ad1      	subs	r1, r2, r3
					AI_BUFFER_FMT_GET_FBITS(buffer->format));
 800b838:	687b      	ldr	r3, [r7, #4]
 800b83a:	681b      	ldr	r3, [r3, #0]
 800b83c:	b2db      	uxtb	r3, r3
 800b83e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    		printf("Q%d.%d,",
 800b842:	3b40      	subs	r3, #64	; 0x40
 800b844:	461a      	mov	r2, r3
 800b846:	4825      	ldr	r0, [pc, #148]	; (800b8dc <aiPrintLayoutBuffer+0x3d0>)
 800b848:	f004 ffba 	bl	80107c0 <iprintf>
 800b84c:	e00f      	b.n	800b86e <aiPrintLayoutBuffer+0x362>
    	}
    }
    else if (type_id == AI_BUFFER_FMT_TYPE_FLOAT)
 800b84e:	69fb      	ldr	r3, [r7, #28]
 800b850:	2b01      	cmp	r3, #1
 800b852:	d109      	bne.n	800b868 <aiPrintLayoutBuffer+0x35c>
        printf(" float%d,",
                (int)AI_BUFFER_FMT_GET_BITS(buffer->format));
 800b854:	687b      	ldr	r3, [r7, #4]
 800b856:	681b      	ldr	r3, [r3, #0]
 800b858:	11db      	asrs	r3, r3, #7
        printf(" float%d,",
 800b85a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b85e:	4619      	mov	r1, r3
 800b860:	481f      	ldr	r0, [pc, #124]	; (800b8e0 <aiPrintLayoutBuffer+0x3d4>)
 800b862:	f004 ffad 	bl	80107c0 <iprintf>
 800b866:	e002      	b.n	800b86e <aiPrintLayoutBuffer+0x362>
    else
        printf("NONE");
 800b868:	481e      	ldr	r0, [pc, #120]	; (800b8e4 <aiPrintLayoutBuffer+0x3d8>)
 800b86a:	f004 ffa9 	bl	80107c0 <iprintf>
    printf(" %ld bytes, shape=(%d,%d,%ld)",
    		AI_BUFFER_BYTE_SIZE(AI_BUFFER_SIZE(buffer), buffer->format),
 800b86e:	687b      	ldr	r3, [r7, #4]
 800b870:	891b      	ldrh	r3, [r3, #8]
 800b872:	461a      	mov	r2, r3
 800b874:	687b      	ldr	r3, [r7, #4]
 800b876:	88db      	ldrh	r3, [r3, #6]
 800b878:	fb03 f302 	mul.w	r3, r3, r2
 800b87c:	461a      	mov	r2, r3
 800b87e:	687b      	ldr	r3, [r7, #4]
 800b880:	68db      	ldr	r3, [r3, #12]
 800b882:	fb03 f302 	mul.w	r3, r3, r2
 800b886:	687a      	ldr	r2, [r7, #4]
 800b888:	6812      	ldr	r2, [r2, #0]
 800b88a:	11d2      	asrs	r2, r2, #7
 800b88c:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800b890:	fb02 f303 	mul.w	r3, r2, r3
 800b894:	3304      	adds	r3, #4
    printf(" %ld bytes, shape=(%d,%d,%ld)",
 800b896:	08d9      	lsrs	r1, r3, #3
			buffer->height, buffer->width, buffer->channels);
 800b898:	687b      	ldr	r3, [r7, #4]
 800b89a:	88db      	ldrh	r3, [r3, #6]
    printf(" %ld bytes, shape=(%d,%d,%ld)",
 800b89c:	461a      	mov	r2, r3
			buffer->height, buffer->width, buffer->channels);
 800b89e:	687b      	ldr	r3, [r7, #4]
 800b8a0:	891b      	ldrh	r3, [r3, #8]
    printf(" %ld bytes, shape=(%d,%d,%ld)",
 800b8a2:	4618      	mov	r0, r3
 800b8a4:	687b      	ldr	r3, [r7, #4]
 800b8a6:	68db      	ldr	r3, [r3, #12]
 800b8a8:	9300      	str	r3, [sp, #0]
 800b8aa:	4603      	mov	r3, r0
 800b8ac:	480e      	ldr	r0, [pc, #56]	; (800b8e8 <aiPrintLayoutBuffer+0x3dc>)
 800b8ae:	f004 ff87 	bl	80107c0 <iprintf>
    if (buffer->data)
 800b8b2:	687b      	ldr	r3, [r7, #4]
 800b8b4:	691b      	ldr	r3, [r3, #16]
 800b8b6:	2b00      	cmp	r3, #0
 800b8b8:	d006      	beq.n	800b8c8 <aiPrintLayoutBuffer+0x3bc>
    	printf(" (@0x%08x)\r\n", (int)buffer->data);
 800b8ba:	687b      	ldr	r3, [r7, #4]
 800b8bc:	691b      	ldr	r3, [r3, #16]
 800b8be:	4619      	mov	r1, r3
 800b8c0:	480a      	ldr	r0, [pc, #40]	; (800b8ec <aiPrintLayoutBuffer+0x3e0>)
 800b8c2:	f004 ff7d 	bl	80107c0 <iprintf>
    else
    	printf("\r\n");
}
 800b8c6:	e002      	b.n	800b8ce <aiPrintLayoutBuffer+0x3c2>
    	printf("\r\n");
 800b8c8:	4809      	ldr	r0, [pc, #36]	; (800b8f0 <aiPrintLayoutBuffer+0x3e4>)
 800b8ca:	f004 ffed 	bl	80108a8 <puts>
}
 800b8ce:	bf00      	nop
 800b8d0:	3720      	adds	r7, #32
 800b8d2:	46bd      	mov	sp, r7
 800b8d4:	bd80      	pop	{r7, pc}
 800b8d6:	bf00      	nop
 800b8d8:	08015424 	.word	0x08015424
 800b8dc:	08015438 	.word	0x08015438
 800b8e0:	08015440 	.word	0x08015440
 800b8e4:	0801544c 	.word	0x0801544c
 800b8e8:	08015454 	.word	0x08015454
 800b8ec:	08015474 	.word	0x08015474
 800b8f0:	08015484 	.word	0x08015484

0800b8f4 <aiPrintNetworkInfo>:

void aiPrintNetworkInfo(const ai_network_report* report)
{
 800b8f4:	b580      	push	{r7, lr}
 800b8f6:	b086      	sub	sp, #24
 800b8f8:	af02      	add	r7, sp, #8
 800b8fa:	6078      	str	r0, [r7, #4]
    int i;
    printf("Network configuration...\r\n");
 800b8fc:	484d      	ldr	r0, [pc, #308]	; (800ba34 <aiPrintNetworkInfo+0x140>)
 800b8fe:	f004 ffd3 	bl	80108a8 <puts>
    printf(" Model name         : %s\r\n", report->model_name);
 800b902:	687b      	ldr	r3, [r7, #4]
 800b904:	681b      	ldr	r3, [r3, #0]
 800b906:	4619      	mov	r1, r3
 800b908:	484b      	ldr	r0, [pc, #300]	; (800ba38 <aiPrintNetworkInfo+0x144>)
 800b90a:	f004 ff59 	bl	80107c0 <iprintf>
    printf(" Model signature    : %s\r\n", report->model_signature);
 800b90e:	687b      	ldr	r3, [r7, #4]
 800b910:	685b      	ldr	r3, [r3, #4]
 800b912:	4619      	mov	r1, r3
 800b914:	4849      	ldr	r0, [pc, #292]	; (800ba3c <aiPrintNetworkInfo+0x148>)
 800b916:	f004 ff53 	bl	80107c0 <iprintf>
    printf(" Model datetime     : %s\r\n", report->model_datetime);
 800b91a:	687b      	ldr	r3, [r7, #4]
 800b91c:	689b      	ldr	r3, [r3, #8]
 800b91e:	4619      	mov	r1, r3
 800b920:	4847      	ldr	r0, [pc, #284]	; (800ba40 <aiPrintNetworkInfo+0x14c>)
 800b922:	f004 ff4d 	bl	80107c0 <iprintf>
    printf(" Compile datetime   : %s\r\n", report->compile_datetime);
 800b926:	687b      	ldr	r3, [r7, #4]
 800b928:	68db      	ldr	r3, [r3, #12]
 800b92a:	4619      	mov	r1, r3
 800b92c:	4845      	ldr	r0, [pc, #276]	; (800ba44 <aiPrintNetworkInfo+0x150>)
 800b92e:	f004 ff47 	bl	80107c0 <iprintf>
    printf(" Runtime revision   : %s (%d.%d.%d)\r\n", report->runtime_revision,
 800b932:	687b      	ldr	r3, [r7, #4]
 800b934:	6919      	ldr	r1, [r3, #16]
            report->runtime_version.major,
 800b936:	687b      	ldr	r3, [r7, #4]
 800b938:	7d1b      	ldrb	r3, [r3, #20]
    printf(" Runtime revision   : %s (%d.%d.%d)\r\n", report->runtime_revision,
 800b93a:	461a      	mov	r2, r3
            report->runtime_version.minor,
 800b93c:	687b      	ldr	r3, [r7, #4]
 800b93e:	7d5b      	ldrb	r3, [r3, #21]
    printf(" Runtime revision   : %s (%d.%d.%d)\r\n", report->runtime_revision,
 800b940:	4618      	mov	r0, r3
            report->runtime_version.micro);
 800b942:	687b      	ldr	r3, [r7, #4]
 800b944:	7d9b      	ldrb	r3, [r3, #22]
    printf(" Runtime revision   : %s (%d.%d.%d)\r\n", report->runtime_revision,
 800b946:	9300      	str	r3, [sp, #0]
 800b948:	4603      	mov	r3, r0
 800b94a:	483f      	ldr	r0, [pc, #252]	; (800ba48 <aiPrintNetworkInfo+0x154>)
 800b94c:	f004 ff38 	bl	80107c0 <iprintf>
    printf(" Tool revision      : %s (%d.%d.%d)\r\n", report->tool_revision,
 800b950:	687b      	ldr	r3, [r7, #4]
 800b952:	6999      	ldr	r1, [r3, #24]
            report->tool_version.major,
 800b954:	687b      	ldr	r3, [r7, #4]
 800b956:	7f1b      	ldrb	r3, [r3, #28]
    printf(" Tool revision      : %s (%d.%d.%d)\r\n", report->tool_revision,
 800b958:	461a      	mov	r2, r3
            report->tool_version.minor,
 800b95a:	687b      	ldr	r3, [r7, #4]
 800b95c:	7f5b      	ldrb	r3, [r3, #29]
    printf(" Tool revision      : %s (%d.%d.%d)\r\n", report->tool_revision,
 800b95e:	4618      	mov	r0, r3
            report->tool_version.micro);
 800b960:	687b      	ldr	r3, [r7, #4]
 800b962:	7f9b      	ldrb	r3, [r3, #30]
    printf(" Tool revision      : %s (%d.%d.%d)\r\n", report->tool_revision,
 800b964:	9300      	str	r3, [sp, #0]
 800b966:	4603      	mov	r3, r0
 800b968:	4838      	ldr	r0, [pc, #224]	; (800ba4c <aiPrintNetworkInfo+0x158>)
 800b96a:	f004 ff29 	bl	80107c0 <iprintf>
    printf("Network info...\r\n");
 800b96e:	4838      	ldr	r0, [pc, #224]	; (800ba50 <aiPrintNetworkInfo+0x15c>)
 800b970:	f004 ff9a 	bl	80108a8 <puts>
    printf("  nodes             : %ld\r\n", report->n_nodes);
 800b974:	687b      	ldr	r3, [r7, #4]
 800b976:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800b978:	4619      	mov	r1, r3
 800b97a:	4836      	ldr	r0, [pc, #216]	; (800ba54 <aiPrintNetworkInfo+0x160>)
 800b97c:	f004 ff20 	bl	80107c0 <iprintf>
    printf("  complexity        : %ld MACC\r\n", report->n_macc);
 800b980:	687b      	ldr	r3, [r7, #4]
 800b982:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b984:	4619      	mov	r1, r3
 800b986:	4834      	ldr	r0, [pc, #208]	; (800ba58 <aiPrintNetworkInfo+0x164>)
 800b988:	f004 ff1a 	bl	80107c0 <iprintf>
    printf("  activation        : %ld bytes\r\n",
 800b98c:	687b      	ldr	r3, [r7, #4]
 800b98e:	333c      	adds	r3, #60	; 0x3c
 800b990:	4618      	mov	r0, r3
 800b992:	f7ff fda5 	bl	800b4e0 <aiBufferSize>
 800b996:	4603      	mov	r3, r0
 800b998:	4619      	mov	r1, r3
 800b99a:	4830      	ldr	r0, [pc, #192]	; (800ba5c <aiPrintNetworkInfo+0x168>)
 800b99c:	f004 ff10 	bl	80107c0 <iprintf>
            aiBufferSize(&report->activations));
    printf("  params            : %ld bytes\r\n",
 800b9a0:	687b      	ldr	r3, [r7, #4]
 800b9a2:	3354      	adds	r3, #84	; 0x54
 800b9a4:	4618      	mov	r0, r3
 800b9a6:	f7ff fd9b 	bl	800b4e0 <aiBufferSize>
 800b9aa:	4603      	mov	r3, r0
 800b9ac:	4619      	mov	r1, r3
 800b9ae:	482c      	ldr	r0, [pc, #176]	; (800ba60 <aiPrintNetworkInfo+0x16c>)
 800b9b0:	f004 ff06 	bl	80107c0 <iprintf>
            aiBufferSize(&report->params));
    printf("  inputs/outputs    : %u/%u\r\n",
            report->n_inputs, report->n_outputs);
 800b9b4:	687b      	ldr	r3, [r7, #4]
 800b9b6:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
    printf("  inputs/outputs    : %u/%u\r\n",
 800b9b8:	4619      	mov	r1, r3
            report->n_inputs, report->n_outputs);
 800b9ba:	687b      	ldr	r3, [r7, #4]
 800b9bc:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
    printf("  inputs/outputs    : %u/%u\r\n",
 800b9be:	461a      	mov	r2, r3
 800b9c0:	4828      	ldr	r0, [pc, #160]	; (800ba64 <aiPrintNetworkInfo+0x170>)
 800b9c2:	f004 fefd 	bl	80107c0 <iprintf>
    for (i=0; i<report->n_inputs; i++)
 800b9c6:	2300      	movs	r3, #0
 800b9c8:	60fb      	str	r3, [r7, #12]
 800b9ca:	e00f      	b.n	800b9ec <aiPrintNetworkInfo+0xf8>
        aiPrintLayoutBuffer("   I", i, &report->inputs[i]);
 800b9cc:	687b      	ldr	r3, [r7, #4]
 800b9ce:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800b9d0:	68fa      	ldr	r2, [r7, #12]
 800b9d2:	4613      	mov	r3, r2
 800b9d4:	005b      	lsls	r3, r3, #1
 800b9d6:	4413      	add	r3, r2
 800b9d8:	00db      	lsls	r3, r3, #3
 800b9da:	440b      	add	r3, r1
 800b9dc:	461a      	mov	r2, r3
 800b9de:	68f9      	ldr	r1, [r7, #12]
 800b9e0:	4821      	ldr	r0, [pc, #132]	; (800ba68 <aiPrintNetworkInfo+0x174>)
 800b9e2:	f7ff fd93 	bl	800b50c <aiPrintLayoutBuffer>
    for (i=0; i<report->n_inputs; i++)
 800b9e6:	68fb      	ldr	r3, [r7, #12]
 800b9e8:	3301      	adds	r3, #1
 800b9ea:	60fb      	str	r3, [r7, #12]
 800b9ec:	687b      	ldr	r3, [r7, #4]
 800b9ee:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
 800b9f0:	461a      	mov	r2, r3
 800b9f2:	68fb      	ldr	r3, [r7, #12]
 800b9f4:	4293      	cmp	r3, r2
 800b9f6:	dbe9      	blt.n	800b9cc <aiPrintNetworkInfo+0xd8>
    for (i=0; i<report->n_outputs; i++)
 800b9f8:	2300      	movs	r3, #0
 800b9fa:	60fb      	str	r3, [r7, #12]
 800b9fc:	e00f      	b.n	800ba1e <aiPrintNetworkInfo+0x12a>
        aiPrintLayoutBuffer("   O", i, &report->outputs[i]);
 800b9fe:	687b      	ldr	r3, [r7, #4]
 800ba00:	6b99      	ldr	r1, [r3, #56]	; 0x38
 800ba02:	68fa      	ldr	r2, [r7, #12]
 800ba04:	4613      	mov	r3, r2
 800ba06:	005b      	lsls	r3, r3, #1
 800ba08:	4413      	add	r3, r2
 800ba0a:	00db      	lsls	r3, r3, #3
 800ba0c:	440b      	add	r3, r1
 800ba0e:	461a      	mov	r2, r3
 800ba10:	68f9      	ldr	r1, [r7, #12]
 800ba12:	4816      	ldr	r0, [pc, #88]	; (800ba6c <aiPrintNetworkInfo+0x178>)
 800ba14:	f7ff fd7a 	bl	800b50c <aiPrintLayoutBuffer>
    for (i=0; i<report->n_outputs; i++)
 800ba18:	68fb      	ldr	r3, [r7, #12]
 800ba1a:	3301      	adds	r3, #1
 800ba1c:	60fb      	str	r3, [r7, #12]
 800ba1e:	687b      	ldr	r3, [r7, #4]
 800ba20:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 800ba22:	461a      	mov	r2, r3
 800ba24:	68fb      	ldr	r3, [r7, #12]
 800ba26:	4293      	cmp	r3, r2
 800ba28:	dbe9      	blt.n	800b9fe <aiPrintNetworkInfo+0x10a>
}
 800ba2a:	bf00      	nop
 800ba2c:	3710      	adds	r7, #16
 800ba2e:	46bd      	mov	sp, r7
 800ba30:	bd80      	pop	{r7, pc}
 800ba32:	bf00      	nop
 800ba34:	08015488 	.word	0x08015488
 800ba38:	080154a4 	.word	0x080154a4
 800ba3c:	080154c0 	.word	0x080154c0
 800ba40:	080154dc 	.word	0x080154dc
 800ba44:	080154f8 	.word	0x080154f8
 800ba48:	08015514 	.word	0x08015514
 800ba4c:	0801553c 	.word	0x0801553c
 800ba50:	08015564 	.word	0x08015564
 800ba54:	08015578 	.word	0x08015578
 800ba58:	08015594 	.word	0x08015594
 800ba5c:	080155b8 	.word	0x080155b8
 800ba60:	080155dc 	.word	0x080155dc
 800ba64:	08015600 	.word	0x08015600
 800ba68:	08015620 	.word	0x08015620
 800ba6c:	08015628 	.word	0x08015628

0800ba70 <aiTestHeader>:
 * Test-related functions
 * -----------------------------------------------------------------------------
 */

void aiTestHeader(const char* tname, int major, int minor)
{
 800ba70:	b580      	push	{r7, lr}
 800ba72:	b084      	sub	sp, #16
 800ba74:	af00      	add	r7, sp, #0
 800ba76:	60f8      	str	r0, [r7, #12]
 800ba78:	60b9      	str	r1, [r7, #8]
 800ba7a:	607a      	str	r2, [r7, #4]
    printf("\r\n#\r\n");
 800ba7c:	480a      	ldr	r0, [pc, #40]	; (800baa8 <aiTestHeader+0x38>)
 800ba7e:	f004 ff13 	bl	80108a8 <puts>
    printf("# %s %d.%d\r\n", tname , major, minor);
 800ba82:	687b      	ldr	r3, [r7, #4]
 800ba84:	68ba      	ldr	r2, [r7, #8]
 800ba86:	68f9      	ldr	r1, [r7, #12]
 800ba88:	4808      	ldr	r0, [pc, #32]	; (800baac <aiTestHeader+0x3c>)
 800ba8a:	f004 fe99 	bl	80107c0 <iprintf>
    printf("#\r\n");
 800ba8e:	4808      	ldr	r0, [pc, #32]	; (800bab0 <aiTestHeader+0x40>)
 800ba90:	f004 ff0a 	bl	80108a8 <puts>

#if defined(__GNUC__)
    printf("Compiled with GCC %d.%d.%d\r\n", __GNUC__, __GNUC_MINOR__,
 800ba94:	2301      	movs	r3, #1
 800ba96:	2203      	movs	r2, #3
 800ba98:	2107      	movs	r1, #7
 800ba9a:	4806      	ldr	r0, [pc, #24]	; (800bab4 <aiTestHeader+0x44>)
 800ba9c:	f004 fe90 	bl	80107c0 <iprintf>
            __BUILD_NUMBER__
    );
#elif defined (__CC_ARM)
    printf("Compiled with MDK-ARM Keil %d\r\n", __ARMCC_VERSION);
#endif
}
 800baa0:	bf00      	nop
 800baa2:	3710      	adds	r7, #16
 800baa4:	46bd      	mov	sp, r7
 800baa6:	bd80      	pop	{r7, pc}
 800baa8:	08015630 	.word	0x08015630
 800baac:	08015638 	.word	0x08015638
 800bab0:	08015648 	.word	0x08015648
 800bab4:	0801564c 	.word	0x0801564c

0800bab8 <write_packet>:
static struct o_packet {
    uint8_t pw;
    uint8_t payload[_PACKET_PAYLOAD_IN_SIZE];
} o_packet;

static bool write_packet(void) {
 800bab8:	b580      	push	{r7, lr}
 800baba:	b082      	sub	sp, #8
 800babc:	af00      	add	r7, sp, #0
    HAL_StatusTypeDef status;

    status = HAL_UART_Transmit(&UartHandle, (uint8_t *)&o_packet,
 800babe:	f04f 33ff 	mov.w	r3, #4294967295
 800bac2:	2221      	movs	r2, #33	; 0x21
 800bac4:	4907      	ldr	r1, [pc, #28]	; (800bae4 <write_packet+0x2c>)
 800bac6:	4808      	ldr	r0, [pc, #32]	; (800bae8 <write_packet+0x30>)
 800bac8:	f7fd ff06 	bl	80098d8 <HAL_UART_Transmit>
 800bacc:	4603      	mov	r3, r0
 800bace:	71fb      	strb	r3, [r7, #7]
            _PACKET_PAYLOAD_IN_SIZE + 1,
            HAL_MAX_DELAY);

    return (status == HAL_OK);
 800bad0:	79fb      	ldrb	r3, [r7, #7]
 800bad2:	2b00      	cmp	r3, #0
 800bad4:	bf0c      	ite	eq
 800bad6:	2301      	moveq	r3, #1
 800bad8:	2300      	movne	r3, #0
 800bada:	b2db      	uxtb	r3, r3
}
 800badc:	4618      	mov	r0, r3
 800bade:	3708      	adds	r7, #8
 800bae0:	46bd      	mov	sp, r7
 800bae2:	bd80      	pop	{r7, pc}
 800bae4:	20000914 	.word	0x20000914
 800bae8:	20000bdc 	.word	0x20000bdc

0800baec <ioFlushWrite>:

void ioFlushWrite(void)
{
 800baec:	b580      	push	{r7, lr}
 800baee:	af00      	add	r7, sp, #0
    o_packet.pw |= (1 << 7); /* Indicate last packet */
 800baf0:	4b06      	ldr	r3, [pc, #24]	; (800bb0c <ioFlushWrite+0x20>)
 800baf2:	781b      	ldrb	r3, [r3, #0]
 800baf4:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800baf8:	b2da      	uxtb	r2, r3
 800bafa:	4b04      	ldr	r3, [pc, #16]	; (800bb0c <ioFlushWrite+0x20>)
 800bafc:	701a      	strb	r2, [r3, #0]
    write_packet();
 800bafe:	f7ff ffdb 	bl	800bab8 <write_packet>
    o_packet.pw = 0;
 800bb02:	4b02      	ldr	r3, [pc, #8]	; (800bb0c <ioFlushWrite+0x20>)
 800bb04:	2200      	movs	r2, #0
 800bb06:	701a      	strb	r2, [r3, #0]
}
 800bb08:	bf00      	nop
 800bb0a:	bd80      	pop	{r7, pc}
 800bb0c:	20000914 	.word	0x20000914

0800bb10 <write_callback>:

static bool write_callback(pb_ostream_t *stream, const uint8_t *buf,
        size_t count)
{
 800bb10:	b580      	push	{r7, lr}
 800bb12:	b086      	sub	sp, #24
 800bb14:	af00      	add	r7, sp, #0
 800bb16:	60f8      	str	r0, [r7, #12]
 800bb18:	60b9      	str	r1, [r7, #8]
 800bb1a:	607a      	str	r2, [r7, #4]
    bool res = true;
 800bb1c:	2301      	movs	r3, #1
 800bb1e:	75fb      	strb	r3, [r7, #23]
    uint8_t *pr = (uint8_t *)buf;
 800bb20:	68bb      	ldr	r3, [r7, #8]
 800bb22:	613b      	str	r3, [r7, #16]

    UNUSED(stream);

    while (count) {
 800bb24:	e025      	b.n	800bb72 <write_callback+0x62>
        for (; o_packet.pw < _PACKET_PAYLOAD_IN_SIZE && count; o_packet.pw++) {
            o_packet.payload[o_packet.pw] = *pr;
 800bb26:	4b17      	ldr	r3, [pc, #92]	; (800bb84 <write_callback+0x74>)
 800bb28:	781b      	ldrb	r3, [r3, #0]
 800bb2a:	4619      	mov	r1, r3
 800bb2c:	693b      	ldr	r3, [r7, #16]
 800bb2e:	781a      	ldrb	r2, [r3, #0]
 800bb30:	4b14      	ldr	r3, [pc, #80]	; (800bb84 <write_callback+0x74>)
 800bb32:	440b      	add	r3, r1
 800bb34:	705a      	strb	r2, [r3, #1]
            pr++;
 800bb36:	693b      	ldr	r3, [r7, #16]
 800bb38:	3301      	adds	r3, #1
 800bb3a:	613b      	str	r3, [r7, #16]
            count--;
 800bb3c:	687b      	ldr	r3, [r7, #4]
 800bb3e:	3b01      	subs	r3, #1
 800bb40:	607b      	str	r3, [r7, #4]
        for (; o_packet.pw < _PACKET_PAYLOAD_IN_SIZE && count; o_packet.pw++) {
 800bb42:	4b10      	ldr	r3, [pc, #64]	; (800bb84 <write_callback+0x74>)
 800bb44:	781b      	ldrb	r3, [r3, #0]
 800bb46:	3301      	adds	r3, #1
 800bb48:	b2da      	uxtb	r2, r3
 800bb4a:	4b0e      	ldr	r3, [pc, #56]	; (800bb84 <write_callback+0x74>)
 800bb4c:	701a      	strb	r2, [r3, #0]
 800bb4e:	4b0d      	ldr	r3, [pc, #52]	; (800bb84 <write_callback+0x74>)
 800bb50:	781b      	ldrb	r3, [r3, #0]
 800bb52:	2b1f      	cmp	r3, #31
 800bb54:	d802      	bhi.n	800bb5c <write_callback+0x4c>
 800bb56:	687b      	ldr	r3, [r7, #4]
 800bb58:	2b00      	cmp	r3, #0
 800bb5a:	d1e4      	bne.n	800bb26 <write_callback+0x16>
        }
        if (o_packet.pw == _PACKET_PAYLOAD_IN_SIZE) {
 800bb5c:	4b09      	ldr	r3, [pc, #36]	; (800bb84 <write_callback+0x74>)
 800bb5e:	781b      	ldrb	r3, [r3, #0]
 800bb60:	2b20      	cmp	r3, #32
 800bb62:	d106      	bne.n	800bb72 <write_callback+0x62>
                res = write_packet();
 800bb64:	f7ff ffa8 	bl	800bab8 <write_packet>
 800bb68:	4603      	mov	r3, r0
 800bb6a:	75fb      	strb	r3, [r7, #23]
                o_packet.pw = 0;
 800bb6c:	4b05      	ldr	r3, [pc, #20]	; (800bb84 <write_callback+0x74>)
 800bb6e:	2200      	movs	r2, #0
 800bb70:	701a      	strb	r2, [r3, #0]
    while (count) {
 800bb72:	687b      	ldr	r3, [r7, #4]
 800bb74:	2b00      	cmp	r3, #0
 800bb76:	d1ea      	bne.n	800bb4e <write_callback+0x3e>
        }
    }
    return res;
 800bb78:	7dfb      	ldrb	r3, [r7, #23]
}
 800bb7a:	4618      	mov	r0, r3
 800bb7c:	3718      	adds	r7, #24
 800bb7e:	46bd      	mov	sp, r7
 800bb80:	bd80      	pop	{r7, pc}
 800bb82:	bf00      	nop
 800bb84:	20000914 	.word	0x20000914

0800bb88 <read_packet>:
    uint8_t payload[_PACKET_PAYLOAD_OUT_SIZE];
} i_packet;

static int i_ridx = 0;

static bool read_packet(void) {
 800bb88:	b580      	push	{r7, lr}
 800bb8a:	b082      	sub	sp, #8
 800bb8c:	af00      	add	r7, sp, #0
    HAL_StatusTypeDef status;

    status = HAL_UART_Receive(&UartHandle, (uint8_t *)&i_packet,
 800bb8e:	f04f 33ff 	mov.w	r3, #4294967295
 800bb92:	2221      	movs	r2, #33	; 0x21
 800bb94:	4909      	ldr	r1, [pc, #36]	; (800bbbc <read_packet+0x34>)
 800bb96:	480a      	ldr	r0, [pc, #40]	; (800bbc0 <read_packet+0x38>)
 800bb98:	f7fd ff2f 	bl	80099fa <HAL_UART_Receive>
 800bb9c:	4603      	mov	r3, r0
 800bb9e:	71fb      	strb	r3, [r7, #7]
            _PACKET_PAYLOAD_OUT_SIZE + 1,
            HAL_MAX_DELAY);

    i_ridx = 0;
 800bba0:	4b08      	ldr	r3, [pc, #32]	; (800bbc4 <read_packet+0x3c>)
 800bba2:	2200      	movs	r2, #0
 800bba4:	601a      	str	r2, [r3, #0]

    return (status == HAL_OK);
 800bba6:	79fb      	ldrb	r3, [r7, #7]
 800bba8:	2b00      	cmp	r3, #0
 800bbaa:	bf0c      	ite	eq
 800bbac:	2301      	moveq	r3, #1
 800bbae:	2300      	movne	r3, #0
 800bbb0:	b2db      	uxtb	r3, r3
}
 800bbb2:	4618      	mov	r0, r3
 800bbb4:	3708      	adds	r7, #8
 800bbb6:	46bd      	mov	sp, r7
 800bbb8:	bd80      	pop	{r7, pc}
 800bbba:	bf00      	nop
 800bbbc:	20000938 	.word	0x20000938
 800bbc0:	20000bdc 	.word	0x20000bdc
 800bbc4:	2000095c 	.word	0x2000095c

0800bbc8 <ioFlushRead>:

void ioFlushRead(void)
{
 800bbc8:	b480      	push	{r7}
 800bbca:	af00      	add	r7, sp, #0
    i_packet.pr = 0xFF;
 800bbcc:	4b05      	ldr	r3, [pc, #20]	; (800bbe4 <ioFlushRead+0x1c>)
 800bbce:	22ff      	movs	r2, #255	; 0xff
 800bbd0:	701a      	strb	r2, [r3, #0]
    i_ridx = 0;
 800bbd2:	4b05      	ldr	r3, [pc, #20]	; (800bbe8 <ioFlushRead+0x20>)
 800bbd4:	2200      	movs	r2, #0
 800bbd6:	601a      	str	r2, [r3, #0]
}
 800bbd8:	bf00      	nop
 800bbda:	46bd      	mov	sp, r7
 800bbdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbe0:	4770      	bx	lr
 800bbe2:	bf00      	nop
 800bbe4:	20000938 	.word	0x20000938
 800bbe8:	2000095c 	.word	0x2000095c

0800bbec <read_callback>:

static bool read_callback(pb_istream_t *stream, uint8_t *buf, size_t count)
{
 800bbec:	b580      	push	{r7, lr}
 800bbee:	b088      	sub	sp, #32
 800bbf0:	af00      	add	r7, sp, #0
 800bbf2:	60f8      	str	r0, [r7, #12]
 800bbf4:	60b9      	str	r1, [r7, #8]
 800bbf6:	607a      	str	r2, [r7, #4]
    bool res = true;
 800bbf8:	2301      	movs	r3, #1
 800bbfa:	77fb      	strb	r3, [r7, #31]
    uint8_t *pw = (uint8_t *)buf;
 800bbfc:	68bb      	ldr	r3, [r7, #8]
 800bbfe:	61bb      	str	r3, [r7, #24]

    UNUSED(stream);

    if (count == 0)
 800bc00:	687b      	ldr	r3, [r7, #4]
 800bc02:	2b00      	cmp	r3, #0
 800bc04:	d101      	bne.n	800bc0a <read_callback+0x1e>
        return true;
 800bc06:	2301      	movs	r3, #1
 800bc08:	e045      	b.n	800bc96 <read_callback+0xaa>

    if (i_packet.pr == 0xFF)
 800bc0a:	4b25      	ldr	r3, [pc, #148]	; (800bca0 <read_callback+0xb4>)
 800bc0c:	781b      	ldrb	r3, [r3, #0]
 800bc0e:	2bff      	cmp	r3, #255	; 0xff
 800bc10:	d103      	bne.n	800bc1a <read_callback+0x2e>
        res = read_packet();
 800bc12:	f7ff ffb9 	bl	800bb88 <read_packet>
 800bc16:	4603      	mov	r3, r0
 800bc18:	77fb      	strb	r3, [r7, #31]

    if (res == false)
 800bc1a:	7ffb      	ldrb	r3, [r7, #31]
 800bc1c:	f083 0301 	eor.w	r3, r3, #1
 800bc20:	b2db      	uxtb	r3, r3
 800bc22:	2b00      	cmp	r3, #0
 800bc24:	d033      	beq.n	800bc8e <read_callback+0xa2>
        return res;
 800bc26:	7ffb      	ldrb	r3, [r7, #31]
 800bc28:	e035      	b.n	800bc96 <read_callback+0xaa>

    while (count) {
        for (; i_packet.pr > 0 && count; i_packet.pr--) {
            *pw = i_packet.payload[i_ridx];
 800bc2a:	4b1e      	ldr	r3, [pc, #120]	; (800bca4 <read_callback+0xb8>)
 800bc2c:	681b      	ldr	r3, [r3, #0]
 800bc2e:	4a1c      	ldr	r2, [pc, #112]	; (800bca0 <read_callback+0xb4>)
 800bc30:	4413      	add	r3, r2
 800bc32:	785a      	ldrb	r2, [r3, #1]
 800bc34:	69bb      	ldr	r3, [r7, #24]
 800bc36:	701a      	strb	r2, [r3, #0]
            pw++;
 800bc38:	69bb      	ldr	r3, [r7, #24]
 800bc3a:	3301      	adds	r3, #1
 800bc3c:	61bb      	str	r3, [r7, #24]
            count--;
 800bc3e:	687b      	ldr	r3, [r7, #4]
 800bc40:	3b01      	subs	r3, #1
 800bc42:	607b      	str	r3, [r7, #4]
            i_ridx++;
 800bc44:	4b17      	ldr	r3, [pc, #92]	; (800bca4 <read_callback+0xb8>)
 800bc46:	681b      	ldr	r3, [r3, #0]
 800bc48:	3301      	adds	r3, #1
 800bc4a:	4a16      	ldr	r2, [pc, #88]	; (800bca4 <read_callback+0xb8>)
 800bc4c:	6013      	str	r3, [r2, #0]
        for (; i_packet.pr > 0 && count; i_packet.pr--) {
 800bc4e:	4b14      	ldr	r3, [pc, #80]	; (800bca0 <read_callback+0xb4>)
 800bc50:	781b      	ldrb	r3, [r3, #0]
 800bc52:	3b01      	subs	r3, #1
 800bc54:	b2da      	uxtb	r2, r3
 800bc56:	4b12      	ldr	r3, [pc, #72]	; (800bca0 <read_callback+0xb4>)
 800bc58:	701a      	strb	r2, [r3, #0]
 800bc5a:	4b11      	ldr	r3, [pc, #68]	; (800bca0 <read_callback+0xb4>)
 800bc5c:	781b      	ldrb	r3, [r3, #0]
 800bc5e:	2b00      	cmp	r3, #0
 800bc60:	d002      	beq.n	800bc68 <read_callback+0x7c>
 800bc62:	687b      	ldr	r3, [r7, #4]
 800bc64:	2b00      	cmp	r3, #0
 800bc66:	d1e0      	bne.n	800bc2a <read_callback+0x3e>
        }
        if (count && i_packet.pr == 0) {
 800bc68:	687b      	ldr	r3, [r7, #4]
 800bc6a:	2b00      	cmp	r3, #0
 800bc6c:	d00f      	beq.n	800bc8e <read_callback+0xa2>
 800bc6e:	4b0c      	ldr	r3, [pc, #48]	; (800bca0 <read_callback+0xb4>)
 800bc70:	781b      	ldrb	r3, [r3, #0]
 800bc72:	2b00      	cmp	r3, #0
 800bc74:	d10b      	bne.n	800bc8e <read_callback+0xa2>
            uint8_t sync = 0xAA;
 800bc76:	23aa      	movs	r3, #170	; 0xaa
 800bc78:	75fb      	strb	r3, [r7, #23]
            HAL_UART_Transmit(&UartHandle, &sync, 1,
 800bc7a:	f107 0117 	add.w	r1, r7, #23
 800bc7e:	f04f 33ff 	mov.w	r3, #4294967295
 800bc82:	2201      	movs	r2, #1
 800bc84:	4808      	ldr	r0, [pc, #32]	; (800bca8 <read_callback+0xbc>)
 800bc86:	f7fd fe27 	bl	80098d8 <HAL_UART_Transmit>
                        HAL_MAX_DELAY);
            read_packet();
 800bc8a:	f7ff ff7d 	bl	800bb88 <read_packet>
    while (count) {
 800bc8e:	687b      	ldr	r3, [r7, #4]
 800bc90:	2b00      	cmp	r3, #0
 800bc92:	d1e2      	bne.n	800bc5a <read_callback+0x6e>
        }
    }

    return res;
 800bc94:	7ffb      	ldrb	r3, [r7, #31]
}
 800bc96:	4618      	mov	r0, r3
 800bc98:	3720      	adds	r7, #32
 800bc9a:	46bd      	mov	sp, r7
 800bc9c:	bd80      	pop	{r7, pc}
 800bc9e:	bf00      	nop
 800bca0:	20000938 	.word	0x20000938
 800bca4:	2000095c 	.word	0x2000095c
 800bca8:	20000bdc 	.word	0x20000bdc

0800bcac <pb_ostream_to_uart>:
}
#endif


pb_ostream_t pb_ostream_to_uart(int fd)
{
 800bcac:	b4b0      	push	{r4, r5, r7}
 800bcae:	b089      	sub	sp, #36	; 0x24
 800bcb0:	af00      	add	r7, sp, #0
 800bcb2:	6078      	str	r0, [r7, #4]
 800bcb4:	6039      	str	r1, [r7, #0]
    pb_ostream_t stream = {&write_callback, (void*)(intptr_t)fd, SIZE_MAX, 0};
 800bcb6:	f107 030c 	add.w	r3, r7, #12
 800bcba:	2200      	movs	r2, #0
 800bcbc:	601a      	str	r2, [r3, #0]
 800bcbe:	605a      	str	r2, [r3, #4]
 800bcc0:	609a      	str	r2, [r3, #8]
 800bcc2:	60da      	str	r2, [r3, #12]
 800bcc4:	611a      	str	r2, [r3, #16]
 800bcc6:	4b0a      	ldr	r3, [pc, #40]	; (800bcf0 <pb_ostream_to_uart+0x44>)
 800bcc8:	60fb      	str	r3, [r7, #12]
 800bcca:	683b      	ldr	r3, [r7, #0]
 800bccc:	613b      	str	r3, [r7, #16]
 800bcce:	f04f 33ff 	mov.w	r3, #4294967295
 800bcd2:	617b      	str	r3, [r7, #20]
    return stream;
 800bcd4:	687b      	ldr	r3, [r7, #4]
 800bcd6:	461d      	mov	r5, r3
 800bcd8:	f107 040c 	add.w	r4, r7, #12
 800bcdc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bcde:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800bce0:	6823      	ldr	r3, [r4, #0]
 800bce2:	602b      	str	r3, [r5, #0]
}
 800bce4:	6878      	ldr	r0, [r7, #4]
 800bce6:	3724      	adds	r7, #36	; 0x24
 800bce8:	46bd      	mov	sp, r7
 800bcea:	bcb0      	pop	{r4, r5, r7}
 800bcec:	4770      	bx	lr
 800bcee:	bf00      	nop
 800bcf0:	0800bb11 	.word	0x0800bb11

0800bcf4 <pb_istream_from_uart>:

pb_istream_t pb_istream_from_uart(int fd)
{
 800bcf4:	b490      	push	{r4, r7}
 800bcf6:	b086      	sub	sp, #24
 800bcf8:	af00      	add	r7, sp, #0
 800bcfa:	6078      	str	r0, [r7, #4]
 800bcfc:	6039      	str	r1, [r7, #0]
    pb_istream_t stream = {&read_callback, (void*)(intptr_t)fd, SIZE_MAX};
 800bcfe:	f107 0308 	add.w	r3, r7, #8
 800bd02:	2200      	movs	r2, #0
 800bd04:	601a      	str	r2, [r3, #0]
 800bd06:	605a      	str	r2, [r3, #4]
 800bd08:	609a      	str	r2, [r3, #8]
 800bd0a:	60da      	str	r2, [r3, #12]
 800bd0c:	4b09      	ldr	r3, [pc, #36]	; (800bd34 <pb_istream_from_uart+0x40>)
 800bd0e:	60bb      	str	r3, [r7, #8]
 800bd10:	683b      	ldr	r3, [r7, #0]
 800bd12:	60fb      	str	r3, [r7, #12]
 800bd14:	f04f 33ff 	mov.w	r3, #4294967295
 800bd18:	613b      	str	r3, [r7, #16]
    return stream;
 800bd1a:	687b      	ldr	r3, [r7, #4]
 800bd1c:	461c      	mov	r4, r3
 800bd1e:	f107 0308 	add.w	r3, r7, #8
 800bd22:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800bd24:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 800bd28:	6878      	ldr	r0, [r7, #4]
 800bd2a:	3718      	adds	r7, #24
 800bd2c:	46bd      	mov	sp, r7
 800bd2e:	bc90      	pop	{r4, r7}
 800bd30:	4770      	bx	lr
 800bd32:	bf00      	nop
 800bd34:	0800bbed 	.word	0x0800bbed

0800bd38 <aiOnExecNode_cb>:
DEF_DATA_OUT;

#ifdef HAS_INSPECTOR
static void aiOnExecNode_cb(const ai_handle cookie,
        const ai_inspect_node_info* node_info,
        ai_node_exec_stage stage) {
 800bd38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd3c:	b08a      	sub	sp, #40	; 0x28
 800bd3e:	af02      	add	r7, sp, #8
 800bd40:	60f8      	str	r0, [r7, #12]
 800bd42:	60b9      	str	r1, [r7, #8]
 800bd44:	4613      	mov	r3, r2
 800bd46:	71fb      	strb	r3, [r7, #7]

    struct ai_network_exec_ctx *ctx = (struct ai_network_exec_ctx*)cookie;
 800bd48:	68fb      	ldr	r3, [r7, #12]
 800bd4a:	61bb      	str	r3, [r7, #24]

    if (stage == AI_NODE_EXEC_PRE_FORWARD_STAGE) {
 800bd4c:	79fb      	ldrb	r3, [r7, #7]
 800bd4e:	2b00      	cmp	r3, #0
 800bd50:	d117      	bne.n	800bd82 <aiOnExecNode_cb+0x4a>
        ctx->n_cb_in++;
 800bd52:	69bb      	ldr	r3, [r7, #24]
 800bd54:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
 800bd58:	1c5a      	adds	r2, r3, #1
 800bd5a:	69bb      	ldr	r3, [r7, #24]
 800bd5c:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
        ctx->tcom += dwtGetCycles();
 800bd60:	f7ff f918 	bl	800af94 <dwtGetCycles>
 800bd64:	69bb      	ldr	r3, [r7, #24]
 800bd66:	e9d3 123a 	ldrd	r1, r2, [r3, #232]	; 0xe8
 800bd6a:	4605      	mov	r5, r0
 800bd6c:	f04f 0600 	mov.w	r6, #0
 800bd70:	186b      	adds	r3, r5, r1
 800bd72:	eb46 0402 	adc.w	r4, r6, r2
 800bd76:	69ba      	ldr	r2, [r7, #24]
 800bd78:	e9c2 343a 	strd	r3, r4, [r2, #232]	; 0xe8
        dwtReset();
 800bd7c:	f7ff f8fe 	bl	800af7c <dwtReset>
                type | node_info->type,
                node_info->id,
                dwtCyclesToFloatMs(dur),
                &node_info->out[0]);
    }
}
 800bd80:	e058      	b.n	800be34 <aiOnExecNode_cb+0xfc>
    } else if (stage == AI_NODE_EXEC_POST_FORWARD_STAGE) {
 800bd82:	79fb      	ldrb	r3, [r7, #7]
 800bd84:	2b01      	cmp	r3, #1
 800bd86:	d155      	bne.n	800be34 <aiOnExecNode_cb+0xfc>
        uint32_t dur = dwtGetCycles();
 800bd88:	f7ff f904 	bl	800af94 <dwtGetCycles>
 800bd8c:	6178      	str	r0, [r7, #20]
        dwtReset();
 800bd8e:	f7ff f8f5 	bl	800af7c <dwtReset>
        ctx->tnodes += dur;
 800bd92:	69bb      	ldr	r3, [r7, #24]
 800bd94:	e9d3 123c 	ldrd	r1, r2, [r3, #240]	; 0xf0
 800bd98:	697b      	ldr	r3, [r7, #20]
 800bd9a:	461d      	mov	r5, r3
 800bd9c:	f04f 0600 	mov.w	r6, #0
 800bda0:	186b      	adds	r3, r5, r1
 800bda2:	eb46 0402 	adc.w	r4, r6, r2
 800bda6:	69ba      	ldr	r2, [r7, #24]
 800bda8:	e9c2 343c 	strd	r3, r4, [r2, #240]	; 0xf0
        ctx->n_cb_out++;
 800bdac:	69bb      	ldr	r3, [r7, #24]
 800bdae:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800bdb2:	1c5a      	adds	r2, r3, #1
 800bdb4:	69bb      	ldr	r3, [r7, #24]
 800bdb6:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
        if (ctx->n_cb_out == ctx->report.n_nodes)
 800bdba:	69bb      	ldr	r3, [r7, #24]
 800bdbc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 800bdc0:	69bb      	ldr	r3, [r7, #24]
 800bdc2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800bdc4:	429a      	cmp	r2, r3
 800bdc6:	d102      	bne.n	800bdce <aiOnExecNode_cb+0x96>
            type = EnumLayerType_LAYER_TYPE_INTERNAL_LAST;
 800bdc8:	2302      	movs	r3, #2
 800bdca:	61fb      	str	r3, [r7, #28]
 800bdcc:	e001      	b.n	800bdd2 <aiOnExecNode_cb+0x9a>
            type = EnumLayerType_LAYER_TYPE_INTERNAL;
 800bdce:	2301      	movs	r3, #1
 800bdd0:	61fb      	str	r3, [r7, #28]
        type = type << 16;
 800bdd2:	69fb      	ldr	r3, [r7, #28]
 800bdd4:	041b      	lsls	r3, r3, #16
 800bdd6:	61fb      	str	r3, [r7, #28]
        if (ctx->no_data)
 800bdd8:	69bb      	ldr	r3, [r7, #24]
 800bdda:	f893 30e0 	ldrb.w	r3, [r3, #224]	; 0xe0
 800bdde:	2b00      	cmp	r3, #0
 800bde0:	d003      	beq.n	800bdea <aiOnExecNode_cb+0xb2>
            type |= PB_BUFFER_TYPE_SEND_WITHOUT_DATA;
 800bde2:	69fb      	ldr	r3, [r7, #28]
 800bde4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800bde8:	61fb      	str	r3, [r7, #28]
        aiPbMgrSendAiBuffer3(ctx->creq, ctx->cresp, EnumState_S_PROCESSING,
 800bdea:	69bb      	ldr	r3, [r7, #24]
 800bdec:	f8d3 50d8 	ldr.w	r5, [r3, #216]	; 0xd8
 800bdf0:	69bb      	ldr	r3, [r7, #24]
 800bdf2:	f8d3 60dc 	ldr.w	r6, [r3, #220]	; 0xdc
                type | node_info->type,
 800bdf6:	68bb      	ldr	r3, [r7, #8]
 800bdf8:	881b      	ldrh	r3, [r3, #0]
 800bdfa:	461a      	mov	r2, r3
        aiPbMgrSendAiBuffer3(ctx->creq, ctx->cresp, EnumState_S_PROCESSING,
 800bdfc:	69fb      	ldr	r3, [r7, #28]
 800bdfe:	ea42 0803 	orr.w	r8, r2, r3
                node_info->id,
 800be02:	68bb      	ldr	r3, [r7, #8]
 800be04:	885b      	ldrh	r3, [r3, #2]
        aiPbMgrSendAiBuffer3(ctx->creq, ctx->cresp, EnumState_S_PROCESSING,
 800be06:	603b      	str	r3, [r7, #0]
 800be08:	697b      	ldr	r3, [r7, #20]
 800be0a:	f04f 0400 	mov.w	r4, #0
 800be0e:	4618      	mov	r0, r3
 800be10:	4621      	mov	r1, r4
 800be12:	f7ff f8d3 	bl	800afbc <dwtCyclesToFloatMs>
 800be16:	eef0 7a40 	vmov.f32	s15, s0
                &node_info->out[0]);
 800be1a:	68bb      	ldr	r3, [r7, #8]
 800be1c:	695b      	ldr	r3, [r3, #20]
        aiPbMgrSendAiBuffer3(ctx->creq, ctx->cresp, EnumState_S_PROCESSING,
 800be1e:	9301      	str	r3, [sp, #4]
 800be20:	683b      	ldr	r3, [r7, #0]
 800be22:	9300      	str	r3, [sp, #0]
 800be24:	eeb0 0a67 	vmov.f32	s0, s15
 800be28:	4643      	mov	r3, r8
 800be2a:	2202      	movs	r2, #2
 800be2c:	4631      	mov	r1, r6
 800be2e:	4628      	mov	r0, r5
 800be30:	f7fe fdf0 	bl	800aa14 <aiPbMgrSendAiBuffer3>
}
 800be34:	bf00      	nop
 800be36:	3720      	adds	r7, #32
 800be38:	46bd      	mov	sp, r7
 800be3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800be40 <aiExecCtx>:
#endif


static struct ai_network_exec_ctx *aiExecCtx(const char *nn_name, int pos)
{
 800be40:	b590      	push	{r4, r7, lr}
 800be42:	b085      	sub	sp, #20
 800be44:	af00      	add	r7, sp, #0
 800be46:	6078      	str	r0, [r7, #4]
 800be48:	6039      	str	r1, [r7, #0]
    struct ai_network_exec_ctx *cur = NULL;
 800be4a:	2300      	movs	r3, #0
 800be4c:	60fb      	str	r3, [r7, #12]

    if (!nn_name)
 800be4e:	687b      	ldr	r3, [r7, #4]
 800be50:	2b00      	cmp	r3, #0
 800be52:	d101      	bne.n	800be58 <aiExecCtx+0x18>
        return NULL;
 800be54:	2300      	movs	r3, #0
 800be56:	e048      	b.n	800beea <aiExecCtx+0xaa>

    if (!nn_name[0]) {
 800be58:	687b      	ldr	r3, [r7, #4]
 800be5a:	781b      	ldrb	r3, [r3, #0]
 800be5c:	2b00      	cmp	r3, #0
 800be5e:	d10e      	bne.n	800be7e <aiExecCtx+0x3e>
        if ((pos >= 0) && (pos < AI_MNETWORK_NUMBER))
 800be60:	683b      	ldr	r3, [r7, #0]
 800be62:	2b00      	cmp	r3, #0
 800be64:	db40      	blt.n	800bee8 <aiExecCtx+0xa8>
 800be66:	683b      	ldr	r3, [r7, #0]
 800be68:	2b00      	cmp	r3, #0
 800be6a:	dc3d      	bgt.n	800bee8 <aiExecCtx+0xa8>
            cur = &net_exec_ctx[pos];
 800be6c:	683a      	ldr	r2, [r7, #0]
 800be6e:	4613      	mov	r3, r2
 800be70:	015b      	lsls	r3, r3, #5
 800be72:	1a9b      	subs	r3, r3, r2
 800be74:	00db      	lsls	r3, r3, #3
 800be76:	4a1f      	ldr	r2, [pc, #124]	; (800bef4 <aiExecCtx+0xb4>)
 800be78:	4413      	add	r3, r2
 800be7a:	60fb      	str	r3, [r7, #12]
 800be7c:	e034      	b.n	800bee8 <aiExecCtx+0xa8>
    } else {
        int idx;
        for (idx=0; idx < AI_MNETWORK_NUMBER; idx++) {
 800be7e:	2300      	movs	r3, #0
 800be80:	60bb      	str	r3, [r7, #8]
 800be82:	e02c      	b.n	800bede <aiExecCtx+0x9e>
            cur = &net_exec_ctx[idx];
 800be84:	68ba      	ldr	r2, [r7, #8]
 800be86:	4613      	mov	r3, r2
 800be88:	015b      	lsls	r3, r3, #5
 800be8a:	1a9b      	subs	r3, r3, r2
 800be8c:	00db      	lsls	r3, r3, #3
 800be8e:	4a19      	ldr	r2, [pc, #100]	; (800bef4 <aiExecCtx+0xb4>)
 800be90:	4413      	add	r3, r2
 800be92:	60fb      	str	r3, [r7, #12]
            if (cur->network &&
 800be94:	68fb      	ldr	r3, [r7, #12]
 800be96:	681b      	ldr	r3, [r3, #0]
 800be98:	2b00      	cmp	r3, #0
 800be9a:	d01b      	beq.n	800bed4 <aiExecCtx+0x94>
                    (strlen(cur->report.model_name) == strlen(nn_name)) &&
 800be9c:	68fb      	ldr	r3, [r7, #12]
 800be9e:	685b      	ldr	r3, [r3, #4]
 800bea0:	4618      	mov	r0, r3
 800bea2:	f7fa ffe0 	bl	8006e66 <strlen>
 800bea6:	4604      	mov	r4, r0
 800bea8:	6878      	ldr	r0, [r7, #4]
 800beaa:	f7fa ffdc 	bl	8006e66 <strlen>
 800beae:	4603      	mov	r3, r0
            if (cur->network &&
 800beb0:	429c      	cmp	r4, r3
 800beb2:	d10f      	bne.n	800bed4 <aiExecCtx+0x94>
                    (strncmp(cur->report.model_name, nn_name,
 800beb4:	68fb      	ldr	r3, [r7, #12]
 800beb6:	685c      	ldr	r4, [r3, #4]
 800beb8:	68fb      	ldr	r3, [r7, #12]
 800beba:	685b      	ldr	r3, [r3, #4]
 800bebc:	4618      	mov	r0, r3
 800bebe:	f7fa ffd2 	bl	8006e66 <strlen>
 800bec2:	4603      	mov	r3, r0
 800bec4:	461a      	mov	r2, r3
 800bec6:	6879      	ldr	r1, [r7, #4]
 800bec8:	4620      	mov	r0, r4
 800beca:	f004 fd0d 	bl	80108e8 <strncmp>
 800bece:	4603      	mov	r3, r0
                    (strlen(cur->report.model_name) == strlen(nn_name)) &&
 800bed0:	2b00      	cmp	r3, #0
 800bed2:	d008      	beq.n	800bee6 <aiExecCtx+0xa6>
                            strlen(cur->report.model_name)) == 0)) {
                break;
            }
            cur = NULL;
 800bed4:	2300      	movs	r3, #0
 800bed6:	60fb      	str	r3, [r7, #12]
        for (idx=0; idx < AI_MNETWORK_NUMBER; idx++) {
 800bed8:	68bb      	ldr	r3, [r7, #8]
 800beda:	3301      	adds	r3, #1
 800bedc:	60bb      	str	r3, [r7, #8]
 800bede:	68bb      	ldr	r3, [r7, #8]
 800bee0:	2b00      	cmp	r3, #0
 800bee2:	ddcf      	ble.n	800be84 <aiExecCtx+0x44>
 800bee4:	e000      	b.n	800bee8 <aiExecCtx+0xa8>
                break;
 800bee6:	bf00      	nop
        }
    }
    return cur;
 800bee8:	68fb      	ldr	r3, [r7, #12]
}
 800beea:	4618      	mov	r0, r3
 800beec:	3714      	adds	r7, #20
 800beee:	46bd      	mov	sp, r7
 800bef0:	bd90      	pop	{r4, r7, pc}
 800bef2:	bf00      	nop
 800bef4:	20000960 	.word	0x20000960

0800bef8 <aiSetPbContext>:

__STATIC_INLINE
void aiSetPbContext(struct ai_network_exec_ctx *ctx,
        const reqMsg *creq, respMsg *cresp)
{
 800bef8:	b480      	push	{r7}
 800befa:	b085      	sub	sp, #20
 800befc:	af00      	add	r7, sp, #0
 800befe:	60f8      	str	r0, [r7, #12]
 800bf00:	60b9      	str	r1, [r7, #8]
 800bf02:	607a      	str	r2, [r7, #4]
#ifdef HAS_INSPECTOR
    if (!ctx)
 800bf04:	68fb      	ldr	r3, [r7, #12]
 800bf06:	2b00      	cmp	r3, #0
 800bf08:	d008      	beq.n	800bf1c <aiSetPbContext+0x24>
        return;

    ctx->creq = creq;
 800bf0a:	68fb      	ldr	r3, [r7, #12]
 800bf0c:	68ba      	ldr	r2, [r7, #8]
 800bf0e:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
    ctx->cresp = cresp;
 800bf12:	68fb      	ldr	r3, [r7, #12]
 800bf14:	687a      	ldr	r2, [r7, #4]
 800bf16:	f8c3 20dc 	str.w	r2, [r3, #220]	; 0xdc
 800bf1a:	e000      	b.n	800bf1e <aiSetPbContext+0x26>
        return;
 800bf1c:	bf00      	nop
#endif
}
 800bf1e:	3714      	adds	r7, #20
 800bf20:	46bd      	mov	sp, r7
 800bf22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf26:	4770      	bx	lr

0800bf28 <aiBootstrap>:

static int aiBootstrap(const char *nn_name, const int idx)
{
 800bf28:	b580      	push	{r7, lr}
 800bf2a:	b092      	sub	sp, #72	; 0x48
 800bf2c:	af00      	add	r7, sp, #0
 800bf2e:	6078      	str	r0, [r7, #4]
 800bf30:	6039      	str	r1, [r7, #0]
    ai_error err;
    ai_u32 ext_addr, sz;

    /* Creating the network */
    printf("Creating the network \"%s\"..\r\n", nn_name);
 800bf32:	6879      	ldr	r1, [r7, #4]
 800bf34:	4879      	ldr	r0, [pc, #484]	; (800c11c <aiBootstrap+0x1f4>)
 800bf36:	f004 fc43 	bl	80107c0 <iprintf>
    err = ai_mnetwork_create(nn_name, &net_exec_ctx[idx].network, NULL);
 800bf3a:	683a      	ldr	r2, [r7, #0]
 800bf3c:	4613      	mov	r3, r2
 800bf3e:	015b      	lsls	r3, r3, #5
 800bf40:	1a9b      	subs	r3, r3, r2
 800bf42:	00db      	lsls	r3, r3, #3
 800bf44:	4a76      	ldr	r2, [pc, #472]	; (800c120 <aiBootstrap+0x1f8>)
 800bf46:	4413      	add	r3, r2
 800bf48:	2200      	movs	r2, #0
 800bf4a:	4619      	mov	r1, r3
 800bf4c:	6878      	ldr	r0, [r7, #4]
 800bf4e:	f000 fdf1 	bl	800cb34 <ai_mnetwork_create>
 800bf52:	4603      	mov	r3, r0
 800bf54:	647b      	str	r3, [r7, #68]	; 0x44
    if (err.type) {
 800bf56:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 800bf5a:	2b00      	cmp	r3, #0
 800bf5c:	d006      	beq.n	800bf6c <aiBootstrap+0x44>
        aiLogErr(err, "ai_mnetwork_create");
 800bf5e:	4971      	ldr	r1, [pc, #452]	; (800c124 <aiBootstrap+0x1fc>)
 800bf60:	6c78      	ldr	r0, [r7, #68]	; 0x44
 800bf62:	f7ff fa99 	bl	800b498 <aiLogErr>
        return -1;
 800bf66:	f04f 33ff 	mov.w	r3, #4294967295
 800bf6a:	e0d2      	b.n	800c112 <aiBootstrap+0x1ea>
    }

    /* Initialize the instance */
    printf("Initializing the network\r\n");
 800bf6c:	486e      	ldr	r0, [pc, #440]	; (800c128 <aiBootstrap+0x200>)
 800bf6e:	f004 fc9b 	bl	80108a8 <puts>
#if !defined(AI_MNETWORK_DATA_ACTIVATIONS_INT_SIZE)
    const ai_network_params params = {
            AI_BUFFER_NULL(NULL),
            AI_BUFFER_NULL(activations) };
#else
    ai_network_params params = {
 800bf72:	f107 030c 	add.w	r3, r7, #12
 800bf76:	2230      	movs	r2, #48	; 0x30
 800bf78:	2100      	movs	r1, #0
 800bf7a:	4618      	mov	r0, r3
 800bf7c:	f003 ff36 	bl	800fdec <memset>
 800bf80:	4b6a      	ldr	r3, [pc, #424]	; (800c12c <aiBootstrap+0x204>)
 800bf82:	60fb      	str	r3, [r7, #12]
 800bf84:	4b69      	ldr	r3, [pc, #420]	; (800c12c <aiBootstrap+0x204>)
 800bf86:	627b      	str	r3, [r7, #36]	; 0x24
                AI_BUFFER_NULL(NULL),
                AI_BUFFER_NULL(NULL) };

    if (ai_mnetwork_get_ext_data_activations(net_exec_ctx[idx].network, &ext_addr, &sz) == 0) {
 800bf88:	4965      	ldr	r1, [pc, #404]	; (800c120 <aiBootstrap+0x1f8>)
 800bf8a:	683a      	ldr	r2, [r7, #0]
 800bf8c:	4613      	mov	r3, r2
 800bf8e:	015b      	lsls	r3, r3, #5
 800bf90:	1a9b      	subs	r3, r3, r2
 800bf92:	00db      	lsls	r3, r3, #3
 800bf94:	440b      	add	r3, r1
 800bf96:	681b      	ldr	r3, [r3, #0]
 800bf98:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800bf9c:	f107 0140 	add.w	r1, r7, #64	; 0x40
 800bfa0:	4618      	mov	r0, r3
 800bfa2:	f000 ff29 	bl	800cdf8 <ai_mnetwork_get_ext_data_activations>
 800bfa6:	4603      	mov	r3, r0
 800bfa8:	2b00      	cmp	r3, #0
 800bfaa:	d12c      	bne.n	800c006 <aiBootstrap+0xde>
    	if (ext_addr == 0xFFFFFFFF) {
 800bfac:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800bfae:	f1b3 3fff 	cmp.w	r3, #4294967295
 800bfb2:	d126      	bne.n	800c002 <aiBootstrap+0xda>
    		params.activations.data = (ai_handle)activations;
 800bfb4:	4b5e      	ldr	r3, [pc, #376]	; (800c130 <aiBootstrap+0x208>)
 800bfb6:	637b      	str	r3, [r7, #52]	; 0x34
    		ext_addr = (ai_u32)activations;
 800bfb8:	4b5d      	ldr	r3, [pc, #372]	; (800c130 <aiBootstrap+0x208>)
 800bfba:	643b      	str	r3, [r7, #64]	; 0x40
    		sz = (ai_u32)AI_BUFFER_SIZE(&net_exec_ctx[idx].report.activations);
 800bfbc:	4958      	ldr	r1, [pc, #352]	; (800c120 <aiBootstrap+0x1f8>)
 800bfbe:	683a      	ldr	r2, [r7, #0]
 800bfc0:	4613      	mov	r3, r2
 800bfc2:	015b      	lsls	r3, r3, #5
 800bfc4:	1a9b      	subs	r3, r3, r2
 800bfc6:	00db      	lsls	r3, r3, #3
 800bfc8:	440b      	add	r3, r1
 800bfca:	3348      	adds	r3, #72	; 0x48
 800bfcc:	881b      	ldrh	r3, [r3, #0]
 800bfce:	4618      	mov	r0, r3
 800bfd0:	4953      	ldr	r1, [pc, #332]	; (800c120 <aiBootstrap+0x1f8>)
 800bfd2:	683a      	ldr	r2, [r7, #0]
 800bfd4:	4613      	mov	r3, r2
 800bfd6:	015b      	lsls	r3, r3, #5
 800bfd8:	1a9b      	subs	r3, r3, r2
 800bfda:	00db      	lsls	r3, r3, #3
 800bfdc:	440b      	add	r3, r1
 800bfde:	3346      	adds	r3, #70	; 0x46
 800bfe0:	881b      	ldrh	r3, [r3, #0]
 800bfe2:	fb03 f300 	mul.w	r3, r3, r0
 800bfe6:	4618      	mov	r0, r3
 800bfe8:	494d      	ldr	r1, [pc, #308]	; (800c120 <aiBootstrap+0x1f8>)
 800bfea:	683a      	ldr	r2, [r7, #0]
 800bfec:	4613      	mov	r3, r2
 800bfee:	015b      	lsls	r3, r3, #5
 800bff0:	1a9b      	subs	r3, r3, r2
 800bff2:	00db      	lsls	r3, r3, #3
 800bff4:	440b      	add	r3, r1
 800bff6:	334c      	adds	r3, #76	; 0x4c
 800bff8:	681b      	ldr	r3, [r3, #0]
 800bffa:	fb03 f300 	mul.w	r3, r3, r0
 800bffe:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c000:	e001      	b.n	800c006 <aiBootstrap+0xde>
    	}
    	else {
    		params.activations.data = (ai_handle)ext_addr;
 800c002:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800c004:	637b      	str	r3, [r7, #52]	; 0x34
    	}
    }
#endif

    if (!ai_mnetwork_init(net_exec_ctx[idx].network, &params)) {
 800c006:	4946      	ldr	r1, [pc, #280]	; (800c120 <aiBootstrap+0x1f8>)
 800c008:	683a      	ldr	r2, [r7, #0]
 800c00a:	4613      	mov	r3, r2
 800c00c:	015b      	lsls	r3, r3, #5
 800c00e:	1a9b      	subs	r3, r3, r2
 800c010:	00db      	lsls	r3, r3, #3
 800c012:	440b      	add	r3, r1
 800c014:	681b      	ldr	r3, [r3, #0]
 800c016:	f107 020c 	add.w	r2, r7, #12
 800c01a:	4611      	mov	r1, r2
 800c01c:	4618      	mov	r0, r3
 800c01e:	f000 fe52 	bl	800ccc6 <ai_mnetwork_init>
 800c022:	4603      	mov	r3, r0
 800c024:	f083 0301 	eor.w	r3, r3, #1
 800c028:	b2db      	uxtb	r3, r3
 800c02a:	2b00      	cmp	r3, #0
 800c02c:	d027      	beq.n	800c07e <aiBootstrap+0x156>
        err = ai_mnetwork_get_error(net_exec_ctx[idx].network);
 800c02e:	493c      	ldr	r1, [pc, #240]	; (800c120 <aiBootstrap+0x1f8>)
 800c030:	683a      	ldr	r2, [r7, #0]
 800c032:	4613      	mov	r3, r2
 800c034:	015b      	lsls	r3, r3, #5
 800c036:	1a9b      	subs	r3, r3, r2
 800c038:	00db      	lsls	r3, r3, #3
 800c03a:	440b      	add	r3, r1
 800c03c:	681b      	ldr	r3, [r3, #0]
 800c03e:	4618      	mov	r0, r3
 800c040:	f000 fe21 	bl	800cc86 <ai_mnetwork_get_error>
 800c044:	4603      	mov	r3, r0
 800c046:	647b      	str	r3, [r7, #68]	; 0x44
        aiLogErr(err, "ai_mnetwork_init");
 800c048:	493a      	ldr	r1, [pc, #232]	; (800c134 <aiBootstrap+0x20c>)
 800c04a:	6c78      	ldr	r0, [r7, #68]	; 0x44
 800c04c:	f7ff fa24 	bl	800b498 <aiLogErr>
        ai_mnetwork_destroy(net_exec_ctx[idx].network);
 800c050:	4933      	ldr	r1, [pc, #204]	; (800c120 <aiBootstrap+0x1f8>)
 800c052:	683a      	ldr	r2, [r7, #0]
 800c054:	4613      	mov	r3, r2
 800c056:	015b      	lsls	r3, r3, #5
 800c058:	1a9b      	subs	r3, r3, r2
 800c05a:	00db      	lsls	r3, r3, #3
 800c05c:	440b      	add	r3, r1
 800c05e:	681b      	ldr	r3, [r3, #0]
 800c060:	4618      	mov	r0, r3
 800c062:	f000 fdd3 	bl	800cc0c <ai_mnetwork_destroy>
        net_exec_ctx[idx].network = AI_HANDLE_NULL;
 800c066:	492e      	ldr	r1, [pc, #184]	; (800c120 <aiBootstrap+0x1f8>)
 800c068:	683a      	ldr	r2, [r7, #0]
 800c06a:	4613      	mov	r3, r2
 800c06c:	015b      	lsls	r3, r3, #5
 800c06e:	1a9b      	subs	r3, r3, r2
 800c070:	00db      	lsls	r3, r3, #3
 800c072:	440b      	add	r3, r1
 800c074:	2200      	movs	r2, #0
 800c076:	601a      	str	r2, [r3, #0]
        return -4;
 800c078:	f06f 0303 	mvn.w	r3, #3
 800c07c:	e049      	b.n	800c112 <aiBootstrap+0x1ea>
    }

    /* Query the created network to get relevant info from it */
    if (ai_mnetwork_get_info(net_exec_ctx[idx].network,
 800c07e:	4928      	ldr	r1, [pc, #160]	; (800c120 <aiBootstrap+0x1f8>)
 800c080:	683a      	ldr	r2, [r7, #0]
 800c082:	4613      	mov	r3, r2
 800c084:	015b      	lsls	r3, r3, #5
 800c086:	1a9b      	subs	r3, r3, r2
 800c088:	00db      	lsls	r3, r3, #3
 800c08a:	440b      	add	r3, r1
 800c08c:	6818      	ldr	r0, [r3, #0]
 800c08e:	683a      	ldr	r2, [r7, #0]
 800c090:	4613      	mov	r3, r2
 800c092:	015b      	lsls	r3, r3, #5
 800c094:	1a9b      	subs	r3, r3, r2
 800c096:	00db      	lsls	r3, r3, #3
 800c098:	4a21      	ldr	r2, [pc, #132]	; (800c120 <aiBootstrap+0x1f8>)
 800c09a:	4413      	add	r3, r2
 800c09c:	3304      	adds	r3, #4
 800c09e:	4619      	mov	r1, r3
 800c0a0:	f000 fdd6 	bl	800cc50 <ai_mnetwork_get_info>
 800c0a4:	4603      	mov	r3, r0
 800c0a6:	2b00      	cmp	r3, #0
 800c0a8:	d00c      	beq.n	800c0c4 <aiBootstrap+0x19c>
            &net_exec_ctx[idx].report)) {
        aiPrintNetworkInfo(&net_exec_ctx[idx].report);
 800c0aa:	683a      	ldr	r2, [r7, #0]
 800c0ac:	4613      	mov	r3, r2
 800c0ae:	015b      	lsls	r3, r3, #5
 800c0b0:	1a9b      	subs	r3, r3, r2
 800c0b2:	00db      	lsls	r3, r3, #3
 800c0b4:	4a1a      	ldr	r2, [pc, #104]	; (800c120 <aiBootstrap+0x1f8>)
 800c0b6:	4413      	add	r3, r2
 800c0b8:	3304      	adds	r3, #4
 800c0ba:	4618      	mov	r0, r3
 800c0bc:	f7ff fc1a 	bl	800b8f4 <aiPrintNetworkInfo>
        ai_mnetwork_destroy(net_exec_ctx[idx].network);
        net_exec_ctx[idx].network = AI_HANDLE_NULL;
        return -2;
    }

    return 0;
 800c0c0:	2300      	movs	r3, #0
 800c0c2:	e026      	b.n	800c112 <aiBootstrap+0x1ea>
        err = ai_mnetwork_get_error(net_exec_ctx[idx].network);
 800c0c4:	4916      	ldr	r1, [pc, #88]	; (800c120 <aiBootstrap+0x1f8>)
 800c0c6:	683a      	ldr	r2, [r7, #0]
 800c0c8:	4613      	mov	r3, r2
 800c0ca:	015b      	lsls	r3, r3, #5
 800c0cc:	1a9b      	subs	r3, r3, r2
 800c0ce:	00db      	lsls	r3, r3, #3
 800c0d0:	440b      	add	r3, r1
 800c0d2:	681b      	ldr	r3, [r3, #0]
 800c0d4:	4618      	mov	r0, r3
 800c0d6:	f000 fdd6 	bl	800cc86 <ai_mnetwork_get_error>
 800c0da:	4603      	mov	r3, r0
 800c0dc:	647b      	str	r3, [r7, #68]	; 0x44
        aiLogErr(err, "ai_mnetwork_get_info");
 800c0de:	4916      	ldr	r1, [pc, #88]	; (800c138 <aiBootstrap+0x210>)
 800c0e0:	6c78      	ldr	r0, [r7, #68]	; 0x44
 800c0e2:	f7ff f9d9 	bl	800b498 <aiLogErr>
        ai_mnetwork_destroy(net_exec_ctx[idx].network);
 800c0e6:	490e      	ldr	r1, [pc, #56]	; (800c120 <aiBootstrap+0x1f8>)
 800c0e8:	683a      	ldr	r2, [r7, #0]
 800c0ea:	4613      	mov	r3, r2
 800c0ec:	015b      	lsls	r3, r3, #5
 800c0ee:	1a9b      	subs	r3, r3, r2
 800c0f0:	00db      	lsls	r3, r3, #3
 800c0f2:	440b      	add	r3, r1
 800c0f4:	681b      	ldr	r3, [r3, #0]
 800c0f6:	4618      	mov	r0, r3
 800c0f8:	f000 fd88 	bl	800cc0c <ai_mnetwork_destroy>
        net_exec_ctx[idx].network = AI_HANDLE_NULL;
 800c0fc:	4908      	ldr	r1, [pc, #32]	; (800c120 <aiBootstrap+0x1f8>)
 800c0fe:	683a      	ldr	r2, [r7, #0]
 800c100:	4613      	mov	r3, r2
 800c102:	015b      	lsls	r3, r3, #5
 800c104:	1a9b      	subs	r3, r3, r2
 800c106:	00db      	lsls	r3, r3, #3
 800c108:	440b      	add	r3, r1
 800c10a:	2200      	movs	r2, #0
 800c10c:	601a      	str	r2, [r3, #0]
        return -2;
 800c10e:	f06f 0301 	mvn.w	r3, #1
}
 800c112:	4618      	mov	r0, r3
 800c114:	3748      	adds	r7, #72	; 0x48
 800c116:	46bd      	mov	sp, r7
 800c118:	bd80      	pop	{r7, pc}
 800c11a:	bf00      	nop
 800c11c:	0801566c 	.word	0x0801566c
 800c120:	20000960 	.word	0x20000960
 800c124:	0801568c 	.word	0x0801568c
 800c128:	080156a0 	.word	0x080156a0
 800c12c:	40000040 	.word	0x40000040
 800c130:	20000a58 	.word	0x20000a58
 800c134:	080156bc 	.word	0x080156bc
 800c138:	080156d0 	.word	0x080156d0

0800c13c <aiInspectorGetReport>:

#ifdef HAS_INSPECTOR
static int aiInspectorGetReport(struct ai_network_exec_ctx *ctx)
{
 800c13c:	b580      	push	{r7, lr}
 800c13e:	b084      	sub	sp, #16
 800c140:	af00      	add	r7, sp, #0
 800c142:	6078      	str	r0, [r7, #4]
    int res = 0;
 800c144:	2300      	movs	r3, #0
 800c146:	60fb      	str	r3, [r7, #12]
    if (!ctx)
 800c148:	687b      	ldr	r3, [r7, #4]
 800c14a:	2b00      	cmp	r3, #0
 800c14c:	d102      	bne.n	800c154 <aiInspectorGetReport+0x18>
        return -1;
 800c14e:	f04f 33ff 	mov.w	r3, #4294967295
 800c152:	e01c      	b.n	800c18e <aiInspectorGetReport+0x52>

    if ((ctx->inspector != AI_HANDLE_NULL) &&
 800c154:	687b      	ldr	r3, [r7, #4]
 800c156:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800c158:	2b00      	cmp	r3, #0
 800c15a:	d017      	beq.n	800c18c <aiInspectorGetReport+0x50>
            (ctx->net_id != AI_INSPECTOR_NETWORK_BIND_FAILED))
 800c15c:	687b      	ldr	r3, [r7, #4]
 800c15e:	f8b3 307c 	ldrh.w	r3, [r3, #124]	; 0x7c
    if ((ctx->inspector != AI_HANDLE_NULL) &&
 800c162:	2b00      	cmp	r3, #0
 800c164:	d012      	beq.n	800c18c <aiInspectorGetReport+0x50>
    {
        if (ai_inspector_get_report(ctx->inspector,
 800c166:	687b      	ldr	r3, [r7, #4]
 800c168:	6f98      	ldr	r0, [r3, #120]	; 0x78
 800c16a:	687b      	ldr	r3, [r7, #4]
 800c16c:	f8b3 107c 	ldrh.w	r1, [r3, #124]	; 0x7c
 800c170:	687b      	ldr	r3, [r7, #4]
 800c172:	3380      	adds	r3, #128	; 0x80
 800c174:	461a      	mov	r2, r3
 800c176:	f7f4 f95d 	bl	8000434 <ai_inspector_get_report>
 800c17a:	4603      	mov	r3, r0
                ctx->net_id, &ctx->inspector_report) != true)
 800c17c:	f083 0301 	eor.w	r3, r3, #1
 800c180:	b2db      	uxtb	r3, r3
        if (ai_inspector_get_report(ctx->inspector,
 800c182:	2b00      	cmp	r3, #0
 800c184:	d002      	beq.n	800c18c <aiInspectorGetReport+0x50>
            res = -2;
 800c186:	f06f 0301 	mvn.w	r3, #1
 800c18a:	60fb      	str	r3, [r7, #12]
    }
    return res;
 800c18c:	68fb      	ldr	r3, [r7, #12]
}
 800c18e:	4618      	mov	r0, r3
 800c190:	3710      	adds	r7, #16
 800c192:	46bd      	mov	sp, r7
 800c194:	bd80      	pop	{r7, pc}

0800c196 <aiInspectorSendReport>:


static void aiInspectorSendReport(const reqMsg *req, respMsg *resp,
        EnumState state, struct ai_network_exec_ctx *ctx,
        const ai_float dur_ms)
{
 800c196:	b580      	push	{r7, lr}
 800c198:	b088      	sub	sp, #32
 800c19a:	af02      	add	r7, sp, #8
 800c19c:	6178      	str	r0, [r7, #20]
 800c19e:	6139      	str	r1, [r7, #16]
 800c1a0:	60bb      	str	r3, [r7, #8]
 800c1a2:	ed87 0a01 	vstr	s0, [r7, #4]
 800c1a6:	4613      	mov	r3, r2
 800c1a8:	73fb      	strb	r3, [r7, #15]
#ifdef HAS_INSPECTOR
    if (aiInspectorGetReport(ctx) == 0) {
 800c1aa:	68b8      	ldr	r0, [r7, #8]
 800c1ac:	f7ff ffc6 	bl	800c13c <aiInspectorGetReport>
 800c1b0:	4603      	mov	r3, r0
 800c1b2:	2b00      	cmp	r3, #0
 800c1b4:	d122      	bne.n	800c1fc <aiInspectorSendReport+0x66>
        resp->which_payload = respMsg_report_tag;
 800c1b6:	693b      	ldr	r3, [r7, #16]
 800c1b8:	2215      	movs	r2, #21
 800c1ba:	80da      	strh	r2, [r3, #6]
        resp->payload.report.id = ctx->inspector_report.id;
 800c1bc:	68bb      	ldr	r3, [r7, #8]
 800c1be:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 800c1c2:	693b      	ldr	r3, [r7, #16]
 800c1c4:	609a      	str	r2, [r3, #8]
        resp->payload.report.elapsed_ms = dur_ms;
 800c1c6:	693b      	ldr	r3, [r7, #16]
 800c1c8:	687a      	ldr	r2, [r7, #4]
 800c1ca:	619a      	str	r2, [r3, #24]
        resp->payload.report.n_nodes = ctx->inspector_report.n_nodes;
 800c1cc:	68bb      	ldr	r3, [r7, #8]
 800c1ce:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800c1d2:	693b      	ldr	r3, [r7, #16]
 800c1d4:	615a      	str	r2, [r3, #20]
        resp->payload.report.signature = ctx->inspector_report.signature;
 800c1d6:	68bb      	ldr	r3, [r7, #8]
 800c1d8:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
 800c1dc:	693b      	ldr	r3, [r7, #16]
 800c1de:	60da      	str	r2, [r3, #12]
        resp->payload.report.num_inferences = ctx->inspector_report.num_inferences;
 800c1e0:	68bb      	ldr	r3, [r7, #8]
 800c1e2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800c1e6:	693b      	ldr	r3, [r7, #16]
 800c1e8:	611a      	str	r2, [r3, #16]
        aiPbMgrSendResp(req, resp, state);
 800c1ea:	7bfb      	ldrb	r3, [r7, #15]
 800c1ec:	461a      	mov	r2, r3
 800c1ee:	6939      	ldr	r1, [r7, #16]
 800c1f0:	6978      	ldr	r0, [r7, #20]
 800c1f2:	f7fe f917 	bl	800a424 <aiPbMgrSendResp>
        aiPbMgrWaitAck();
 800c1f6:	f7fe f94f 	bl	800a498 <aiPbMgrWaitAck>
    } else {
        aiPbMgrSendAck(req, resp, EnumState_S_ERROR,
                EnumError_E_GENERIC, EnumError_E_GENERIC);
    }
#endif
}
 800c1fa:	e007      	b.n	800c20c <aiInspectorSendReport+0x76>
        aiPbMgrSendAck(req, resp, EnumState_S_ERROR,
 800c1fc:	230a      	movs	r3, #10
 800c1fe:	9300      	str	r3, [sp, #0]
 800c200:	230a      	movs	r3, #10
 800c202:	2204      	movs	r2, #4
 800c204:	6939      	ldr	r1, [r7, #16]
 800c206:	6978      	ldr	r0, [r7, #20]
 800c208:	f7fe f92a 	bl	800a460 <aiPbMgrSendAck>
}
 800c20c:	bf00      	nop
 800c20e:	3718      	adds	r7, #24
 800c210:	46bd      	mov	sp, r7
 800c212:	bd80      	pop	{r7, pc}

0800c214 <aiInspectorUnBind>:


static void aiInspectorUnBind(struct ai_network_exec_ctx *ctx)
{
 800c214:	b580      	push	{r7, lr}
 800c216:	b082      	sub	sp, #8
 800c218:	af00      	add	r7, sp, #0
 800c21a:	6078      	str	r0, [r7, #4]
#ifdef HAS_INSPECTOR
    if (!ctx)
 800c21c:	687b      	ldr	r3, [r7, #4]
 800c21e:	2b00      	cmp	r3, #0
 800c220:	d016      	beq.n	800c250 <aiInspectorUnBind+0x3c>
        return;

    if ((ctx->inspector != AI_HANDLE_NULL) &&
 800c222:	687b      	ldr	r3, [r7, #4]
 800c224:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800c226:	2b00      	cmp	r3, #0
 800c228:	d00d      	beq.n	800c246 <aiInspectorUnBind+0x32>
            (ctx->net_id != AI_INSPECTOR_NETWORK_BIND_FAILED))
 800c22a:	687b      	ldr	r3, [r7, #4]
 800c22c:	f8b3 307c 	ldrh.w	r3, [r3, #124]	; 0x7c
    if ((ctx->inspector != AI_HANDLE_NULL) &&
 800c230:	2b00      	cmp	r3, #0
 800c232:	d008      	beq.n	800c246 <aiInspectorUnBind+0x32>
        ai_inspector_unbind_network(ctx->inspector,
 800c234:	687b      	ldr	r3, [r7, #4]
 800c236:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800c238:	687b      	ldr	r3, [r7, #4]
 800c23a:	f8b3 307c 	ldrh.w	r3, [r3, #124]	; 0x7c
 800c23e:	4619      	mov	r1, r3
 800c240:	4610      	mov	r0, r2
 800c242:	f7f4 f8b0 	bl	80003a6 <ai_inspector_unbind_network>
                ctx->net_id);

    ctx->net_id = AI_INSPECTOR_NETWORK_BIND_FAILED;
 800c246:	687b      	ldr	r3, [r7, #4]
 800c248:	2200      	movs	r2, #0
 800c24a:	f8a3 207c 	strh.w	r2, [r3, #124]	; 0x7c
 800c24e:	e000      	b.n	800c252 <aiInspectorUnBind+0x3e>
        return;
 800c250:	bf00      	nop
#endif
}
 800c252:	3708      	adds	r7, #8
 800c254:	46bd      	mov	sp, r7
 800c256:	bd80      	pop	{r7, pc}

0800c258 <aiInspectorBind>:

static int aiInspectorBind(struct ai_network_exec_ctx *ctx)
{
 800c258:	b580      	push	{r7, lr}
 800c25a:	b084      	sub	sp, #16
 800c25c:	af00      	add	r7, sp, #0
 800c25e:	6078      	str	r0, [r7, #4]
    int res = 0;
 800c260:	2300      	movs	r3, #0
 800c262:	60fb      	str	r3, [r7, #12]
#ifdef HAS_INSPECTOR
    if (!ctx)
 800c264:	687b      	ldr	r3, [r7, #4]
 800c266:	2b00      	cmp	r3, #0
 800c268:	d101      	bne.n	800c26e <aiInspectorBind+0x16>
        return 0;
 800c26a:	2300      	movs	r3, #0
 800c26c:	e024      	b.n	800c2b8 <aiInspectorBind+0x60>

    aiInspectorUnBind(ctx);
 800c26e:	6878      	ldr	r0, [r7, #4]
 800c270:	f7ff ffd0 	bl	800c214 <aiInspectorUnBind>

    ctx->n_cb_in  = 0;
 800c274:	687b      	ldr	r3, [r7, #4]
 800c276:	2200      	movs	r2, #0
 800c278:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
    ctx->n_cb_out = 0;
 800c27c:	687b      	ldr	r3, [r7, #4]
 800c27e:	2200      	movs	r2, #0
 800c280:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4

    if (ctx->inspector) {
 800c284:	687b      	ldr	r3, [r7, #4]
 800c286:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800c288:	2b00      	cmp	r3, #0
 800c28a:	d014      	beq.n	800c2b6 <aiInspectorBind+0x5e>
        ctx->net_id = ai_inspector_bind_network(
 800c28c:	687b      	ldr	r3, [r7, #4]
 800c28e:	6f9a      	ldr	r2, [r3, #120]	; 0x78
                ctx->inspector,
                &ctx->entry);
 800c290:	687b      	ldr	r3, [r7, #4]
 800c292:	3398      	adds	r3, #152	; 0x98
        ctx->net_id = ai_inspector_bind_network(
 800c294:	4619      	mov	r1, r3
 800c296:	4610      	mov	r0, r2
 800c298:	f7f4 f845 	bl	8000326 <ai_inspector_bind_network>
 800c29c:	4603      	mov	r3, r0
 800c29e:	461a      	mov	r2, r3
 800c2a0:	687b      	ldr	r3, [r7, #4]
 800c2a2:	f8a3 207c 	strh.w	r2, [r3, #124]	; 0x7c

        if (ctx->net_id == AI_INSPECTOR_NETWORK_BIND_FAILED)
 800c2a6:	687b      	ldr	r3, [r7, #4]
 800c2a8:	f8b3 307c 	ldrh.w	r3, [r3, #124]	; 0x7c
 800c2ac:	2b00      	cmp	r3, #0
 800c2ae:	d102      	bne.n	800c2b6 <aiInspectorBind+0x5e>
            res = -1;
 800c2b0:	f04f 33ff 	mov.w	r3, #4294967295
 800c2b4:	60fb      	str	r3, [r7, #12]
    }

#endif
    return res;
 800c2b6:	68fb      	ldr	r3, [r7, #12]
}
 800c2b8:	4618      	mov	r0, r3
 800c2ba:	3710      	adds	r7, #16
 800c2bc:	46bd      	mov	sp, r7
 800c2be:	bd80      	pop	{r7, pc}

0800c2c0 <aiInspectorInitAndBind>:

static int aiInspectorInitAndBind(struct ai_network_exec_ctx *ctx)
{
 800c2c0:	b5b0      	push	{r4, r5, r7, lr}
 800c2c2:	b094      	sub	sp, #80	; 0x50
 800c2c4:	af00      	add	r7, sp, #0
 800c2c6:	6078      	str	r0, [r7, #4]
#ifdef HAS_INSPECTOR
    ctx->n_cb_in  = 0;
 800c2c8:	687b      	ldr	r3, [r7, #4]
 800c2ca:	2200      	movs	r2, #0
 800c2cc:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
    ctx->n_cb_out = 0;
 800c2d0:	687b      	ldr	r3, [r7, #4]
 800c2d2:	2200      	movs	r2, #0
 800c2d4:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4

    ai_inspector_config cfg = ai_inspector_default_config();
 800c2d8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800c2dc:	4618      	mov	r0, r3
 800c2de:	f7f3 ffaf 	bl	8000240 <ai_inspector_default_config>

    cfg.log_level = LOG_SUDO;
 800c2e2:	2300      	movs	r3, #0
 800c2e4:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
    cfg.log_quiet = false;
 800c2e8:	2300      	movs	r3, #0
 800c2ea:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
    cfg.on_report_destroy = NULL;
 800c2ee:	2300      	movs	r3, #0
 800c2f0:	647b      	str	r3, [r7, #68]	; 0x44
    cfg.on_exec_node = &aiOnExecNode_cb;
 800c2f2:	4b1d      	ldr	r3, [pc, #116]	; (800c368 <aiInspectorInitAndBind+0xa8>)
 800c2f4:	64bb      	str	r3, [r7, #72]	; 0x48
    cfg.cookie = NULL;
 800c2f6:	2300      	movs	r3, #0
 800c2f8:	64fb      	str	r3, [r7, #76]	; 0x4c
#endif

    ai_handle phandle;
    ai_network_params pparams;

    if (ctx->network == AI_HANDLE_NULL)
 800c2fa:	687b      	ldr	r3, [r7, #4]
 800c2fc:	681b      	ldr	r3, [r3, #0]
 800c2fe:	2b00      	cmp	r3, #0
 800c300:	d102      	bne.n	800c308 <aiInspectorInitAndBind+0x48>
        return -1;
 800c302:	f04f 33ff 	mov.w	r3, #4294967295
 800c306:	e02a      	b.n	800c35e <aiInspectorInitAndBind+0x9e>

    ai_mnetwork_get_private_handle(ctx->network,
 800c308:	687b      	ldr	r3, [r7, #4]
 800c30a:	681b      	ldr	r3, [r3, #0]
 800c30c:	f107 020c 	add.w	r2, r7, #12
 800c310:	f107 013c 	add.w	r1, r7, #60	; 0x3c
 800c314:	4618      	mov	r0, r3
 800c316:	f000 fd43 	bl	800cda0 <ai_mnetwork_get_private_handle>
            &phandle,
            &pparams);

    cfg.cookie = (ai_handle)ctx;
 800c31a:	687b      	ldr	r3, [r7, #4]
 800c31c:	64fb      	str	r3, [r7, #76]	; 0x4c

    if (ai_inspector_create(&ctx->inspector, &cfg) )
 800c31e:	687b      	ldr	r3, [r7, #4]
 800c320:	3378      	adds	r3, #120	; 0x78
 800c322:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800c326:	4611      	mov	r1, r2
 800c328:	4618      	mov	r0, r3
 800c32a:	f7f3 ff9f 	bl	800026c <ai_inspector_create>
 800c32e:	4603      	mov	r3, r0
 800c330:	2b00      	cmp	r3, #0
 800c332:	d013      	beq.n	800c35c <aiInspectorInitAndBind+0x9c>
    {
        ctx->entry.handle = phandle;
 800c334:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800c336:	687b      	ldr	r3, [r7, #4]
 800c338:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
        ctx->entry.params = pparams;
 800c33c:	687b      	ldr	r3, [r7, #4]
 800c33e:	f103 049c 	add.w	r4, r3, #156	; 0x9c
 800c342:	f107 050c 	add.w	r5, r7, #12
 800c346:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c348:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c34a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c34c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c34e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800c352:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
        aiInspectorBind(ctx);
 800c356:	6878      	ldr	r0, [r7, #4]
 800c358:	f7ff ff7e 	bl	800c258 <aiInspectorBind>
    }


#endif
    return 0;
 800c35c:	2300      	movs	r3, #0
}
 800c35e:	4618      	mov	r0, r3
 800c360:	3750      	adds	r7, #80	; 0x50
 800c362:	46bd      	mov	sp, r7
 800c364:	bdb0      	pop	{r4, r5, r7, pc}
 800c366:	bf00      	nop
 800c368:	0800bd39 	.word	0x0800bd39

0800c36c <aiInspectorUnbindAndDestroy>:

static int aiInspectorUnbindAndDestroy(struct ai_network_exec_ctx *ctx)
{
 800c36c:	b580      	push	{r7, lr}
 800c36e:	b082      	sub	sp, #8
 800c370:	af00      	add	r7, sp, #0
 800c372:	6078      	str	r0, [r7, #4]
#ifdef HAS_INSPECTOR
    aiInspectorUnBind(ctx);
 800c374:	6878      	ldr	r0, [r7, #4]
 800c376:	f7ff ff4d 	bl	800c214 <aiInspectorUnBind>
    if (ctx->inspector != AI_HANDLE_NULL)
 800c37a:	687b      	ldr	r3, [r7, #4]
 800c37c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800c37e:	2b00      	cmp	r3, #0
 800c380:	d004      	beq.n	800c38c <aiInspectorUnbindAndDestroy+0x20>
        ai_inspector_destroy(ctx->inspector);
 800c382:	687b      	ldr	r3, [r7, #4]
 800c384:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800c386:	4618      	mov	r0, r3
 800c388:	f7f3 ffa2 	bl	80002d0 <ai_inspector_destroy>
    ctx->inspector = AI_HANDLE_NULL;
 800c38c:	687b      	ldr	r3, [r7, #4]
 800c38e:	2200      	movs	r2, #0
 800c390:	679a      	str	r2, [r3, #120]	; 0x78
#endif
    return 0;
 800c392:	2300      	movs	r3, #0
}
 800c394:	4618      	mov	r0, r3
 800c396:	3708      	adds	r7, #8
 800c398:	46bd      	mov	sp, r7
 800c39a:	bd80      	pop	{r7, pc}

0800c39c <aiInit>:


static int aiInit(void)
{
 800c39c:	b580      	push	{r7, lr}
 800c39e:	b088      	sub	sp, #32
 800c3a0:	af04      	add	r7, sp, #16
    int res = -1;
 800c3a2:	f04f 33ff 	mov.w	r3, #4294967295
 800c3a6:	60fb      	str	r3, [r7, #12]
    const char *nn_name;
    int idx;

    printf("\r\nAI platform (API %d.%d.%d - RUNTIME %d.%d.%d)\r\n",
 800c3a8:	2300      	movs	r3, #0
 800c3aa:	9302      	str	r3, [sp, #8]
 800c3ac:	2301      	movs	r3, #1
 800c3ae:	9301      	str	r3, [sp, #4]
 800c3b0:	2304      	movs	r3, #4
 800c3b2:	9300      	str	r3, [sp, #0]
 800c3b4:	2300      	movs	r3, #0
 800c3b6:	2201      	movs	r2, #1
 800c3b8:	2101      	movs	r1, #1
 800c3ba:	4826      	ldr	r0, [pc, #152]	; (800c454 <aiInit+0xb8>)
 800c3bc:	f004 fa00 	bl	80107c0 <iprintf>
            AI_PLATFORM_RUNTIME_MAJOR,
            AI_PLATFORM_RUNTIME_MINOR,
            AI_PLATFORM_RUNTIME_MICRO);

    /* Clean all network exec context */
    for (idx=0; idx < AI_MNETWORK_NUMBER; idx++) {
 800c3c0:	2300      	movs	r3, #0
 800c3c2:	607b      	str	r3, [r7, #4]
 800c3c4:	e01f      	b.n	800c406 <aiInit+0x6a>
        net_exec_ctx[idx].network = AI_HANDLE_NULL;
 800c3c6:	4924      	ldr	r1, [pc, #144]	; (800c458 <aiInit+0xbc>)
 800c3c8:	687a      	ldr	r2, [r7, #4]
 800c3ca:	4613      	mov	r3, r2
 800c3cc:	015b      	lsls	r3, r3, #5
 800c3ce:	1a9b      	subs	r3, r3, r2
 800c3d0:	00db      	lsls	r3, r3, #3
 800c3d2:	440b      	add	r3, r1
 800c3d4:	2200      	movs	r2, #0
 800c3d6:	601a      	str	r2, [r3, #0]
#ifdef HAS_INSPECTOR
        net_exec_ctx[idx].inspector = AI_HANDLE_NULL;
 800c3d8:	491f      	ldr	r1, [pc, #124]	; (800c458 <aiInit+0xbc>)
 800c3da:	687a      	ldr	r2, [r7, #4]
 800c3dc:	4613      	mov	r3, r2
 800c3de:	015b      	lsls	r3, r3, #5
 800c3e0:	1a9b      	subs	r3, r3, r2
 800c3e2:	00db      	lsls	r3, r3, #3
 800c3e4:	440b      	add	r3, r1
 800c3e6:	3378      	adds	r3, #120	; 0x78
 800c3e8:	2200      	movs	r2, #0
 800c3ea:	601a      	str	r2, [r3, #0]
        net_exec_ctx[idx].net_id = AI_INSPECTOR_NETWORK_BIND_FAILED;
 800c3ec:	491a      	ldr	r1, [pc, #104]	; (800c458 <aiInit+0xbc>)
 800c3ee:	687a      	ldr	r2, [r7, #4]
 800c3f0:	4613      	mov	r3, r2
 800c3f2:	015b      	lsls	r3, r3, #5
 800c3f4:	1a9b      	subs	r3, r3, r2
 800c3f6:	00db      	lsls	r3, r3, #3
 800c3f8:	440b      	add	r3, r1
 800c3fa:	337c      	adds	r3, #124	; 0x7c
 800c3fc:	2200      	movs	r2, #0
 800c3fe:	801a      	strh	r2, [r3, #0]
    for (idx=0; idx < AI_MNETWORK_NUMBER; idx++) {
 800c400:	687b      	ldr	r3, [r7, #4]
 800c402:	3301      	adds	r3, #1
 800c404:	607b      	str	r3, [r7, #4]
 800c406:	687b      	ldr	r3, [r7, #4]
 800c408:	2b00      	cmp	r3, #0
 800c40a:	dddc      	ble.n	800c3c6 <aiInit+0x2a>
#endif
    }

    /* Discover and init the embedded network */
    idx = 0;
 800c40c:	2300      	movs	r3, #0
 800c40e:	607b      	str	r3, [r7, #4]
    do {
        nn_name = ai_mnetwork_find(NULL, idx);
 800c410:	6879      	ldr	r1, [r7, #4]
 800c412:	2000      	movs	r0, #0
 800c414:	f000 fb5e 	bl	800cad4 <ai_mnetwork_find>
 800c418:	60b8      	str	r0, [r7, #8]
        if (nn_name) {
 800c41a:	68bb      	ldr	r3, [r7, #8]
 800c41c:	2b00      	cmp	r3, #0
 800c41e:	d00d      	beq.n	800c43c <aiInit+0xa0>
            printf("\r\nFound network \"%s\"\r\n", nn_name);
 800c420:	68b9      	ldr	r1, [r7, #8]
 800c422:	480e      	ldr	r0, [pc, #56]	; (800c45c <aiInit+0xc0>)
 800c424:	f004 f9cc 	bl	80107c0 <iprintf>
            res = aiBootstrap(nn_name, idx);
 800c428:	6879      	ldr	r1, [r7, #4]
 800c42a:	68b8      	ldr	r0, [r7, #8]
 800c42c:	f7ff fd7c 	bl	800bf28 <aiBootstrap>
 800c430:	60f8      	str	r0, [r7, #12]
            if (res)
 800c432:	68fb      	ldr	r3, [r7, #12]
 800c434:	2b00      	cmp	r3, #0
 800c436:	d001      	beq.n	800c43c <aiInit+0xa0>
                nn_name = NULL;
 800c438:	2300      	movs	r3, #0
 800c43a:	60bb      	str	r3, [r7, #8]
        }
        idx++;
 800c43c:	687b      	ldr	r3, [r7, #4]
 800c43e:	3301      	adds	r3, #1
 800c440:	607b      	str	r3, [r7, #4]
    } while (nn_name);
 800c442:	68bb      	ldr	r3, [r7, #8]
 800c444:	2b00      	cmp	r3, #0
 800c446:	d1e3      	bne.n	800c410 <aiInit+0x74>

    return res;
 800c448:	68fb      	ldr	r3, [r7, #12]
}
 800c44a:	4618      	mov	r0, r3
 800c44c:	3710      	adds	r7, #16
 800c44e:	46bd      	mov	sp, r7
 800c450:	bd80      	pop	{r7, pc}
 800c452:	bf00      	nop
 800c454:	080156e8 	.word	0x080156e8
 800c458:	20000960 	.word	0x20000960
 800c45c:	0801571c 	.word	0x0801571c

0800c460 <aiPbCmdNNInfo>:
 * Specific APP/test functions
 * -----------------------------------------------------------------------------
 */

void aiPbCmdNNInfo(const reqMsg *req, respMsg *resp, void *param)
{
 800c460:	b580      	push	{r7, lr}
 800c462:	b088      	sub	sp, #32
 800c464:	af02      	add	r7, sp, #8
 800c466:	60f8      	str	r0, [r7, #12]
 800c468:	60b9      	str	r1, [r7, #8]
 800c46a:	607a      	str	r2, [r7, #4]
    struct ai_network_exec_ctx *ctx;

    UNUSED(param);

    ctx = aiExecCtx(req->name, req->param);
 800c46c:	68fb      	ldr	r3, [r7, #12]
 800c46e:	f103 020c 	add.w	r2, r3, #12
 800c472:	68fb      	ldr	r3, [r7, #12]
 800c474:	689b      	ldr	r3, [r3, #8]
 800c476:	4619      	mov	r1, r3
 800c478:	4610      	mov	r0, r2
 800c47a:	f7ff fce1 	bl	800be40 <aiExecCtx>
 800c47e:	6178      	str	r0, [r7, #20]
    if (ctx)
 800c480:	697b      	ldr	r3, [r7, #20]
 800c482:	2b00      	cmp	r3, #0
 800c484:	d007      	beq.n	800c496 <aiPbCmdNNInfo+0x36>
        aiPbMgrSendNNInfo(req, resp, EnumState_S_IDLE,
                &ctx->report);
 800c486:	697b      	ldr	r3, [r7, #20]
 800c488:	3304      	adds	r3, #4
        aiPbMgrSendNNInfo(req, resp, EnumState_S_IDLE,
 800c48a:	2200      	movs	r2, #0
 800c48c:	68b9      	ldr	r1, [r7, #8]
 800c48e:	68f8      	ldr	r0, [r7, #12]
 800c490:	f7fe fc7a 	bl	800ad88 <aiPbMgrSendNNInfo>
    else
        aiPbMgrSendAck(req, resp, EnumState_S_ERROR,
                EnumError_E_INVALID_PARAM, EnumError_E_INVALID_PARAM);
}
 800c494:	e007      	b.n	800c4a6 <aiPbCmdNNInfo+0x46>
        aiPbMgrSendAck(req, resp, EnumState_S_ERROR,
 800c496:	2304      	movs	r3, #4
 800c498:	9300      	str	r3, [sp, #0]
 800c49a:	2304      	movs	r3, #4
 800c49c:	2204      	movs	r2, #4
 800c49e:	68b9      	ldr	r1, [r7, #8]
 800c4a0:	68f8      	ldr	r0, [r7, #12]
 800c4a2:	f7fd ffdd 	bl	800a460 <aiPbMgrSendAck>
}
 800c4a6:	bf00      	nop
 800c4a8:	3718      	adds	r7, #24
 800c4aa:	46bd      	mov	sp, r7
 800c4ac:	bd80      	pop	{r7, pc}
	...

0800c4b0 <aiPbCmdNNRun>:

void aiPbCmdNNRun(const reqMsg *req, respMsg *resp, void *param)
{
 800c4b0:	b5b0      	push	{r4, r5, r7, lr}
 800c4b2:	b09e      	sub	sp, #120	; 0x78
 800c4b4:	af02      	add	r7, sp, #8
 800c4b6:	60f8      	str	r0, [r7, #12]
 800c4b8:	60b9      	str	r1, [r7, #8]
 800c4ba:	607a      	str	r2, [r7, #4]
    ai_i32 batch;
    uint32_t tend;
    bool res;
    struct ai_network_exec_ctx *ctx;
    bool inspector_mode = false;
 800c4bc:	2300      	movs	r3, #0
 800c4be:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
    ai_buffer ai_input[AI_MNETWORK_IN_NUM];
    ai_buffer ai_output[AI_MNETWORK_OUT_NUM];

    UNUSED(param);

    ctx = aiExecCtx(req->name, -1);
 800c4c2:	68fb      	ldr	r3, [r7, #12]
 800c4c4:	330c      	adds	r3, #12
 800c4c6:	f04f 31ff 	mov.w	r1, #4294967295
 800c4ca:	4618      	mov	r0, r3
 800c4cc:	f7ff fcb8 	bl	800be40 <aiExecCtx>
 800c4d0:	6538      	str	r0, [r7, #80]	; 0x50
    if (!ctx) {
 800c4d2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c4d4:	2b00      	cmp	r3, #0
 800c4d6:	d108      	bne.n	800c4ea <aiPbCmdNNRun+0x3a>
        aiPbMgrSendAck(req, resp, EnumState_S_ERROR,
 800c4d8:	2304      	movs	r3, #4
 800c4da:	9300      	str	r3, [sp, #0]
 800c4dc:	2304      	movs	r3, #4
 800c4de:	2204      	movs	r2, #4
 800c4e0:	68b9      	ldr	r1, [r7, #8]
 800c4e2:	68f8      	ldr	r0, [r7, #12]
 800c4e4:	f7fd ffbc 	bl	800a460 <aiPbMgrSendAck>
                EnumError_E_INVALID_PARAM, EnumError_E_INVALID_PARAM);
        return;
 800c4e8:	e196      	b.n	800c818 <aiPbCmdNNRun+0x368>
    }

#ifdef HAS_INSPECTOR
    ctx->no_data = false;
 800c4ea:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c4ec:	2200      	movs	r2, #0
 800c4ee:	f883 20e0 	strb.w	r2, [r3, #224]	; 0xe0
    if ((req->param & EnumRunParam_P_RUN_MODE_INSPECTOR) ==
 800c4f2:	68fb      	ldr	r3, [r7, #12]
 800c4f4:	689b      	ldr	r3, [r3, #8]
 800c4f6:	f003 0301 	and.w	r3, r3, #1
 800c4fa:	2b00      	cmp	r3, #0
 800c4fc:	d002      	beq.n	800c504 <aiPbCmdNNRun+0x54>
            EnumRunParam_P_RUN_MODE_INSPECTOR)
        inspector_mode = true;
 800c4fe:	2301      	movs	r3, #1
 800c500:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f

    if ((req->param & EnumRunParam_P_RUN_MODE_INSPECTOR_WITHOUT_DATA) ==
 800c504:	68fb      	ldr	r3, [r7, #12]
 800c506:	689b      	ldr	r3, [r3, #8]
 800c508:	f003 0302 	and.w	r3, r3, #2
 800c50c:	2b00      	cmp	r3, #0
 800c50e:	d006      	beq.n	800c51e <aiPbCmdNNRun+0x6e>
            EnumRunParam_P_RUN_MODE_INSPECTOR_WITHOUT_DATA) {
        inspector_mode = true;
 800c510:	2301      	movs	r3, #1
 800c512:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
        ctx->no_data = true;
 800c516:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c518:	2201      	movs	r2, #1
 800c51a:	f883 20e0 	strb.w	r2, [r3, #224]	; 0xe0
    }

    ctx->tcom = 0ULL;
 800c51e:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800c520:	f04f 0300 	mov.w	r3, #0
 800c524:	f04f 0400 	mov.w	r4, #0
 800c528:	e9c2 343a 	strd	r3, r4, [r2, #232]	; 0xe8
    ctx->tnodes = 0ULL;
 800c52c:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800c52e:	f04f 0300 	mov.w	r3, #0
 800c532:	f04f 0400 	mov.w	r4, #0
 800c536:	e9c2 343c 	strd	r3, r4, [r2, #240]	; 0xf0
#endif

    /* Fill the input tensor descriptors */
    for (int i = 0; i < ctx->report.n_inputs; i++) {
 800c53a:	2300      	movs	r3, #0
 800c53c:	66bb      	str	r3, [r7, #104]	; 0x68
 800c53e:	e053      	b.n	800c5e8 <aiPbCmdNNRun+0x138>
        ai_input[i] = ctx->report.inputs[i];
 800c540:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c542:	6b99      	ldr	r1, [r3, #56]	; 0x38
 800c544:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800c546:	4613      	mov	r3, r2
 800c548:	005b      	lsls	r3, r3, #1
 800c54a:	4413      	add	r3, r2
 800c54c:	00db      	lsls	r3, r3, #3
 800c54e:	4419      	add	r1, r3
 800c550:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800c552:	4613      	mov	r3, r2
 800c554:	005b      	lsls	r3, r3, #1
 800c556:	4413      	add	r3, r2
 800c558:	00db      	lsls	r3, r3, #3
 800c55a:	f107 0270 	add.w	r2, r7, #112	; 0x70
 800c55e:	4413      	add	r3, r2
 800c560:	3b48      	subs	r3, #72	; 0x48
 800c562:	461c      	mov	r4, r3
 800c564:	460d      	mov	r5, r1
 800c566:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c568:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c56a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c56e:	e884 0003 	stmia.w	r4, {r0, r1}
        ai_input[i].n_batches  = 1;
 800c572:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800c574:	4613      	mov	r3, r2
 800c576:	005b      	lsls	r3, r3, #1
 800c578:	4413      	add	r3, r2
 800c57a:	00db      	lsls	r3, r3, #3
 800c57c:	f107 0270 	add.w	r2, r7, #112	; 0x70
 800c580:	4413      	add	r3, r2
 800c582:	3b44      	subs	r3, #68	; 0x44
 800c584:	2201      	movs	r2, #1
 800c586:	801a      	strh	r2, [r3, #0]
        if (ctx->report.inputs[i].data)
 800c588:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c58a:	6b99      	ldr	r1, [r3, #56]	; 0x38
 800c58c:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800c58e:	4613      	mov	r3, r2
 800c590:	005b      	lsls	r3, r3, #1
 800c592:	4413      	add	r3, r2
 800c594:	00db      	lsls	r3, r3, #3
 800c596:	440b      	add	r3, r1
 800c598:	691b      	ldr	r3, [r3, #16]
 800c59a:	2b00      	cmp	r3, #0
 800c59c:	d013      	beq.n	800c5c6 <aiPbCmdNNRun+0x116>
        	ai_input[i].data = AI_HANDLE_PTR(ctx->report.inputs[i].data);
 800c59e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c5a0:	6b99      	ldr	r1, [r3, #56]	; 0x38
 800c5a2:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800c5a4:	4613      	mov	r3, r2
 800c5a6:	005b      	lsls	r3, r3, #1
 800c5a8:	4413      	add	r3, r2
 800c5aa:	00db      	lsls	r3, r3, #3
 800c5ac:	440b      	add	r3, r1
 800c5ae:	6919      	ldr	r1, [r3, #16]
 800c5b0:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800c5b2:	4613      	mov	r3, r2
 800c5b4:	005b      	lsls	r3, r3, #1
 800c5b6:	4413      	add	r3, r2
 800c5b8:	00db      	lsls	r3, r3, #3
 800c5ba:	f107 0270 	add.w	r2, r7, #112	; 0x70
 800c5be:	4413      	add	r3, r2
 800c5c0:	3b38      	subs	r3, #56	; 0x38
 800c5c2:	6019      	str	r1, [r3, #0]
 800c5c4:	e00d      	b.n	800c5e2 <aiPbCmdNNRun+0x132>
        else
        	ai_input[i].data = AI_HANDLE_PTR(data_ins[i]);
 800c5c6:	4a96      	ldr	r2, [pc, #600]	; (800c820 <aiPbCmdNNRun+0x370>)
 800c5c8:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800c5ca:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800c5ce:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800c5d0:	4613      	mov	r3, r2
 800c5d2:	005b      	lsls	r3, r3, #1
 800c5d4:	4413      	add	r3, r2
 800c5d6:	00db      	lsls	r3, r3, #3
 800c5d8:	f107 0270 	add.w	r2, r7, #112	; 0x70
 800c5dc:	4413      	add	r3, r2
 800c5de:	3b38      	subs	r3, #56	; 0x38
 800c5e0:	6019      	str	r1, [r3, #0]
    for (int i = 0; i < ctx->report.n_inputs; i++) {
 800c5e2:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800c5e4:	3301      	adds	r3, #1
 800c5e6:	66bb      	str	r3, [r7, #104]	; 0x68
 800c5e8:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c5ea:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
 800c5ec:	461a      	mov	r2, r3
 800c5ee:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800c5f0:	4293      	cmp	r3, r2
 800c5f2:	dba5      	blt.n	800c540 <aiPbCmdNNRun+0x90>
    }

    /* Fill the output tensor descriptors */
    for (int i = 0; i < ctx->report.n_outputs; i++) {
 800c5f4:	2300      	movs	r3, #0
 800c5f6:	667b      	str	r3, [r7, #100]	; 0x64
 800c5f8:	e034      	b.n	800c664 <aiPbCmdNNRun+0x1b4>
    	ai_output[i] = ctx->report.outputs[i];
 800c5fa:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c5fc:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800c5fe:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800c600:	4613      	mov	r3, r2
 800c602:	005b      	lsls	r3, r3, #1
 800c604:	4413      	add	r3, r2
 800c606:	00db      	lsls	r3, r3, #3
 800c608:	4419      	add	r1, r3
 800c60a:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800c60c:	4613      	mov	r3, r2
 800c60e:	005b      	lsls	r3, r3, #1
 800c610:	4413      	add	r3, r2
 800c612:	00db      	lsls	r3, r3, #3
 800c614:	f107 0270 	add.w	r2, r7, #112	; 0x70
 800c618:	4413      	add	r3, r2
 800c61a:	3b60      	subs	r3, #96	; 0x60
 800c61c:	461c      	mov	r4, r3
 800c61e:	460d      	mov	r5, r1
 800c620:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c622:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c624:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c628:	e884 0003 	stmia.w	r4, {r0, r1}
        ai_output[i].n_batches = 1;
 800c62c:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800c62e:	4613      	mov	r3, r2
 800c630:	005b      	lsls	r3, r3, #1
 800c632:	4413      	add	r3, r2
 800c634:	00db      	lsls	r3, r3, #3
 800c636:	f107 0270 	add.w	r2, r7, #112	; 0x70
 800c63a:	4413      	add	r3, r2
 800c63c:	3b5c      	subs	r3, #92	; 0x5c
 800c63e:	2201      	movs	r2, #1
 800c640:	801a      	strh	r2, [r3, #0]
        ai_output[i].data = AI_HANDLE_PTR(data_outs[i]);
 800c642:	4a78      	ldr	r2, [pc, #480]	; (800c824 <aiPbCmdNNRun+0x374>)
 800c644:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800c646:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800c64a:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800c64c:	4613      	mov	r3, r2
 800c64e:	005b      	lsls	r3, r3, #1
 800c650:	4413      	add	r3, r2
 800c652:	00db      	lsls	r3, r3, #3
 800c654:	f107 0270 	add.w	r2, r7, #112	; 0x70
 800c658:	4413      	add	r3, r2
 800c65a:	3b50      	subs	r3, #80	; 0x50
 800c65c:	6019      	str	r1, [r3, #0]
    for (int i = 0; i < ctx->report.n_outputs; i++) {
 800c65e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800c660:	3301      	adds	r3, #1
 800c662:	667b      	str	r3, [r7, #100]	; 0x64
 800c664:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c666:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800c668:	461a      	mov	r2, r3
 800c66a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800c66c:	4293      	cmp	r3, r2
 800c66e:	dbc4      	blt.n	800c5fa <aiPbCmdNNRun+0x14a>
    }

    /* 1 - Send a ACK (ready to receive a buffer) */
    aiPbMgrSendAck(req, resp, EnumState_S_WAITING,
 800c670:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800c674:	4618      	mov	r0, r3
 800c676:	f7fd ff29 	bl	800a4cc <aiPbAiBufferSize>
 800c67a:	4602      	mov	r2, r0
 800c67c:	2300      	movs	r3, #0
 800c67e:	9300      	str	r3, [sp, #0]
 800c680:	4613      	mov	r3, r2
 800c682:	2201      	movs	r2, #1
 800c684:	68b9      	ldr	r1, [r7, #8]
 800c686:	68f8      	ldr	r0, [r7, #12]
 800c688:	f7fd feea 	bl	800a460 <aiPbMgrSendAck>
            aiPbAiBufferSize(&ai_input[0]), EnumError_E_NONE);

    /* 2 - Receive all input tensors */
    for (int i = 0; i < ctx->report.n_inputs; i++) {
 800c68c:	2300      	movs	r3, #0
 800c68e:	663b      	str	r3, [r7, #96]	; 0x60
 800c690:	e027      	b.n	800c6e2 <aiPbCmdNNRun+0x232>
    	/* upload a buffer */
    	EnumState state = EnumState_S_WAITING;
 800c692:	2301      	movs	r3, #1
 800c694:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
    	if ((i + 1) == ctx->report.n_inputs)
 800c698:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800c69a:	3301      	adds	r3, #1
 800c69c:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800c69e:	8e92      	ldrh	r2, [r2, #52]	; 0x34
 800c6a0:	4293      	cmp	r3, r2
 800c6a2:	d102      	bne.n	800c6aa <aiPbCmdNNRun+0x1fa>
    		state = EnumState_S_PROCESSING;
 800c6a4:	2302      	movs	r3, #2
 800c6a6:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
        res = aiPbMgrReceiveAiBuffer3(req, resp, state, &ai_input[i]);
 800c6aa:	f107 0128 	add.w	r1, r7, #40	; 0x28
 800c6ae:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800c6b0:	4613      	mov	r3, r2
 800c6b2:	005b      	lsls	r3, r3, #1
 800c6b4:	4413      	add	r3, r2
 800c6b6:	00db      	lsls	r3, r3, #3
 800c6b8:	440b      	add	r3, r1
 800c6ba:	f897 205f 	ldrb.w	r2, [r7, #95]	; 0x5f
 800c6be:	68b9      	ldr	r1, [r7, #8]
 800c6c0:	68f8      	ldr	r0, [r7, #12]
 800c6c2:	f7fe f81b 	bl	800a6fc <aiPbMgrReceiveAiBuffer3>
 800c6c6:	4603      	mov	r3, r0
 800c6c8:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
        if (res != true)
 800c6cc:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800c6d0:	f083 0301 	eor.w	r3, r3, #1
 800c6d4:	b2db      	uxtb	r3, r3
 800c6d6:	2b00      	cmp	r3, #0
 800c6d8:	f040 809d 	bne.w	800c816 <aiPbCmdNNRun+0x366>
    for (int i = 0; i < ctx->report.n_inputs; i++) {
 800c6dc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800c6de:	3301      	adds	r3, #1
 800c6e0:	663b      	str	r3, [r7, #96]	; 0x60
 800c6e2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c6e4:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
 800c6e6:	461a      	mov	r2, r3
 800c6e8:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800c6ea:	4293      	cmp	r3, r2
 800c6ec:	dbd1      	blt.n	800c692 <aiPbCmdNNRun+0x1e2>
            return;
    }

    ints = disableInts();
 800c6ee:	f7fe fe7d 	bl	800b3ec <disableInts>
 800c6f2:	64f8      	str	r0, [r7, #76]	; 0x4c

    /* Update the PN context for inspector callbacks */
    aiSetPbContext(ctx, req, resp);
 800c6f4:	68ba      	ldr	r2, [r7, #8]
 800c6f6:	68f9      	ldr	r1, [r7, #12]
 800c6f8:	6d38      	ldr	r0, [r7, #80]	; 0x50
 800c6fa:	f7ff fbfd 	bl	800bef8 <aiSetPbContext>

    if (inspector_mode)
 800c6fe:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 800c702:	2b00      	cmp	r3, #0
 800c704:	d002      	beq.n	800c70c <aiPbCmdNNRun+0x25c>
        aiInspectorInitAndBind(ctx);
 800c706:	6d38      	ldr	r0, [r7, #80]	; 0x50
 800c708:	f7ff fdda 	bl	800c2c0 <aiInspectorInitAndBind>

    /* Processing */
    dwtReset();
 800c70c:	f7fe fc36 	bl	800af7c <dwtReset>

    batch = ai_mnetwork_run(ctx->network, ai_input, ai_output);
 800c710:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c712:	681b      	ldr	r3, [r3, #0]
 800c714:	f107 0210 	add.w	r2, r7, #16
 800c718:	f107 0128 	add.w	r1, r7, #40	; 0x28
 800c71c:	4618      	mov	r0, r3
 800c71e:	f000 fb23 	bl	800cd68 <ai_mnetwork_run>
 800c722:	64b8      	str	r0, [r7, #72]	; 0x48
    if (batch != 1) {
 800c724:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c726:	2b01      	cmp	r3, #1
 800c728:	d012      	beq.n	800c750 <aiPbCmdNNRun+0x2a0>
        aiLogErr(ai_mnetwork_get_error(ctx->network),
 800c72a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c72c:	681b      	ldr	r3, [r3, #0]
 800c72e:	4618      	mov	r0, r3
 800c730:	f000 faa9 	bl	800cc86 <ai_mnetwork_get_error>
 800c734:	4603      	mov	r3, r0
 800c736:	493c      	ldr	r1, [pc, #240]	; (800c828 <aiPbCmdNNRun+0x378>)
 800c738:	4618      	mov	r0, r3
 800c73a:	f7fe fead 	bl	800b498 <aiLogErr>
                "ai_mnetwork_run");
        aiPbMgrSendAck(req, resp, EnumState_S_ERROR,
 800c73e:	230a      	movs	r3, #10
 800c740:	9300      	str	r3, [sp, #0]
 800c742:	230a      	movs	r3, #10
 800c744:	2204      	movs	r2, #4
 800c746:	68b9      	ldr	r1, [r7, #8]
 800c748:	68f8      	ldr	r0, [r7, #12]
 800c74a:	f7fd fe89 	bl	800a460 <aiPbMgrSendAck>
                EnumError_E_GENERIC, EnumError_E_GENERIC);
        return;
 800c74e:	e063      	b.n	800c818 <aiPbCmdNNRun+0x368>
    }
    tend = dwtGetCycles();
 800c750:	f7fe fc20 	bl	800af94 <dwtGetCycles>
 800c754:	6478      	str	r0, [r7, #68]	; 0x44

#ifdef HAS_INSPECTOR
    tend = ctx->tcom + ctx->tnodes + tend;
 800c756:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c758:	e9d3 343a 	ldrd	r3, r4, [r3, #232]	; 0xe8
 800c75c:	461a      	mov	r2, r3
 800c75e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c760:	e9d3 343c 	ldrd	r3, r4, [r3, #240]	; 0xf0
 800c764:	4413      	add	r3, r2
 800c766:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800c768:	4413      	add	r3, r2
 800c76a:	647b      	str	r3, [r7, #68]	; 0x44
#endif

    if (inspector_mode)
 800c76c:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 800c770:	2b00      	cmp	r3, #0
 800c772:	d010      	beq.n	800c796 <aiPbCmdNNRun+0x2e6>
        aiInspectorSendReport(req, resp, EnumState_S_PROCESSING, ctx,
 800c774:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800c776:	f04f 0400 	mov.w	r4, #0
 800c77a:	4618      	mov	r0, r3
 800c77c:	4621      	mov	r1, r4
 800c77e:	f7fe fc1d 	bl	800afbc <dwtCyclesToFloatMs>
 800c782:	eef0 7a40 	vmov.f32	s15, s0
 800c786:	eeb0 0a67 	vmov.f32	s0, s15
 800c78a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c78c:	2202      	movs	r2, #2
 800c78e:	68b9      	ldr	r1, [r7, #8]
 800c790:	68f8      	ldr	r0, [r7, #12]
 800c792:	f7ff fd00 	bl	800c196 <aiInspectorSendReport>
                dwtCyclesToFloatMs(tend));

    /* 3 - Send all output tensors */
    for (int i = 0; i < ctx->report.n_outputs; i++) {
 800c796:	2300      	movs	r3, #0
 800c798:	65bb      	str	r3, [r7, #88]	; 0x58
 800c79a:	e02b      	b.n	800c7f4 <aiPbCmdNNRun+0x344>
    	/* download a buffer */
    	EnumState state = EnumState_S_PROCESSING;
 800c79c:	2302      	movs	r3, #2
 800c79e:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
    	if ((i + 1) == ctx->report.n_outputs)
 800c7a2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800c7a4:	3301      	adds	r3, #1
 800c7a6:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800c7a8:	8ed2      	ldrh	r2, [r2, #54]	; 0x36
 800c7aa:	4293      	cmp	r3, r2
 800c7ac:	d102      	bne.n	800c7b4 <aiPbCmdNNRun+0x304>
    		state = EnumState_S_DONE;
 800c7ae:	2303      	movs	r3, #3
 800c7b0:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
        aiPbMgrSendAiBuffer3(req, resp, state,
 800c7b4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800c7b6:	f04f 0400 	mov.w	r4, #0
 800c7ba:	4618      	mov	r0, r3
 800c7bc:	4621      	mov	r1, r4
 800c7be:	f7fe fbfd 	bl	800afbc <dwtCyclesToFloatMs>
 800c7c2:	eef0 7a40 	vmov.f32	s15, s0
                EnumLayerType_LAYER_TYPE_OUTPUT << 16 | 0,
                0, dwtCyclesToFloatMs(tend),
                &ai_output[i]);
 800c7c6:	f107 0110 	add.w	r1, r7, #16
 800c7ca:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800c7cc:	4613      	mov	r3, r2
 800c7ce:	005b      	lsls	r3, r3, #1
 800c7d0:	4413      	add	r3, r2
 800c7d2:	00db      	lsls	r3, r3, #3
 800c7d4:	440b      	add	r3, r1
        aiPbMgrSendAiBuffer3(req, resp, state,
 800c7d6:	f897 2057 	ldrb.w	r2, [r7, #87]	; 0x57
 800c7da:	9301      	str	r3, [sp, #4]
 800c7dc:	2300      	movs	r3, #0
 800c7de:	9300      	str	r3, [sp, #0]
 800c7e0:	eeb0 0a67 	vmov.f32	s0, s15
 800c7e4:	2300      	movs	r3, #0
 800c7e6:	68b9      	ldr	r1, [r7, #8]
 800c7e8:	68f8      	ldr	r0, [r7, #12]
 800c7ea:	f7fe f913 	bl	800aa14 <aiPbMgrSendAiBuffer3>
    for (int i = 0; i < ctx->report.n_outputs; i++) {
 800c7ee:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800c7f0:	3301      	adds	r3, #1
 800c7f2:	65bb      	str	r3, [r7, #88]	; 0x58
 800c7f4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c7f6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800c7f8:	461a      	mov	r2, r3
 800c7fa:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800c7fc:	4293      	cmp	r3, r2
 800c7fe:	dbcd      	blt.n	800c79c <aiPbCmdNNRun+0x2ec>
    }

    if (inspector_mode)
 800c800:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 800c804:	2b00      	cmp	r3, #0
 800c806:	d002      	beq.n	800c80e <aiPbCmdNNRun+0x35e>
        aiInspectorUnbindAndDestroy(ctx);
 800c808:	6d38      	ldr	r0, [r7, #80]	; 0x50
 800c80a:	f7ff fdaf 	bl	800c36c <aiInspectorUnbindAndDestroy>

    restoreInts(ints);
 800c80e:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800c810:	f7fe fdfc 	bl	800b40c <restoreInts>
 800c814:	e000      	b.n	800c818 <aiPbCmdNNRun+0x368>
            return;
 800c816:	bf00      	nop
}
 800c818:	3770      	adds	r7, #112	; 0x70
 800c81a:	46bd      	mov	sp, r7
 800c81c:	bdb0      	pop	{r4, r5, r7, pc}
 800c81e:	bf00      	nop
 800c820:	20000014 	.word	0x20000014
 800c824:	20000018 	.word	0x20000018
 800c828:	08015768 	.word	0x08015768

0800c82c <aiValidationInit>:
#endif
        AI_PB_CMD_END,
};

int aiValidationInit(void)
{
 800c82c:	b580      	push	{r7, lr}
 800c82e:	af00      	add	r7, sp, #0
    aiPbMgrInit(pbCmdFuncTab);
 800c830:	4808      	ldr	r0, [pc, #32]	; (800c854 <aiValidationInit+0x28>)
 800c832:	f7fd fdbb 	bl	800a3ac <aiPbMgrInit>

    aiTestHeader(_APP_NAME_, _APP_VERSION_MAJOR_, _APP_VERSION_MINOR_);
 800c836:	2202      	movs	r2, #2
 800c838:	2103      	movs	r1, #3
 800c83a:	4807      	ldr	r0, [pc, #28]	; (800c858 <aiValidationInit+0x2c>)
 800c83c:	f7ff f918 	bl	800ba70 <aiTestHeader>

    dwtIpInit();
 800c840:	f7fe fb7a 	bl	800af38 <dwtIpInit>
    crcIpInit();
 800c844:	f7fe fb58 	bl	800aef8 <crcIpInit>
    logDeviceConf();
 800c848:	f7fe fd0c 	bl	800b264 <logDeviceConf>

    return 0;
 800c84c:	2300      	movs	r3, #0
}
 800c84e:	4618      	mov	r0, r3
 800c850:	bd80      	pop	{r7, pc}
 800c852:	bf00      	nop
 800c854:	2000001c 	.word	0x2000001c
 800c858:	08015778 	.word	0x08015778

0800c85c <prj_AI_init>:
    printf("\r\n");
    aiDeInit();
    printf("bye bye ...\r\n");
}

void prj_AI_init() {
 800c85c:	b580      	push	{r7, lr}
 800c85e:	af00      	add	r7, sp, #0
	aiInit();
 800c860:	f7ff fd9c 	bl	800c39c <aiInit>
}
 800c864:	bf00      	nop
 800c866:	bd80      	pop	{r7, pc}

0800c868 <prj_AI_process>:

int prj_AI_process(const float input[1][1][prj_AI_INPUT_SIZE], float output[1][1][prj_AI_OUTPUT_SIZE], bool acceleration) {
 800c868:	b580      	push	{r7, lr}
 800c86a:	b094      	sub	sp, #80	; 0x50
 800c86c:	af00      	add	r7, sp, #0
 800c86e:	60f8      	str	r0, [r7, #12]
 800c870:	60b9      	str	r1, [r7, #8]
 800c872:	4613      	mov	r3, r2
 800c874:	71fb      	strb	r3, [r7, #7]

	ai_buffer b_input = {
 800c876:	4b41      	ldr	r3, [pc, #260]	; (800c97c <prj_AI_process+0x114>)
 800c878:	633b      	str	r3, [r7, #48]	; 0x30
 800c87a:	2301      	movs	r3, #1
 800c87c:	86bb      	strh	r3, [r7, #52]	; 0x34
 800c87e:	2301      	movs	r3, #1
 800c880:	86fb      	strh	r3, [r7, #54]	; 0x36
 800c882:	2301      	movs	r3, #1
 800c884:	873b      	strh	r3, [r7, #56]	; 0x38
 800c886:	2364      	movs	r3, #100	; 0x64
 800c888:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c88a:	68fb      	ldr	r3, [r7, #12]
 800c88c:	643b      	str	r3, [r7, #64]	; 0x40
 800c88e:	2300      	movs	r3, #0
 800c890:	647b      	str	r3, [r7, #68]	; 0x44
		1, 1, 1, prj_AI_INPUT_SIZE,
		(ai_handle)input,
		NULL
	};

	ai_buffer b_output = {
 800c892:	4b3a      	ldr	r3, [pc, #232]	; (800c97c <prj_AI_process+0x114>)
 800c894:	61bb      	str	r3, [r7, #24]
 800c896:	2301      	movs	r3, #1
 800c898:	83bb      	strh	r3, [r7, #28]
 800c89a:	2301      	movs	r3, #1
 800c89c:	83fb      	strh	r3, [r7, #30]
 800c89e:	2301      	movs	r3, #1
 800c8a0:	843b      	strh	r3, [r7, #32]
 800c8a2:	2303      	movs	r3, #3
 800c8a4:	627b      	str	r3, [r7, #36]	; 0x24
 800c8a6:	68bb      	ldr	r3, [r7, #8]
 800c8a8:	62bb      	str	r3, [r7, #40]	; 0x28
 800c8aa:	2300      	movs	r3, #0
 800c8ac:	62fb      	str	r3, [r7, #44]	; 0x2c
		1, 1, 1, prj_AI_OUTPUT_SIZE,
		(ai_handle)output,
		NULL
	};

	if (!acceleration) {
 800c8ae:	79fb      	ldrb	r3, [r7, #7]
 800c8b0:	f083 0301 	eor.w	r3, r3, #1
 800c8b4:	b2db      	uxtb	r3, r3
 800c8b6:	2b00      	cmp	r3, #0
 800c8b8:	d052      	beq.n	800c960 <prj_AI_process+0xf8>

		// Detects is the neural network is initialized
		// Can be initialized using prj_AI_init
		ai_error erreurIA = ai_mnetwork_get_error(net_exec_ctx[0].network);
 800c8ba:	4b31      	ldr	r3, [pc, #196]	; (800c980 <prj_AI_process+0x118>)
 800c8bc:	681b      	ldr	r3, [r3, #0]
 800c8be:	4618      	mov	r0, r3
 800c8c0:	f000 f9e1 	bl	800cc86 <ai_mnetwork_get_error>
 800c8c4:	4603      	mov	r3, r0
 800c8c6:	617b      	str	r3, [r7, #20]
		if (erreurIA.type)
 800c8c8:	7d3b      	ldrb	r3, [r7, #20]
 800c8ca:	2b00      	cmp	r3, #0
 800c8cc:	d001      	beq.n	800c8d2 <prj_AI_process+0x6a>
			return 1;
 800c8ce:	2301      	movs	r3, #1
 800c8d0:	e050      	b.n	800c974 <prj_AI_process+0x10c>

		printf("\r\nDebut de l'analyse...");
 800c8d2:	482c      	ldr	r0, [pc, #176]	; (800c984 <prj_AI_process+0x11c>)
 800c8d4:	f003 ff74 	bl	80107c0 <iprintf>
		int res = ai_mnetwork_run(net_exec_ctx[0].network, &b_input, &b_output);
 800c8d8:	4b29      	ldr	r3, [pc, #164]	; (800c980 <prj_AI_process+0x118>)
 800c8da:	681b      	ldr	r3, [r3, #0]
 800c8dc:	f107 0218 	add.w	r2, r7, #24
 800c8e0:	f107 0130 	add.w	r1, r7, #48	; 0x30
 800c8e4:	4618      	mov	r0, r3
 800c8e6:	f000 fa3f 	bl	800cd68 <ai_mnetwork_run>
 800c8ea:	64b8      	str	r0, [r7, #72]	; 0x48
		printf("\r\nFin de l'analyse, resultat de la fonction ai_mnetwork_run: %s", res ? "true" : "false");
 800c8ec:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c8ee:	2b00      	cmp	r3, #0
 800c8f0:	d001      	beq.n	800c8f6 <prj_AI_process+0x8e>
 800c8f2:	4b25      	ldr	r3, [pc, #148]	; (800c988 <prj_AI_process+0x120>)
 800c8f4:	e000      	b.n	800c8f8 <prj_AI_process+0x90>
 800c8f6:	4b25      	ldr	r3, [pc, #148]	; (800c98c <prj_AI_process+0x124>)
 800c8f8:	4619      	mov	r1, r3
 800c8fa:	4825      	ldr	r0, [pc, #148]	; (800c990 <prj_AI_process+0x128>)
 800c8fc:	f003 ff60 	bl	80107c0 <iprintf>
		if (!res) {
 800c900:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c902:	2b00      	cmp	r3, #0
 800c904:	d111      	bne.n	800c92a <prj_AI_process+0xc2>
			erreurIA = ai_mnetwork_get_error(net_exec_ctx[0].network);
 800c906:	4b1e      	ldr	r3, [pc, #120]	; (800c980 <prj_AI_process+0x118>)
 800c908:	681b      	ldr	r3, [r3, #0]
 800c90a:	4618      	mov	r0, r3
 800c90c:	f000 f9bb 	bl	800cc86 <ai_mnetwork_get_error>
 800c910:	4603      	mov	r3, r0
 800c912:	617b      	str	r3, [r7, #20]
			printf("\r\n\tErreur - type: 0x%x, code: 0x%x", erreurIA.type, erreurIA.code);
 800c914:	7d3b      	ldrb	r3, [r7, #20]
 800c916:	4619      	mov	r1, r3
 800c918:	697b      	ldr	r3, [r7, #20]
 800c91a:	f3c3 2317 	ubfx	r3, r3, #8, #24
 800c91e:	461a      	mov	r2, r3
 800c920:	481c      	ldr	r0, [pc, #112]	; (800c994 <prj_AI_process+0x12c>)
 800c922:	f003 ff4d 	bl	80107c0 <iprintf>
			return 3;
 800c926:	2303      	movs	r3, #3
 800c928:	e024      	b.n	800c974 <prj_AI_process+0x10c>
		}
		printf("\r\n\r\nOutput:");
 800c92a:	481b      	ldr	r0, [pc, #108]	; (800c998 <prj_AI_process+0x130>)
 800c92c:	f003 ff48 	bl	80107c0 <iprintf>
		for (int i = 0; i < 3; i++) {
 800c930:	2300      	movs	r3, #0
 800c932:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c934:	e010      	b.n	800c958 <prj_AI_process+0xf0>
			printf("\r\ndense_%d: %f",i,output[0][0][i]);
 800c936:	68ba      	ldr	r2, [r7, #8]
 800c938:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c93a:	009b      	lsls	r3, r3, #2
 800c93c:	4413      	add	r3, r2
 800c93e:	edd3 7a00 	vldr	s15, [r3]
 800c942:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800c946:	ec53 2b17 	vmov	r2, r3, d7
 800c94a:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 800c94c:	4813      	ldr	r0, [pc, #76]	; (800c99c <prj_AI_process+0x134>)
 800c94e:	f003 ff37 	bl	80107c0 <iprintf>
		for (int i = 0; i < 3; i++) {
 800c952:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c954:	3301      	adds	r3, #1
 800c956:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c958:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c95a:	2b02      	cmp	r3, #2
 800c95c:	ddeb      	ble.n	800c936 <prj_AI_process+0xce>
 800c95e:	e008      	b.n	800c972 <prj_AI_process+0x10a>
		}
	}
	else {
		ai_mnetwork_run(net_exec_ctx[0].network, &b_input, &b_output);
 800c960:	4b07      	ldr	r3, [pc, #28]	; (800c980 <prj_AI_process+0x118>)
 800c962:	681b      	ldr	r3, [r3, #0]
 800c964:	f107 0218 	add.w	r2, r7, #24
 800c968:	f107 0130 	add.w	r1, r7, #48	; 0x30
 800c96c:	4618      	mov	r0, r3
 800c96e:	f000 f9fb 	bl	800cd68 <ai_mnetwork_run>
	}

	return 0;
 800c972:	2300      	movs	r3, #0
}
 800c974:	4618      	mov	r0, r3
 800c976:	3750      	adds	r7, #80	; 0x50
 800c978:	46bd      	mov	sp, r7
 800c97a:	bd80      	pop	{r7, pc}
 800c97c:	01821040 	.word	0x01821040
 800c980:	20000960 	.word	0x20000960
 800c984:	080158c8 	.word	0x080158c8
 800c988:	080158e0 	.word	0x080158e0
 800c98c:	080158e8 	.word	0x080158e8
 800c990:	080158f0 	.word	0x080158f0
 800c994:	08015930 	.word	0x08015930
 800c998:	08015954 	.word	0x08015954
 800c99c:	08015960 	.word	0x08015960

0800c9a0 <MX_X_CUBE_AI_Init>:

/*************************************************************************
  *
  */
void MX_X_CUBE_AI_Init(void)
{
 800c9a0:	b580      	push	{r7, lr}
 800c9a2:	af00      	add	r7, sp, #0
    MX_UARTx_Init();
 800c9a4:	f7fb f872 	bl	8007a8c <MX_USART3_UART_Init>
    aiValidationInit();
 800c9a8:	f7ff ff40 	bl	800c82c <aiValidationInit>
    /* USER CODE BEGIN 0 */
    /* USER CODE END 0 */
}
 800c9ac:	bf00      	nop
 800c9ae:	bd80      	pop	{r7, pc}

0800c9b0 <ai_mnetwork_is_valid>:
AI_STATIC struct network_instance gnetworks[AI_MNETWORK_NUMBER] = {0};

AI_DECLARE_STATIC
ai_bool ai_mnetwork_is_valid(const char* name,
        const ai_network_entry_t *entry)
{
 800c9b0:	b590      	push	{r4, r7, lr}
 800c9b2:	b083      	sub	sp, #12
 800c9b4:	af00      	add	r7, sp, #0
 800c9b6:	6078      	str	r0, [r7, #4]
 800c9b8:	6039      	str	r1, [r7, #0]
    if (name && (strlen(entry->name) == strlen(name)) &&
 800c9ba:	687b      	ldr	r3, [r7, #4]
 800c9bc:	2b00      	cmp	r3, #0
 800c9be:	d01d      	beq.n	800c9fc <ai_mnetwork_is_valid+0x4c>
 800c9c0:	683b      	ldr	r3, [r7, #0]
 800c9c2:	681b      	ldr	r3, [r3, #0]
 800c9c4:	4618      	mov	r0, r3
 800c9c6:	f7fa fa4e 	bl	8006e66 <strlen>
 800c9ca:	4604      	mov	r4, r0
 800c9cc:	6878      	ldr	r0, [r7, #4]
 800c9ce:	f7fa fa4a 	bl	8006e66 <strlen>
 800c9d2:	4603      	mov	r3, r0
 800c9d4:	429c      	cmp	r4, r3
 800c9d6:	d111      	bne.n	800c9fc <ai_mnetwork_is_valid+0x4c>
            (strncmp(entry->name, name, strlen(entry->name)) == 0))
 800c9d8:	683b      	ldr	r3, [r7, #0]
 800c9da:	681c      	ldr	r4, [r3, #0]
 800c9dc:	683b      	ldr	r3, [r7, #0]
 800c9de:	681b      	ldr	r3, [r3, #0]
 800c9e0:	4618      	mov	r0, r3
 800c9e2:	f7fa fa40 	bl	8006e66 <strlen>
 800c9e6:	4603      	mov	r3, r0
 800c9e8:	461a      	mov	r2, r3
 800c9ea:	6879      	ldr	r1, [r7, #4]
 800c9ec:	4620      	mov	r0, r4
 800c9ee:	f003 ff7b 	bl	80108e8 <strncmp>
 800c9f2:	4603      	mov	r3, r0
    if (name && (strlen(entry->name) == strlen(name)) &&
 800c9f4:	2b00      	cmp	r3, #0
 800c9f6:	d101      	bne.n	800c9fc <ai_mnetwork_is_valid+0x4c>
        return true;
 800c9f8:	2301      	movs	r3, #1
 800c9fa:	e000      	b.n	800c9fe <ai_mnetwork_is_valid+0x4e>
    return false;
 800c9fc:	2300      	movs	r3, #0
}
 800c9fe:	4618      	mov	r0, r3
 800ca00:	370c      	adds	r7, #12
 800ca02:	46bd      	mov	sp, r7
 800ca04:	bd90      	pop	{r4, r7, pc}
	...

0800ca08 <ai_mnetwork_handle>:

AI_DECLARE_STATIC
struct network_instance *ai_mnetwork_handle(struct network_instance *inst)
{
 800ca08:	b480      	push	{r7}
 800ca0a:	b085      	sub	sp, #20
 800ca0c:	af00      	add	r7, sp, #0
 800ca0e:	6078      	str	r0, [r7, #4]
    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
 800ca10:	2300      	movs	r3, #0
 800ca12:	60fb      	str	r3, [r7, #12]
 800ca14:	e026      	b.n	800ca64 <ai_mnetwork_handle+0x5c>
        if ((inst) && (&gnetworks[i] == inst))
 800ca16:	687b      	ldr	r3, [r7, #4]
 800ca18:	2b00      	cmp	r3, #0
 800ca1a:	d00b      	beq.n	800ca34 <ai_mnetwork_handle+0x2c>
 800ca1c:	68fa      	ldr	r2, [r7, #12]
 800ca1e:	4613      	mov	r3, r2
 800ca20:	00db      	lsls	r3, r3, #3
 800ca22:	1a9b      	subs	r3, r3, r2
 800ca24:	00db      	lsls	r3, r3, #3
 800ca26:	4a14      	ldr	r2, [pc, #80]	; (800ca78 <ai_mnetwork_handle+0x70>)
 800ca28:	4413      	add	r3, r2
 800ca2a:	687a      	ldr	r2, [r7, #4]
 800ca2c:	429a      	cmp	r2, r3
 800ca2e:	d101      	bne.n	800ca34 <ai_mnetwork_handle+0x2c>
            return inst;
 800ca30:	687b      	ldr	r3, [r7, #4]
 800ca32:	e01b      	b.n	800ca6c <ai_mnetwork_handle+0x64>
        else if ((!inst) && (gnetworks[i].entry == NULL))
 800ca34:	687b      	ldr	r3, [r7, #4]
 800ca36:	2b00      	cmp	r3, #0
 800ca38:	d111      	bne.n	800ca5e <ai_mnetwork_handle+0x56>
 800ca3a:	490f      	ldr	r1, [pc, #60]	; (800ca78 <ai_mnetwork_handle+0x70>)
 800ca3c:	68fa      	ldr	r2, [r7, #12]
 800ca3e:	4613      	mov	r3, r2
 800ca40:	00db      	lsls	r3, r3, #3
 800ca42:	1a9b      	subs	r3, r3, r2
 800ca44:	00db      	lsls	r3, r3, #3
 800ca46:	440b      	add	r3, r1
 800ca48:	681b      	ldr	r3, [r3, #0]
 800ca4a:	2b00      	cmp	r3, #0
 800ca4c:	d107      	bne.n	800ca5e <ai_mnetwork_handle+0x56>
            return &gnetworks[i];
 800ca4e:	68fa      	ldr	r2, [r7, #12]
 800ca50:	4613      	mov	r3, r2
 800ca52:	00db      	lsls	r3, r3, #3
 800ca54:	1a9b      	subs	r3, r3, r2
 800ca56:	00db      	lsls	r3, r3, #3
 800ca58:	4a07      	ldr	r2, [pc, #28]	; (800ca78 <ai_mnetwork_handle+0x70>)
 800ca5a:	4413      	add	r3, r2
 800ca5c:	e006      	b.n	800ca6c <ai_mnetwork_handle+0x64>
    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
 800ca5e:	68fb      	ldr	r3, [r7, #12]
 800ca60:	3301      	adds	r3, #1
 800ca62:	60fb      	str	r3, [r7, #12]
 800ca64:	68fb      	ldr	r3, [r7, #12]
 800ca66:	2b00      	cmp	r3, #0
 800ca68:	ddd5      	ble.n	800ca16 <ai_mnetwork_handle+0xe>
    }
    return NULL;
 800ca6a:	2300      	movs	r3, #0
}
 800ca6c:	4618      	mov	r0, r3
 800ca6e:	3714      	adds	r7, #20
 800ca70:	46bd      	mov	sp, r7
 800ca72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca76:	4770      	bx	lr
 800ca78:	20000b18 	.word	0x20000b18

0800ca7c <ai_mnetwork_release_handle>:

AI_DECLARE_STATIC
void ai_mnetwork_release_handle(struct network_instance *inst)
{
 800ca7c:	b480      	push	{r7}
 800ca7e:	b085      	sub	sp, #20
 800ca80:	af00      	add	r7, sp, #0
 800ca82:	6078      	str	r0, [r7, #4]
    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
 800ca84:	2300      	movs	r3, #0
 800ca86:	60fb      	str	r3, [r7, #12]
 800ca88:	e019      	b.n	800cabe <ai_mnetwork_release_handle+0x42>
        if ((inst) && (&gnetworks[i] == inst)) {
 800ca8a:	687b      	ldr	r3, [r7, #4]
 800ca8c:	2b00      	cmp	r3, #0
 800ca8e:	d013      	beq.n	800cab8 <ai_mnetwork_release_handle+0x3c>
 800ca90:	68fa      	ldr	r2, [r7, #12]
 800ca92:	4613      	mov	r3, r2
 800ca94:	00db      	lsls	r3, r3, #3
 800ca96:	1a9b      	subs	r3, r3, r2
 800ca98:	00db      	lsls	r3, r3, #3
 800ca9a:	4a0d      	ldr	r2, [pc, #52]	; (800cad0 <ai_mnetwork_release_handle+0x54>)
 800ca9c:	4413      	add	r3, r2
 800ca9e:	687a      	ldr	r2, [r7, #4]
 800caa0:	429a      	cmp	r2, r3
 800caa2:	d109      	bne.n	800cab8 <ai_mnetwork_release_handle+0x3c>
            gnetworks[i].entry = NULL;
 800caa4:	490a      	ldr	r1, [pc, #40]	; (800cad0 <ai_mnetwork_release_handle+0x54>)
 800caa6:	68fa      	ldr	r2, [r7, #12]
 800caa8:	4613      	mov	r3, r2
 800caaa:	00db      	lsls	r3, r3, #3
 800caac:	1a9b      	subs	r3, r3, r2
 800caae:	00db      	lsls	r3, r3, #3
 800cab0:	440b      	add	r3, r1
 800cab2:	2200      	movs	r2, #0
 800cab4:	601a      	str	r2, [r3, #0]
            return;
 800cab6:	e005      	b.n	800cac4 <ai_mnetwork_release_handle+0x48>
    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
 800cab8:	68fb      	ldr	r3, [r7, #12]
 800caba:	3301      	adds	r3, #1
 800cabc:	60fb      	str	r3, [r7, #12]
 800cabe:	68fb      	ldr	r3, [r7, #12]
 800cac0:	2b00      	cmp	r3, #0
 800cac2:	dde2      	ble.n	800ca8a <ai_mnetwork_release_handle+0xe>
        }
    }
}
 800cac4:	3714      	adds	r7, #20
 800cac6:	46bd      	mov	sp, r7
 800cac8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cacc:	4770      	bx	lr
 800cace:	bf00      	nop
 800cad0:	20000b18 	.word	0x20000b18

0800cad4 <ai_mnetwork_find>:

AI_API_ENTRY
const char* ai_mnetwork_find(const char *name, ai_int idx)
{
 800cad4:	b580      	push	{r7, lr}
 800cad6:	b084      	sub	sp, #16
 800cad8:	af00      	add	r7, sp, #0
 800cada:	6078      	str	r0, [r7, #4]
 800cadc:	6039      	str	r1, [r7, #0]
    const ai_network_entry_t *entry;

    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
 800cade:	2300      	movs	r3, #0
 800cae0:	60fb      	str	r3, [r7, #12]
 800cae2:	e01c      	b.n	800cb1e <ai_mnetwork_find+0x4a>
        entry = &networks[i];
 800cae4:	68fa      	ldr	r2, [r7, #12]
 800cae6:	4613      	mov	r3, r2
 800cae8:	005b      	lsls	r3, r3, #1
 800caea:	4413      	add	r3, r2
 800caec:	015b      	lsls	r3, r3, #5
 800caee:	4a10      	ldr	r2, [pc, #64]	; (800cb30 <ai_mnetwork_find+0x5c>)
 800caf0:	4413      	add	r3, r2
 800caf2:	60bb      	str	r3, [r7, #8]
        if (ai_mnetwork_is_valid(name, entry))
 800caf4:	68b9      	ldr	r1, [r7, #8]
 800caf6:	6878      	ldr	r0, [r7, #4]
 800caf8:	f7ff ff5a 	bl	800c9b0 <ai_mnetwork_is_valid>
 800cafc:	4603      	mov	r3, r0
 800cafe:	2b00      	cmp	r3, #0
 800cb00:	d002      	beq.n	800cb08 <ai_mnetwork_find+0x34>
            return entry->name;
 800cb02:	68bb      	ldr	r3, [r7, #8]
 800cb04:	681b      	ldr	r3, [r3, #0]
 800cb06:	e00e      	b.n	800cb26 <ai_mnetwork_find+0x52>
        else {
            if (!idx--)
 800cb08:	683b      	ldr	r3, [r7, #0]
 800cb0a:	1e5a      	subs	r2, r3, #1
 800cb0c:	603a      	str	r2, [r7, #0]
 800cb0e:	2b00      	cmp	r3, #0
 800cb10:	d102      	bne.n	800cb18 <ai_mnetwork_find+0x44>
                return entry->name;
 800cb12:	68bb      	ldr	r3, [r7, #8]
 800cb14:	681b      	ldr	r3, [r3, #0]
 800cb16:	e006      	b.n	800cb26 <ai_mnetwork_find+0x52>
    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
 800cb18:	68fb      	ldr	r3, [r7, #12]
 800cb1a:	3301      	adds	r3, #1
 800cb1c:	60fb      	str	r3, [r7, #12]
 800cb1e:	68fb      	ldr	r3, [r7, #12]
 800cb20:	2b00      	cmp	r3, #0
 800cb22:	dddf      	ble.n	800cae4 <ai_mnetwork_find+0x10>
        }
    }
    return NULL;
 800cb24:	2300      	movs	r3, #0
}
 800cb26:	4618      	mov	r0, r3
 800cb28:	3710      	adds	r7, #16
 800cb2a:	46bd      	mov	sp, r7
 800cb2c:	bd80      	pop	{r7, pc}
 800cb2e:	bf00      	nop
 800cb30:	08015cd4 	.word	0x08015cd4

0800cb34 <ai_mnetwork_create>:

AI_API_ENTRY
ai_error ai_mnetwork_create(const char *name, ai_handle* network,
        const ai_buffer* network_config)
{
 800cb34:	b580      	push	{r7, lr}
 800cb36:	b08a      	sub	sp, #40	; 0x28
 800cb38:	af00      	add	r7, sp, #0
 800cb3a:	60f8      	str	r0, [r7, #12]
 800cb3c:	60b9      	str	r1, [r7, #8]
 800cb3e:	607a      	str	r2, [r7, #4]
    const ai_network_entry_t *entry;
    const ai_network_entry_t *found = NULL;
 800cb40:	2300      	movs	r3, #0
 800cb42:	627b      	str	r3, [r7, #36]	; 0x24
    ai_error err;
    struct network_instance *inst = ai_mnetwork_handle(NULL);
 800cb44:	2000      	movs	r0, #0
 800cb46:	f7ff ff5f 	bl	800ca08 <ai_mnetwork_handle>
 800cb4a:	61f8      	str	r0, [r7, #28]

    if (!inst) {
 800cb4c:	69fb      	ldr	r3, [r7, #28]
 800cb4e:	2b00      	cmp	r3, #0
 800cb50:	d108      	bne.n	800cb64 <ai_mnetwork_create+0x30>
        err.type = AI_ERROR_ALLOCATION_FAILED;
 800cb52:	2331      	movs	r3, #49	; 0x31
 800cb54:	753b      	strb	r3, [r7, #20]
        err.code = AI_ERROR_CODE_NETWORK;
 800cb56:	697b      	ldr	r3, [r7, #20]
 800cb58:	2210      	movs	r2, #16
 800cb5a:	f362 231f 	bfi	r3, r2, #8, #24
 800cb5e:	617b      	str	r3, [r7, #20]
        return err;
 800cb60:	697b      	ldr	r3, [r7, #20]
 800cb62:	e04d      	b.n	800cc00 <ai_mnetwork_create+0xcc>
    }

    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
 800cb64:	2300      	movs	r3, #0
 800cb66:	623b      	str	r3, [r7, #32]
 800cb68:	e014      	b.n	800cb94 <ai_mnetwork_create+0x60>
        entry = &networks[i];
 800cb6a:	6a3a      	ldr	r2, [r7, #32]
 800cb6c:	4613      	mov	r3, r2
 800cb6e:	005b      	lsls	r3, r3, #1
 800cb70:	4413      	add	r3, r2
 800cb72:	015b      	lsls	r3, r3, #5
 800cb74:	4a24      	ldr	r2, [pc, #144]	; (800cc08 <ai_mnetwork_create+0xd4>)
 800cb76:	4413      	add	r3, r2
 800cb78:	61bb      	str	r3, [r7, #24]
        if (ai_mnetwork_is_valid(name, entry)) {
 800cb7a:	69b9      	ldr	r1, [r7, #24]
 800cb7c:	68f8      	ldr	r0, [r7, #12]
 800cb7e:	f7ff ff17 	bl	800c9b0 <ai_mnetwork_is_valid>
 800cb82:	4603      	mov	r3, r0
 800cb84:	2b00      	cmp	r3, #0
 800cb86:	d002      	beq.n	800cb8e <ai_mnetwork_create+0x5a>
            found = entry;
 800cb88:	69bb      	ldr	r3, [r7, #24]
 800cb8a:	627b      	str	r3, [r7, #36]	; 0x24
            break;
 800cb8c:	e005      	b.n	800cb9a <ai_mnetwork_create+0x66>
    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
 800cb8e:	6a3b      	ldr	r3, [r7, #32]
 800cb90:	3301      	adds	r3, #1
 800cb92:	623b      	str	r3, [r7, #32]
 800cb94:	6a3b      	ldr	r3, [r7, #32]
 800cb96:	2b00      	cmp	r3, #0
 800cb98:	dde7      	ble.n	800cb6a <ai_mnetwork_create+0x36>
        }
    }

    if (!found) {
 800cb9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cb9c:	2b00      	cmp	r3, #0
 800cb9e:	d108      	bne.n	800cbb2 <ai_mnetwork_create+0x7e>
        err.type = AI_ERROR_INVALID_PARAM;
 800cba0:	2314      	movs	r3, #20
 800cba2:	753b      	strb	r3, [r7, #20]
        err.code = AI_ERROR_CODE_NETWORK;
 800cba4:	697b      	ldr	r3, [r7, #20]
 800cba6:	2210      	movs	r2, #16
 800cba8:	f362 231f 	bfi	r3, r2, #8, #24
 800cbac:	617b      	str	r3, [r7, #20]
        return err;
 800cbae:	697b      	ldr	r3, [r7, #20]
 800cbb0:	e026      	b.n	800cc00 <ai_mnetwork_create+0xcc>
    }

    if (network_config == NULL)
 800cbb2:	687b      	ldr	r3, [r7, #4]
 800cbb4:	2b00      	cmp	r3, #0
 800cbb6:	d109      	bne.n	800cbcc <ai_mnetwork_create+0x98>
        err = found->ai_create(network, found->config);
 800cbb8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cbba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cbbc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800cbbe:	6b52      	ldr	r2, [r2, #52]	; 0x34
 800cbc0:	4611      	mov	r1, r2
 800cbc2:	68b8      	ldr	r0, [r7, #8]
 800cbc4:	4798      	blx	r3
 800cbc6:	4603      	mov	r3, r0
 800cbc8:	617b      	str	r3, [r7, #20]
 800cbca:	e006      	b.n	800cbda <ai_mnetwork_create+0xa6>
    else
        err = found->ai_create(network, network_config);
 800cbcc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cbce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cbd0:	6879      	ldr	r1, [r7, #4]
 800cbd2:	68b8      	ldr	r0, [r7, #8]
 800cbd4:	4798      	blx	r3
 800cbd6:	4603      	mov	r3, r0
 800cbd8:	617b      	str	r3, [r7, #20]
    if ((err.code == AI_ERROR_CODE_NONE) && (err.type == AI_ERROR_NONE)) {
 800cbda:	697b      	ldr	r3, [r7, #20]
 800cbdc:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800cbe0:	2b00      	cmp	r3, #0
 800cbe2:	d10c      	bne.n	800cbfe <ai_mnetwork_create+0xca>
 800cbe4:	7d3b      	ldrb	r3, [r7, #20]
 800cbe6:	2b00      	cmp	r3, #0
 800cbe8:	d109      	bne.n	800cbfe <ai_mnetwork_create+0xca>
        inst->entry = found;
 800cbea:	69fb      	ldr	r3, [r7, #28]
 800cbec:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800cbee:	601a      	str	r2, [r3, #0]
        inst->handle = *network;
 800cbf0:	68bb      	ldr	r3, [r7, #8]
 800cbf2:	681a      	ldr	r2, [r3, #0]
 800cbf4:	69fb      	ldr	r3, [r7, #28]
 800cbf6:	605a      	str	r2, [r3, #4]
        *network = (ai_handle*)inst;
 800cbf8:	68bb      	ldr	r3, [r7, #8]
 800cbfa:	69fa      	ldr	r2, [r7, #28]
 800cbfc:	601a      	str	r2, [r3, #0]
    }

    return err;
 800cbfe:	697b      	ldr	r3, [r7, #20]
}
 800cc00:	4618      	mov	r0, r3
 800cc02:	3728      	adds	r7, #40	; 0x28
 800cc04:	46bd      	mov	sp, r7
 800cc06:	bd80      	pop	{r7, pc}
 800cc08:	08015cd4 	.word	0x08015cd4

0800cc0c <ai_mnetwork_destroy>:

AI_API_ENTRY
ai_handle ai_mnetwork_destroy(ai_handle network)
{
 800cc0c:	b580      	push	{r7, lr}
 800cc0e:	b084      	sub	sp, #16
 800cc10:	af00      	add	r7, sp, #0
 800cc12:	6078      	str	r0, [r7, #4]
    struct network_instance *inn;
    inn =  ai_mnetwork_handle((struct network_instance *)network);
 800cc14:	6878      	ldr	r0, [r7, #4]
 800cc16:	f7ff fef7 	bl	800ca08 <ai_mnetwork_handle>
 800cc1a:	60f8      	str	r0, [r7, #12]
    if (inn) {
 800cc1c:	68fb      	ldr	r3, [r7, #12]
 800cc1e:	2b00      	cmp	r3, #0
 800cc20:	d011      	beq.n	800cc46 <ai_mnetwork_destroy+0x3a>
        ai_handle hdl = inn->entry->ai_destroy(inn->handle);
 800cc22:	68fb      	ldr	r3, [r7, #12]
 800cc24:	681b      	ldr	r3, [r3, #0]
 800cc26:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cc28:	68fa      	ldr	r2, [r7, #12]
 800cc2a:	6852      	ldr	r2, [r2, #4]
 800cc2c:	4610      	mov	r0, r2
 800cc2e:	4798      	blx	r3
 800cc30:	60b8      	str	r0, [r7, #8]
        if (hdl != inn->handle) {
 800cc32:	68fb      	ldr	r3, [r7, #12]
 800cc34:	685b      	ldr	r3, [r3, #4]
 800cc36:	68ba      	ldr	r2, [r7, #8]
 800cc38:	429a      	cmp	r2, r3
 800cc3a:	d004      	beq.n	800cc46 <ai_mnetwork_destroy+0x3a>
            ai_mnetwork_release_handle(inn);
 800cc3c:	68f8      	ldr	r0, [r7, #12]
 800cc3e:	f7ff ff1d 	bl	800ca7c <ai_mnetwork_release_handle>
            network = AI_HANDLE_NULL;
 800cc42:	2300      	movs	r3, #0
 800cc44:	607b      	str	r3, [r7, #4]
        }
    }
    return network;
 800cc46:	687b      	ldr	r3, [r7, #4]
}
 800cc48:	4618      	mov	r0, r3
 800cc4a:	3710      	adds	r7, #16
 800cc4c:	46bd      	mov	sp, r7
 800cc4e:	bd80      	pop	{r7, pc}

0800cc50 <ai_mnetwork_get_info>:

AI_API_ENTRY
ai_bool ai_mnetwork_get_info(ai_handle network, ai_network_report* report)
{
 800cc50:	b580      	push	{r7, lr}
 800cc52:	b084      	sub	sp, #16
 800cc54:	af00      	add	r7, sp, #0
 800cc56:	6078      	str	r0, [r7, #4]
 800cc58:	6039      	str	r1, [r7, #0]
    struct network_instance *inn;
    inn =  ai_mnetwork_handle((struct network_instance *)network);
 800cc5a:	6878      	ldr	r0, [r7, #4]
 800cc5c:	f7ff fed4 	bl	800ca08 <ai_mnetwork_handle>
 800cc60:	60f8      	str	r0, [r7, #12]
    if (inn)
 800cc62:	68fb      	ldr	r3, [r7, #12]
 800cc64:	2b00      	cmp	r3, #0
 800cc66:	d009      	beq.n	800cc7c <ai_mnetwork_get_info+0x2c>
        return inn->entry->ai_get_info(inn->handle, report);
 800cc68:	68fb      	ldr	r3, [r7, #12]
 800cc6a:	681b      	ldr	r3, [r3, #0]
 800cc6c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cc6e:	68fa      	ldr	r2, [r7, #12]
 800cc70:	6852      	ldr	r2, [r2, #4]
 800cc72:	6839      	ldr	r1, [r7, #0]
 800cc74:	4610      	mov	r0, r2
 800cc76:	4798      	blx	r3
 800cc78:	4603      	mov	r3, r0
 800cc7a:	e000      	b.n	800cc7e <ai_mnetwork_get_info+0x2e>
    else
        return false;
 800cc7c:	2300      	movs	r3, #0
}
 800cc7e:	4618      	mov	r0, r3
 800cc80:	3710      	adds	r7, #16
 800cc82:	46bd      	mov	sp, r7
 800cc84:	bd80      	pop	{r7, pc}

0800cc86 <ai_mnetwork_get_error>:

AI_API_ENTRY
ai_error ai_mnetwork_get_error(ai_handle network)
{
 800cc86:	b580      	push	{r7, lr}
 800cc88:	b084      	sub	sp, #16
 800cc8a:	af00      	add	r7, sp, #0
 800cc8c:	6078      	str	r0, [r7, #4]
    struct network_instance *inn;
    ai_error err;
    err.type = AI_ERROR_INVALID_PARAM;
 800cc8e:	2314      	movs	r3, #20
 800cc90:	723b      	strb	r3, [r7, #8]
    err.code = AI_ERROR_CODE_NETWORK;
 800cc92:	68bb      	ldr	r3, [r7, #8]
 800cc94:	2210      	movs	r2, #16
 800cc96:	f362 231f 	bfi	r3, r2, #8, #24
 800cc9a:	60bb      	str	r3, [r7, #8]

    inn =  ai_mnetwork_handle((struct network_instance *)network);
 800cc9c:	6878      	ldr	r0, [r7, #4]
 800cc9e:	f7ff feb3 	bl	800ca08 <ai_mnetwork_handle>
 800cca2:	60f8      	str	r0, [r7, #12]
    if (inn)
 800cca4:	68fb      	ldr	r3, [r7, #12]
 800cca6:	2b00      	cmp	r3, #0
 800cca8:	d008      	beq.n	800ccbc <ai_mnetwork_get_error+0x36>
        return inn->entry->ai_get_error(inn->handle);
 800ccaa:	68fb      	ldr	r3, [r7, #12]
 800ccac:	681b      	ldr	r3, [r3, #0]
 800ccae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ccb0:	68fa      	ldr	r2, [r7, #12]
 800ccb2:	6852      	ldr	r2, [r2, #4]
 800ccb4:	4610      	mov	r0, r2
 800ccb6:	4798      	blx	r3
 800ccb8:	4603      	mov	r3, r0
 800ccba:	e000      	b.n	800ccbe <ai_mnetwork_get_error+0x38>
    else
        return err;
 800ccbc:	68bb      	ldr	r3, [r7, #8]
}
 800ccbe:	4618      	mov	r0, r3
 800ccc0:	3710      	adds	r7, #16
 800ccc2:	46bd      	mov	sp, r7
 800ccc4:	bd80      	pop	{r7, pc}

0800ccc6 <ai_mnetwork_init>:

AI_API_ENTRY
ai_bool ai_mnetwork_init(ai_handle network, const ai_network_params* params)
{
 800ccc6:	b5b0      	push	{r4, r5, r7, lr}
 800ccc8:	b090      	sub	sp, #64	; 0x40
 800ccca:	af00      	add	r7, sp, #0
 800cccc:	6078      	str	r0, [r7, #4]
 800ccce:	6039      	str	r1, [r7, #0]
    struct network_instance *inn;
    ai_network_params par;

    /* TODO: adding check ai_buffer activations/weights shape coherence */

    inn =  ai_mnetwork_handle((struct network_instance *)network);
 800ccd0:	6878      	ldr	r0, [r7, #4]
 800ccd2:	f7ff fe99 	bl	800ca08 <ai_mnetwork_handle>
 800ccd6:	63f8      	str	r0, [r7, #60]	; 0x3c
    if (inn) {
 800ccd8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ccda:	2b00      	cmp	r3, #0
 800ccdc:	d03f      	beq.n	800cd5e <ai_mnetwork_init+0x98>
        par = inn->entry->params;
 800ccde:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cce0:	681b      	ldr	r3, [r3, #0]
 800cce2:	f107 040c 	add.w	r4, r7, #12
 800cce6:	1d1d      	adds	r5, r3, #4
 800cce8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ccea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ccec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ccee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ccf0:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800ccf4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
        if (params->activations.n_batches)
 800ccf8:	683b      	ldr	r3, [r7, #0]
 800ccfa:	8b9b      	ldrh	r3, [r3, #28]
 800ccfc:	2b00      	cmp	r3, #0
 800ccfe:	d00b      	beq.n	800cd18 <ai_mnetwork_init+0x52>
            par.activations = params->activations;
 800cd00:	683b      	ldr	r3, [r7, #0]
 800cd02:	f107 0424 	add.w	r4, r7, #36	; 0x24
 800cd06:	f103 0518 	add.w	r5, r3, #24
 800cd0a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800cd0c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800cd0e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800cd12:	e884 0003 	stmia.w	r4, {r0, r1}
 800cd16:	e002      	b.n	800cd1e <ai_mnetwork_init+0x58>
        else
            par.activations.data = params->activations.data;
 800cd18:	683b      	ldr	r3, [r7, #0]
 800cd1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cd1c:	637b      	str	r3, [r7, #52]	; 0x34
        if (params->params.n_batches)
 800cd1e:	683b      	ldr	r3, [r7, #0]
 800cd20:	889b      	ldrh	r3, [r3, #4]
 800cd22:	2b00      	cmp	r3, #0
 800cd24:	d00a      	beq.n	800cd3c <ai_mnetwork_init+0x76>
            par.params = params->params;
 800cd26:	683b      	ldr	r3, [r7, #0]
 800cd28:	f107 040c 	add.w	r4, r7, #12
 800cd2c:	461d      	mov	r5, r3
 800cd2e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800cd30:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800cd32:	e895 0003 	ldmia.w	r5, {r0, r1}
 800cd36:	e884 0003 	stmia.w	r4, {r0, r1}
 800cd3a:	e005      	b.n	800cd48 <ai_mnetwork_init+0x82>
        else
            par.params.data = inn->entry->ai_data_weights_get_default();
 800cd3c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cd3e:	681b      	ldr	r3, [r3, #0]
 800cd40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cd42:	4798      	blx	r3
 800cd44:	4603      	mov	r3, r0
 800cd46:	61fb      	str	r3, [r7, #28]
        return inn->entry->ai_init(inn->handle, &par);
 800cd48:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cd4a:	681b      	ldr	r3, [r3, #0]
 800cd4c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800cd4e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800cd50:	6852      	ldr	r2, [r2, #4]
 800cd52:	f107 010c 	add.w	r1, r7, #12
 800cd56:	4610      	mov	r0, r2
 800cd58:	4798      	blx	r3
 800cd5a:	4603      	mov	r3, r0
 800cd5c:	e000      	b.n	800cd60 <ai_mnetwork_init+0x9a>
    }
    else
        return false;
 800cd5e:	2300      	movs	r3, #0
}
 800cd60:	4618      	mov	r0, r3
 800cd62:	3740      	adds	r7, #64	; 0x40
 800cd64:	46bd      	mov	sp, r7
 800cd66:	bdb0      	pop	{r4, r5, r7, pc}

0800cd68 <ai_mnetwork_run>:

AI_API_ENTRY
ai_i32 ai_mnetwork_run(ai_handle network, const ai_buffer* input,
        ai_buffer* output)
{
 800cd68:	b580      	push	{r7, lr}
 800cd6a:	b086      	sub	sp, #24
 800cd6c:	af00      	add	r7, sp, #0
 800cd6e:	60f8      	str	r0, [r7, #12]
 800cd70:	60b9      	str	r1, [r7, #8]
 800cd72:	607a      	str	r2, [r7, #4]
    struct network_instance* inn;
    inn =  ai_mnetwork_handle((struct network_instance *)network);
 800cd74:	68f8      	ldr	r0, [r7, #12]
 800cd76:	f7ff fe47 	bl	800ca08 <ai_mnetwork_handle>
 800cd7a:	6178      	str	r0, [r7, #20]
    if (inn)
 800cd7c:	697b      	ldr	r3, [r7, #20]
 800cd7e:	2b00      	cmp	r3, #0
 800cd80:	d009      	beq.n	800cd96 <ai_mnetwork_run+0x2e>
        return inn->entry->ai_run(inn->handle, input, output);
 800cd82:	697b      	ldr	r3, [r7, #20]
 800cd84:	681b      	ldr	r3, [r3, #0]
 800cd86:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800cd88:	697a      	ldr	r2, [r7, #20]
 800cd8a:	6850      	ldr	r0, [r2, #4]
 800cd8c:	687a      	ldr	r2, [r7, #4]
 800cd8e:	68b9      	ldr	r1, [r7, #8]
 800cd90:	4798      	blx	r3
 800cd92:	4603      	mov	r3, r0
 800cd94:	e000      	b.n	800cd98 <ai_mnetwork_run+0x30>
    else
        return 0;
 800cd96:	2300      	movs	r3, #0
}
 800cd98:	4618      	mov	r0, r3
 800cd9a:	3718      	adds	r7, #24
 800cd9c:	46bd      	mov	sp, r7
 800cd9e:	bd80      	pop	{r7, pc}

0800cda0 <ai_mnetwork_get_private_handle>:

AI_API_ENTRY
 int ai_mnetwork_get_private_handle(ai_handle network,
         ai_handle *phandle,
         ai_network_params *pparams)
 {
 800cda0:	b5b0      	push	{r4, r5, r7, lr}
 800cda2:	b086      	sub	sp, #24
 800cda4:	af00      	add	r7, sp, #0
 800cda6:	60f8      	str	r0, [r7, #12]
 800cda8:	60b9      	str	r1, [r7, #8]
 800cdaa:	607a      	str	r2, [r7, #4]
     struct network_instance* inn;
     inn =  ai_mnetwork_handle((struct network_instance *)network);
 800cdac:	68f8      	ldr	r0, [r7, #12]
 800cdae:	f7ff fe2b 	bl	800ca08 <ai_mnetwork_handle>
 800cdb2:	6178      	str	r0, [r7, #20]
     if (inn && phandle && pparams) {
 800cdb4:	697b      	ldr	r3, [r7, #20]
 800cdb6:	2b00      	cmp	r3, #0
 800cdb8:	d018      	beq.n	800cdec <ai_mnetwork_get_private_handle+0x4c>
 800cdba:	68bb      	ldr	r3, [r7, #8]
 800cdbc:	2b00      	cmp	r3, #0
 800cdbe:	d015      	beq.n	800cdec <ai_mnetwork_get_private_handle+0x4c>
 800cdc0:	687b      	ldr	r3, [r7, #4]
 800cdc2:	2b00      	cmp	r3, #0
 800cdc4:	d012      	beq.n	800cdec <ai_mnetwork_get_private_handle+0x4c>
         *phandle = inn->handle;
 800cdc6:	697b      	ldr	r3, [r7, #20]
 800cdc8:	685a      	ldr	r2, [r3, #4]
 800cdca:	68bb      	ldr	r3, [r7, #8]
 800cdcc:	601a      	str	r2, [r3, #0]
         *pparams = inn->params;
 800cdce:	687a      	ldr	r2, [r7, #4]
 800cdd0:	697b      	ldr	r3, [r7, #20]
 800cdd2:	4615      	mov	r5, r2
 800cdd4:	f103 0408 	add.w	r4, r3, #8
 800cdd8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800cdda:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800cddc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800cdde:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800cde0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800cde4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
         return 0;
 800cde8:	2300      	movs	r3, #0
 800cdea:	e001      	b.n	800cdf0 <ai_mnetwork_get_private_handle+0x50>
     }
     else
         return -1;
 800cdec:	f04f 33ff 	mov.w	r3, #4294967295
 }
 800cdf0:	4618      	mov	r0, r3
 800cdf2:	3718      	adds	r7, #24
 800cdf4:	46bd      	mov	sp, r7
 800cdf6:	bdb0      	pop	{r4, r5, r7, pc}

0800cdf8 <ai_mnetwork_get_ext_data_activations>:

 AI_API_ENTRY
int ai_mnetwork_get_ext_data_activations(ai_handle network,
         ai_u32 *add,
         ai_u32 *size)
 {
 800cdf8:	b580      	push	{r7, lr}
 800cdfa:	b086      	sub	sp, #24
 800cdfc:	af00      	add	r7, sp, #0
 800cdfe:	60f8      	str	r0, [r7, #12]
 800ce00:	60b9      	str	r1, [r7, #8]
 800ce02:	607a      	str	r2, [r7, #4]
     struct network_instance* inn;
     inn =  ai_mnetwork_handle((struct network_instance *)network);
 800ce04:	68f8      	ldr	r0, [r7, #12]
 800ce06:	f7ff fdff 	bl	800ca08 <ai_mnetwork_handle>
 800ce0a:	6178      	str	r0, [r7, #20]
     if (inn && add && size) {
 800ce0c:	697b      	ldr	r3, [r7, #20]
 800ce0e:	2b00      	cmp	r3, #0
 800ce10:	d011      	beq.n	800ce36 <ai_mnetwork_get_ext_data_activations+0x3e>
 800ce12:	68bb      	ldr	r3, [r7, #8]
 800ce14:	2b00      	cmp	r3, #0
 800ce16:	d00e      	beq.n	800ce36 <ai_mnetwork_get_ext_data_activations+0x3e>
 800ce18:	687b      	ldr	r3, [r7, #4]
 800ce1a:	2b00      	cmp	r3, #0
 800ce1c:	d00b      	beq.n	800ce36 <ai_mnetwork_get_ext_data_activations+0x3e>
         *add = inn->entry->extActBufferStartAddr;
 800ce1e:	697b      	ldr	r3, [r7, #20]
 800ce20:	681b      	ldr	r3, [r3, #0]
 800ce22:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800ce24:	68bb      	ldr	r3, [r7, #8]
 800ce26:	601a      	str	r2, [r3, #0]
         *size = inn->entry->actBufferSize;
 800ce28:	697b      	ldr	r3, [r7, #20]
 800ce2a:	681b      	ldr	r3, [r3, #0]
 800ce2c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800ce2e:	687b      	ldr	r3, [r7, #4]
 800ce30:	601a      	str	r2, [r3, #0]
         return 0;
 800ce32:	2300      	movs	r3, #0
 800ce34:	e001      	b.n	800ce3a <ai_mnetwork_get_ext_data_activations+0x42>
     }
     else
         return -1;
 800ce36:	f04f 33ff 	mov.w	r3, #4294967295
 }
 800ce3a:	4618      	mov	r0, r3
 800ce3c:	3718      	adds	r7, #24
 800ce3e:	46bd      	mov	sp, r7
 800ce40:	bd80      	pop	{r7, pc}
	...

0800ce44 <network_configure_activations>:
 800ce44:	b480      	push	{r7}
 800ce46:	b085      	sub	sp, #20
 800ce48:	af00      	add	r7, sp, #0
 800ce4a:	6078      	str	r0, [r7, #4]
 800ce4c:	6039      	str	r1, [r7, #0]
 800ce4e:	683b      	ldr	r3, [r7, #0]
 800ce50:	691b      	ldr	r3, [r3, #16]
 800ce52:	3303      	adds	r3, #3
 800ce54:	f023 0303 	bic.w	r3, r3, #3
 800ce58:	60fb      	str	r3, [r7, #12]
 800ce5a:	4b1a      	ldr	r3, [pc, #104]	; (800cec4 <network_configure_activations+0x80>)
 800ce5c:	2200      	movs	r2, #0
 800ce5e:	609a      	str	r2, [r3, #8]
 800ce60:	4b18      	ldr	r3, [pc, #96]	; (800cec4 <network_configure_activations+0x80>)
 800ce62:	2200      	movs	r2, #0
 800ce64:	60da      	str	r2, [r3, #12]
 800ce66:	4a18      	ldr	r2, [pc, #96]	; (800cec8 <network_configure_activations+0x84>)
 800ce68:	68fb      	ldr	r3, [r7, #12]
 800ce6a:	6093      	str	r3, [r2, #8]
 800ce6c:	4a16      	ldr	r2, [pc, #88]	; (800cec8 <network_configure_activations+0x84>)
 800ce6e:	68fb      	ldr	r3, [r7, #12]
 800ce70:	60d3      	str	r3, [r2, #12]
 800ce72:	4a16      	ldr	r2, [pc, #88]	; (800cecc <network_configure_activations+0x88>)
 800ce74:	68fb      	ldr	r3, [r7, #12]
 800ce76:	6093      	str	r3, [r2, #8]
 800ce78:	4a14      	ldr	r2, [pc, #80]	; (800cecc <network_configure_activations+0x88>)
 800ce7a:	68fb      	ldr	r3, [r7, #12]
 800ce7c:	60d3      	str	r3, [r2, #12]
 800ce7e:	68fb      	ldr	r3, [r7, #12]
 800ce80:	3360      	adds	r3, #96	; 0x60
 800ce82:	4a13      	ldr	r2, [pc, #76]	; (800ced0 <network_configure_activations+0x8c>)
 800ce84:	6093      	str	r3, [r2, #8]
 800ce86:	68fb      	ldr	r3, [r7, #12]
 800ce88:	3360      	adds	r3, #96	; 0x60
 800ce8a:	4a11      	ldr	r2, [pc, #68]	; (800ced0 <network_configure_activations+0x8c>)
 800ce8c:	60d3      	str	r3, [r2, #12]
 800ce8e:	68fb      	ldr	r3, [r7, #12]
 800ce90:	3360      	adds	r3, #96	; 0x60
 800ce92:	4a10      	ldr	r2, [pc, #64]	; (800ced4 <network_configure_activations+0x90>)
 800ce94:	6093      	str	r3, [r2, #8]
 800ce96:	68fb      	ldr	r3, [r7, #12]
 800ce98:	3360      	adds	r3, #96	; 0x60
 800ce9a:	4a0e      	ldr	r2, [pc, #56]	; (800ced4 <network_configure_activations+0x90>)
 800ce9c:	60d3      	str	r3, [r2, #12]
 800ce9e:	4a0e      	ldr	r2, [pc, #56]	; (800ced8 <network_configure_activations+0x94>)
 800cea0:	68fb      	ldr	r3, [r7, #12]
 800cea2:	6093      	str	r3, [r2, #8]
 800cea4:	4a0c      	ldr	r2, [pc, #48]	; (800ced8 <network_configure_activations+0x94>)
 800cea6:	68fb      	ldr	r3, [r7, #12]
 800cea8:	60d3      	str	r3, [r2, #12]
 800ceaa:	4b0c      	ldr	r3, [pc, #48]	; (800cedc <network_configure_activations+0x98>)
 800ceac:	2200      	movs	r2, #0
 800ceae:	609a      	str	r2, [r3, #8]
 800ceb0:	4b0a      	ldr	r3, [pc, #40]	; (800cedc <network_configure_activations+0x98>)
 800ceb2:	2200      	movs	r2, #0
 800ceb4:	60da      	str	r2, [r3, #12]
 800ceb6:	2301      	movs	r3, #1
 800ceb8:	4618      	mov	r0, r3
 800ceba:	3714      	adds	r7, #20
 800cebc:	46bd      	mov	sp, r7
 800cebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cec2:	4770      	bx	lr
 800cec4:	20000110 	.word	0x20000110
 800cec8:	20000120 	.word	0x20000120
 800cecc:	20000130 	.word	0x20000130
 800ced0:	20000140 	.word	0x20000140
 800ced4:	20000150 	.word	0x20000150
 800ced8:	20000160 	.word	0x20000160
 800cedc:	20000170 	.word	0x20000170

0800cee0 <network_configure_weights>:
 800cee0:	b480      	push	{r7}
 800cee2:	b085      	sub	sp, #20
 800cee4:	af00      	add	r7, sp, #0
 800cee6:	6078      	str	r0, [r7, #4]
 800cee8:	6039      	str	r1, [r7, #0]
 800ceea:	683b      	ldr	r3, [r7, #0]
 800ceec:	691b      	ldr	r3, [r3, #16]
 800ceee:	60fb      	str	r3, [r7, #12]
 800cef0:	4b31      	ldr	r3, [pc, #196]	; (800cfb8 <network_configure_weights+0xd8>)
 800cef2:	681b      	ldr	r3, [r3, #0]
 800cef4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800cef8:	4a2f      	ldr	r2, [pc, #188]	; (800cfb8 <network_configure_weights+0xd8>)
 800cefa:	6013      	str	r3, [r2, #0]
 800cefc:	68fb      	ldr	r3, [r7, #12]
 800cefe:	f503 6303 	add.w	r3, r3, #2096	; 0x830
 800cf02:	4a2d      	ldr	r2, [pc, #180]	; (800cfb8 <network_configure_weights+0xd8>)
 800cf04:	6093      	str	r3, [r2, #8]
 800cf06:	68fb      	ldr	r3, [r7, #12]
 800cf08:	f503 6303 	add.w	r3, r3, #2096	; 0x830
 800cf0c:	4a2a      	ldr	r2, [pc, #168]	; (800cfb8 <network_configure_weights+0xd8>)
 800cf0e:	60d3      	str	r3, [r2, #12]
 800cf10:	4b2a      	ldr	r3, [pc, #168]	; (800cfbc <network_configure_weights+0xdc>)
 800cf12:	681b      	ldr	r3, [r3, #0]
 800cf14:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800cf18:	4a28      	ldr	r2, [pc, #160]	; (800cfbc <network_configure_weights+0xdc>)
 800cf1a:	6013      	str	r3, [r2, #0]
 800cf1c:	68fb      	ldr	r3, [r7, #12]
 800cf1e:	f503 63e2 	add.w	r3, r3, #1808	; 0x710
 800cf22:	4a26      	ldr	r2, [pc, #152]	; (800cfbc <network_configure_weights+0xdc>)
 800cf24:	6093      	str	r3, [r2, #8]
 800cf26:	68fb      	ldr	r3, [r7, #12]
 800cf28:	f503 63e2 	add.w	r3, r3, #1808	; 0x710
 800cf2c:	4a23      	ldr	r2, [pc, #140]	; (800cfbc <network_configure_weights+0xdc>)
 800cf2e:	60d3      	str	r3, [r2, #12]
 800cf30:	4b23      	ldr	r3, [pc, #140]	; (800cfc0 <network_configure_weights+0xe0>)
 800cf32:	681b      	ldr	r3, [r3, #0]
 800cf34:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800cf38:	4a21      	ldr	r2, [pc, #132]	; (800cfc0 <network_configure_weights+0xe0>)
 800cf3a:	6013      	str	r3, [r2, #0]
 800cf3c:	68fb      	ldr	r3, [r7, #12]
 800cf3e:	f503 63d6 	add.w	r3, r3, #1712	; 0x6b0
 800cf42:	4a1f      	ldr	r2, [pc, #124]	; (800cfc0 <network_configure_weights+0xe0>)
 800cf44:	6093      	str	r3, [r2, #8]
 800cf46:	68fb      	ldr	r3, [r7, #12]
 800cf48:	f503 63d6 	add.w	r3, r3, #1712	; 0x6b0
 800cf4c:	4a1c      	ldr	r2, [pc, #112]	; (800cfc0 <network_configure_weights+0xe0>)
 800cf4e:	60d3      	str	r3, [r2, #12]
 800cf50:	4b1c      	ldr	r3, [pc, #112]	; (800cfc4 <network_configure_weights+0xe4>)
 800cf52:	681b      	ldr	r3, [r3, #0]
 800cf54:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800cf58:	4a1a      	ldr	r2, [pc, #104]	; (800cfc4 <network_configure_weights+0xe4>)
 800cf5a:	6013      	str	r3, [r2, #0]
 800cf5c:	68fb      	ldr	r3, [r7, #12]
 800cf5e:	f503 63b2 	add.w	r3, r3, #1424	; 0x590
 800cf62:	4a18      	ldr	r2, [pc, #96]	; (800cfc4 <network_configure_weights+0xe4>)
 800cf64:	6093      	str	r3, [r2, #8]
 800cf66:	68fb      	ldr	r3, [r7, #12]
 800cf68:	f503 63aa 	add.w	r3, r3, #1360	; 0x550
 800cf6c:	4a15      	ldr	r2, [pc, #84]	; (800cfc4 <network_configure_weights+0xe4>)
 800cf6e:	60d3      	str	r3, [r2, #12]
 800cf70:	4b15      	ldr	r3, [pc, #84]	; (800cfc8 <network_configure_weights+0xe8>)
 800cf72:	681b      	ldr	r3, [r3, #0]
 800cf74:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800cf78:	4a13      	ldr	r2, [pc, #76]	; (800cfc8 <network_configure_weights+0xe8>)
 800cf7a:	6013      	str	r3, [r2, #0]
 800cf7c:	68fb      	ldr	r3, [r7, #12]
 800cf7e:	f503 639e 	add.w	r3, r3, #1264	; 0x4f0
 800cf82:	4a11      	ldr	r2, [pc, #68]	; (800cfc8 <network_configure_weights+0xe8>)
 800cf84:	6093      	str	r3, [r2, #8]
 800cf86:	68fb      	ldr	r3, [r7, #12]
 800cf88:	f503 639e 	add.w	r3, r3, #1264	; 0x4f0
 800cf8c:	4a0e      	ldr	r2, [pc, #56]	; (800cfc8 <network_configure_weights+0xe8>)
 800cf8e:	60d3      	str	r3, [r2, #12]
 800cf90:	4b0e      	ldr	r3, [pc, #56]	; (800cfcc <network_configure_weights+0xec>)
 800cf92:	681b      	ldr	r3, [r3, #0]
 800cf94:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800cf98:	4a0c      	ldr	r2, [pc, #48]	; (800cfcc <network_configure_weights+0xec>)
 800cf9a:	6013      	str	r3, [r2, #0]
 800cf9c:	68fb      	ldr	r3, [r7, #12]
 800cf9e:	3340      	adds	r3, #64	; 0x40
 800cfa0:	4a0a      	ldr	r2, [pc, #40]	; (800cfcc <network_configure_weights+0xec>)
 800cfa2:	6093      	str	r3, [r2, #8]
 800cfa4:	4a09      	ldr	r2, [pc, #36]	; (800cfcc <network_configure_weights+0xec>)
 800cfa6:	68fb      	ldr	r3, [r7, #12]
 800cfa8:	60d3      	str	r3, [r2, #12]
 800cfaa:	2301      	movs	r3, #1
 800cfac:	4618      	mov	r0, r3
 800cfae:	3714      	adds	r7, #20
 800cfb0:	46bd      	mov	sp, r7
 800cfb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfb6:	4770      	bx	lr
 800cfb8:	200000b0 	.word	0x200000b0
 800cfbc:	200000c0 	.word	0x200000c0
 800cfc0:	200000d0 	.word	0x200000d0
 800cfc4:	200000e0 	.word	0x200000e0
 800cfc8:	200000f0 	.word	0x200000f0
 800cfcc:	20000100 	.word	0x20000100

0800cfd0 <ai_network_get_info>:
 800cfd0:	b580      	push	{r7, lr}
 800cfd2:	b0a0      	sub	sp, #128	; 0x80
 800cfd4:	af00      	add	r7, sp, #0
 800cfd6:	6078      	str	r0, [r7, #4]
 800cfd8:	6039      	str	r1, [r7, #0]
 800cfda:	6878      	ldr	r0, [r7, #4]
 800cfdc:	f7f3 fca1 	bl	8000922 <ai_platform_context_acquire>
 800cfe0:	67f8      	str	r0, [r7, #124]	; 0x7c
 800cfe2:	683b      	ldr	r3, [r7, #0]
 800cfe4:	2b00      	cmp	r3, #0
 800cfe6:	d047      	beq.n	800d078 <ai_network_get_info+0xa8>
 800cfe8:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800cfea:	2b00      	cmp	r3, #0
 800cfec:	d044      	beq.n	800d078 <ai_network_get_info+0xa8>
 800cfee:	f107 0308 	add.w	r3, r7, #8
 800cff2:	2274      	movs	r2, #116	; 0x74
 800cff4:	2100      	movs	r1, #0
 800cff6:	4618      	mov	r0, r3
 800cff8:	f002 fef8 	bl	800fdec <memset>
 800cffc:	4b21      	ldr	r3, [pc, #132]	; (800d084 <ai_network_get_info+0xb4>)
 800cffe:	60bb      	str	r3, [r7, #8]
 800d000:	4b21      	ldr	r3, [pc, #132]	; (800d088 <ai_network_get_info+0xb8>)
 800d002:	60fb      	str	r3, [r7, #12]
 800d004:	4b21      	ldr	r3, [pc, #132]	; (800d08c <ai_network_get_info+0xbc>)
 800d006:	613b      	str	r3, [r7, #16]
 800d008:	4b21      	ldr	r3, [pc, #132]	; (800d090 <ai_network_get_info+0xc0>)
 800d00a:	617b      	str	r3, [r7, #20]
 800d00c:	f7f3 fb4f 	bl	80006ae <ai_platform_runtime_get_revision>
 800d010:	4603      	mov	r3, r0
 800d012:	61bb      	str	r3, [r7, #24]
 800d014:	f7f3 fb98 	bl	8000748 <ai_platform_runtime_get_version>
 800d018:	4603      	mov	r3, r0
 800d01a:	61fb      	str	r3, [r7, #28]
 800d01c:	4b1d      	ldr	r3, [pc, #116]	; (800d094 <ai_network_get_info+0xc4>)
 800d01e:	623b      	str	r3, [r7, #32]
 800d020:	2305      	movs	r3, #5
 800d022:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 800d026:	2301      	movs	r3, #1
 800d028:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800d02c:	2303      	movs	r3, #3
 800d02e:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 800d032:	f7f3 fbd8 	bl	80007e6 <ai_platform_api_get_version>
 800d036:	4603      	mov	r3, r0
 800d038:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d03a:	f7f3 fc23 	bl	8000884 <ai_platform_interface_api_get_version>
 800d03e:	4603      	mov	r3, r0
 800d040:	633b      	str	r3, [r7, #48]	; 0x30
 800d042:	f640 4336 	movw	r3, #3126	; 0xc36
 800d046:	637b      	str	r3, [r7, #52]	; 0x34
 800d048:	f107 0308 	add.w	r3, r7, #8
 800d04c:	4619      	mov	r1, r3
 800d04e:	6878      	ldr	r0, [r7, #4]
 800d050:	f7f3 fd25 	bl	8000a9e <ai_platform_api_get_network_report>
 800d054:	4603      	mov	r3, r0
 800d056:	f083 0301 	eor.w	r3, r3, #1
 800d05a:	b2db      	uxtb	r3, r3
 800d05c:	2b00      	cmp	r3, #0
 800d05e:	d001      	beq.n	800d064 <ai_network_get_info+0x94>
 800d060:	2300      	movs	r3, #0
 800d062:	e00a      	b.n	800d07a <ai_network_get_info+0xaa>
 800d064:	683b      	ldr	r3, [r7, #0]
 800d066:	4618      	mov	r0, r3
 800d068:	f107 0308 	add.w	r3, r7, #8
 800d06c:	2274      	movs	r2, #116	; 0x74
 800d06e:	4619      	mov	r1, r3
 800d070:	f002 feb1 	bl	800fdd6 <memcpy>
 800d074:	2301      	movs	r3, #1
 800d076:	e000      	b.n	800d07a <ai_network_get_info+0xaa>
 800d078:	2300      	movs	r3, #0
 800d07a:	4618      	mov	r0, r3
 800d07c:	3780      	adds	r7, #128	; 0x80
 800d07e:	46bd      	mov	sp, r7
 800d080:	bd80      	pop	{r7, pc}
 800d082:	bf00      	nop
 800d084:	08015978 	.word	0x08015978
 800d088:	08015980 	.word	0x08015980
 800d08c:	080159a4 	.word	0x080159a4
 800d090:	080159c0 	.word	0x080159c0
 800d094:	080159d8 	.word	0x080159d8

0800d098 <ai_network_get_error>:
 800d098:	b580      	push	{r7, lr}
 800d09a:	b082      	sub	sp, #8
 800d09c:	af00      	add	r7, sp, #0
 800d09e:	6078      	str	r0, [r7, #4]
 800d0a0:	6878      	ldr	r0, [r7, #4]
 800d0a2:	f7f3 fc99 	bl	80009d8 <ai_platform_network_get_error>
 800d0a6:	4603      	mov	r3, r0
 800d0a8:	4618      	mov	r0, r3
 800d0aa:	3708      	adds	r7, #8
 800d0ac:	46bd      	mov	sp, r7
 800d0ae:	bd80      	pop	{r7, pc}

0800d0b0 <ai_network_create>:
 800d0b0:	b580      	push	{r7, lr}
 800d0b2:	b084      	sub	sp, #16
 800d0b4:	af02      	add	r7, sp, #8
 800d0b6:	6078      	str	r0, [r7, #4]
 800d0b8:	6039      	str	r1, [r7, #0]
 800d0ba:	2300      	movs	r3, #0
 800d0bc:	9301      	str	r3, [sp, #4]
 800d0be:	2303      	movs	r3, #3
 800d0c0:	9300      	str	r3, [sp, #0]
 800d0c2:	2301      	movs	r3, #1
 800d0c4:	4a04      	ldr	r2, [pc, #16]	; (800d0d8 <ai_network_create+0x28>)
 800d0c6:	6839      	ldr	r1, [r7, #0]
 800d0c8:	6878      	ldr	r0, [r7, #4]
 800d0ca:	f7f3 fda5 	bl	8000c18 <ai_platform_network_create>
 800d0ce:	4603      	mov	r3, r0
 800d0d0:	4618      	mov	r0, r3
 800d0d2:	3708      	adds	r7, #8
 800d0d4:	46bd      	mov	sp, r7
 800d0d6:	bd80      	pop	{r7, pc}
 800d0d8:	20000058 	.word	0x20000058

0800d0dc <ai_network_destroy>:
 800d0dc:	b580      	push	{r7, lr}
 800d0de:	b082      	sub	sp, #8
 800d0e0:	af00      	add	r7, sp, #0
 800d0e2:	6078      	str	r0, [r7, #4]
 800d0e4:	6878      	ldr	r0, [r7, #4]
 800d0e6:	f7f3 fdcd 	bl	8000c84 <ai_platform_network_destroy>
 800d0ea:	4603      	mov	r3, r0
 800d0ec:	4618      	mov	r0, r3
 800d0ee:	3708      	adds	r7, #8
 800d0f0:	46bd      	mov	sp, r7
 800d0f2:	bd80      	pop	{r7, pc}

0800d0f4 <ai_network_init>:
 800d0f4:	b580      	push	{r7, lr}
 800d0f6:	b084      	sub	sp, #16
 800d0f8:	af00      	add	r7, sp, #0
 800d0fa:	6078      	str	r0, [r7, #4]
 800d0fc:	6039      	str	r1, [r7, #0]
 800d0fe:	6839      	ldr	r1, [r7, #0]
 800d100:	6878      	ldr	r0, [r7, #4]
 800d102:	f7f3 fe0f 	bl	8000d24 <ai_platform_network_init>
 800d106:	60f8      	str	r0, [r7, #12]
 800d108:	68fb      	ldr	r3, [r7, #12]
 800d10a:	2b00      	cmp	r3, #0
 800d10c:	d101      	bne.n	800d112 <ai_network_init+0x1e>
 800d10e:	2300      	movs	r3, #0
 800d110:	e01f      	b.n	800d152 <ai_network_init+0x5e>
 800d112:	2301      	movs	r3, #1
 800d114:	72fb      	strb	r3, [r7, #11]
 800d116:	683b      	ldr	r3, [r7, #0]
 800d118:	4619      	mov	r1, r3
 800d11a:	68f8      	ldr	r0, [r7, #12]
 800d11c:	f7ff fee0 	bl	800cee0 <network_configure_weights>
 800d120:	4603      	mov	r3, r0
 800d122:	461a      	mov	r2, r3
 800d124:	7afb      	ldrb	r3, [r7, #11]
 800d126:	4013      	ands	r3, r2
 800d128:	2b00      	cmp	r3, #0
 800d12a:	bf14      	ite	ne
 800d12c:	2301      	movne	r3, #1
 800d12e:	2300      	moveq	r3, #0
 800d130:	72fb      	strb	r3, [r7, #11]
 800d132:	683b      	ldr	r3, [r7, #0]
 800d134:	3318      	adds	r3, #24
 800d136:	4619      	mov	r1, r3
 800d138:	68f8      	ldr	r0, [r7, #12]
 800d13a:	f7ff fe83 	bl	800ce44 <network_configure_activations>
 800d13e:	4603      	mov	r3, r0
 800d140:	461a      	mov	r2, r3
 800d142:	7afb      	ldrb	r3, [r7, #11]
 800d144:	4013      	ands	r3, r2
 800d146:	2b00      	cmp	r3, #0
 800d148:	bf14      	ite	ne
 800d14a:	2301      	movne	r3, #1
 800d14c:	2300      	moveq	r3, #0
 800d14e:	72fb      	strb	r3, [r7, #11]
 800d150:	7afb      	ldrb	r3, [r7, #11]
 800d152:	4618      	mov	r0, r3
 800d154:	3710      	adds	r7, #16
 800d156:	46bd      	mov	sp, r7
 800d158:	bd80      	pop	{r7, pc}

0800d15a <ai_network_run>:
 800d15a:	b580      	push	{r7, lr}
 800d15c:	b084      	sub	sp, #16
 800d15e:	af00      	add	r7, sp, #0
 800d160:	60f8      	str	r0, [r7, #12]
 800d162:	60b9      	str	r1, [r7, #8]
 800d164:	607a      	str	r2, [r7, #4]
 800d166:	687a      	ldr	r2, [r7, #4]
 800d168:	68b9      	ldr	r1, [r7, #8]
 800d16a:	68f8      	ldr	r0, [r7, #12]
 800d16c:	f7f3 fe72 	bl	8000e54 <ai_platform_network_process>
 800d170:	4603      	mov	r3, r0
 800d172:	4618      	mov	r0, r3
 800d174:	3710      	adds	r7, #16
 800d176:	46bd      	mov	sp, r7
 800d178:	bd80      	pop	{r7, pc}

0800d17a <ai_network_forward>:
 800d17a:	b580      	push	{r7, lr}
 800d17c:	b082      	sub	sp, #8
 800d17e:	af00      	add	r7, sp, #0
 800d180:	6078      	str	r0, [r7, #4]
 800d182:	6039      	str	r1, [r7, #0]
 800d184:	2200      	movs	r2, #0
 800d186:	6839      	ldr	r1, [r7, #0]
 800d188:	6878      	ldr	r0, [r7, #4]
 800d18a:	f7f3 fe63 	bl	8000e54 <ai_platform_network_process>
 800d18e:	4603      	mov	r3, r0
 800d190:	4618      	mov	r0, r3
 800d192:	3708      	adds	r7, #8
 800d194:	46bd      	mov	sp, r7
 800d196:	bd80      	pop	{r7, pc}

0800d198 <ai_network_data_weights_get>:
 800d198:	b480      	push	{r7}
 800d19a:	af00      	add	r7, sp, #0
 800d19c:	4b02      	ldr	r3, [pc, #8]	; (800d1a8 <ai_network_data_weights_get+0x10>)
 800d19e:	4618      	mov	r0, r3
 800d1a0:	46bd      	mov	sp, r7
 800d1a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1a6:	4770      	bx	lr
 800d1a8:	08015d64 	.word	0x08015d64

0800d1ac <pb_field_iter_begin>:
 800d1ac:	b480      	push	{r7}
 800d1ae:	b085      	sub	sp, #20
 800d1b0:	af00      	add	r7, sp, #0
 800d1b2:	60f8      	str	r0, [r7, #12]
 800d1b4:	60b9      	str	r1, [r7, #8]
 800d1b6:	607a      	str	r2, [r7, #4]
 800d1b8:	68fb      	ldr	r3, [r7, #12]
 800d1ba:	68ba      	ldr	r2, [r7, #8]
 800d1bc:	601a      	str	r2, [r3, #0]
 800d1be:	68fb      	ldr	r3, [r7, #12]
 800d1c0:	68ba      	ldr	r2, [r7, #8]
 800d1c2:	605a      	str	r2, [r3, #4]
 800d1c4:	68fb      	ldr	r3, [r7, #12]
 800d1c6:	2200      	movs	r2, #0
 800d1c8:	609a      	str	r2, [r3, #8]
 800d1ca:	68fb      	ldr	r3, [r7, #12]
 800d1cc:	687a      	ldr	r2, [r7, #4]
 800d1ce:	60da      	str	r2, [r3, #12]
 800d1d0:	68fb      	ldr	r3, [r7, #12]
 800d1d2:	685b      	ldr	r3, [r3, #4]
 800d1d4:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 800d1d8:	b29b      	uxth	r3, r3
 800d1da:	461a      	mov	r2, r3
 800d1dc:	687b      	ldr	r3, [r7, #4]
 800d1de:	441a      	add	r2, r3
 800d1e0:	68fb      	ldr	r3, [r7, #12]
 800d1e2:	611a      	str	r2, [r3, #16]
 800d1e4:	68fb      	ldr	r3, [r7, #12]
 800d1e6:	691b      	ldr	r3, [r3, #16]
 800d1e8:	68fa      	ldr	r2, [r7, #12]
 800d1ea:	6852      	ldr	r2, [r2, #4]
 800d1ec:	f9b2 2005 	ldrsh.w	r2, [r2, #5]
 800d1f0:	b212      	sxth	r2, r2
 800d1f2:	441a      	add	r2, r3
 800d1f4:	68fb      	ldr	r3, [r7, #12]
 800d1f6:	615a      	str	r2, [r3, #20]
 800d1f8:	68fb      	ldr	r3, [r7, #12]
 800d1fa:	685b      	ldr	r3, [r3, #4]
 800d1fc:	881b      	ldrh	r3, [r3, #0]
 800d1fe:	b29b      	uxth	r3, r3
 800d200:	2b00      	cmp	r3, #0
 800d202:	bf14      	ite	ne
 800d204:	2301      	movne	r3, #1
 800d206:	2300      	moveq	r3, #0
 800d208:	b2db      	uxtb	r3, r3
 800d20a:	4618      	mov	r0, r3
 800d20c:	3714      	adds	r7, #20
 800d20e:	46bd      	mov	sp, r7
 800d210:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d214:	4770      	bx	lr

0800d216 <pb_field_iter_next>:
 800d216:	b580      	push	{r7, lr}
 800d218:	b084      	sub	sp, #16
 800d21a:	af00      	add	r7, sp, #0
 800d21c:	6078      	str	r0, [r7, #4]
 800d21e:	687b      	ldr	r3, [r7, #4]
 800d220:	685b      	ldr	r3, [r3, #4]
 800d222:	60bb      	str	r3, [r7, #8]
 800d224:	68bb      	ldr	r3, [r7, #8]
 800d226:	881b      	ldrh	r3, [r3, #0]
 800d228:	b29b      	uxth	r3, r3
 800d22a:	2b00      	cmp	r3, #0
 800d22c:	d101      	bne.n	800d232 <pb_field_iter_next+0x1c>
 800d22e:	2300      	movs	r3, #0
 800d230:	e073      	b.n	800d31a <pb_field_iter_next+0x104>
 800d232:	687b      	ldr	r3, [r7, #4]
 800d234:	685b      	ldr	r3, [r3, #4]
 800d236:	f103 020f 	add.w	r2, r3, #15
 800d23a:	687b      	ldr	r3, [r7, #4]
 800d23c:	605a      	str	r2, [r3, #4]
 800d23e:	687b      	ldr	r3, [r7, #4]
 800d240:	685b      	ldr	r3, [r3, #4]
 800d242:	881b      	ldrh	r3, [r3, #0]
 800d244:	b29b      	uxth	r3, r3
 800d246:	2b00      	cmp	r3, #0
 800d248:	d109      	bne.n	800d25e <pb_field_iter_next+0x48>
 800d24a:	687b      	ldr	r3, [r7, #4]
 800d24c:	6819      	ldr	r1, [r3, #0]
 800d24e:	687b      	ldr	r3, [r7, #4]
 800d250:	68db      	ldr	r3, [r3, #12]
 800d252:	461a      	mov	r2, r3
 800d254:	6878      	ldr	r0, [r7, #4]
 800d256:	f7ff ffa9 	bl	800d1ac <pb_field_iter_begin>
 800d25a:	2300      	movs	r3, #0
 800d25c:	e05d      	b.n	800d31a <pb_field_iter_next+0x104>
 800d25e:	68bb      	ldr	r3, [r7, #8]
 800d260:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800d264:	b29b      	uxth	r3, r3
 800d266:	60fb      	str	r3, [r7, #12]
 800d268:	68bb      	ldr	r3, [r7, #8]
 800d26a:	789b      	ldrb	r3, [r3, #2]
 800d26c:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800d270:	2b30      	cmp	r3, #48	; 0x30
 800d272:	d111      	bne.n	800d298 <pb_field_iter_next+0x82>
 800d274:	687b      	ldr	r3, [r7, #4]
 800d276:	685b      	ldr	r3, [r3, #4]
 800d278:	789b      	ldrb	r3, [r3, #2]
 800d27a:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800d27e:	2b30      	cmp	r3, #48	; 0x30
 800d280:	d10a      	bne.n	800d298 <pb_field_iter_next+0x82>
 800d282:	687b      	ldr	r3, [r7, #4]
 800d284:	685b      	ldr	r3, [r3, #4]
 800d286:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 800d28a:	b29b      	uxth	r3, r3
 800d28c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d290:	4293      	cmp	r3, r2
 800d292:	d101      	bne.n	800d298 <pb_field_iter_next+0x82>
 800d294:	2301      	movs	r3, #1
 800d296:	e040      	b.n	800d31a <pb_field_iter_next+0x104>
 800d298:	68bb      	ldr	r3, [r7, #8]
 800d29a:	789b      	ldrb	r3, [r3, #2]
 800d29c:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800d2a0:	2b00      	cmp	r3, #0
 800d2a2:	d10f      	bne.n	800d2c4 <pb_field_iter_next+0xae>
 800d2a4:	68bb      	ldr	r3, [r7, #8]
 800d2a6:	789b      	ldrb	r3, [r3, #2]
 800d2a8:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800d2ac:	2b20      	cmp	r3, #32
 800d2ae:	d109      	bne.n	800d2c4 <pb_field_iter_next+0xae>
 800d2b0:	68bb      	ldr	r3, [r7, #8]
 800d2b2:	f8b3 3009 	ldrh.w	r3, [r3, #9]
 800d2b6:	b29b      	uxth	r3, r3
 800d2b8:	461a      	mov	r2, r3
 800d2ba:	68fb      	ldr	r3, [r7, #12]
 800d2bc:	fb02 f303 	mul.w	r3, r2, r3
 800d2c0:	60fb      	str	r3, [r7, #12]
 800d2c2:	e007      	b.n	800d2d4 <pb_field_iter_next+0xbe>
 800d2c4:	68bb      	ldr	r3, [r7, #8]
 800d2c6:	789b      	ldrb	r3, [r3, #2]
 800d2c8:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800d2cc:	2b80      	cmp	r3, #128	; 0x80
 800d2ce:	d101      	bne.n	800d2d4 <pb_field_iter_next+0xbe>
 800d2d0:	2304      	movs	r3, #4
 800d2d2:	60fb      	str	r3, [r7, #12]
 800d2d4:	68bb      	ldr	r3, [r7, #8]
 800d2d6:	789b      	ldrb	r3, [r3, #2]
 800d2d8:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800d2dc:	2b00      	cmp	r3, #0
 800d2de:	d104      	bne.n	800d2ea <pb_field_iter_next+0xd4>
 800d2e0:	687b      	ldr	r3, [r7, #4]
 800d2e2:	689b      	ldr	r3, [r3, #8]
 800d2e4:	1c5a      	adds	r2, r3, #1
 800d2e6:	687b      	ldr	r3, [r7, #4]
 800d2e8:	609a      	str	r2, [r3, #8]
 800d2ea:	687b      	ldr	r3, [r7, #4]
 800d2ec:	691a      	ldr	r2, [r3, #16]
 800d2ee:	687b      	ldr	r3, [r7, #4]
 800d2f0:	685b      	ldr	r3, [r3, #4]
 800d2f2:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 800d2f6:	b29b      	uxth	r3, r3
 800d2f8:	4619      	mov	r1, r3
 800d2fa:	68fb      	ldr	r3, [r7, #12]
 800d2fc:	440b      	add	r3, r1
 800d2fe:	441a      	add	r2, r3
 800d300:	687b      	ldr	r3, [r7, #4]
 800d302:	611a      	str	r2, [r3, #16]
 800d304:	687b      	ldr	r3, [r7, #4]
 800d306:	691b      	ldr	r3, [r3, #16]
 800d308:	687a      	ldr	r2, [r7, #4]
 800d30a:	6852      	ldr	r2, [r2, #4]
 800d30c:	f9b2 2005 	ldrsh.w	r2, [r2, #5]
 800d310:	b212      	sxth	r2, r2
 800d312:	441a      	add	r2, r3
 800d314:	687b      	ldr	r3, [r7, #4]
 800d316:	615a      	str	r2, [r3, #20]
 800d318:	2301      	movs	r3, #1
 800d31a:	4618      	mov	r0, r3
 800d31c:	3710      	adds	r7, #16
 800d31e:	46bd      	mov	sp, r7
 800d320:	bd80      	pop	{r7, pc}

0800d322 <pb_field_iter_find>:
 800d322:	b580      	push	{r7, lr}
 800d324:	b084      	sub	sp, #16
 800d326:	af00      	add	r7, sp, #0
 800d328:	6078      	str	r0, [r7, #4]
 800d32a:	6039      	str	r1, [r7, #0]
 800d32c:	687b      	ldr	r3, [r7, #4]
 800d32e:	685b      	ldr	r3, [r3, #4]
 800d330:	60fb      	str	r3, [r7, #12]
 800d332:	687b      	ldr	r3, [r7, #4]
 800d334:	685b      	ldr	r3, [r3, #4]
 800d336:	881b      	ldrh	r3, [r3, #0]
 800d338:	b29b      	uxth	r3, r3
 800d33a:	461a      	mov	r2, r3
 800d33c:	683b      	ldr	r3, [r7, #0]
 800d33e:	4293      	cmp	r3, r2
 800d340:	d108      	bne.n	800d354 <pb_field_iter_find+0x32>
 800d342:	687b      	ldr	r3, [r7, #4]
 800d344:	685b      	ldr	r3, [r3, #4]
 800d346:	789b      	ldrb	r3, [r3, #2]
 800d348:	f003 030f 	and.w	r3, r3, #15
 800d34c:	2b08      	cmp	r3, #8
 800d34e:	d001      	beq.n	800d354 <pb_field_iter_find+0x32>
 800d350:	2301      	movs	r3, #1
 800d352:	e008      	b.n	800d366 <pb_field_iter_find+0x44>
 800d354:	6878      	ldr	r0, [r7, #4]
 800d356:	f7ff ff5e 	bl	800d216 <pb_field_iter_next>
 800d35a:	687b      	ldr	r3, [r7, #4]
 800d35c:	685b      	ldr	r3, [r3, #4]
 800d35e:	68fa      	ldr	r2, [r7, #12]
 800d360:	429a      	cmp	r2, r3
 800d362:	d1e6      	bne.n	800d332 <pb_field_iter_find+0x10>
 800d364:	2300      	movs	r3, #0
 800d366:	4618      	mov	r0, r3
 800d368:	3710      	adds	r7, #16
 800d36a:	46bd      	mov	sp, r7
 800d36c:	bd80      	pop	{r7, pc}

0800d36e <buf_read>:
 800d36e:	b480      	push	{r7}
 800d370:	b087      	sub	sp, #28
 800d372:	af00      	add	r7, sp, #0
 800d374:	60f8      	str	r0, [r7, #12]
 800d376:	60b9      	str	r1, [r7, #8]
 800d378:	607a      	str	r2, [r7, #4]
 800d37a:	68fb      	ldr	r3, [r7, #12]
 800d37c:	685b      	ldr	r3, [r3, #4]
 800d37e:	613b      	str	r3, [r7, #16]
 800d380:	68fb      	ldr	r3, [r7, #12]
 800d382:	685a      	ldr	r2, [r3, #4]
 800d384:	687b      	ldr	r3, [r7, #4]
 800d386:	441a      	add	r2, r3
 800d388:	68fb      	ldr	r3, [r7, #12]
 800d38a:	605a      	str	r2, [r3, #4]
 800d38c:	68bb      	ldr	r3, [r7, #8]
 800d38e:	2b00      	cmp	r3, #0
 800d390:	d011      	beq.n	800d3b6 <buf_read+0x48>
 800d392:	2300      	movs	r3, #0
 800d394:	617b      	str	r3, [r7, #20]
 800d396:	e00a      	b.n	800d3ae <buf_read+0x40>
 800d398:	693a      	ldr	r2, [r7, #16]
 800d39a:	697b      	ldr	r3, [r7, #20]
 800d39c:	441a      	add	r2, r3
 800d39e:	68b9      	ldr	r1, [r7, #8]
 800d3a0:	697b      	ldr	r3, [r7, #20]
 800d3a2:	440b      	add	r3, r1
 800d3a4:	7812      	ldrb	r2, [r2, #0]
 800d3a6:	701a      	strb	r2, [r3, #0]
 800d3a8:	697b      	ldr	r3, [r7, #20]
 800d3aa:	3301      	adds	r3, #1
 800d3ac:	617b      	str	r3, [r7, #20]
 800d3ae:	697a      	ldr	r2, [r7, #20]
 800d3b0:	687b      	ldr	r3, [r7, #4]
 800d3b2:	429a      	cmp	r2, r3
 800d3b4:	d3f0      	bcc.n	800d398 <buf_read+0x2a>
 800d3b6:	2301      	movs	r3, #1
 800d3b8:	4618      	mov	r0, r3
 800d3ba:	371c      	adds	r7, #28
 800d3bc:	46bd      	mov	sp, r7
 800d3be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3c2:	4770      	bx	lr

0800d3c4 <pb_read>:
 800d3c4:	b580      	push	{r7, lr}
 800d3c6:	b088      	sub	sp, #32
 800d3c8:	af00      	add	r7, sp, #0
 800d3ca:	60f8      	str	r0, [r7, #12]
 800d3cc:	60b9      	str	r1, [r7, #8]
 800d3ce:	607a      	str	r2, [r7, #4]
 800d3d0:	68bb      	ldr	r3, [r7, #8]
 800d3d2:	2b00      	cmp	r3, #0
 800d3d4:	d123      	bne.n	800d41e <pb_read+0x5a>
 800d3d6:	68fb      	ldr	r3, [r7, #12]
 800d3d8:	681b      	ldr	r3, [r3, #0]
 800d3da:	4a2b      	ldr	r2, [pc, #172]	; (800d488 <pb_read+0xc4>)
 800d3dc:	4293      	cmp	r3, r2
 800d3de:	d01e      	beq.n	800d41e <pb_read+0x5a>
 800d3e0:	e011      	b.n	800d406 <pb_read+0x42>
 800d3e2:	f107 0310 	add.w	r3, r7, #16
 800d3e6:	2210      	movs	r2, #16
 800d3e8:	4619      	mov	r1, r3
 800d3ea:	68f8      	ldr	r0, [r7, #12]
 800d3ec:	f7ff ffea 	bl	800d3c4 <pb_read>
 800d3f0:	4603      	mov	r3, r0
 800d3f2:	f083 0301 	eor.w	r3, r3, #1
 800d3f6:	b2db      	uxtb	r3, r3
 800d3f8:	2b00      	cmp	r3, #0
 800d3fa:	d001      	beq.n	800d400 <pb_read+0x3c>
 800d3fc:	2300      	movs	r3, #0
 800d3fe:	e03e      	b.n	800d47e <pb_read+0xba>
 800d400:	687b      	ldr	r3, [r7, #4]
 800d402:	3b10      	subs	r3, #16
 800d404:	607b      	str	r3, [r7, #4]
 800d406:	687b      	ldr	r3, [r7, #4]
 800d408:	2b10      	cmp	r3, #16
 800d40a:	d8ea      	bhi.n	800d3e2 <pb_read+0x1e>
 800d40c:	f107 0310 	add.w	r3, r7, #16
 800d410:	687a      	ldr	r2, [r7, #4]
 800d412:	4619      	mov	r1, r3
 800d414:	68f8      	ldr	r0, [r7, #12]
 800d416:	f7ff ffd5 	bl	800d3c4 <pb_read>
 800d41a:	4603      	mov	r3, r0
 800d41c:	e02f      	b.n	800d47e <pb_read+0xba>
 800d41e:	68fb      	ldr	r3, [r7, #12]
 800d420:	689b      	ldr	r3, [r3, #8]
 800d422:	687a      	ldr	r2, [r7, #4]
 800d424:	429a      	cmp	r2, r3
 800d426:	d90b      	bls.n	800d440 <pb_read+0x7c>
 800d428:	68fb      	ldr	r3, [r7, #12]
 800d42a:	68db      	ldr	r3, [r3, #12]
 800d42c:	2b00      	cmp	r3, #0
 800d42e:	d002      	beq.n	800d436 <pb_read+0x72>
 800d430:	68fb      	ldr	r3, [r7, #12]
 800d432:	68db      	ldr	r3, [r3, #12]
 800d434:	e000      	b.n	800d438 <pb_read+0x74>
 800d436:	4b15      	ldr	r3, [pc, #84]	; (800d48c <pb_read+0xc8>)
 800d438:	68fa      	ldr	r2, [r7, #12]
 800d43a:	60d3      	str	r3, [r2, #12]
 800d43c:	2300      	movs	r3, #0
 800d43e:	e01e      	b.n	800d47e <pb_read+0xba>
 800d440:	68fb      	ldr	r3, [r7, #12]
 800d442:	681b      	ldr	r3, [r3, #0]
 800d444:	687a      	ldr	r2, [r7, #4]
 800d446:	68b9      	ldr	r1, [r7, #8]
 800d448:	68f8      	ldr	r0, [r7, #12]
 800d44a:	4798      	blx	r3
 800d44c:	4603      	mov	r3, r0
 800d44e:	f083 0301 	eor.w	r3, r3, #1
 800d452:	b2db      	uxtb	r3, r3
 800d454:	2b00      	cmp	r3, #0
 800d456:	d00b      	beq.n	800d470 <pb_read+0xac>
 800d458:	68fb      	ldr	r3, [r7, #12]
 800d45a:	68db      	ldr	r3, [r3, #12]
 800d45c:	2b00      	cmp	r3, #0
 800d45e:	d002      	beq.n	800d466 <pb_read+0xa2>
 800d460:	68fb      	ldr	r3, [r7, #12]
 800d462:	68db      	ldr	r3, [r3, #12]
 800d464:	e000      	b.n	800d468 <pb_read+0xa4>
 800d466:	4b0a      	ldr	r3, [pc, #40]	; (800d490 <pb_read+0xcc>)
 800d468:	68fa      	ldr	r2, [r7, #12]
 800d46a:	60d3      	str	r3, [r2, #12]
 800d46c:	2300      	movs	r3, #0
 800d46e:	e006      	b.n	800d47e <pb_read+0xba>
 800d470:	68fb      	ldr	r3, [r7, #12]
 800d472:	689a      	ldr	r2, [r3, #8]
 800d474:	687b      	ldr	r3, [r7, #4]
 800d476:	1ad2      	subs	r2, r2, r3
 800d478:	68fb      	ldr	r3, [r7, #12]
 800d47a:	609a      	str	r2, [r3, #8]
 800d47c:	2301      	movs	r3, #1
 800d47e:	4618      	mov	r0, r3
 800d480:	3720      	adds	r7, #32
 800d482:	46bd      	mov	sp, r7
 800d484:	bd80      	pop	{r7, pc}
 800d486:	bf00      	nop
 800d488:	0800d36f 	.word	0x0800d36f
 800d48c:	080159e4 	.word	0x080159e4
 800d490:	080159f4 	.word	0x080159f4

0800d494 <pb_readbyte>:
 800d494:	b580      	push	{r7, lr}
 800d496:	b082      	sub	sp, #8
 800d498:	af00      	add	r7, sp, #0
 800d49a:	6078      	str	r0, [r7, #4]
 800d49c:	6039      	str	r1, [r7, #0]
 800d49e:	687b      	ldr	r3, [r7, #4]
 800d4a0:	689b      	ldr	r3, [r3, #8]
 800d4a2:	2b00      	cmp	r3, #0
 800d4a4:	d10b      	bne.n	800d4be <pb_readbyte+0x2a>
 800d4a6:	687b      	ldr	r3, [r7, #4]
 800d4a8:	68db      	ldr	r3, [r3, #12]
 800d4aa:	2b00      	cmp	r3, #0
 800d4ac:	d002      	beq.n	800d4b4 <pb_readbyte+0x20>
 800d4ae:	687b      	ldr	r3, [r7, #4]
 800d4b0:	68db      	ldr	r3, [r3, #12]
 800d4b2:	e000      	b.n	800d4b6 <pb_readbyte+0x22>
 800d4b4:	4b13      	ldr	r3, [pc, #76]	; (800d504 <pb_readbyte+0x70>)
 800d4b6:	687a      	ldr	r2, [r7, #4]
 800d4b8:	60d3      	str	r3, [r2, #12]
 800d4ba:	2300      	movs	r3, #0
 800d4bc:	e01d      	b.n	800d4fa <pb_readbyte+0x66>
 800d4be:	687b      	ldr	r3, [r7, #4]
 800d4c0:	681b      	ldr	r3, [r3, #0]
 800d4c2:	2201      	movs	r2, #1
 800d4c4:	6839      	ldr	r1, [r7, #0]
 800d4c6:	6878      	ldr	r0, [r7, #4]
 800d4c8:	4798      	blx	r3
 800d4ca:	4603      	mov	r3, r0
 800d4cc:	f083 0301 	eor.w	r3, r3, #1
 800d4d0:	b2db      	uxtb	r3, r3
 800d4d2:	2b00      	cmp	r3, #0
 800d4d4:	d00b      	beq.n	800d4ee <pb_readbyte+0x5a>
 800d4d6:	687b      	ldr	r3, [r7, #4]
 800d4d8:	68db      	ldr	r3, [r3, #12]
 800d4da:	2b00      	cmp	r3, #0
 800d4dc:	d002      	beq.n	800d4e4 <pb_readbyte+0x50>
 800d4de:	687b      	ldr	r3, [r7, #4]
 800d4e0:	68db      	ldr	r3, [r3, #12]
 800d4e2:	e000      	b.n	800d4e6 <pb_readbyte+0x52>
 800d4e4:	4b08      	ldr	r3, [pc, #32]	; (800d508 <pb_readbyte+0x74>)
 800d4e6:	687a      	ldr	r2, [r7, #4]
 800d4e8:	60d3      	str	r3, [r2, #12]
 800d4ea:	2300      	movs	r3, #0
 800d4ec:	e005      	b.n	800d4fa <pb_readbyte+0x66>
 800d4ee:	687b      	ldr	r3, [r7, #4]
 800d4f0:	689b      	ldr	r3, [r3, #8]
 800d4f2:	1e5a      	subs	r2, r3, #1
 800d4f4:	687b      	ldr	r3, [r7, #4]
 800d4f6:	609a      	str	r2, [r3, #8]
 800d4f8:	2301      	movs	r3, #1
 800d4fa:	4618      	mov	r0, r3
 800d4fc:	3708      	adds	r7, #8
 800d4fe:	46bd      	mov	sp, r7
 800d500:	bd80      	pop	{r7, pc}
 800d502:	bf00      	nop
 800d504:	080159e4 	.word	0x080159e4
 800d508:	080159f4 	.word	0x080159f4

0800d50c <pb_istream_from_buffer>:
 800d50c:	b490      	push	{r4, r7}
 800d50e:	b08a      	sub	sp, #40	; 0x28
 800d510:	af00      	add	r7, sp, #0
 800d512:	60f8      	str	r0, [r7, #12]
 800d514:	60b9      	str	r1, [r7, #8]
 800d516:	607a      	str	r2, [r7, #4]
 800d518:	4b0a      	ldr	r3, [pc, #40]	; (800d544 <pb_istream_from_buffer+0x38>)
 800d51a:	61bb      	str	r3, [r7, #24]
 800d51c:	68bb      	ldr	r3, [r7, #8]
 800d51e:	617b      	str	r3, [r7, #20]
 800d520:	697b      	ldr	r3, [r7, #20]
 800d522:	61fb      	str	r3, [r7, #28]
 800d524:	687b      	ldr	r3, [r7, #4]
 800d526:	623b      	str	r3, [r7, #32]
 800d528:	2300      	movs	r3, #0
 800d52a:	627b      	str	r3, [r7, #36]	; 0x24
 800d52c:	68fb      	ldr	r3, [r7, #12]
 800d52e:	461c      	mov	r4, r3
 800d530:	f107 0318 	add.w	r3, r7, #24
 800d534:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800d536:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800d53a:	68f8      	ldr	r0, [r7, #12]
 800d53c:	3728      	adds	r7, #40	; 0x28
 800d53e:	46bd      	mov	sp, r7
 800d540:	bc90      	pop	{r4, r7}
 800d542:	4770      	bx	lr
 800d544:	0800d36f 	.word	0x0800d36f

0800d548 <pb_decode_varint32_eof>:
 800d548:	b580      	push	{r7, lr}
 800d54a:	b088      	sub	sp, #32
 800d54c:	af00      	add	r7, sp, #0
 800d54e:	60f8      	str	r0, [r7, #12]
 800d550:	60b9      	str	r1, [r7, #8]
 800d552:	607a      	str	r2, [r7, #4]
 800d554:	f107 0316 	add.w	r3, r7, #22
 800d558:	4619      	mov	r1, r3
 800d55a:	68f8      	ldr	r0, [r7, #12]
 800d55c:	f7ff ff9a 	bl	800d494 <pb_readbyte>
 800d560:	4603      	mov	r3, r0
 800d562:	f083 0301 	eor.w	r3, r3, #1
 800d566:	b2db      	uxtb	r3, r3
 800d568:	2b00      	cmp	r3, #0
 800d56a:	d00b      	beq.n	800d584 <pb_decode_varint32_eof+0x3c>
 800d56c:	68fb      	ldr	r3, [r7, #12]
 800d56e:	689b      	ldr	r3, [r3, #8]
 800d570:	2b00      	cmp	r3, #0
 800d572:	d105      	bne.n	800d580 <pb_decode_varint32_eof+0x38>
 800d574:	687b      	ldr	r3, [r7, #4]
 800d576:	2b00      	cmp	r3, #0
 800d578:	d002      	beq.n	800d580 <pb_decode_varint32_eof+0x38>
 800d57a:	687b      	ldr	r3, [r7, #4]
 800d57c:	2201      	movs	r2, #1
 800d57e:	701a      	strb	r2, [r3, #0]
 800d580:	2300      	movs	r3, #0
 800d582:	e064      	b.n	800d64e <pb_decode_varint32_eof+0x106>
 800d584:	7dbb      	ldrb	r3, [r7, #22]
 800d586:	b25b      	sxtb	r3, r3
 800d588:	2b00      	cmp	r3, #0
 800d58a:	db02      	blt.n	800d592 <pb_decode_varint32_eof+0x4a>
 800d58c:	7dbb      	ldrb	r3, [r7, #22]
 800d58e:	61fb      	str	r3, [r7, #28]
 800d590:	e059      	b.n	800d646 <pb_decode_varint32_eof+0xfe>
 800d592:	2307      	movs	r3, #7
 800d594:	61bb      	str	r3, [r7, #24]
 800d596:	7dbb      	ldrb	r3, [r7, #22]
 800d598:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800d59c:	61fb      	str	r3, [r7, #28]
 800d59e:	f107 0316 	add.w	r3, r7, #22
 800d5a2:	4619      	mov	r1, r3
 800d5a4:	68f8      	ldr	r0, [r7, #12]
 800d5a6:	f7ff ff75 	bl	800d494 <pb_readbyte>
 800d5aa:	4603      	mov	r3, r0
 800d5ac:	f083 0301 	eor.w	r3, r3, #1
 800d5b0:	b2db      	uxtb	r3, r3
 800d5b2:	2b00      	cmp	r3, #0
 800d5b4:	d001      	beq.n	800d5ba <pb_decode_varint32_eof+0x72>
 800d5b6:	2300      	movs	r3, #0
 800d5b8:	e049      	b.n	800d64e <pb_decode_varint32_eof+0x106>
 800d5ba:	69bb      	ldr	r3, [r7, #24]
 800d5bc:	2b1f      	cmp	r3, #31
 800d5be:	d91e      	bls.n	800d5fe <pb_decode_varint32_eof+0xb6>
 800d5c0:	69bb      	ldr	r3, [r7, #24]
 800d5c2:	2b3e      	cmp	r3, #62	; 0x3e
 800d5c4:	d801      	bhi.n	800d5ca <pb_decode_varint32_eof+0x82>
 800d5c6:	23ff      	movs	r3, #255	; 0xff
 800d5c8:	e000      	b.n	800d5cc <pb_decode_varint32_eof+0x84>
 800d5ca:	2301      	movs	r3, #1
 800d5cc:	75fb      	strb	r3, [r7, #23]
 800d5ce:	7dbb      	ldrb	r3, [r7, #22]
 800d5d0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800d5d4:	2b00      	cmp	r3, #0
 800d5d6:	d01b      	beq.n	800d610 <pb_decode_varint32_eof+0xc8>
 800d5d8:	69fb      	ldr	r3, [r7, #28]
 800d5da:	2b00      	cmp	r3, #0
 800d5dc:	da03      	bge.n	800d5e6 <pb_decode_varint32_eof+0x9e>
 800d5de:	7dbb      	ldrb	r3, [r7, #22]
 800d5e0:	7dfa      	ldrb	r2, [r7, #23]
 800d5e2:	429a      	cmp	r2, r3
 800d5e4:	d014      	beq.n	800d610 <pb_decode_varint32_eof+0xc8>
 800d5e6:	68fb      	ldr	r3, [r7, #12]
 800d5e8:	68db      	ldr	r3, [r3, #12]
 800d5ea:	2b00      	cmp	r3, #0
 800d5ec:	d002      	beq.n	800d5f4 <pb_decode_varint32_eof+0xac>
 800d5ee:	68fb      	ldr	r3, [r7, #12]
 800d5f0:	68db      	ldr	r3, [r3, #12]
 800d5f2:	e000      	b.n	800d5f6 <pb_decode_varint32_eof+0xae>
 800d5f4:	4b18      	ldr	r3, [pc, #96]	; (800d658 <pb_decode_varint32_eof+0x110>)
 800d5f6:	68fa      	ldr	r2, [r7, #12]
 800d5f8:	60d3      	str	r3, [r2, #12]
 800d5fa:	2300      	movs	r3, #0
 800d5fc:	e027      	b.n	800d64e <pb_decode_varint32_eof+0x106>
 800d5fe:	7dbb      	ldrb	r3, [r7, #22]
 800d600:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800d604:	69bb      	ldr	r3, [r7, #24]
 800d606:	fa02 f303 	lsl.w	r3, r2, r3
 800d60a:	69fa      	ldr	r2, [r7, #28]
 800d60c:	4313      	orrs	r3, r2
 800d60e:	61fb      	str	r3, [r7, #28]
 800d610:	69bb      	ldr	r3, [r7, #24]
 800d612:	3307      	adds	r3, #7
 800d614:	61bb      	str	r3, [r7, #24]
 800d616:	7dbb      	ldrb	r3, [r7, #22]
 800d618:	b25b      	sxtb	r3, r3
 800d61a:	2b00      	cmp	r3, #0
 800d61c:	dbbf      	blt.n	800d59e <pb_decode_varint32_eof+0x56>
 800d61e:	69bb      	ldr	r3, [r7, #24]
 800d620:	2b23      	cmp	r3, #35	; 0x23
 800d622:	d110      	bne.n	800d646 <pb_decode_varint32_eof+0xfe>
 800d624:	7dbb      	ldrb	r3, [r7, #22]
 800d626:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800d62a:	2b00      	cmp	r3, #0
 800d62c:	d00b      	beq.n	800d646 <pb_decode_varint32_eof+0xfe>
 800d62e:	68fb      	ldr	r3, [r7, #12]
 800d630:	68db      	ldr	r3, [r3, #12]
 800d632:	2b00      	cmp	r3, #0
 800d634:	d002      	beq.n	800d63c <pb_decode_varint32_eof+0xf4>
 800d636:	68fb      	ldr	r3, [r7, #12]
 800d638:	68db      	ldr	r3, [r3, #12]
 800d63a:	e000      	b.n	800d63e <pb_decode_varint32_eof+0xf6>
 800d63c:	4b06      	ldr	r3, [pc, #24]	; (800d658 <pb_decode_varint32_eof+0x110>)
 800d63e:	68fa      	ldr	r2, [r7, #12]
 800d640:	60d3      	str	r3, [r2, #12]
 800d642:	2300      	movs	r3, #0
 800d644:	e003      	b.n	800d64e <pb_decode_varint32_eof+0x106>
 800d646:	68bb      	ldr	r3, [r7, #8]
 800d648:	69fa      	ldr	r2, [r7, #28]
 800d64a:	601a      	str	r2, [r3, #0]
 800d64c:	2301      	movs	r3, #1
 800d64e:	4618      	mov	r0, r3
 800d650:	3720      	adds	r7, #32
 800d652:	46bd      	mov	sp, r7
 800d654:	bd80      	pop	{r7, pc}
 800d656:	bf00      	nop
 800d658:	08015a00 	.word	0x08015a00

0800d65c <pb_decode_varint32>:
 800d65c:	b580      	push	{r7, lr}
 800d65e:	b082      	sub	sp, #8
 800d660:	af00      	add	r7, sp, #0
 800d662:	6078      	str	r0, [r7, #4]
 800d664:	6039      	str	r1, [r7, #0]
 800d666:	2200      	movs	r2, #0
 800d668:	6839      	ldr	r1, [r7, #0]
 800d66a:	6878      	ldr	r0, [r7, #4]
 800d66c:	f7ff ff6c 	bl	800d548 <pb_decode_varint32_eof>
 800d670:	4603      	mov	r3, r0
 800d672:	4618      	mov	r0, r3
 800d674:	3708      	adds	r7, #8
 800d676:	46bd      	mov	sp, r7
 800d678:	bd80      	pop	{r7, pc}
	...

0800d67c <pb_decode_varint>:
 800d67c:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800d680:	b088      	sub	sp, #32
 800d682:	af00      	add	r7, sp, #0
 800d684:	6078      	str	r0, [r7, #4]
 800d686:	6039      	str	r1, [r7, #0]
 800d688:	2300      	movs	r3, #0
 800d68a:	61fb      	str	r3, [r7, #28]
 800d68c:	f04f 0200 	mov.w	r2, #0
 800d690:	f04f 0300 	mov.w	r3, #0
 800d694:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d698:	69fb      	ldr	r3, [r7, #28]
 800d69a:	2b3f      	cmp	r3, #63	; 0x3f
 800d69c:	d90b      	bls.n	800d6b6 <pb_decode_varint+0x3a>
 800d69e:	687b      	ldr	r3, [r7, #4]
 800d6a0:	68db      	ldr	r3, [r3, #12]
 800d6a2:	2b00      	cmp	r3, #0
 800d6a4:	d002      	beq.n	800d6ac <pb_decode_varint+0x30>
 800d6a6:	687b      	ldr	r3, [r7, #4]
 800d6a8:	68db      	ldr	r3, [r3, #12]
 800d6aa:	e000      	b.n	800d6ae <pb_decode_varint+0x32>
 800d6ac:	4b23      	ldr	r3, [pc, #140]	; (800d73c <pb_decode_varint+0xc0>)
 800d6ae:	687a      	ldr	r2, [r7, #4]
 800d6b0:	60d3      	str	r3, [r2, #12]
 800d6b2:	2300      	movs	r3, #0
 800d6b4:	e03d      	b.n	800d732 <pb_decode_varint+0xb6>
 800d6b6:	f107 030f 	add.w	r3, r7, #15
 800d6ba:	4619      	mov	r1, r3
 800d6bc:	6878      	ldr	r0, [r7, #4]
 800d6be:	f7ff fee9 	bl	800d494 <pb_readbyte>
 800d6c2:	4603      	mov	r3, r0
 800d6c4:	f083 0301 	eor.w	r3, r3, #1
 800d6c8:	b2db      	uxtb	r3, r3
 800d6ca:	2b00      	cmp	r3, #0
 800d6cc:	d001      	beq.n	800d6d2 <pb_decode_varint+0x56>
 800d6ce:	2300      	movs	r3, #0
 800d6d0:	e02f      	b.n	800d732 <pb_decode_varint+0xb6>
 800d6d2:	7bfb      	ldrb	r3, [r7, #15]
 800d6d4:	b2da      	uxtb	r2, r3
 800d6d6:	f04f 0300 	mov.w	r3, #0
 800d6da:	f04f 007f 	mov.w	r0, #127	; 0x7f
 800d6de:	f04f 0100 	mov.w	r1, #0
 800d6e2:	ea02 0b00 	and.w	fp, r2, r0
 800d6e6:	ea03 0c01 	and.w	ip, r3, r1
 800d6ea:	69f9      	ldr	r1, [r7, #28]
 800d6ec:	f1a1 0620 	sub.w	r6, r1, #32
 800d6f0:	f1c1 0020 	rsb	r0, r1, #32
 800d6f4:	fa0c f501 	lsl.w	r5, ip, r1
 800d6f8:	fa0b f606 	lsl.w	r6, fp, r6
 800d6fc:	4335      	orrs	r5, r6
 800d6fe:	fa2b f000 	lsr.w	r0, fp, r0
 800d702:	4305      	orrs	r5, r0
 800d704:	fa0b f401 	lsl.w	r4, fp, r1
 800d708:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800d70c:	ea42 0004 	orr.w	r0, r2, r4
 800d710:	ea43 0105 	orr.w	r1, r3, r5
 800d714:	e9c7 0104 	strd	r0, r1, [r7, #16]
 800d718:	69fb      	ldr	r3, [r7, #28]
 800d71a:	3307      	adds	r3, #7
 800d71c:	61fb      	str	r3, [r7, #28]
 800d71e:	7bfb      	ldrb	r3, [r7, #15]
 800d720:	b25b      	sxtb	r3, r3
 800d722:	2b00      	cmp	r3, #0
 800d724:	dbb8      	blt.n	800d698 <pb_decode_varint+0x1c>
 800d726:	683a      	ldr	r2, [r7, #0]
 800d728:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800d72c:	e9c2 3400 	strd	r3, r4, [r2]
 800d730:	2301      	movs	r3, #1
 800d732:	4618      	mov	r0, r3
 800d734:	3720      	adds	r7, #32
 800d736:	46bd      	mov	sp, r7
 800d738:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800d73c:	08015a00 	.word	0x08015a00

0800d740 <pb_skip_varint>:
 800d740:	b580      	push	{r7, lr}
 800d742:	b084      	sub	sp, #16
 800d744:	af00      	add	r7, sp, #0
 800d746:	6078      	str	r0, [r7, #4]
 800d748:	f107 030f 	add.w	r3, r7, #15
 800d74c:	2201      	movs	r2, #1
 800d74e:	4619      	mov	r1, r3
 800d750:	6878      	ldr	r0, [r7, #4]
 800d752:	f7ff fe37 	bl	800d3c4 <pb_read>
 800d756:	4603      	mov	r3, r0
 800d758:	f083 0301 	eor.w	r3, r3, #1
 800d75c:	b2db      	uxtb	r3, r3
 800d75e:	2b00      	cmp	r3, #0
 800d760:	d001      	beq.n	800d766 <pb_skip_varint+0x26>
 800d762:	2300      	movs	r3, #0
 800d764:	e004      	b.n	800d770 <pb_skip_varint+0x30>
 800d766:	7bfb      	ldrb	r3, [r7, #15]
 800d768:	b25b      	sxtb	r3, r3
 800d76a:	2b00      	cmp	r3, #0
 800d76c:	dbec      	blt.n	800d748 <pb_skip_varint+0x8>
 800d76e:	2301      	movs	r3, #1
 800d770:	4618      	mov	r0, r3
 800d772:	3710      	adds	r7, #16
 800d774:	46bd      	mov	sp, r7
 800d776:	bd80      	pop	{r7, pc}

0800d778 <pb_skip_string>:
 800d778:	b580      	push	{r7, lr}
 800d77a:	b084      	sub	sp, #16
 800d77c:	af00      	add	r7, sp, #0
 800d77e:	6078      	str	r0, [r7, #4]
 800d780:	f107 030c 	add.w	r3, r7, #12
 800d784:	4619      	mov	r1, r3
 800d786:	6878      	ldr	r0, [r7, #4]
 800d788:	f7ff ff68 	bl	800d65c <pb_decode_varint32>
 800d78c:	4603      	mov	r3, r0
 800d78e:	f083 0301 	eor.w	r3, r3, #1
 800d792:	b2db      	uxtb	r3, r3
 800d794:	2b00      	cmp	r3, #0
 800d796:	d001      	beq.n	800d79c <pb_skip_string+0x24>
 800d798:	2300      	movs	r3, #0
 800d79a:	e006      	b.n	800d7aa <pb_skip_string+0x32>
 800d79c:	68fb      	ldr	r3, [r7, #12]
 800d79e:	461a      	mov	r2, r3
 800d7a0:	2100      	movs	r1, #0
 800d7a2:	6878      	ldr	r0, [r7, #4]
 800d7a4:	f7ff fe0e 	bl	800d3c4 <pb_read>
 800d7a8:	4603      	mov	r3, r0
 800d7aa:	4618      	mov	r0, r3
 800d7ac:	3710      	adds	r7, #16
 800d7ae:	46bd      	mov	sp, r7
 800d7b0:	bd80      	pop	{r7, pc}

0800d7b2 <pb_decode_tag>:
 800d7b2:	b580      	push	{r7, lr}
 800d7b4:	b086      	sub	sp, #24
 800d7b6:	af00      	add	r7, sp, #0
 800d7b8:	60f8      	str	r0, [r7, #12]
 800d7ba:	60b9      	str	r1, [r7, #8]
 800d7bc:	607a      	str	r2, [r7, #4]
 800d7be:	603b      	str	r3, [r7, #0]
 800d7c0:	683b      	ldr	r3, [r7, #0]
 800d7c2:	2200      	movs	r2, #0
 800d7c4:	701a      	strb	r2, [r3, #0]
 800d7c6:	68bb      	ldr	r3, [r7, #8]
 800d7c8:	2200      	movs	r2, #0
 800d7ca:	701a      	strb	r2, [r3, #0]
 800d7cc:	687b      	ldr	r3, [r7, #4]
 800d7ce:	2200      	movs	r2, #0
 800d7d0:	601a      	str	r2, [r3, #0]
 800d7d2:	f107 0314 	add.w	r3, r7, #20
 800d7d6:	683a      	ldr	r2, [r7, #0]
 800d7d8:	4619      	mov	r1, r3
 800d7da:	68f8      	ldr	r0, [r7, #12]
 800d7dc:	f7ff feb4 	bl	800d548 <pb_decode_varint32_eof>
 800d7e0:	4603      	mov	r3, r0
 800d7e2:	f083 0301 	eor.w	r3, r3, #1
 800d7e6:	b2db      	uxtb	r3, r3
 800d7e8:	2b00      	cmp	r3, #0
 800d7ea:	d001      	beq.n	800d7f0 <pb_decode_tag+0x3e>
 800d7ec:	2300      	movs	r3, #0
 800d7ee:	e013      	b.n	800d818 <pb_decode_tag+0x66>
 800d7f0:	697b      	ldr	r3, [r7, #20]
 800d7f2:	2b00      	cmp	r3, #0
 800d7f4:	d104      	bne.n	800d800 <pb_decode_tag+0x4e>
 800d7f6:	683b      	ldr	r3, [r7, #0]
 800d7f8:	2201      	movs	r2, #1
 800d7fa:	701a      	strb	r2, [r3, #0]
 800d7fc:	2300      	movs	r3, #0
 800d7fe:	e00b      	b.n	800d818 <pb_decode_tag+0x66>
 800d800:	697b      	ldr	r3, [r7, #20]
 800d802:	08da      	lsrs	r2, r3, #3
 800d804:	687b      	ldr	r3, [r7, #4]
 800d806:	601a      	str	r2, [r3, #0]
 800d808:	697b      	ldr	r3, [r7, #20]
 800d80a:	b2db      	uxtb	r3, r3
 800d80c:	f003 0307 	and.w	r3, r3, #7
 800d810:	b2da      	uxtb	r2, r3
 800d812:	68bb      	ldr	r3, [r7, #8]
 800d814:	701a      	strb	r2, [r3, #0]
 800d816:	2301      	movs	r3, #1
 800d818:	4618      	mov	r0, r3
 800d81a:	3718      	adds	r7, #24
 800d81c:	46bd      	mov	sp, r7
 800d81e:	bd80      	pop	{r7, pc}

0800d820 <pb_skip_field>:
 800d820:	b580      	push	{r7, lr}
 800d822:	b082      	sub	sp, #8
 800d824:	af00      	add	r7, sp, #0
 800d826:	6078      	str	r0, [r7, #4]
 800d828:	460b      	mov	r3, r1
 800d82a:	70fb      	strb	r3, [r7, #3]
 800d82c:	78fb      	ldrb	r3, [r7, #3]
 800d82e:	2b05      	cmp	r3, #5
 800d830:	d826      	bhi.n	800d880 <pb_skip_field+0x60>
 800d832:	a201      	add	r2, pc, #4	; (adr r2, 800d838 <pb_skip_field+0x18>)
 800d834:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d838:	0800d851 	.word	0x0800d851
 800d83c:	0800d85b 	.word	0x0800d85b
 800d840:	0800d869 	.word	0x0800d869
 800d844:	0800d881 	.word	0x0800d881
 800d848:	0800d881 	.word	0x0800d881
 800d84c:	0800d873 	.word	0x0800d873
 800d850:	6878      	ldr	r0, [r7, #4]
 800d852:	f7ff ff75 	bl	800d740 <pb_skip_varint>
 800d856:	4603      	mov	r3, r0
 800d858:	e01d      	b.n	800d896 <pb_skip_field+0x76>
 800d85a:	2208      	movs	r2, #8
 800d85c:	2100      	movs	r1, #0
 800d85e:	6878      	ldr	r0, [r7, #4]
 800d860:	f7ff fdb0 	bl	800d3c4 <pb_read>
 800d864:	4603      	mov	r3, r0
 800d866:	e016      	b.n	800d896 <pb_skip_field+0x76>
 800d868:	6878      	ldr	r0, [r7, #4]
 800d86a:	f7ff ff85 	bl	800d778 <pb_skip_string>
 800d86e:	4603      	mov	r3, r0
 800d870:	e011      	b.n	800d896 <pb_skip_field+0x76>
 800d872:	2204      	movs	r2, #4
 800d874:	2100      	movs	r1, #0
 800d876:	6878      	ldr	r0, [r7, #4]
 800d878:	f7ff fda4 	bl	800d3c4 <pb_read>
 800d87c:	4603      	mov	r3, r0
 800d87e:	e00a      	b.n	800d896 <pb_skip_field+0x76>
 800d880:	687b      	ldr	r3, [r7, #4]
 800d882:	68db      	ldr	r3, [r3, #12]
 800d884:	2b00      	cmp	r3, #0
 800d886:	d002      	beq.n	800d88e <pb_skip_field+0x6e>
 800d888:	687b      	ldr	r3, [r7, #4]
 800d88a:	68db      	ldr	r3, [r3, #12]
 800d88c:	e000      	b.n	800d890 <pb_skip_field+0x70>
 800d88e:	4b04      	ldr	r3, [pc, #16]	; (800d8a0 <pb_skip_field+0x80>)
 800d890:	687a      	ldr	r2, [r7, #4]
 800d892:	60d3      	str	r3, [r2, #12]
 800d894:	2300      	movs	r3, #0
 800d896:	4618      	mov	r0, r3
 800d898:	3708      	adds	r7, #8
 800d89a:	46bd      	mov	sp, r7
 800d89c:	bd80      	pop	{r7, pc}
 800d89e:	bf00      	nop
 800d8a0:	08015a10 	.word	0x08015a10

0800d8a4 <read_raw_value>:
 800d8a4:	b580      	push	{r7, lr}
 800d8a6:	b086      	sub	sp, #24
 800d8a8:	af00      	add	r7, sp, #0
 800d8aa:	60f8      	str	r0, [r7, #12]
 800d8ac:	607a      	str	r2, [r7, #4]
 800d8ae:	603b      	str	r3, [r7, #0]
 800d8b0:	460b      	mov	r3, r1
 800d8b2:	72fb      	strb	r3, [r7, #11]
 800d8b4:	683b      	ldr	r3, [r7, #0]
 800d8b6:	681b      	ldr	r3, [r3, #0]
 800d8b8:	617b      	str	r3, [r7, #20]
 800d8ba:	7afb      	ldrb	r3, [r7, #11]
 800d8bc:	2b01      	cmp	r3, #1
 800d8be:	d028      	beq.n	800d912 <read_raw_value+0x6e>
 800d8c0:	2b05      	cmp	r3, #5
 800d8c2:	d030      	beq.n	800d926 <read_raw_value+0x82>
 800d8c4:	2b00      	cmp	r3, #0
 800d8c6:	d138      	bne.n	800d93a <read_raw_value+0x96>
 800d8c8:	683b      	ldr	r3, [r7, #0]
 800d8ca:	2200      	movs	r2, #0
 800d8cc:	601a      	str	r2, [r3, #0]
 800d8ce:	683b      	ldr	r3, [r7, #0]
 800d8d0:	681b      	ldr	r3, [r3, #0]
 800d8d2:	1c5a      	adds	r2, r3, #1
 800d8d4:	683b      	ldr	r3, [r7, #0]
 800d8d6:	601a      	str	r2, [r3, #0]
 800d8d8:	683b      	ldr	r3, [r7, #0]
 800d8da:	681b      	ldr	r3, [r3, #0]
 800d8dc:	697a      	ldr	r2, [r7, #20]
 800d8de:	429a      	cmp	r2, r3
 800d8e0:	d201      	bcs.n	800d8e6 <read_raw_value+0x42>
 800d8e2:	2300      	movs	r3, #0
 800d8e4:	e034      	b.n	800d950 <read_raw_value+0xac>
 800d8e6:	2201      	movs	r2, #1
 800d8e8:	6879      	ldr	r1, [r7, #4]
 800d8ea:	68f8      	ldr	r0, [r7, #12]
 800d8ec:	f7ff fd6a 	bl	800d3c4 <pb_read>
 800d8f0:	4603      	mov	r3, r0
 800d8f2:	f083 0301 	eor.w	r3, r3, #1
 800d8f6:	b2db      	uxtb	r3, r3
 800d8f8:	2b00      	cmp	r3, #0
 800d8fa:	d001      	beq.n	800d900 <read_raw_value+0x5c>
 800d8fc:	2300      	movs	r3, #0
 800d8fe:	e027      	b.n	800d950 <read_raw_value+0xac>
 800d900:	687b      	ldr	r3, [r7, #4]
 800d902:	1c5a      	adds	r2, r3, #1
 800d904:	607a      	str	r2, [r7, #4]
 800d906:	781b      	ldrb	r3, [r3, #0]
 800d908:	b25b      	sxtb	r3, r3
 800d90a:	2b00      	cmp	r3, #0
 800d90c:	dbdf      	blt.n	800d8ce <read_raw_value+0x2a>
 800d90e:	2301      	movs	r3, #1
 800d910:	e01e      	b.n	800d950 <read_raw_value+0xac>
 800d912:	683b      	ldr	r3, [r7, #0]
 800d914:	2208      	movs	r2, #8
 800d916:	601a      	str	r2, [r3, #0]
 800d918:	2208      	movs	r2, #8
 800d91a:	6879      	ldr	r1, [r7, #4]
 800d91c:	68f8      	ldr	r0, [r7, #12]
 800d91e:	f7ff fd51 	bl	800d3c4 <pb_read>
 800d922:	4603      	mov	r3, r0
 800d924:	e014      	b.n	800d950 <read_raw_value+0xac>
 800d926:	683b      	ldr	r3, [r7, #0]
 800d928:	2204      	movs	r2, #4
 800d92a:	601a      	str	r2, [r3, #0]
 800d92c:	2204      	movs	r2, #4
 800d92e:	6879      	ldr	r1, [r7, #4]
 800d930:	68f8      	ldr	r0, [r7, #12]
 800d932:	f7ff fd47 	bl	800d3c4 <pb_read>
 800d936:	4603      	mov	r3, r0
 800d938:	e00a      	b.n	800d950 <read_raw_value+0xac>
 800d93a:	68fb      	ldr	r3, [r7, #12]
 800d93c:	68db      	ldr	r3, [r3, #12]
 800d93e:	2b00      	cmp	r3, #0
 800d940:	d002      	beq.n	800d948 <read_raw_value+0xa4>
 800d942:	68fb      	ldr	r3, [r7, #12]
 800d944:	68db      	ldr	r3, [r3, #12]
 800d946:	e000      	b.n	800d94a <read_raw_value+0xa6>
 800d948:	4b03      	ldr	r3, [pc, #12]	; (800d958 <read_raw_value+0xb4>)
 800d94a:	68fa      	ldr	r2, [r7, #12]
 800d94c:	60d3      	str	r3, [r2, #12]
 800d94e:	2300      	movs	r3, #0
 800d950:	4618      	mov	r0, r3
 800d952:	3718      	adds	r7, #24
 800d954:	46bd      	mov	sp, r7
 800d956:	bd80      	pop	{r7, pc}
 800d958:	08015a10 	.word	0x08015a10

0800d95c <pb_make_string_substream>:
 800d95c:	b590      	push	{r4, r7, lr}
 800d95e:	b085      	sub	sp, #20
 800d960:	af00      	add	r7, sp, #0
 800d962:	6078      	str	r0, [r7, #4]
 800d964:	6039      	str	r1, [r7, #0]
 800d966:	f107 030c 	add.w	r3, r7, #12
 800d96a:	4619      	mov	r1, r3
 800d96c:	6878      	ldr	r0, [r7, #4]
 800d96e:	f7ff fe75 	bl	800d65c <pb_decode_varint32>
 800d972:	4603      	mov	r3, r0
 800d974:	f083 0301 	eor.w	r3, r3, #1
 800d978:	b2db      	uxtb	r3, r3
 800d97a:	2b00      	cmp	r3, #0
 800d97c:	d001      	beq.n	800d982 <pb_make_string_substream+0x26>
 800d97e:	2300      	movs	r3, #0
 800d980:	e020      	b.n	800d9c4 <pb_make_string_substream+0x68>
 800d982:	683a      	ldr	r2, [r7, #0]
 800d984:	687b      	ldr	r3, [r7, #4]
 800d986:	4614      	mov	r4, r2
 800d988:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800d98a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800d98e:	683b      	ldr	r3, [r7, #0]
 800d990:	689a      	ldr	r2, [r3, #8]
 800d992:	68fb      	ldr	r3, [r7, #12]
 800d994:	429a      	cmp	r2, r3
 800d996:	d20b      	bcs.n	800d9b0 <pb_make_string_substream+0x54>
 800d998:	687b      	ldr	r3, [r7, #4]
 800d99a:	68db      	ldr	r3, [r3, #12]
 800d99c:	2b00      	cmp	r3, #0
 800d99e:	d002      	beq.n	800d9a6 <pb_make_string_substream+0x4a>
 800d9a0:	687b      	ldr	r3, [r7, #4]
 800d9a2:	68db      	ldr	r3, [r3, #12]
 800d9a4:	e000      	b.n	800d9a8 <pb_make_string_substream+0x4c>
 800d9a6:	4b09      	ldr	r3, [pc, #36]	; (800d9cc <pb_make_string_substream+0x70>)
 800d9a8:	687a      	ldr	r2, [r7, #4]
 800d9aa:	60d3      	str	r3, [r2, #12]
 800d9ac:	2300      	movs	r3, #0
 800d9ae:	e009      	b.n	800d9c4 <pb_make_string_substream+0x68>
 800d9b0:	68fa      	ldr	r2, [r7, #12]
 800d9b2:	683b      	ldr	r3, [r7, #0]
 800d9b4:	609a      	str	r2, [r3, #8]
 800d9b6:	687b      	ldr	r3, [r7, #4]
 800d9b8:	689a      	ldr	r2, [r3, #8]
 800d9ba:	68fb      	ldr	r3, [r7, #12]
 800d9bc:	1ad2      	subs	r2, r2, r3
 800d9be:	687b      	ldr	r3, [r7, #4]
 800d9c0:	609a      	str	r2, [r3, #8]
 800d9c2:	2301      	movs	r3, #1
 800d9c4:	4618      	mov	r0, r3
 800d9c6:	3714      	adds	r7, #20
 800d9c8:	46bd      	mov	sp, r7
 800d9ca:	bd90      	pop	{r4, r7, pc}
 800d9cc:	08015a24 	.word	0x08015a24

0800d9d0 <pb_close_string_substream>:
 800d9d0:	b580      	push	{r7, lr}
 800d9d2:	b082      	sub	sp, #8
 800d9d4:	af00      	add	r7, sp, #0
 800d9d6:	6078      	str	r0, [r7, #4]
 800d9d8:	6039      	str	r1, [r7, #0]
 800d9da:	683b      	ldr	r3, [r7, #0]
 800d9dc:	689b      	ldr	r3, [r3, #8]
 800d9de:	2b00      	cmp	r3, #0
 800d9e0:	d00e      	beq.n	800da00 <pb_close_string_substream+0x30>
 800d9e2:	683b      	ldr	r3, [r7, #0]
 800d9e4:	689b      	ldr	r3, [r3, #8]
 800d9e6:	461a      	mov	r2, r3
 800d9e8:	2100      	movs	r1, #0
 800d9ea:	6838      	ldr	r0, [r7, #0]
 800d9ec:	f7ff fcea 	bl	800d3c4 <pb_read>
 800d9f0:	4603      	mov	r3, r0
 800d9f2:	f083 0301 	eor.w	r3, r3, #1
 800d9f6:	b2db      	uxtb	r3, r3
 800d9f8:	2b00      	cmp	r3, #0
 800d9fa:	d001      	beq.n	800da00 <pb_close_string_substream+0x30>
 800d9fc:	2300      	movs	r3, #0
 800d9fe:	e008      	b.n	800da12 <pb_close_string_substream+0x42>
 800da00:	683b      	ldr	r3, [r7, #0]
 800da02:	685a      	ldr	r2, [r3, #4]
 800da04:	687b      	ldr	r3, [r7, #4]
 800da06:	605a      	str	r2, [r3, #4]
 800da08:	683b      	ldr	r3, [r7, #0]
 800da0a:	68da      	ldr	r2, [r3, #12]
 800da0c:	687b      	ldr	r3, [r7, #4]
 800da0e:	60da      	str	r2, [r3, #12]
 800da10:	2301      	movs	r3, #1
 800da12:	4618      	mov	r0, r3
 800da14:	3708      	adds	r7, #8
 800da16:	46bd      	mov	sp, r7
 800da18:	bd80      	pop	{r7, pc}
	...

0800da1c <decode_static_field>:
 800da1c:	b580      	push	{r7, lr}
 800da1e:	b08e      	sub	sp, #56	; 0x38
 800da20:	af00      	add	r7, sp, #0
 800da22:	60f8      	str	r0, [r7, #12]
 800da24:	460b      	mov	r3, r1
 800da26:	607a      	str	r2, [r7, #4]
 800da28:	72fb      	strb	r3, [r7, #11]
 800da2a:	687b      	ldr	r3, [r7, #4]
 800da2c:	685b      	ldr	r3, [r3, #4]
 800da2e:	789b      	ldrb	r3, [r3, #2]
 800da30:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 800da34:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 800da38:	f003 030f 	and.w	r3, r3, #15
 800da3c:	4a85      	ldr	r2, [pc, #532]	; (800dc54 <decode_static_field+0x238>)
 800da3e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800da42:	633b      	str	r3, [r7, #48]	; 0x30
 800da44:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 800da48:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800da4c:	2b10      	cmp	r3, #16
 800da4e:	d013      	beq.n	800da78 <decode_static_field+0x5c>
 800da50:	2b10      	cmp	r3, #16
 800da52:	dc02      	bgt.n	800da5a <decode_static_field+0x3e>
 800da54:	2b00      	cmp	r3, #0
 800da56:	d006      	beq.n	800da66 <decode_static_field+0x4a>
 800da58:	e0ec      	b.n	800dc34 <decode_static_field+0x218>
 800da5a:	2b20      	cmp	r3, #32
 800da5c:	d01f      	beq.n	800da9e <decode_static_field+0x82>
 800da5e:	2b30      	cmp	r3, #48	; 0x30
 800da60:	f000 80bd 	beq.w	800dbde <decode_static_field+0x1c2>
 800da64:	e0e6      	b.n	800dc34 <decode_static_field+0x218>
 800da66:	687b      	ldr	r3, [r7, #4]
 800da68:	6859      	ldr	r1, [r3, #4]
 800da6a:	687b      	ldr	r3, [r7, #4]
 800da6c:	691a      	ldr	r2, [r3, #16]
 800da6e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800da70:	68f8      	ldr	r0, [r7, #12]
 800da72:	4798      	blx	r3
 800da74:	4603      	mov	r3, r0
 800da76:	e0e8      	b.n	800dc4a <decode_static_field+0x22e>
 800da78:	687b      	ldr	r3, [r7, #4]
 800da7a:	695a      	ldr	r2, [r3, #20]
 800da7c:	687b      	ldr	r3, [r7, #4]
 800da7e:	691b      	ldr	r3, [r3, #16]
 800da80:	429a      	cmp	r2, r3
 800da82:	d003      	beq.n	800da8c <decode_static_field+0x70>
 800da84:	687b      	ldr	r3, [r7, #4]
 800da86:	695b      	ldr	r3, [r3, #20]
 800da88:	2201      	movs	r2, #1
 800da8a:	701a      	strb	r2, [r3, #0]
 800da8c:	687b      	ldr	r3, [r7, #4]
 800da8e:	6859      	ldr	r1, [r3, #4]
 800da90:	687b      	ldr	r3, [r7, #4]
 800da92:	691a      	ldr	r2, [r3, #16]
 800da94:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800da96:	68f8      	ldr	r0, [r7, #12]
 800da98:	4798      	blx	r3
 800da9a:	4603      	mov	r3, r0
 800da9c:	e0d5      	b.n	800dc4a <decode_static_field+0x22e>
 800da9e:	7afb      	ldrb	r3, [r7, #11]
 800daa0:	2b02      	cmp	r3, #2
 800daa2:	d16a      	bne.n	800db7a <decode_static_field+0x15e>
 800daa4:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 800daa8:	f003 030f 	and.w	r3, r3, #15
 800daac:	2b04      	cmp	r3, #4
 800daae:	dc64      	bgt.n	800db7a <decode_static_field+0x15e>
 800dab0:	2301      	movs	r3, #1
 800dab2:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 800dab6:	687b      	ldr	r3, [r7, #4]
 800dab8:	695b      	ldr	r3, [r3, #20]
 800daba:	62fb      	str	r3, [r7, #44]	; 0x2c
 800dabc:	f107 0310 	add.w	r3, r7, #16
 800dac0:	4619      	mov	r1, r3
 800dac2:	68f8      	ldr	r0, [r7, #12]
 800dac4:	f7ff ff4a 	bl	800d95c <pb_make_string_substream>
 800dac8:	4603      	mov	r3, r0
 800daca:	f083 0301 	eor.w	r3, r3, #1
 800dace:	b2db      	uxtb	r3, r3
 800dad0:	2b00      	cmp	r3, #0
 800dad2:	d026      	beq.n	800db22 <decode_static_field+0x106>
 800dad4:	2300      	movs	r3, #0
 800dad6:	e0b8      	b.n	800dc4a <decode_static_field+0x22e>
 800dad8:	687b      	ldr	r3, [r7, #4]
 800dada:	691b      	ldr	r3, [r3, #16]
 800dadc:	687a      	ldr	r2, [r7, #4]
 800dade:	6852      	ldr	r2, [r2, #4]
 800dae0:	f8b2 2007 	ldrh.w	r2, [r2, #7]
 800dae4:	b292      	uxth	r2, r2
 800dae6:	4611      	mov	r1, r2
 800dae8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800daea:	8812      	ldrh	r2, [r2, #0]
 800daec:	fb02 f201 	mul.w	r2, r2, r1
 800daf0:	4413      	add	r3, r2
 800daf2:	62bb      	str	r3, [r7, #40]	; 0x28
 800daf4:	687b      	ldr	r3, [r7, #4]
 800daf6:	6859      	ldr	r1, [r3, #4]
 800daf8:	f107 0010 	add.w	r0, r7, #16
 800dafc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dafe:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800db00:	4798      	blx	r3
 800db02:	4603      	mov	r3, r0
 800db04:	f083 0301 	eor.w	r3, r3, #1
 800db08:	b2db      	uxtb	r3, r3
 800db0a:	2b00      	cmp	r3, #0
 800db0c:	d003      	beq.n	800db16 <decode_static_field+0xfa>
 800db0e:	2300      	movs	r3, #0
 800db10:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 800db14:	e011      	b.n	800db3a <decode_static_field+0x11e>
 800db16:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800db18:	881b      	ldrh	r3, [r3, #0]
 800db1a:	3301      	adds	r3, #1
 800db1c:	b29a      	uxth	r2, r3
 800db1e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800db20:	801a      	strh	r2, [r3, #0]
 800db22:	69bb      	ldr	r3, [r7, #24]
 800db24:	2b00      	cmp	r3, #0
 800db26:	d008      	beq.n	800db3a <decode_static_field+0x11e>
 800db28:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800db2a:	881a      	ldrh	r2, [r3, #0]
 800db2c:	687b      	ldr	r3, [r7, #4]
 800db2e:	685b      	ldr	r3, [r3, #4]
 800db30:	f8b3 3009 	ldrh.w	r3, [r3, #9]
 800db34:	b29b      	uxth	r3, r3
 800db36:	429a      	cmp	r2, r3
 800db38:	d3ce      	bcc.n	800dad8 <decode_static_field+0xbc>
 800db3a:	69bb      	ldr	r3, [r7, #24]
 800db3c:	2b00      	cmp	r3, #0
 800db3e:	d00b      	beq.n	800db58 <decode_static_field+0x13c>
 800db40:	68fb      	ldr	r3, [r7, #12]
 800db42:	68db      	ldr	r3, [r3, #12]
 800db44:	2b00      	cmp	r3, #0
 800db46:	d002      	beq.n	800db4e <decode_static_field+0x132>
 800db48:	68fb      	ldr	r3, [r7, #12]
 800db4a:	68db      	ldr	r3, [r3, #12]
 800db4c:	e000      	b.n	800db50 <decode_static_field+0x134>
 800db4e:	4b42      	ldr	r3, [pc, #264]	; (800dc58 <decode_static_field+0x23c>)
 800db50:	68fa      	ldr	r2, [r7, #12]
 800db52:	60d3      	str	r3, [r2, #12]
 800db54:	2300      	movs	r3, #0
 800db56:	e078      	b.n	800dc4a <decode_static_field+0x22e>
 800db58:	f107 0310 	add.w	r3, r7, #16
 800db5c:	4619      	mov	r1, r3
 800db5e:	68f8      	ldr	r0, [r7, #12]
 800db60:	f7ff ff36 	bl	800d9d0 <pb_close_string_substream>
 800db64:	4603      	mov	r3, r0
 800db66:	f083 0301 	eor.w	r3, r3, #1
 800db6a:	b2db      	uxtb	r3, r3
 800db6c:	2b00      	cmp	r3, #0
 800db6e:	d001      	beq.n	800db74 <decode_static_field+0x158>
 800db70:	2300      	movs	r3, #0
 800db72:	e06a      	b.n	800dc4a <decode_static_field+0x22e>
 800db74:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800db78:	e067      	b.n	800dc4a <decode_static_field+0x22e>
 800db7a:	687b      	ldr	r3, [r7, #4]
 800db7c:	695b      	ldr	r3, [r3, #20]
 800db7e:	627b      	str	r3, [r7, #36]	; 0x24
 800db80:	687b      	ldr	r3, [r7, #4]
 800db82:	691b      	ldr	r3, [r3, #16]
 800db84:	687a      	ldr	r2, [r7, #4]
 800db86:	6852      	ldr	r2, [r2, #4]
 800db88:	f8b2 2007 	ldrh.w	r2, [r2, #7]
 800db8c:	b292      	uxth	r2, r2
 800db8e:	4611      	mov	r1, r2
 800db90:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800db92:	8812      	ldrh	r2, [r2, #0]
 800db94:	fb02 f201 	mul.w	r2, r2, r1
 800db98:	4413      	add	r3, r2
 800db9a:	623b      	str	r3, [r7, #32]
 800db9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800db9e:	881b      	ldrh	r3, [r3, #0]
 800dba0:	1c5a      	adds	r2, r3, #1
 800dba2:	b291      	uxth	r1, r2
 800dba4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800dba6:	8011      	strh	r1, [r2, #0]
 800dba8:	687a      	ldr	r2, [r7, #4]
 800dbaa:	6852      	ldr	r2, [r2, #4]
 800dbac:	f8b2 2009 	ldrh.w	r2, [r2, #9]
 800dbb0:	b292      	uxth	r2, r2
 800dbb2:	4293      	cmp	r3, r2
 800dbb4:	d30b      	bcc.n	800dbce <decode_static_field+0x1b2>
 800dbb6:	68fb      	ldr	r3, [r7, #12]
 800dbb8:	68db      	ldr	r3, [r3, #12]
 800dbba:	2b00      	cmp	r3, #0
 800dbbc:	d002      	beq.n	800dbc4 <decode_static_field+0x1a8>
 800dbbe:	68fb      	ldr	r3, [r7, #12]
 800dbc0:	68db      	ldr	r3, [r3, #12]
 800dbc2:	e000      	b.n	800dbc6 <decode_static_field+0x1aa>
 800dbc4:	4b24      	ldr	r3, [pc, #144]	; (800dc58 <decode_static_field+0x23c>)
 800dbc6:	68fa      	ldr	r2, [r7, #12]
 800dbc8:	60d3      	str	r3, [r2, #12]
 800dbca:	2300      	movs	r3, #0
 800dbcc:	e03d      	b.n	800dc4a <decode_static_field+0x22e>
 800dbce:	687b      	ldr	r3, [r7, #4]
 800dbd0:	6859      	ldr	r1, [r3, #4]
 800dbd2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dbd4:	6a3a      	ldr	r2, [r7, #32]
 800dbd6:	68f8      	ldr	r0, [r7, #12]
 800dbd8:	4798      	blx	r3
 800dbda:	4603      	mov	r3, r0
 800dbdc:	e035      	b.n	800dc4a <decode_static_field+0x22e>
 800dbde:	687b      	ldr	r3, [r7, #4]
 800dbe0:	685a      	ldr	r2, [r3, #4]
 800dbe2:	687b      	ldr	r3, [r7, #4]
 800dbe4:	695b      	ldr	r3, [r3, #20]
 800dbe6:	8812      	ldrh	r2, [r2, #0]
 800dbe8:	b292      	uxth	r2, r2
 800dbea:	801a      	strh	r2, [r3, #0]
 800dbec:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 800dbf0:	f003 030f 	and.w	r3, r3, #15
 800dbf4:	2b07      	cmp	r3, #7
 800dbf6:	d114      	bne.n	800dc22 <decode_static_field+0x206>
 800dbf8:	687b      	ldr	r3, [r7, #4]
 800dbfa:	6918      	ldr	r0, [r3, #16]
 800dbfc:	687b      	ldr	r3, [r7, #4]
 800dbfe:	685b      	ldr	r3, [r3, #4]
 800dc00:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800dc04:	b29b      	uxth	r3, r3
 800dc06:	461a      	mov	r2, r3
 800dc08:	2100      	movs	r1, #0
 800dc0a:	f002 f8ef 	bl	800fdec <memset>
 800dc0e:	687b      	ldr	r3, [r7, #4]
 800dc10:	685b      	ldr	r3, [r3, #4]
 800dc12:	f8d3 200b 	ldr.w	r2, [r3, #11]
 800dc16:	687b      	ldr	r3, [r7, #4]
 800dc18:	691b      	ldr	r3, [r3, #16]
 800dc1a:	4619      	mov	r1, r3
 800dc1c:	4610      	mov	r0, r2
 800dc1e:	f000 fa55 	bl	800e0cc <pb_message_set_to_defaults>
 800dc22:	687b      	ldr	r3, [r7, #4]
 800dc24:	6859      	ldr	r1, [r3, #4]
 800dc26:	687b      	ldr	r3, [r7, #4]
 800dc28:	691a      	ldr	r2, [r3, #16]
 800dc2a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dc2c:	68f8      	ldr	r0, [r7, #12]
 800dc2e:	4798      	blx	r3
 800dc30:	4603      	mov	r3, r0
 800dc32:	e00a      	b.n	800dc4a <decode_static_field+0x22e>
 800dc34:	68fb      	ldr	r3, [r7, #12]
 800dc36:	68db      	ldr	r3, [r3, #12]
 800dc38:	2b00      	cmp	r3, #0
 800dc3a:	d002      	beq.n	800dc42 <decode_static_field+0x226>
 800dc3c:	68fb      	ldr	r3, [r7, #12]
 800dc3e:	68db      	ldr	r3, [r3, #12]
 800dc40:	e000      	b.n	800dc44 <decode_static_field+0x228>
 800dc42:	4b06      	ldr	r3, [pc, #24]	; (800dc5c <decode_static_field+0x240>)
 800dc44:	68fa      	ldr	r2, [r7, #12]
 800dc46:	60d3      	str	r3, [r2, #12]
 800dc48:	2300      	movs	r3, #0
 800dc4a:	4618      	mov	r0, r3
 800dc4c:	3738      	adds	r7, #56	; 0x38
 800dc4e:	46bd      	mov	sp, r7
 800dc50:	bd80      	pop	{r7, pc}
 800dc52:	bf00      	nop
 800dc54:	080165a0 	.word	0x080165a0
 800dc58:	08015a3c 	.word	0x08015a3c
 800dc5c:	08015a4c 	.word	0x08015a4c

0800dc60 <decode_pointer_field>:
 800dc60:	b480      	push	{r7}
 800dc62:	b085      	sub	sp, #20
 800dc64:	af00      	add	r7, sp, #0
 800dc66:	60f8      	str	r0, [r7, #12]
 800dc68:	460b      	mov	r3, r1
 800dc6a:	607a      	str	r2, [r7, #4]
 800dc6c:	72fb      	strb	r3, [r7, #11]
 800dc6e:	68fb      	ldr	r3, [r7, #12]
 800dc70:	68db      	ldr	r3, [r3, #12]
 800dc72:	2b00      	cmp	r3, #0
 800dc74:	d002      	beq.n	800dc7c <decode_pointer_field+0x1c>
 800dc76:	68fb      	ldr	r3, [r7, #12]
 800dc78:	68db      	ldr	r3, [r3, #12]
 800dc7a:	e000      	b.n	800dc7e <decode_pointer_field+0x1e>
 800dc7c:	4b04      	ldr	r3, [pc, #16]	; (800dc90 <decode_pointer_field+0x30>)
 800dc7e:	68fa      	ldr	r2, [r7, #12]
 800dc80:	60d3      	str	r3, [r2, #12]
 800dc82:	2300      	movs	r3, #0
 800dc84:	4618      	mov	r0, r3
 800dc86:	3714      	adds	r7, #20
 800dc88:	46bd      	mov	sp, r7
 800dc8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc8e:	4770      	bx	lr
 800dc90:	08015a60 	.word	0x08015a60

0800dc94 <decode_callback_field>:
 800dc94:	b590      	push	{r4, r7, lr}
 800dc96:	b097      	sub	sp, #92	; 0x5c
 800dc98:	af00      	add	r7, sp, #0
 800dc9a:	61f8      	str	r0, [r7, #28]
 800dc9c:	460b      	mov	r3, r1
 800dc9e:	617a      	str	r2, [r7, #20]
 800dca0:	76fb      	strb	r3, [r7, #27]
 800dca2:	697b      	ldr	r3, [r7, #20]
 800dca4:	691b      	ldr	r3, [r3, #16]
 800dca6:	657b      	str	r3, [r7, #84]	; 0x54
 800dca8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800dcaa:	3304      	adds	r3, #4
 800dcac:	653b      	str	r3, [r7, #80]	; 0x50
 800dcae:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800dcb0:	2b00      	cmp	r3, #0
 800dcb2:	d003      	beq.n	800dcbc <decode_callback_field+0x28>
 800dcb4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800dcb6:	681b      	ldr	r3, [r3, #0]
 800dcb8:	2b00      	cmp	r3, #0
 800dcba:	d106      	bne.n	800dcca <decode_callback_field+0x36>
 800dcbc:	7efb      	ldrb	r3, [r7, #27]
 800dcbe:	4619      	mov	r1, r3
 800dcc0:	69f8      	ldr	r0, [r7, #28]
 800dcc2:	f7ff fdad 	bl	800d820 <pb_skip_field>
 800dcc6:	4603      	mov	r3, r0
 800dcc8:	e065      	b.n	800dd96 <decode_callback_field+0x102>
 800dcca:	7efb      	ldrb	r3, [r7, #27]
 800dccc:	2b02      	cmp	r3, #2
 800dcce:	d13a      	bne.n	800dd46 <decode_callback_field+0xb2>
 800dcd0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800dcd4:	4619      	mov	r1, r3
 800dcd6:	69f8      	ldr	r0, [r7, #28]
 800dcd8:	f7ff fe40 	bl	800d95c <pb_make_string_substream>
 800dcdc:	4603      	mov	r3, r0
 800dcde:	f083 0301 	eor.w	r3, r3, #1
 800dce2:	b2db      	uxtb	r3, r3
 800dce4:	2b00      	cmp	r3, #0
 800dce6:	d001      	beq.n	800dcec <decode_callback_field+0x58>
 800dce8:	2300      	movs	r3, #0
 800dcea:	e054      	b.n	800dd96 <decode_callback_field+0x102>
 800dcec:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800dcee:	681b      	ldr	r3, [r3, #0]
 800dcf0:	697a      	ldr	r2, [r7, #20]
 800dcf2:	6851      	ldr	r1, [r2, #4]
 800dcf4:	f107 0040 	add.w	r0, r7, #64	; 0x40
 800dcf8:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800dcfa:	4798      	blx	r3
 800dcfc:	4603      	mov	r3, r0
 800dcfe:	f083 0301 	eor.w	r3, r3, #1
 800dd02:	b2db      	uxtb	r3, r3
 800dd04:	2b00      	cmp	r3, #0
 800dd06:	d00b      	beq.n	800dd20 <decode_callback_field+0x8c>
 800dd08:	69fb      	ldr	r3, [r7, #28]
 800dd0a:	68db      	ldr	r3, [r3, #12]
 800dd0c:	2b00      	cmp	r3, #0
 800dd0e:	d002      	beq.n	800dd16 <decode_callback_field+0x82>
 800dd10:	69fb      	ldr	r3, [r7, #28]
 800dd12:	68db      	ldr	r3, [r3, #12]
 800dd14:	e000      	b.n	800dd18 <decode_callback_field+0x84>
 800dd16:	4b22      	ldr	r3, [pc, #136]	; (800dda0 <decode_callback_field+0x10c>)
 800dd18:	69fa      	ldr	r2, [r7, #28]
 800dd1a:	60d3      	str	r3, [r2, #12]
 800dd1c:	2300      	movs	r3, #0
 800dd1e:	e03a      	b.n	800dd96 <decode_callback_field+0x102>
 800dd20:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800dd22:	2b00      	cmp	r3, #0
 800dd24:	d1e2      	bne.n	800dcec <decode_callback_field+0x58>
 800dd26:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800dd2a:	4619      	mov	r1, r3
 800dd2c:	69f8      	ldr	r0, [r7, #28]
 800dd2e:	f7ff fe4f 	bl	800d9d0 <pb_close_string_substream>
 800dd32:	4603      	mov	r3, r0
 800dd34:	f083 0301 	eor.w	r3, r3, #1
 800dd38:	b2db      	uxtb	r3, r3
 800dd3a:	2b00      	cmp	r3, #0
 800dd3c:	d001      	beq.n	800dd42 <decode_callback_field+0xae>
 800dd3e:	2300      	movs	r3, #0
 800dd40:	e029      	b.n	800dd96 <decode_callback_field+0x102>
 800dd42:	2301      	movs	r3, #1
 800dd44:	e027      	b.n	800dd96 <decode_callback_field+0x102>
 800dd46:	230a      	movs	r3, #10
 800dd48:	623b      	str	r3, [r7, #32]
 800dd4a:	f107 0320 	add.w	r3, r7, #32
 800dd4e:	f107 0224 	add.w	r2, r7, #36	; 0x24
 800dd52:	7ef9      	ldrb	r1, [r7, #27]
 800dd54:	69f8      	ldr	r0, [r7, #28]
 800dd56:	f7ff fda5 	bl	800d8a4 <read_raw_value>
 800dd5a:	4603      	mov	r3, r0
 800dd5c:	f083 0301 	eor.w	r3, r3, #1
 800dd60:	b2db      	uxtb	r3, r3
 800dd62:	2b00      	cmp	r3, #0
 800dd64:	d001      	beq.n	800dd6a <decode_callback_field+0xd6>
 800dd66:	2300      	movs	r3, #0
 800dd68:	e015      	b.n	800dd96 <decode_callback_field+0x102>
 800dd6a:	6a3a      	ldr	r2, [r7, #32]
 800dd6c:	463b      	mov	r3, r7
 800dd6e:	f107 0124 	add.w	r1, r7, #36	; 0x24
 800dd72:	4618      	mov	r0, r3
 800dd74:	f7ff fbca 	bl	800d50c <pb_istream_from_buffer>
 800dd78:	f107 0430 	add.w	r4, r7, #48	; 0x30
 800dd7c:	463b      	mov	r3, r7
 800dd7e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800dd80:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800dd84:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800dd86:	681b      	ldr	r3, [r3, #0]
 800dd88:	697a      	ldr	r2, [r7, #20]
 800dd8a:	6851      	ldr	r1, [r2, #4]
 800dd8c:	f107 0030 	add.w	r0, r7, #48	; 0x30
 800dd90:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800dd92:	4798      	blx	r3
 800dd94:	4603      	mov	r3, r0
 800dd96:	4618      	mov	r0, r3
 800dd98:	375c      	adds	r7, #92	; 0x5c
 800dd9a:	46bd      	mov	sp, r7
 800dd9c:	bd90      	pop	{r4, r7, pc}
 800dd9e:	bf00      	nop
 800dda0:	08015a74 	.word	0x08015a74

0800dda4 <decode_field>:
 800dda4:	b580      	push	{r7, lr}
 800dda6:	b084      	sub	sp, #16
 800dda8:	af00      	add	r7, sp, #0
 800ddaa:	60f8      	str	r0, [r7, #12]
 800ddac:	460b      	mov	r3, r1
 800ddae:	607a      	str	r2, [r7, #4]
 800ddb0:	72fb      	strb	r3, [r7, #11]
 800ddb2:	687b      	ldr	r3, [r7, #4]
 800ddb4:	685b      	ldr	r3, [r3, #4]
 800ddb6:	789b      	ldrb	r3, [r3, #2]
 800ddb8:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800ddbc:	2b40      	cmp	r3, #64	; 0x40
 800ddbe:	d013      	beq.n	800dde8 <decode_field+0x44>
 800ddc0:	2b80      	cmp	r3, #128	; 0x80
 800ddc2:	d009      	beq.n	800ddd8 <decode_field+0x34>
 800ddc4:	2b00      	cmp	r3, #0
 800ddc6:	d117      	bne.n	800ddf8 <decode_field+0x54>
 800ddc8:	7afb      	ldrb	r3, [r7, #11]
 800ddca:	687a      	ldr	r2, [r7, #4]
 800ddcc:	4619      	mov	r1, r3
 800ddce:	68f8      	ldr	r0, [r7, #12]
 800ddd0:	f7ff fe24 	bl	800da1c <decode_static_field>
 800ddd4:	4603      	mov	r3, r0
 800ddd6:	e01a      	b.n	800de0e <decode_field+0x6a>
 800ddd8:	7afb      	ldrb	r3, [r7, #11]
 800ddda:	687a      	ldr	r2, [r7, #4]
 800dddc:	4619      	mov	r1, r3
 800ddde:	68f8      	ldr	r0, [r7, #12]
 800dde0:	f7ff ff3e 	bl	800dc60 <decode_pointer_field>
 800dde4:	4603      	mov	r3, r0
 800dde6:	e012      	b.n	800de0e <decode_field+0x6a>
 800dde8:	7afb      	ldrb	r3, [r7, #11]
 800ddea:	687a      	ldr	r2, [r7, #4]
 800ddec:	4619      	mov	r1, r3
 800ddee:	68f8      	ldr	r0, [r7, #12]
 800ddf0:	f7ff ff50 	bl	800dc94 <decode_callback_field>
 800ddf4:	4603      	mov	r3, r0
 800ddf6:	e00a      	b.n	800de0e <decode_field+0x6a>
 800ddf8:	68fb      	ldr	r3, [r7, #12]
 800ddfa:	68db      	ldr	r3, [r3, #12]
 800ddfc:	2b00      	cmp	r3, #0
 800ddfe:	d002      	beq.n	800de06 <decode_field+0x62>
 800de00:	68fb      	ldr	r3, [r7, #12]
 800de02:	68db      	ldr	r3, [r3, #12]
 800de04:	e000      	b.n	800de08 <decode_field+0x64>
 800de06:	4b04      	ldr	r3, [pc, #16]	; (800de18 <decode_field+0x74>)
 800de08:	68fa      	ldr	r2, [r7, #12]
 800de0a:	60d3      	str	r3, [r2, #12]
 800de0c:	2300      	movs	r3, #0
 800de0e:	4618      	mov	r0, r3
 800de10:	3710      	adds	r7, #16
 800de12:	46bd      	mov	sp, r7
 800de14:	bd80      	pop	{r7, pc}
 800de16:	bf00      	nop
 800de18:	08015a4c 	.word	0x08015a4c

0800de1c <iter_from_extension>:
 800de1c:	b580      	push	{r7, lr}
 800de1e:	b084      	sub	sp, #16
 800de20:	af00      	add	r7, sp, #0
 800de22:	6078      	str	r0, [r7, #4]
 800de24:	6039      	str	r1, [r7, #0]
 800de26:	683b      	ldr	r3, [r7, #0]
 800de28:	681b      	ldr	r3, [r3, #0]
 800de2a:	689b      	ldr	r3, [r3, #8]
 800de2c:	60fb      	str	r3, [r7, #12]
 800de2e:	683b      	ldr	r3, [r7, #0]
 800de30:	685b      	ldr	r3, [r3, #4]
 800de32:	461a      	mov	r2, r3
 800de34:	68f9      	ldr	r1, [r7, #12]
 800de36:	6878      	ldr	r0, [r7, #4]
 800de38:	f7ff f9b8 	bl	800d1ac <pb_field_iter_begin>
 800de3c:	683b      	ldr	r3, [r7, #0]
 800de3e:	685a      	ldr	r2, [r3, #4]
 800de40:	687b      	ldr	r3, [r7, #4]
 800de42:	611a      	str	r2, [r3, #16]
 800de44:	683b      	ldr	r3, [r7, #0]
 800de46:	f103 020c 	add.w	r2, r3, #12
 800de4a:	687b      	ldr	r3, [r7, #4]
 800de4c:	615a      	str	r2, [r3, #20]
 800de4e:	68fb      	ldr	r3, [r7, #12]
 800de50:	789b      	ldrb	r3, [r3, #2]
 800de52:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800de56:	2b80      	cmp	r3, #128	; 0x80
 800de58:	d103      	bne.n	800de62 <iter_from_extension+0x46>
 800de5a:	683b      	ldr	r3, [r7, #0]
 800de5c:	1d1a      	adds	r2, r3, #4
 800de5e:	687b      	ldr	r3, [r7, #4]
 800de60:	611a      	str	r2, [r3, #16]
 800de62:	bf00      	nop
 800de64:	3710      	adds	r7, #16
 800de66:	46bd      	mov	sp, r7
 800de68:	bd80      	pop	{r7, pc}

0800de6a <default_extension_decoder>:
 800de6a:	b580      	push	{r7, lr}
 800de6c:	b08c      	sub	sp, #48	; 0x30
 800de6e:	af00      	add	r7, sp, #0
 800de70:	60f8      	str	r0, [r7, #12]
 800de72:	60b9      	str	r1, [r7, #8]
 800de74:	607a      	str	r2, [r7, #4]
 800de76:	70fb      	strb	r3, [r7, #3]
 800de78:	68bb      	ldr	r3, [r7, #8]
 800de7a:	681b      	ldr	r3, [r3, #0]
 800de7c:	689b      	ldr	r3, [r3, #8]
 800de7e:	62fb      	str	r3, [r7, #44]	; 0x2c
 800de80:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800de82:	881b      	ldrh	r3, [r3, #0]
 800de84:	b29b      	uxth	r3, r3
 800de86:	461a      	mov	r2, r3
 800de88:	687b      	ldr	r3, [r7, #4]
 800de8a:	4293      	cmp	r3, r2
 800de8c:	d001      	beq.n	800de92 <default_extension_decoder+0x28>
 800de8e:	2301      	movs	r3, #1
 800de90:	e010      	b.n	800deb4 <default_extension_decoder+0x4a>
 800de92:	f107 0314 	add.w	r3, r7, #20
 800de96:	68b9      	ldr	r1, [r7, #8]
 800de98:	4618      	mov	r0, r3
 800de9a:	f7ff ffbf 	bl	800de1c <iter_from_extension>
 800de9e:	68bb      	ldr	r3, [r7, #8]
 800dea0:	2201      	movs	r2, #1
 800dea2:	731a      	strb	r2, [r3, #12]
 800dea4:	f107 0214 	add.w	r2, r7, #20
 800dea8:	78fb      	ldrb	r3, [r7, #3]
 800deaa:	4619      	mov	r1, r3
 800deac:	68f8      	ldr	r0, [r7, #12]
 800deae:	f7ff ff79 	bl	800dda4 <decode_field>
 800deb2:	4603      	mov	r3, r0
 800deb4:	4618      	mov	r0, r3
 800deb6:	3730      	adds	r7, #48	; 0x30
 800deb8:	46bd      	mov	sp, r7
 800deba:	bd80      	pop	{r7, pc}

0800debc <decode_extension>:
 800debc:	b590      	push	{r4, r7, lr}
 800debe:	b089      	sub	sp, #36	; 0x24
 800dec0:	af00      	add	r7, sp, #0
 800dec2:	60f8      	str	r0, [r7, #12]
 800dec4:	60b9      	str	r1, [r7, #8]
 800dec6:	603b      	str	r3, [r7, #0]
 800dec8:	4613      	mov	r3, r2
 800deca:	71fb      	strb	r3, [r7, #7]
 800decc:	683b      	ldr	r3, [r7, #0]
 800dece:	691b      	ldr	r3, [r3, #16]
 800ded0:	681b      	ldr	r3, [r3, #0]
 800ded2:	61fb      	str	r3, [r7, #28]
 800ded4:	68fb      	ldr	r3, [r7, #12]
 800ded6:	689b      	ldr	r3, [r3, #8]
 800ded8:	617b      	str	r3, [r7, #20]
 800deda:	e022      	b.n	800df22 <decode_extension+0x66>
 800dedc:	69fb      	ldr	r3, [r7, #28]
 800dede:	681b      	ldr	r3, [r3, #0]
 800dee0:	681b      	ldr	r3, [r3, #0]
 800dee2:	2b00      	cmp	r3, #0
 800dee4:	d00a      	beq.n	800defc <decode_extension+0x40>
 800dee6:	69fb      	ldr	r3, [r7, #28]
 800dee8:	681b      	ldr	r3, [r3, #0]
 800deea:	681c      	ldr	r4, [r3, #0]
 800deec:	79fb      	ldrb	r3, [r7, #7]
 800deee:	68ba      	ldr	r2, [r7, #8]
 800def0:	69f9      	ldr	r1, [r7, #28]
 800def2:	68f8      	ldr	r0, [r7, #12]
 800def4:	47a0      	blx	r4
 800def6:	4603      	mov	r3, r0
 800def8:	76fb      	strb	r3, [r7, #27]
 800defa:	e007      	b.n	800df0c <decode_extension+0x50>
 800defc:	79fb      	ldrb	r3, [r7, #7]
 800defe:	68ba      	ldr	r2, [r7, #8]
 800df00:	69f9      	ldr	r1, [r7, #28]
 800df02:	68f8      	ldr	r0, [r7, #12]
 800df04:	f7ff ffb1 	bl	800de6a <default_extension_decoder>
 800df08:	4603      	mov	r3, r0
 800df0a:	76fb      	strb	r3, [r7, #27]
 800df0c:	7efb      	ldrb	r3, [r7, #27]
 800df0e:	f083 0301 	eor.w	r3, r3, #1
 800df12:	b2db      	uxtb	r3, r3
 800df14:	2b00      	cmp	r3, #0
 800df16:	d001      	beq.n	800df1c <decode_extension+0x60>
 800df18:	2300      	movs	r3, #0
 800df1a:	e00b      	b.n	800df34 <decode_extension+0x78>
 800df1c:	69fb      	ldr	r3, [r7, #28]
 800df1e:	689b      	ldr	r3, [r3, #8]
 800df20:	61fb      	str	r3, [r7, #28]
 800df22:	69fb      	ldr	r3, [r7, #28]
 800df24:	2b00      	cmp	r3, #0
 800df26:	d004      	beq.n	800df32 <decode_extension+0x76>
 800df28:	68fb      	ldr	r3, [r7, #12]
 800df2a:	689b      	ldr	r3, [r3, #8]
 800df2c:	697a      	ldr	r2, [r7, #20]
 800df2e:	429a      	cmp	r2, r3
 800df30:	d0d4      	beq.n	800dedc <decode_extension+0x20>
 800df32:	2301      	movs	r3, #1
 800df34:	4618      	mov	r0, r3
 800df36:	3724      	adds	r7, #36	; 0x24
 800df38:	46bd      	mov	sp, r7
 800df3a:	bd90      	pop	{r4, r7, pc}

0800df3c <find_extension_field>:
 800df3c:	b580      	push	{r7, lr}
 800df3e:	b084      	sub	sp, #16
 800df40:	af00      	add	r7, sp, #0
 800df42:	6078      	str	r0, [r7, #4]
 800df44:	687b      	ldr	r3, [r7, #4]
 800df46:	685b      	ldr	r3, [r3, #4]
 800df48:	60fb      	str	r3, [r7, #12]
 800df4a:	687b      	ldr	r3, [r7, #4]
 800df4c:	685b      	ldr	r3, [r3, #4]
 800df4e:	789b      	ldrb	r3, [r3, #2]
 800df50:	f003 030f 	and.w	r3, r3, #15
 800df54:	2b08      	cmp	r3, #8
 800df56:	d101      	bne.n	800df5c <find_extension_field+0x20>
 800df58:	2301      	movs	r3, #1
 800df5a:	e008      	b.n	800df6e <find_extension_field+0x32>
 800df5c:	6878      	ldr	r0, [r7, #4]
 800df5e:	f7ff f95a 	bl	800d216 <pb_field_iter_next>
 800df62:	687b      	ldr	r3, [r7, #4]
 800df64:	685b      	ldr	r3, [r3, #4]
 800df66:	68fa      	ldr	r2, [r7, #12]
 800df68:	429a      	cmp	r2, r3
 800df6a:	d1ee      	bne.n	800df4a <find_extension_field+0xe>
 800df6c:	2300      	movs	r3, #0
 800df6e:	4618      	mov	r0, r3
 800df70:	3710      	adds	r7, #16
 800df72:	46bd      	mov	sp, r7
 800df74:	bd80      	pop	{r7, pc}

0800df76 <pb_field_set_to_default>:
 800df76:	b580      	push	{r7, lr}
 800df78:	b08a      	sub	sp, #40	; 0x28
 800df7a:	af00      	add	r7, sp, #0
 800df7c:	6078      	str	r0, [r7, #4]
 800df7e:	687b      	ldr	r3, [r7, #4]
 800df80:	685b      	ldr	r3, [r3, #4]
 800df82:	789b      	ldrb	r3, [r3, #2]
 800df84:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 800df88:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800df8c:	f003 030f 	and.w	r3, r3, #15
 800df90:	2b08      	cmp	r3, #8
 800df92:	d119      	bne.n	800dfc8 <pb_field_set_to_default+0x52>
 800df94:	687b      	ldr	r3, [r7, #4]
 800df96:	691b      	ldr	r3, [r3, #16]
 800df98:	681b      	ldr	r3, [r3, #0]
 800df9a:	627b      	str	r3, [r7, #36]	; 0x24
 800df9c:	e010      	b.n	800dfc0 <pb_field_set_to_default+0x4a>
 800df9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dfa0:	2200      	movs	r2, #0
 800dfa2:	731a      	strb	r2, [r3, #12]
 800dfa4:	f107 0308 	add.w	r3, r7, #8
 800dfa8:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800dfaa:	4618      	mov	r0, r3
 800dfac:	f7ff ff36 	bl	800de1c <iter_from_extension>
 800dfb0:	f107 0308 	add.w	r3, r7, #8
 800dfb4:	4618      	mov	r0, r3
 800dfb6:	f7ff ffde 	bl	800df76 <pb_field_set_to_default>
 800dfba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dfbc:	689b      	ldr	r3, [r3, #8]
 800dfbe:	627b      	str	r3, [r7, #36]	; 0x24
 800dfc0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dfc2:	2b00      	cmp	r3, #0
 800dfc4:	d1eb      	bne.n	800df9e <pb_field_set_to_default+0x28>
 800dfc6:	e07d      	b.n	800e0c4 <pb_field_set_to_default+0x14e>
 800dfc8:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800dfcc:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800dfd0:	2b00      	cmp	r3, #0
 800dfd2:	d15d      	bne.n	800e090 <pb_field_set_to_default+0x11a>
 800dfd4:	2301      	movs	r3, #1
 800dfd6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800dfda:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800dfde:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800dfe2:	2b10      	cmp	r3, #16
 800dfe4:	d10a      	bne.n	800dffc <pb_field_set_to_default+0x86>
 800dfe6:	687b      	ldr	r3, [r7, #4]
 800dfe8:	695a      	ldr	r2, [r3, #20]
 800dfea:	687b      	ldr	r3, [r7, #4]
 800dfec:	691b      	ldr	r3, [r3, #16]
 800dfee:	429a      	cmp	r2, r3
 800dff0:	d004      	beq.n	800dffc <pb_field_set_to_default+0x86>
 800dff2:	687b      	ldr	r3, [r7, #4]
 800dff4:	695b      	ldr	r3, [r3, #20]
 800dff6:	2200      	movs	r2, #0
 800dff8:	701a      	strb	r2, [r3, #0]
 800dffa:	e012      	b.n	800e022 <pb_field_set_to_default+0xac>
 800dffc:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800e000:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800e004:	2b20      	cmp	r3, #32
 800e006:	d005      	beq.n	800e014 <pb_field_set_to_default+0x9e>
 800e008:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800e00c:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800e010:	2b30      	cmp	r3, #48	; 0x30
 800e012:	d106      	bne.n	800e022 <pb_field_set_to_default+0xac>
 800e014:	687b      	ldr	r3, [r7, #4]
 800e016:	695b      	ldr	r3, [r3, #20]
 800e018:	2200      	movs	r2, #0
 800e01a:	801a      	strh	r2, [r3, #0]
 800e01c:	2300      	movs	r3, #0
 800e01e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800e022:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800e026:	2b00      	cmp	r3, #0
 800e028:	d04c      	beq.n	800e0c4 <pb_field_set_to_default+0x14e>
 800e02a:	687b      	ldr	r3, [r7, #4]
 800e02c:	685b      	ldr	r3, [r3, #4]
 800e02e:	789b      	ldrb	r3, [r3, #2]
 800e030:	f003 030f 	and.w	r3, r3, #15
 800e034:	2b07      	cmp	r3, #7
 800e036:	d10a      	bne.n	800e04e <pb_field_set_to_default+0xd8>
 800e038:	687b      	ldr	r3, [r7, #4]
 800e03a:	685b      	ldr	r3, [r3, #4]
 800e03c:	f8d3 200b 	ldr.w	r2, [r3, #11]
 800e040:	687b      	ldr	r3, [r7, #4]
 800e042:	691b      	ldr	r3, [r3, #16]
 800e044:	4619      	mov	r1, r3
 800e046:	4610      	mov	r0, r2
 800e048:	f000 f840 	bl	800e0cc <pb_message_set_to_defaults>
 800e04c:	e03a      	b.n	800e0c4 <pb_field_set_to_default+0x14e>
 800e04e:	687b      	ldr	r3, [r7, #4]
 800e050:	685b      	ldr	r3, [r3, #4]
 800e052:	f8d3 300b 	ldr.w	r3, [r3, #11]
 800e056:	2b00      	cmp	r3, #0
 800e058:	d00e      	beq.n	800e078 <pb_field_set_to_default+0x102>
 800e05a:	687b      	ldr	r3, [r7, #4]
 800e05c:	6918      	ldr	r0, [r3, #16]
 800e05e:	687b      	ldr	r3, [r7, #4]
 800e060:	685b      	ldr	r3, [r3, #4]
 800e062:	f8d3 100b 	ldr.w	r1, [r3, #11]
 800e066:	687b      	ldr	r3, [r7, #4]
 800e068:	685b      	ldr	r3, [r3, #4]
 800e06a:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e06e:	b29b      	uxth	r3, r3
 800e070:	461a      	mov	r2, r3
 800e072:	f001 feb0 	bl	800fdd6 <memcpy>
 800e076:	e025      	b.n	800e0c4 <pb_field_set_to_default+0x14e>
 800e078:	687b      	ldr	r3, [r7, #4]
 800e07a:	6918      	ldr	r0, [r3, #16]
 800e07c:	687b      	ldr	r3, [r7, #4]
 800e07e:	685b      	ldr	r3, [r3, #4]
 800e080:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e084:	b29b      	uxth	r3, r3
 800e086:	461a      	mov	r2, r3
 800e088:	2100      	movs	r1, #0
 800e08a:	f001 feaf 	bl	800fdec <memset>
 800e08e:	e019      	b.n	800e0c4 <pb_field_set_to_default+0x14e>
 800e090:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800e094:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800e098:	2b80      	cmp	r3, #128	; 0x80
 800e09a:	d113      	bne.n	800e0c4 <pb_field_set_to_default+0x14e>
 800e09c:	687b      	ldr	r3, [r7, #4]
 800e09e:	691b      	ldr	r3, [r3, #16]
 800e0a0:	2200      	movs	r2, #0
 800e0a2:	601a      	str	r2, [r3, #0]
 800e0a4:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800e0a8:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800e0ac:	2b20      	cmp	r3, #32
 800e0ae:	d005      	beq.n	800e0bc <pb_field_set_to_default+0x146>
 800e0b0:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800e0b4:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800e0b8:	2b30      	cmp	r3, #48	; 0x30
 800e0ba:	d103      	bne.n	800e0c4 <pb_field_set_to_default+0x14e>
 800e0bc:	687b      	ldr	r3, [r7, #4]
 800e0be:	695b      	ldr	r3, [r3, #20]
 800e0c0:	2200      	movs	r2, #0
 800e0c2:	801a      	strh	r2, [r3, #0]
 800e0c4:	bf00      	nop
 800e0c6:	3728      	adds	r7, #40	; 0x28
 800e0c8:	46bd      	mov	sp, r7
 800e0ca:	bd80      	pop	{r7, pc}

0800e0cc <pb_message_set_to_defaults>:
 800e0cc:	b580      	push	{r7, lr}
 800e0ce:	b088      	sub	sp, #32
 800e0d0:	af00      	add	r7, sp, #0
 800e0d2:	6078      	str	r0, [r7, #4]
 800e0d4:	6039      	str	r1, [r7, #0]
 800e0d6:	f107 0308 	add.w	r3, r7, #8
 800e0da:	683a      	ldr	r2, [r7, #0]
 800e0dc:	6879      	ldr	r1, [r7, #4]
 800e0de:	4618      	mov	r0, r3
 800e0e0:	f7ff f864 	bl	800d1ac <pb_field_iter_begin>
 800e0e4:	4603      	mov	r3, r0
 800e0e6:	f083 0301 	eor.w	r3, r3, #1
 800e0ea:	b2db      	uxtb	r3, r3
 800e0ec:	2b00      	cmp	r3, #0
 800e0ee:	d10d      	bne.n	800e10c <pb_message_set_to_defaults+0x40>
 800e0f0:	f107 0308 	add.w	r3, r7, #8
 800e0f4:	4618      	mov	r0, r3
 800e0f6:	f7ff ff3e 	bl	800df76 <pb_field_set_to_default>
 800e0fa:	f107 0308 	add.w	r3, r7, #8
 800e0fe:	4618      	mov	r0, r3
 800e100:	f7ff f889 	bl	800d216 <pb_field_iter_next>
 800e104:	4603      	mov	r3, r0
 800e106:	2b00      	cmp	r3, #0
 800e108:	d1f2      	bne.n	800e0f0 <pb_message_set_to_defaults+0x24>
 800e10a:	e000      	b.n	800e10e <pb_message_set_to_defaults+0x42>
 800e10c:	bf00      	nop
 800e10e:	3720      	adds	r7, #32
 800e110:	46bd      	mov	sp, r7
 800e112:	bd80      	pop	{r7, pc}

0800e114 <pb_decode_noinit>:
 800e114:	b580      	push	{r7, lr}
 800e116:	b098      	sub	sp, #96	; 0x60
 800e118:	af00      	add	r7, sp, #0
 800e11a:	60f8      	str	r0, [r7, #12]
 800e11c:	60b9      	str	r1, [r7, #8]
 800e11e:	607a      	str	r2, [r7, #4]
 800e120:	2300      	movs	r3, #0
 800e122:	63bb      	str	r3, [r7, #56]	; 0x38
 800e124:	2300      	movs	r3, #0
 800e126:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e128:	f04f 33ff 	mov.w	r3, #4294967295
 800e12c:	64fb      	str	r3, [r7, #76]	; 0x4c
 800e12e:	2300      	movs	r3, #0
 800e130:	65fb      	str	r3, [r7, #92]	; 0x5c
 800e132:	2300      	movs	r3, #0
 800e134:	65bb      	str	r3, [r7, #88]	; 0x58
 800e136:	2300      	movs	r3, #0
 800e138:	83fb      	strh	r3, [r7, #30]
 800e13a:	f107 0320 	add.w	r3, r7, #32
 800e13e:	687a      	ldr	r2, [r7, #4]
 800e140:	68b9      	ldr	r1, [r7, #8]
 800e142:	4618      	mov	r0, r3
 800e144:	f7ff f832 	bl	800d1ac <pb_field_iter_begin>
 800e148:	e0bf      	b.n	800e2ca <pb_decode_noinit+0x1b6>
 800e14a:	f107 0316 	add.w	r3, r7, #22
 800e14e:	f107 0218 	add.w	r2, r7, #24
 800e152:	f107 0117 	add.w	r1, r7, #23
 800e156:	68f8      	ldr	r0, [r7, #12]
 800e158:	f7ff fb2b 	bl	800d7b2 <pb_decode_tag>
 800e15c:	4603      	mov	r3, r0
 800e15e:	f083 0301 	eor.w	r3, r3, #1
 800e162:	b2db      	uxtb	r3, r3
 800e164:	2b00      	cmp	r3, #0
 800e166:	d005      	beq.n	800e174 <pb_decode_noinit+0x60>
 800e168:	7dbb      	ldrb	r3, [r7, #22]
 800e16a:	2b00      	cmp	r3, #0
 800e16c:	f040 80b3 	bne.w	800e2d6 <pb_decode_noinit+0x1c2>
 800e170:	2300      	movs	r3, #0
 800e172:	e130      	b.n	800e3d6 <pb_decode_noinit+0x2c2>
 800e174:	69ba      	ldr	r2, [r7, #24]
 800e176:	f107 0320 	add.w	r3, r7, #32
 800e17a:	4611      	mov	r1, r2
 800e17c:	4618      	mov	r0, r3
 800e17e:	f7ff f8d0 	bl	800d322 <pb_field_iter_find>
 800e182:	4603      	mov	r3, r0
 800e184:	f083 0301 	eor.w	r3, r3, #1
 800e188:	b2db      	uxtb	r3, r3
 800e18a:	2b00      	cmp	r3, #0
 800e18c:	d03e      	beq.n	800e20c <pb_decode_noinit+0xf8>
 800e18e:	69bb      	ldr	r3, [r7, #24]
 800e190:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800e192:	429a      	cmp	r2, r3
 800e194:	d82d      	bhi.n	800e1f2 <pb_decode_noinit+0xde>
 800e196:	f107 0320 	add.w	r3, r7, #32
 800e19a:	4618      	mov	r0, r3
 800e19c:	f7ff fece 	bl	800df3c <find_extension_field>
 800e1a0:	4603      	mov	r3, r0
 800e1a2:	f083 0301 	eor.w	r3, r3, #1
 800e1a6:	b2db      	uxtb	r3, r3
 800e1a8:	2b00      	cmp	r3, #0
 800e1aa:	d003      	beq.n	800e1b4 <pb_decode_noinit+0xa0>
 800e1ac:	f04f 33ff 	mov.w	r3, #4294967295
 800e1b0:	65fb      	str	r3, [r7, #92]	; 0x5c
 800e1b2:	e003      	b.n	800e1bc <pb_decode_noinit+0xa8>
 800e1b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e1b6:	881b      	ldrh	r3, [r3, #0]
 800e1b8:	b29b      	uxth	r3, r3
 800e1ba:	65fb      	str	r3, [r7, #92]	; 0x5c
 800e1bc:	69bb      	ldr	r3, [r7, #24]
 800e1be:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800e1c0:	429a      	cmp	r2, r3
 800e1c2:	d816      	bhi.n	800e1f2 <pb_decode_noinit+0xde>
 800e1c4:	68fb      	ldr	r3, [r7, #12]
 800e1c6:	689b      	ldr	r3, [r3, #8]
 800e1c8:	647b      	str	r3, [r7, #68]	; 0x44
 800e1ca:	69b9      	ldr	r1, [r7, #24]
 800e1cc:	7dfa      	ldrb	r2, [r7, #23]
 800e1ce:	f107 0320 	add.w	r3, r7, #32
 800e1d2:	68f8      	ldr	r0, [r7, #12]
 800e1d4:	f7ff fe72 	bl	800debc <decode_extension>
 800e1d8:	4603      	mov	r3, r0
 800e1da:	f083 0301 	eor.w	r3, r3, #1
 800e1de:	b2db      	uxtb	r3, r3
 800e1e0:	2b00      	cmp	r3, #0
 800e1e2:	d001      	beq.n	800e1e8 <pb_decode_noinit+0xd4>
 800e1e4:	2300      	movs	r3, #0
 800e1e6:	e0f6      	b.n	800e3d6 <pb_decode_noinit+0x2c2>
 800e1e8:	68fb      	ldr	r3, [r7, #12]
 800e1ea:	689b      	ldr	r3, [r3, #8]
 800e1ec:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800e1ee:	429a      	cmp	r2, r3
 800e1f0:	d168      	bne.n	800e2c4 <pb_decode_noinit+0x1b0>
 800e1f2:	7dfb      	ldrb	r3, [r7, #23]
 800e1f4:	4619      	mov	r1, r3
 800e1f6:	68f8      	ldr	r0, [r7, #12]
 800e1f8:	f7ff fb12 	bl	800d820 <pb_skip_field>
 800e1fc:	4603      	mov	r3, r0
 800e1fe:	f083 0301 	eor.w	r3, r3, #1
 800e202:	b2db      	uxtb	r3, r3
 800e204:	2b00      	cmp	r3, #0
 800e206:	d05f      	beq.n	800e2c8 <pb_decode_noinit+0x1b4>
 800e208:	2300      	movs	r3, #0
 800e20a:	e0e4      	b.n	800e3d6 <pb_decode_noinit+0x2c2>
 800e20c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e20e:	789b      	ldrb	r3, [r3, #2]
 800e210:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800e214:	2b20      	cmp	r3, #32
 800e216:	d124      	bne.n	800e262 <pb_decode_noinit+0x14e>
 800e218:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800e21a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e21c:	429a      	cmp	r2, r3
 800e21e:	d120      	bne.n	800e262 <pb_decode_noinit+0x14e>
 800e220:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e222:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800e224:	429a      	cmp	r2, r3
 800e226:	d019      	beq.n	800e25c <pb_decode_noinit+0x148>
 800e228:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800e22a:	2b00      	cmp	r3, #0
 800e22c:	d012      	beq.n	800e254 <pb_decode_noinit+0x140>
 800e22e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800e230:	f8b3 3009 	ldrh.w	r3, [r3, #9]
 800e234:	b29a      	uxth	r2, r3
 800e236:	8bfb      	ldrh	r3, [r7, #30]
 800e238:	429a      	cmp	r2, r3
 800e23a:	d00b      	beq.n	800e254 <pb_decode_noinit+0x140>
 800e23c:	68fb      	ldr	r3, [r7, #12]
 800e23e:	68db      	ldr	r3, [r3, #12]
 800e240:	2b00      	cmp	r3, #0
 800e242:	d002      	beq.n	800e24a <pb_decode_noinit+0x136>
 800e244:	68fb      	ldr	r3, [r7, #12]
 800e246:	68db      	ldr	r3, [r3, #12]
 800e248:	e000      	b.n	800e24c <pb_decode_noinit+0x138>
 800e24a:	4b65      	ldr	r3, [pc, #404]	; (800e3e0 <pb_decode_noinit+0x2cc>)
 800e24c:	68fa      	ldr	r2, [r7, #12]
 800e24e:	60d3      	str	r3, [r2, #12]
 800e250:	2300      	movs	r3, #0
 800e252:	e0c0      	b.n	800e3d6 <pb_decode_noinit+0x2c2>
 800e254:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e256:	65bb      	str	r3, [r7, #88]	; 0x58
 800e258:	2300      	movs	r3, #0
 800e25a:	83fb      	strh	r3, [r7, #30]
 800e25c:	f107 031e 	add.w	r3, r7, #30
 800e260:	637b      	str	r3, [r7, #52]	; 0x34
 800e262:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e264:	789b      	ldrb	r3, [r3, #2]
 800e266:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800e26a:	2b00      	cmp	r3, #0
 800e26c:	d11b      	bne.n	800e2a6 <pb_decode_noinit+0x192>
 800e26e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e270:	2b3f      	cmp	r3, #63	; 0x3f
 800e272:	d818      	bhi.n	800e2a6 <pb_decode_noinit+0x192>
 800e274:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e276:	f003 031f 	and.w	r3, r3, #31
 800e27a:	2201      	movs	r2, #1
 800e27c:	fa02 f303 	lsl.w	r3, r2, r3
 800e280:	64bb      	str	r3, [r7, #72]	; 0x48
 800e282:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e284:	095b      	lsrs	r3, r3, #5
 800e286:	009b      	lsls	r3, r3, #2
 800e288:	f107 0260 	add.w	r2, r7, #96	; 0x60
 800e28c:	4413      	add	r3, r2
 800e28e:	f853 1c28 	ldr.w	r1, [r3, #-40]
 800e292:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e294:	095b      	lsrs	r3, r3, #5
 800e296:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800e298:	430a      	orrs	r2, r1
 800e29a:	009b      	lsls	r3, r3, #2
 800e29c:	f107 0160 	add.w	r1, r7, #96	; 0x60
 800e2a0:	440b      	add	r3, r1
 800e2a2:	f843 2c28 	str.w	r2, [r3, #-40]
 800e2a6:	7dfb      	ldrb	r3, [r7, #23]
 800e2a8:	f107 0220 	add.w	r2, r7, #32
 800e2ac:	4619      	mov	r1, r3
 800e2ae:	68f8      	ldr	r0, [r7, #12]
 800e2b0:	f7ff fd78 	bl	800dda4 <decode_field>
 800e2b4:	4603      	mov	r3, r0
 800e2b6:	f083 0301 	eor.w	r3, r3, #1
 800e2ba:	b2db      	uxtb	r3, r3
 800e2bc:	2b00      	cmp	r3, #0
 800e2be:	d004      	beq.n	800e2ca <pb_decode_noinit+0x1b6>
 800e2c0:	2300      	movs	r3, #0
 800e2c2:	e088      	b.n	800e3d6 <pb_decode_noinit+0x2c2>
 800e2c4:	bf00      	nop
 800e2c6:	e000      	b.n	800e2ca <pb_decode_noinit+0x1b6>
 800e2c8:	bf00      	nop
 800e2ca:	68fb      	ldr	r3, [r7, #12]
 800e2cc:	689b      	ldr	r3, [r3, #8]
 800e2ce:	2b00      	cmp	r3, #0
 800e2d0:	f47f af3b 	bne.w	800e14a <pb_decode_noinit+0x36>
 800e2d4:	e000      	b.n	800e2d8 <pb_decode_noinit+0x1c4>
 800e2d6:	bf00      	nop
 800e2d8:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800e2da:	2b00      	cmp	r3, #0
 800e2dc:	d012      	beq.n	800e304 <pb_decode_noinit+0x1f0>
 800e2de:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800e2e0:	f8b3 3009 	ldrh.w	r3, [r3, #9]
 800e2e4:	b29a      	uxth	r2, r3
 800e2e6:	8bfb      	ldrh	r3, [r7, #30]
 800e2e8:	429a      	cmp	r2, r3
 800e2ea:	d00b      	beq.n	800e304 <pb_decode_noinit+0x1f0>
 800e2ec:	68fb      	ldr	r3, [r7, #12]
 800e2ee:	68db      	ldr	r3, [r3, #12]
 800e2f0:	2b00      	cmp	r3, #0
 800e2f2:	d002      	beq.n	800e2fa <pb_decode_noinit+0x1e6>
 800e2f4:	68fb      	ldr	r3, [r7, #12]
 800e2f6:	68db      	ldr	r3, [r3, #12]
 800e2f8:	e000      	b.n	800e2fc <pb_decode_noinit+0x1e8>
 800e2fa:	4b39      	ldr	r3, [pc, #228]	; (800e3e0 <pb_decode_noinit+0x2cc>)
 800e2fc:	68fa      	ldr	r2, [r7, #12]
 800e2fe:	60d3      	str	r3, [r2, #12]
 800e300:	2300      	movs	r3, #0
 800e302:	e068      	b.n	800e3d6 <pb_decode_noinit+0x2c2>
 800e304:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e306:	657b      	str	r3, [r7, #84]	; 0x54
 800e308:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e30a:	789b      	ldrb	r3, [r3, #2]
 800e30c:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800e310:	f107 0320 	add.w	r3, r7, #32
 800e314:	4618      	mov	r0, r3
 800e316:	f7fe ff7e 	bl	800d216 <pb_field_iter_next>
 800e31a:	4603      	mov	r3, r0
 800e31c:	2b00      	cmp	r3, #0
 800e31e:	d1f1      	bne.n	800e304 <pb_decode_noinit+0x1f0>
 800e320:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800e324:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800e328:	2b00      	cmp	r3, #0
 800e32a:	d107      	bne.n	800e33c <pb_decode_noinit+0x228>
 800e32c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e32e:	881b      	ldrh	r3, [r3, #0]
 800e330:	b29b      	uxth	r3, r3
 800e332:	2b00      	cmp	r3, #0
 800e334:	d002      	beq.n	800e33c <pb_decode_noinit+0x228>
 800e336:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800e338:	3301      	adds	r3, #1
 800e33a:	657b      	str	r3, [r7, #84]	; 0x54
 800e33c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800e33e:	2b40      	cmp	r3, #64	; 0x40
 800e340:	d901      	bls.n	800e346 <pb_decode_noinit+0x232>
 800e342:	2340      	movs	r3, #64	; 0x40
 800e344:	657b      	str	r3, [r7, #84]	; 0x54
 800e346:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800e348:	2b00      	cmp	r3, #0
 800e34a:	d043      	beq.n	800e3d4 <pb_decode_noinit+0x2c0>
 800e34c:	2300      	movs	r3, #0
 800e34e:	653b      	str	r3, [r7, #80]	; 0x50
 800e350:	e018      	b.n	800e384 <pb_decode_noinit+0x270>
 800e352:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800e354:	009b      	lsls	r3, r3, #2
 800e356:	f107 0260 	add.w	r2, r7, #96	; 0x60
 800e35a:	4413      	add	r3, r2
 800e35c:	f853 3c28 	ldr.w	r3, [r3, #-40]
 800e360:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800e362:	429a      	cmp	r2, r3
 800e364:	d00b      	beq.n	800e37e <pb_decode_noinit+0x26a>
 800e366:	68fb      	ldr	r3, [r7, #12]
 800e368:	68db      	ldr	r3, [r3, #12]
 800e36a:	2b00      	cmp	r3, #0
 800e36c:	d002      	beq.n	800e374 <pb_decode_noinit+0x260>
 800e36e:	68fb      	ldr	r3, [r7, #12]
 800e370:	68db      	ldr	r3, [r3, #12]
 800e372:	e000      	b.n	800e376 <pb_decode_noinit+0x262>
 800e374:	4b1b      	ldr	r3, [pc, #108]	; (800e3e4 <pb_decode_noinit+0x2d0>)
 800e376:	68fa      	ldr	r2, [r7, #12]
 800e378:	60d3      	str	r3, [r2, #12]
 800e37a:	2300      	movs	r3, #0
 800e37c:	e02b      	b.n	800e3d6 <pb_decode_noinit+0x2c2>
 800e37e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800e380:	3301      	adds	r3, #1
 800e382:	653b      	str	r3, [r7, #80]	; 0x50
 800e384:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800e386:	095b      	lsrs	r3, r3, #5
 800e388:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800e38a:	429a      	cmp	r2, r3
 800e38c:	d3e1      	bcc.n	800e352 <pb_decode_noinit+0x23e>
 800e38e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800e390:	f003 031f 	and.w	r3, r3, #31
 800e394:	2b00      	cmp	r3, #0
 800e396:	d01d      	beq.n	800e3d4 <pb_decode_noinit+0x2c0>
 800e398:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800e39a:	095b      	lsrs	r3, r3, #5
 800e39c:	009b      	lsls	r3, r3, #2
 800e39e:	f107 0260 	add.w	r2, r7, #96	; 0x60
 800e3a2:	4413      	add	r3, r2
 800e3a4:	f853 2c28 	ldr.w	r2, [r3, #-40]
 800e3a8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800e3aa:	f003 031f 	and.w	r3, r3, #31
 800e3ae:	f1c3 0320 	rsb	r3, r3, #32
 800e3b2:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 800e3b4:	fa21 f303 	lsr.w	r3, r1, r3
 800e3b8:	429a      	cmp	r2, r3
 800e3ba:	d00b      	beq.n	800e3d4 <pb_decode_noinit+0x2c0>
 800e3bc:	68fb      	ldr	r3, [r7, #12]
 800e3be:	68db      	ldr	r3, [r3, #12]
 800e3c0:	2b00      	cmp	r3, #0
 800e3c2:	d002      	beq.n	800e3ca <pb_decode_noinit+0x2b6>
 800e3c4:	68fb      	ldr	r3, [r7, #12]
 800e3c6:	68db      	ldr	r3, [r3, #12]
 800e3c8:	e000      	b.n	800e3cc <pb_decode_noinit+0x2b8>
 800e3ca:	4b06      	ldr	r3, [pc, #24]	; (800e3e4 <pb_decode_noinit+0x2d0>)
 800e3cc:	68fa      	ldr	r2, [r7, #12]
 800e3ce:	60d3      	str	r3, [r2, #12]
 800e3d0:	2300      	movs	r3, #0
 800e3d2:	e000      	b.n	800e3d6 <pb_decode_noinit+0x2c2>
 800e3d4:	2301      	movs	r3, #1
 800e3d6:	4618      	mov	r0, r3
 800e3d8:	3760      	adds	r7, #96	; 0x60
 800e3da:	46bd      	mov	sp, r7
 800e3dc:	bd80      	pop	{r7, pc}
 800e3de:	bf00      	nop
 800e3e0:	08015a84 	.word	0x08015a84
 800e3e4:	08015aa8 	.word	0x08015aa8

0800e3e8 <pb_decode>:
 800e3e8:	b580      	push	{r7, lr}
 800e3ea:	b086      	sub	sp, #24
 800e3ec:	af00      	add	r7, sp, #0
 800e3ee:	60f8      	str	r0, [r7, #12]
 800e3f0:	60b9      	str	r1, [r7, #8]
 800e3f2:	607a      	str	r2, [r7, #4]
 800e3f4:	6879      	ldr	r1, [r7, #4]
 800e3f6:	68b8      	ldr	r0, [r7, #8]
 800e3f8:	f7ff fe68 	bl	800e0cc <pb_message_set_to_defaults>
 800e3fc:	687a      	ldr	r2, [r7, #4]
 800e3fe:	68b9      	ldr	r1, [r7, #8]
 800e400:	68f8      	ldr	r0, [r7, #12]
 800e402:	f7ff fe87 	bl	800e114 <pb_decode_noinit>
 800e406:	4603      	mov	r3, r0
 800e408:	75fb      	strb	r3, [r7, #23]
 800e40a:	7dfb      	ldrb	r3, [r7, #23]
 800e40c:	4618      	mov	r0, r3
 800e40e:	3718      	adds	r7, #24
 800e410:	46bd      	mov	sp, r7
 800e412:	bd80      	pop	{r7, pc}

0800e414 <pb_decode_delimited>:
 800e414:	b580      	push	{r7, lr}
 800e416:	b08a      	sub	sp, #40	; 0x28
 800e418:	af00      	add	r7, sp, #0
 800e41a:	60f8      	str	r0, [r7, #12]
 800e41c:	60b9      	str	r1, [r7, #8]
 800e41e:	607a      	str	r2, [r7, #4]
 800e420:	f107 0314 	add.w	r3, r7, #20
 800e424:	4619      	mov	r1, r3
 800e426:	68f8      	ldr	r0, [r7, #12]
 800e428:	f7ff fa98 	bl	800d95c <pb_make_string_substream>
 800e42c:	4603      	mov	r3, r0
 800e42e:	f083 0301 	eor.w	r3, r3, #1
 800e432:	b2db      	uxtb	r3, r3
 800e434:	2b00      	cmp	r3, #0
 800e436:	d001      	beq.n	800e43c <pb_decode_delimited+0x28>
 800e438:	2300      	movs	r3, #0
 800e43a:	e019      	b.n	800e470 <pb_decode_delimited+0x5c>
 800e43c:	f107 0314 	add.w	r3, r7, #20
 800e440:	687a      	ldr	r2, [r7, #4]
 800e442:	68b9      	ldr	r1, [r7, #8]
 800e444:	4618      	mov	r0, r3
 800e446:	f7ff ffcf 	bl	800e3e8 <pb_decode>
 800e44a:	4603      	mov	r3, r0
 800e44c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800e450:	f107 0314 	add.w	r3, r7, #20
 800e454:	4619      	mov	r1, r3
 800e456:	68f8      	ldr	r0, [r7, #12]
 800e458:	f7ff faba 	bl	800d9d0 <pb_close_string_substream>
 800e45c:	4603      	mov	r3, r0
 800e45e:	f083 0301 	eor.w	r3, r3, #1
 800e462:	b2db      	uxtb	r3, r3
 800e464:	2b00      	cmp	r3, #0
 800e466:	d001      	beq.n	800e46c <pb_decode_delimited+0x58>
 800e468:	2300      	movs	r3, #0
 800e46a:	e001      	b.n	800e470 <pb_decode_delimited+0x5c>
 800e46c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800e470:	4618      	mov	r0, r3
 800e472:	3728      	adds	r7, #40	; 0x28
 800e474:	46bd      	mov	sp, r7
 800e476:	bd80      	pop	{r7, pc}

0800e478 <pb_decode_svarint>:
 800e478:	e92d 4890 	stmdb	sp!, {r4, r7, fp, lr}
 800e47c:	b084      	sub	sp, #16
 800e47e:	af00      	add	r7, sp, #0
 800e480:	6078      	str	r0, [r7, #4]
 800e482:	6039      	str	r1, [r7, #0]
 800e484:	f107 0308 	add.w	r3, r7, #8
 800e488:	4619      	mov	r1, r3
 800e48a:	6878      	ldr	r0, [r7, #4]
 800e48c:	f7ff f8f6 	bl	800d67c <pb_decode_varint>
 800e490:	4603      	mov	r3, r0
 800e492:	f083 0301 	eor.w	r3, r3, #1
 800e496:	b2db      	uxtb	r3, r3
 800e498:	2b00      	cmp	r3, #0
 800e49a:	d001      	beq.n	800e4a0 <pb_decode_svarint+0x28>
 800e49c:	2300      	movs	r3, #0
 800e49e:	e021      	b.n	800e4e4 <pb_decode_svarint+0x6c>
 800e4a0:	e9d7 bc02 	ldrd	fp, ip, [r7, #8]
 800e4a4:	f04f 0101 	mov.w	r1, #1
 800e4a8:	f04f 0200 	mov.w	r2, #0
 800e4ac:	ea0b 0301 	and.w	r3, fp, r1
 800e4b0:	ea0c 0402 	and.w	r4, ip, r2
 800e4b4:	4323      	orrs	r3, r4
 800e4b6:	d00c      	beq.n	800e4d2 <pb_decode_svarint+0x5a>
 800e4b8:	e9d7 3402 	ldrd	r3, r4, [r7, #8]
 800e4bc:	0862      	lsrs	r2, r4, #1
 800e4be:	ea4f 0133 	mov.w	r1, r3, rrx
 800e4c2:	ea6f 0301 	mvn.w	r3, r1
 800e4c6:	ea6f 0402 	mvn.w	r4, r2
 800e4ca:	683a      	ldr	r2, [r7, #0]
 800e4cc:	e9c2 3400 	strd	r3, r4, [r2]
 800e4d0:	e007      	b.n	800e4e2 <pb_decode_svarint+0x6a>
 800e4d2:	e9d7 3402 	ldrd	r3, r4, [r7, #8]
 800e4d6:	0864      	lsrs	r4, r4, #1
 800e4d8:	ea4f 0333 	mov.w	r3, r3, rrx
 800e4dc:	683a      	ldr	r2, [r7, #0]
 800e4de:	e9c2 3400 	strd	r3, r4, [r2]
 800e4e2:	2301      	movs	r3, #1
 800e4e4:	4618      	mov	r0, r3
 800e4e6:	3710      	adds	r7, #16
 800e4e8:	46bd      	mov	sp, r7
 800e4ea:	e8bd 8890 	ldmia.w	sp!, {r4, r7, fp, pc}

0800e4ee <pb_decode_fixed32>:
 800e4ee:	b580      	push	{r7, lr}
 800e4f0:	b084      	sub	sp, #16
 800e4f2:	af00      	add	r7, sp, #0
 800e4f4:	6078      	str	r0, [r7, #4]
 800e4f6:	6039      	str	r1, [r7, #0]
 800e4f8:	f107 030c 	add.w	r3, r7, #12
 800e4fc:	2204      	movs	r2, #4
 800e4fe:	4619      	mov	r1, r3
 800e500:	6878      	ldr	r0, [r7, #4]
 800e502:	f7fe ff5f 	bl	800d3c4 <pb_read>
 800e506:	4603      	mov	r3, r0
 800e508:	f083 0301 	eor.w	r3, r3, #1
 800e50c:	b2db      	uxtb	r3, r3
 800e50e:	2b00      	cmp	r3, #0
 800e510:	d001      	beq.n	800e516 <pb_decode_fixed32+0x28>
 800e512:	2300      	movs	r3, #0
 800e514:	e00d      	b.n	800e532 <pb_decode_fixed32+0x44>
 800e516:	7b3b      	ldrb	r3, [r7, #12]
 800e518:	461a      	mov	r2, r3
 800e51a:	7b7b      	ldrb	r3, [r7, #13]
 800e51c:	021b      	lsls	r3, r3, #8
 800e51e:	431a      	orrs	r2, r3
 800e520:	7bbb      	ldrb	r3, [r7, #14]
 800e522:	041b      	lsls	r3, r3, #16
 800e524:	431a      	orrs	r2, r3
 800e526:	7bfb      	ldrb	r3, [r7, #15]
 800e528:	061b      	lsls	r3, r3, #24
 800e52a:	431a      	orrs	r2, r3
 800e52c:	683b      	ldr	r3, [r7, #0]
 800e52e:	601a      	str	r2, [r3, #0]
 800e530:	2301      	movs	r3, #1
 800e532:	4618      	mov	r0, r3
 800e534:	3710      	adds	r7, #16
 800e536:	46bd      	mov	sp, r7
 800e538:	bd80      	pop	{r7, pc}

0800e53a <pb_decode_fixed64>:
 800e53a:	e92d 4bf0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, fp, lr}
 800e53e:	b084      	sub	sp, #16
 800e540:	af00      	add	r7, sp, #0
 800e542:	6078      	str	r0, [r7, #4]
 800e544:	6039      	str	r1, [r7, #0]
 800e546:	f107 0308 	add.w	r3, r7, #8
 800e54a:	2208      	movs	r2, #8
 800e54c:	4619      	mov	r1, r3
 800e54e:	6878      	ldr	r0, [r7, #4]
 800e550:	f7fe ff38 	bl	800d3c4 <pb_read>
 800e554:	4603      	mov	r3, r0
 800e556:	f083 0301 	eor.w	r3, r3, #1
 800e55a:	b2db      	uxtb	r3, r3
 800e55c:	2b00      	cmp	r3, #0
 800e55e:	d001      	beq.n	800e564 <pb_decode_fixed64+0x2a>
 800e560:	2300      	movs	r3, #0
 800e562:	e06c      	b.n	800e63e <pb_decode_fixed64+0x104>
 800e564:	7a3b      	ldrb	r3, [r7, #8]
 800e566:	fa5f fb83 	uxtb.w	fp, r3
 800e56a:	f04f 0c00 	mov.w	ip, #0
 800e56e:	7a7b      	ldrb	r3, [r7, #9]
 800e570:	b2d9      	uxtb	r1, r3
 800e572:	f04f 0200 	mov.w	r2, #0
 800e576:	f04f 0300 	mov.w	r3, #0
 800e57a:	f04f 0400 	mov.w	r4, #0
 800e57e:	0214      	lsls	r4, r2, #8
 800e580:	ea44 6411 	orr.w	r4, r4, r1, lsr #24
 800e584:	020b      	lsls	r3, r1, #8
 800e586:	ea4b 0803 	orr.w	r8, fp, r3
 800e58a:	ea4c 0904 	orr.w	r9, ip, r4
 800e58e:	7abb      	ldrb	r3, [r7, #10]
 800e590:	b2d9      	uxtb	r1, r3
 800e592:	f04f 0200 	mov.w	r2, #0
 800e596:	f04f 0300 	mov.w	r3, #0
 800e59a:	f04f 0400 	mov.w	r4, #0
 800e59e:	0414      	lsls	r4, r2, #16
 800e5a0:	ea44 4411 	orr.w	r4, r4, r1, lsr #16
 800e5a4:	040b      	lsls	r3, r1, #16
 800e5a6:	ea48 0103 	orr.w	r1, r8, r3
 800e5aa:	ea49 0204 	orr.w	r2, r9, r4
 800e5ae:	7afb      	ldrb	r3, [r7, #11]
 800e5b0:	b2db      	uxtb	r3, r3
 800e5b2:	f04f 0400 	mov.w	r4, #0
 800e5b6:	0a1e      	lsrs	r6, r3, #8
 800e5b8:	061d      	lsls	r5, r3, #24
 800e5ba:	ea41 0805 	orr.w	r8, r1, r5
 800e5be:	ea42 0906 	orr.w	r9, r2, r6
 800e5c2:	7b3b      	ldrb	r3, [r7, #12]
 800e5c4:	b2dd      	uxtb	r5, r3
 800e5c6:	f04f 0600 	mov.w	r6, #0
 800e5ca:	f04f 0300 	mov.w	r3, #0
 800e5ce:	f04f 0400 	mov.w	r4, #0
 800e5d2:	002c      	movs	r4, r5
 800e5d4:	2300      	movs	r3, #0
 800e5d6:	ea48 0103 	orr.w	r1, r8, r3
 800e5da:	ea49 0204 	orr.w	r2, r9, r4
 800e5de:	7b7b      	ldrb	r3, [r7, #13]
 800e5e0:	b2dd      	uxtb	r5, r3
 800e5e2:	f04f 0600 	mov.w	r6, #0
 800e5e6:	f04f 0300 	mov.w	r3, #0
 800e5ea:	f04f 0400 	mov.w	r4, #0
 800e5ee:	022c      	lsls	r4, r5, #8
 800e5f0:	2300      	movs	r3, #0
 800e5f2:	ea41 0803 	orr.w	r8, r1, r3
 800e5f6:	ea42 0904 	orr.w	r9, r2, r4
 800e5fa:	7bbb      	ldrb	r3, [r7, #14]
 800e5fc:	b2dd      	uxtb	r5, r3
 800e5fe:	f04f 0600 	mov.w	r6, #0
 800e602:	f04f 0300 	mov.w	r3, #0
 800e606:	f04f 0400 	mov.w	r4, #0
 800e60a:	042c      	lsls	r4, r5, #16
 800e60c:	2300      	movs	r3, #0
 800e60e:	ea48 0103 	orr.w	r1, r8, r3
 800e612:	ea49 0204 	orr.w	r2, r9, r4
 800e616:	7bfb      	ldrb	r3, [r7, #15]
 800e618:	b2dd      	uxtb	r5, r3
 800e61a:	f04f 0600 	mov.w	r6, #0
 800e61e:	f04f 0800 	mov.w	r8, #0
 800e622:	f04f 0900 	mov.w	r9, #0
 800e626:	ea4f 6905 	mov.w	r9, r5, lsl #24
 800e62a:	f04f 0800 	mov.w	r8, #0
 800e62e:	ea48 0301 	orr.w	r3, r8, r1
 800e632:	ea49 0402 	orr.w	r4, r9, r2
 800e636:	683a      	ldr	r2, [r7, #0]
 800e638:	e9c2 3400 	strd	r3, r4, [r2]
 800e63c:	2301      	movs	r3, #1
 800e63e:	4618      	mov	r0, r3
 800e640:	3710      	adds	r7, #16
 800e642:	46bd      	mov	sp, r7
 800e644:	e8bd 8bf0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, fp, pc}

0800e648 <pb_dec_varint>:
 800e648:	b590      	push	{r4, r7, lr}
 800e64a:	b08b      	sub	sp, #44	; 0x2c
 800e64c:	af00      	add	r7, sp, #0
 800e64e:	60f8      	str	r0, [r7, #12]
 800e650:	60b9      	str	r1, [r7, #8]
 800e652:	607a      	str	r2, [r7, #4]
 800e654:	f107 0310 	add.w	r3, r7, #16
 800e658:	4619      	mov	r1, r3
 800e65a:	68f8      	ldr	r0, [r7, #12]
 800e65c:	f7ff f80e 	bl	800d67c <pb_decode_varint>
 800e660:	4603      	mov	r3, r0
 800e662:	f083 0301 	eor.w	r3, r3, #1
 800e666:	b2db      	uxtb	r3, r3
 800e668:	2b00      	cmp	r3, #0
 800e66a:	d001      	beq.n	800e670 <pb_dec_varint+0x28>
 800e66c:	2300      	movs	r3, #0
 800e66e:	e078      	b.n	800e762 <pb_dec_varint+0x11a>
 800e670:	68bb      	ldr	r3, [r7, #8]
 800e672:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e676:	b29b      	uxth	r3, r3
 800e678:	2b08      	cmp	r3, #8
 800e67a:	d104      	bne.n	800e686 <pb_dec_varint+0x3e>
 800e67c:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800e680:	e9c7 3408 	strd	r3, r4, [r7, #32]
 800e684:	e005      	b.n	800e692 <pb_dec_varint+0x4a>
 800e686:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800e68a:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800e68e:	e9c7 3408 	strd	r3, r4, [r7, #32]
 800e692:	68bb      	ldr	r3, [r7, #8]
 800e694:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e698:	b29b      	uxth	r3, r3
 800e69a:	2b08      	cmp	r3, #8
 800e69c:	d10a      	bne.n	800e6b4 <pb_dec_varint+0x6c>
 800e69e:	687a      	ldr	r2, [r7, #4]
 800e6a0:	e9d7 3408 	ldrd	r3, r4, [r7, #32]
 800e6a4:	e9c2 3400 	strd	r3, r4, [r2]
 800e6a8:	687b      	ldr	r3, [r7, #4]
 800e6aa:	e9d3 3400 	ldrd	r3, r4, [r3]
 800e6ae:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800e6b2:	e041      	b.n	800e738 <pb_dec_varint+0xf0>
 800e6b4:	68bb      	ldr	r3, [r7, #8]
 800e6b6:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e6ba:	b29b      	uxth	r3, r3
 800e6bc:	2b04      	cmp	r3, #4
 800e6be:	d109      	bne.n	800e6d4 <pb_dec_varint+0x8c>
 800e6c0:	6a3a      	ldr	r2, [r7, #32]
 800e6c2:	687b      	ldr	r3, [r7, #4]
 800e6c4:	601a      	str	r2, [r3, #0]
 800e6c6:	687b      	ldr	r3, [r7, #4]
 800e6c8:	681b      	ldr	r3, [r3, #0]
 800e6ca:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800e6ce:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800e6d2:	e031      	b.n	800e738 <pb_dec_varint+0xf0>
 800e6d4:	68bb      	ldr	r3, [r7, #8]
 800e6d6:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e6da:	b29b      	uxth	r3, r3
 800e6dc:	2b02      	cmp	r3, #2
 800e6de:	d10c      	bne.n	800e6fa <pb_dec_varint+0xb2>
 800e6e0:	f9b7 2020 	ldrsh.w	r2, [r7, #32]
 800e6e4:	687b      	ldr	r3, [r7, #4]
 800e6e6:	801a      	strh	r2, [r3, #0]
 800e6e8:	687b      	ldr	r3, [r7, #4]
 800e6ea:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e6ee:	b21b      	sxth	r3, r3
 800e6f0:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800e6f4:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800e6f8:	e01e      	b.n	800e738 <pb_dec_varint+0xf0>
 800e6fa:	68bb      	ldr	r3, [r7, #8]
 800e6fc:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e700:	b29b      	uxth	r3, r3
 800e702:	2b01      	cmp	r3, #1
 800e704:	d10c      	bne.n	800e720 <pb_dec_varint+0xd8>
 800e706:	f997 2020 	ldrsb.w	r2, [r7, #32]
 800e70a:	687b      	ldr	r3, [r7, #4]
 800e70c:	701a      	strb	r2, [r3, #0]
 800e70e:	687b      	ldr	r3, [r7, #4]
 800e710:	f993 3000 	ldrsb.w	r3, [r3]
 800e714:	b25b      	sxtb	r3, r3
 800e716:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800e71a:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800e71e:	e00b      	b.n	800e738 <pb_dec_varint+0xf0>
 800e720:	68fb      	ldr	r3, [r7, #12]
 800e722:	68db      	ldr	r3, [r3, #12]
 800e724:	2b00      	cmp	r3, #0
 800e726:	d002      	beq.n	800e72e <pb_dec_varint+0xe6>
 800e728:	68fb      	ldr	r3, [r7, #12]
 800e72a:	68db      	ldr	r3, [r3, #12]
 800e72c:	e000      	b.n	800e730 <pb_dec_varint+0xe8>
 800e72e:	4b0f      	ldr	r3, [pc, #60]	; (800e76c <pb_dec_varint+0x124>)
 800e730:	68fa      	ldr	r2, [r7, #12]
 800e732:	60d3      	str	r3, [r2, #12]
 800e734:	2300      	movs	r3, #0
 800e736:	e014      	b.n	800e762 <pb_dec_varint+0x11a>
 800e738:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 800e73c:	e9d7 3408 	ldrd	r3, r4, [r7, #32]
 800e740:	42a2      	cmp	r2, r4
 800e742:	bf08      	it	eq
 800e744:	4299      	cmpeq	r1, r3
 800e746:	d00b      	beq.n	800e760 <pb_dec_varint+0x118>
 800e748:	68fb      	ldr	r3, [r7, #12]
 800e74a:	68db      	ldr	r3, [r3, #12]
 800e74c:	2b00      	cmp	r3, #0
 800e74e:	d002      	beq.n	800e756 <pb_dec_varint+0x10e>
 800e750:	68fb      	ldr	r3, [r7, #12]
 800e752:	68db      	ldr	r3, [r3, #12]
 800e754:	e000      	b.n	800e758 <pb_dec_varint+0x110>
 800e756:	4b06      	ldr	r3, [pc, #24]	; (800e770 <pb_dec_varint+0x128>)
 800e758:	68fa      	ldr	r2, [r7, #12]
 800e75a:	60d3      	str	r3, [r2, #12]
 800e75c:	2300      	movs	r3, #0
 800e75e:	e000      	b.n	800e762 <pb_dec_varint+0x11a>
 800e760:	2301      	movs	r3, #1
 800e762:	4618      	mov	r0, r3
 800e764:	372c      	adds	r7, #44	; 0x2c
 800e766:	46bd      	mov	sp, r7
 800e768:	bd90      	pop	{r4, r7, pc}
 800e76a:	bf00      	nop
 800e76c:	08015ac0 	.word	0x08015ac0
 800e770:	08015ad4 	.word	0x08015ad4

0800e774 <pb_dec_uvarint>:
 800e774:	b590      	push	{r4, r7, lr}
 800e776:	b089      	sub	sp, #36	; 0x24
 800e778:	af00      	add	r7, sp, #0
 800e77a:	60f8      	str	r0, [r7, #12]
 800e77c:	60b9      	str	r1, [r7, #8]
 800e77e:	607a      	str	r2, [r7, #4]
 800e780:	f107 0310 	add.w	r3, r7, #16
 800e784:	4619      	mov	r1, r3
 800e786:	68f8      	ldr	r0, [r7, #12]
 800e788:	f7fe ff78 	bl	800d67c <pb_decode_varint>
 800e78c:	4603      	mov	r3, r0
 800e78e:	f083 0301 	eor.w	r3, r3, #1
 800e792:	b2db      	uxtb	r3, r3
 800e794:	2b00      	cmp	r3, #0
 800e796:	d001      	beq.n	800e79c <pb_dec_uvarint+0x28>
 800e798:	2300      	movs	r3, #0
 800e79a:	e069      	b.n	800e870 <pb_dec_uvarint+0xfc>
 800e79c:	68bb      	ldr	r3, [r7, #8]
 800e79e:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e7a2:	b29b      	uxth	r3, r3
 800e7a4:	2b08      	cmp	r3, #8
 800e7a6:	d10a      	bne.n	800e7be <pb_dec_uvarint+0x4a>
 800e7a8:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800e7ac:	687a      	ldr	r2, [r7, #4]
 800e7ae:	e9c2 3400 	strd	r3, r4, [r2]
 800e7b2:	687b      	ldr	r3, [r7, #4]
 800e7b4:	e9d3 3400 	ldrd	r3, r4, [r3]
 800e7b8:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800e7bc:	e043      	b.n	800e846 <pb_dec_uvarint+0xd2>
 800e7be:	68bb      	ldr	r3, [r7, #8]
 800e7c0:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e7c4:	b29b      	uxth	r3, r3
 800e7c6:	2b04      	cmp	r3, #4
 800e7c8:	d10b      	bne.n	800e7e2 <pb_dec_uvarint+0x6e>
 800e7ca:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800e7ce:	461a      	mov	r2, r3
 800e7d0:	687b      	ldr	r3, [r7, #4]
 800e7d2:	601a      	str	r2, [r3, #0]
 800e7d4:	687b      	ldr	r3, [r7, #4]
 800e7d6:	681b      	ldr	r3, [r3, #0]
 800e7d8:	f04f 0400 	mov.w	r4, #0
 800e7dc:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800e7e0:	e031      	b.n	800e846 <pb_dec_uvarint+0xd2>
 800e7e2:	68bb      	ldr	r3, [r7, #8]
 800e7e4:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e7e8:	b29b      	uxth	r3, r3
 800e7ea:	2b02      	cmp	r3, #2
 800e7ec:	d10c      	bne.n	800e808 <pb_dec_uvarint+0x94>
 800e7ee:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800e7f2:	b29a      	uxth	r2, r3
 800e7f4:	687b      	ldr	r3, [r7, #4]
 800e7f6:	801a      	strh	r2, [r3, #0]
 800e7f8:	687b      	ldr	r3, [r7, #4]
 800e7fa:	881b      	ldrh	r3, [r3, #0]
 800e7fc:	b29b      	uxth	r3, r3
 800e7fe:	f04f 0400 	mov.w	r4, #0
 800e802:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800e806:	e01e      	b.n	800e846 <pb_dec_uvarint+0xd2>
 800e808:	68bb      	ldr	r3, [r7, #8]
 800e80a:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e80e:	b29b      	uxth	r3, r3
 800e810:	2b01      	cmp	r3, #1
 800e812:	d10c      	bne.n	800e82e <pb_dec_uvarint+0xba>
 800e814:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800e818:	b2da      	uxtb	r2, r3
 800e81a:	687b      	ldr	r3, [r7, #4]
 800e81c:	701a      	strb	r2, [r3, #0]
 800e81e:	687b      	ldr	r3, [r7, #4]
 800e820:	781b      	ldrb	r3, [r3, #0]
 800e822:	b2db      	uxtb	r3, r3
 800e824:	f04f 0400 	mov.w	r4, #0
 800e828:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800e82c:	e00b      	b.n	800e846 <pb_dec_uvarint+0xd2>
 800e82e:	68fb      	ldr	r3, [r7, #12]
 800e830:	68db      	ldr	r3, [r3, #12]
 800e832:	2b00      	cmp	r3, #0
 800e834:	d002      	beq.n	800e83c <pb_dec_uvarint+0xc8>
 800e836:	68fb      	ldr	r3, [r7, #12]
 800e838:	68db      	ldr	r3, [r3, #12]
 800e83a:	e000      	b.n	800e83e <pb_dec_uvarint+0xca>
 800e83c:	4b0e      	ldr	r3, [pc, #56]	; (800e878 <pb_dec_uvarint+0x104>)
 800e83e:	68fa      	ldr	r2, [r7, #12]
 800e840:	60d3      	str	r3, [r2, #12]
 800e842:	2300      	movs	r3, #0
 800e844:	e014      	b.n	800e870 <pb_dec_uvarint+0xfc>
 800e846:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800e84a:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 800e84e:	42a2      	cmp	r2, r4
 800e850:	bf08      	it	eq
 800e852:	4299      	cmpeq	r1, r3
 800e854:	d00b      	beq.n	800e86e <pb_dec_uvarint+0xfa>
 800e856:	68fb      	ldr	r3, [r7, #12]
 800e858:	68db      	ldr	r3, [r3, #12]
 800e85a:	2b00      	cmp	r3, #0
 800e85c:	d002      	beq.n	800e864 <pb_dec_uvarint+0xf0>
 800e85e:	68fb      	ldr	r3, [r7, #12]
 800e860:	68db      	ldr	r3, [r3, #12]
 800e862:	e000      	b.n	800e866 <pb_dec_uvarint+0xf2>
 800e864:	4b05      	ldr	r3, [pc, #20]	; (800e87c <pb_dec_uvarint+0x108>)
 800e866:	68fa      	ldr	r2, [r7, #12]
 800e868:	60d3      	str	r3, [r2, #12]
 800e86a:	2300      	movs	r3, #0
 800e86c:	e000      	b.n	800e870 <pb_dec_uvarint+0xfc>
 800e86e:	2301      	movs	r3, #1
 800e870:	4618      	mov	r0, r3
 800e872:	3724      	adds	r7, #36	; 0x24
 800e874:	46bd      	mov	sp, r7
 800e876:	bd90      	pop	{r4, r7, pc}
 800e878:	08015ac0 	.word	0x08015ac0
 800e87c:	08015ad4 	.word	0x08015ad4

0800e880 <pb_dec_svarint>:
 800e880:	b590      	push	{r4, r7, lr}
 800e882:	b089      	sub	sp, #36	; 0x24
 800e884:	af00      	add	r7, sp, #0
 800e886:	60f8      	str	r0, [r7, #12]
 800e888:	60b9      	str	r1, [r7, #8]
 800e88a:	607a      	str	r2, [r7, #4]
 800e88c:	f107 0310 	add.w	r3, r7, #16
 800e890:	4619      	mov	r1, r3
 800e892:	68f8      	ldr	r0, [r7, #12]
 800e894:	f7ff fdf0 	bl	800e478 <pb_decode_svarint>
 800e898:	4603      	mov	r3, r0
 800e89a:	f083 0301 	eor.w	r3, r3, #1
 800e89e:	b2db      	uxtb	r3, r3
 800e8a0:	2b00      	cmp	r3, #0
 800e8a2:	d001      	beq.n	800e8a8 <pb_dec_svarint+0x28>
 800e8a4:	2300      	movs	r3, #0
 800e8a6:	e06b      	b.n	800e980 <pb_dec_svarint+0x100>
 800e8a8:	68bb      	ldr	r3, [r7, #8]
 800e8aa:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e8ae:	b29b      	uxth	r3, r3
 800e8b0:	2b08      	cmp	r3, #8
 800e8b2:	d10a      	bne.n	800e8ca <pb_dec_svarint+0x4a>
 800e8b4:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800e8b8:	687a      	ldr	r2, [r7, #4]
 800e8ba:	e9c2 3400 	strd	r3, r4, [r2]
 800e8be:	687b      	ldr	r3, [r7, #4]
 800e8c0:	e9d3 3400 	ldrd	r3, r4, [r3]
 800e8c4:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800e8c8:	e045      	b.n	800e956 <pb_dec_svarint+0xd6>
 800e8ca:	68bb      	ldr	r3, [r7, #8]
 800e8cc:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e8d0:	b29b      	uxth	r3, r3
 800e8d2:	2b04      	cmp	r3, #4
 800e8d4:	d10b      	bne.n	800e8ee <pb_dec_svarint+0x6e>
 800e8d6:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800e8da:	461a      	mov	r2, r3
 800e8dc:	687b      	ldr	r3, [r7, #4]
 800e8de:	601a      	str	r2, [r3, #0]
 800e8e0:	687b      	ldr	r3, [r7, #4]
 800e8e2:	681b      	ldr	r3, [r3, #0]
 800e8e4:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800e8e8:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800e8ec:	e033      	b.n	800e956 <pb_dec_svarint+0xd6>
 800e8ee:	68bb      	ldr	r3, [r7, #8]
 800e8f0:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e8f4:	b29b      	uxth	r3, r3
 800e8f6:	2b02      	cmp	r3, #2
 800e8f8:	d10d      	bne.n	800e916 <pb_dec_svarint+0x96>
 800e8fa:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800e8fe:	b21a      	sxth	r2, r3
 800e900:	687b      	ldr	r3, [r7, #4]
 800e902:	801a      	strh	r2, [r3, #0]
 800e904:	687b      	ldr	r3, [r7, #4]
 800e906:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e90a:	b21b      	sxth	r3, r3
 800e90c:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800e910:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800e914:	e01f      	b.n	800e956 <pb_dec_svarint+0xd6>
 800e916:	68bb      	ldr	r3, [r7, #8]
 800e918:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800e91c:	b29b      	uxth	r3, r3
 800e91e:	2b01      	cmp	r3, #1
 800e920:	d10d      	bne.n	800e93e <pb_dec_svarint+0xbe>
 800e922:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800e926:	b25a      	sxtb	r2, r3
 800e928:	687b      	ldr	r3, [r7, #4]
 800e92a:	701a      	strb	r2, [r3, #0]
 800e92c:	687b      	ldr	r3, [r7, #4]
 800e92e:	f993 3000 	ldrsb.w	r3, [r3]
 800e932:	b25b      	sxtb	r3, r3
 800e934:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800e938:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800e93c:	e00b      	b.n	800e956 <pb_dec_svarint+0xd6>
 800e93e:	68fb      	ldr	r3, [r7, #12]
 800e940:	68db      	ldr	r3, [r3, #12]
 800e942:	2b00      	cmp	r3, #0
 800e944:	d002      	beq.n	800e94c <pb_dec_svarint+0xcc>
 800e946:	68fb      	ldr	r3, [r7, #12]
 800e948:	68db      	ldr	r3, [r3, #12]
 800e94a:	e000      	b.n	800e94e <pb_dec_svarint+0xce>
 800e94c:	4b0e      	ldr	r3, [pc, #56]	; (800e988 <pb_dec_svarint+0x108>)
 800e94e:	68fa      	ldr	r2, [r7, #12]
 800e950:	60d3      	str	r3, [r2, #12]
 800e952:	2300      	movs	r3, #0
 800e954:	e014      	b.n	800e980 <pb_dec_svarint+0x100>
 800e956:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800e95a:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 800e95e:	42a2      	cmp	r2, r4
 800e960:	bf08      	it	eq
 800e962:	4299      	cmpeq	r1, r3
 800e964:	d00b      	beq.n	800e97e <pb_dec_svarint+0xfe>
 800e966:	68fb      	ldr	r3, [r7, #12]
 800e968:	68db      	ldr	r3, [r3, #12]
 800e96a:	2b00      	cmp	r3, #0
 800e96c:	d002      	beq.n	800e974 <pb_dec_svarint+0xf4>
 800e96e:	68fb      	ldr	r3, [r7, #12]
 800e970:	68db      	ldr	r3, [r3, #12]
 800e972:	e000      	b.n	800e976 <pb_dec_svarint+0xf6>
 800e974:	4b05      	ldr	r3, [pc, #20]	; (800e98c <pb_dec_svarint+0x10c>)
 800e976:	68fa      	ldr	r2, [r7, #12]
 800e978:	60d3      	str	r3, [r2, #12]
 800e97a:	2300      	movs	r3, #0
 800e97c:	e000      	b.n	800e980 <pb_dec_svarint+0x100>
 800e97e:	2301      	movs	r3, #1
 800e980:	4618      	mov	r0, r3
 800e982:	3724      	adds	r7, #36	; 0x24
 800e984:	46bd      	mov	sp, r7
 800e986:	bd90      	pop	{r4, r7, pc}
 800e988:	08015ac0 	.word	0x08015ac0
 800e98c:	08015ad4 	.word	0x08015ad4

0800e990 <pb_dec_fixed32>:
 800e990:	b580      	push	{r7, lr}
 800e992:	b084      	sub	sp, #16
 800e994:	af00      	add	r7, sp, #0
 800e996:	60f8      	str	r0, [r7, #12]
 800e998:	60b9      	str	r1, [r7, #8]
 800e99a:	607a      	str	r2, [r7, #4]
 800e99c:	6879      	ldr	r1, [r7, #4]
 800e99e:	68f8      	ldr	r0, [r7, #12]
 800e9a0:	f7ff fda5 	bl	800e4ee <pb_decode_fixed32>
 800e9a4:	4603      	mov	r3, r0
 800e9a6:	4618      	mov	r0, r3
 800e9a8:	3710      	adds	r7, #16
 800e9aa:	46bd      	mov	sp, r7
 800e9ac:	bd80      	pop	{r7, pc}

0800e9ae <pb_dec_fixed64>:
 800e9ae:	b580      	push	{r7, lr}
 800e9b0:	b084      	sub	sp, #16
 800e9b2:	af00      	add	r7, sp, #0
 800e9b4:	60f8      	str	r0, [r7, #12]
 800e9b6:	60b9      	str	r1, [r7, #8]
 800e9b8:	607a      	str	r2, [r7, #4]
 800e9ba:	6879      	ldr	r1, [r7, #4]
 800e9bc:	68f8      	ldr	r0, [r7, #12]
 800e9be:	f7ff fdbc 	bl	800e53a <pb_decode_fixed64>
 800e9c2:	4603      	mov	r3, r0
 800e9c4:	4618      	mov	r0, r3
 800e9c6:	3710      	adds	r7, #16
 800e9c8:	46bd      	mov	sp, r7
 800e9ca:	bd80      	pop	{r7, pc}

0800e9cc <pb_dec_bytes>:
 800e9cc:	b580      	push	{r7, lr}
 800e9ce:	b088      	sub	sp, #32
 800e9d0:	af00      	add	r7, sp, #0
 800e9d2:	60f8      	str	r0, [r7, #12]
 800e9d4:	60b9      	str	r1, [r7, #8]
 800e9d6:	607a      	str	r2, [r7, #4]
 800e9d8:	f107 0314 	add.w	r3, r7, #20
 800e9dc:	4619      	mov	r1, r3
 800e9de:	68f8      	ldr	r0, [r7, #12]
 800e9e0:	f7fe fe3c 	bl	800d65c <pb_decode_varint32>
 800e9e4:	4603      	mov	r3, r0
 800e9e6:	f083 0301 	eor.w	r3, r3, #1
 800e9ea:	b2db      	uxtb	r3, r3
 800e9ec:	2b00      	cmp	r3, #0
 800e9ee:	d001      	beq.n	800e9f4 <pb_dec_bytes+0x28>
 800e9f0:	2300      	movs	r3, #0
 800e9f2:	e056      	b.n	800eaa2 <pb_dec_bytes+0xd6>
 800e9f4:	697b      	ldr	r3, [r7, #20]
 800e9f6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800e9fa:	d30b      	bcc.n	800ea14 <pb_dec_bytes+0x48>
 800e9fc:	68fb      	ldr	r3, [r7, #12]
 800e9fe:	68db      	ldr	r3, [r3, #12]
 800ea00:	2b00      	cmp	r3, #0
 800ea02:	d002      	beq.n	800ea0a <pb_dec_bytes+0x3e>
 800ea04:	68fb      	ldr	r3, [r7, #12]
 800ea06:	68db      	ldr	r3, [r3, #12]
 800ea08:	e000      	b.n	800ea0c <pb_dec_bytes+0x40>
 800ea0a:	4b28      	ldr	r3, [pc, #160]	; (800eaac <pb_dec_bytes+0xe0>)
 800ea0c:	68fa      	ldr	r2, [r7, #12]
 800ea0e:	60d3      	str	r3, [r2, #12]
 800ea10:	2300      	movs	r3, #0
 800ea12:	e046      	b.n	800eaa2 <pb_dec_bytes+0xd6>
 800ea14:	697b      	ldr	r3, [r7, #20]
 800ea16:	3302      	adds	r3, #2
 800ea18:	61fb      	str	r3, [r7, #28]
 800ea1a:	697b      	ldr	r3, [r7, #20]
 800ea1c:	69fa      	ldr	r2, [r7, #28]
 800ea1e:	429a      	cmp	r2, r3
 800ea20:	d20b      	bcs.n	800ea3a <pb_dec_bytes+0x6e>
 800ea22:	68fb      	ldr	r3, [r7, #12]
 800ea24:	68db      	ldr	r3, [r3, #12]
 800ea26:	2b00      	cmp	r3, #0
 800ea28:	d002      	beq.n	800ea30 <pb_dec_bytes+0x64>
 800ea2a:	68fb      	ldr	r3, [r7, #12]
 800ea2c:	68db      	ldr	r3, [r3, #12]
 800ea2e:	e000      	b.n	800ea32 <pb_dec_bytes+0x66>
 800ea30:	4b1f      	ldr	r3, [pc, #124]	; (800eab0 <pb_dec_bytes+0xe4>)
 800ea32:	68fa      	ldr	r2, [r7, #12]
 800ea34:	60d3      	str	r3, [r2, #12]
 800ea36:	2300      	movs	r3, #0
 800ea38:	e033      	b.n	800eaa2 <pb_dec_bytes+0xd6>
 800ea3a:	68bb      	ldr	r3, [r7, #8]
 800ea3c:	789b      	ldrb	r3, [r3, #2]
 800ea3e:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800ea42:	2b80      	cmp	r3, #128	; 0x80
 800ea44:	d10b      	bne.n	800ea5e <pb_dec_bytes+0x92>
 800ea46:	68fb      	ldr	r3, [r7, #12]
 800ea48:	68db      	ldr	r3, [r3, #12]
 800ea4a:	2b00      	cmp	r3, #0
 800ea4c:	d002      	beq.n	800ea54 <pb_dec_bytes+0x88>
 800ea4e:	68fb      	ldr	r3, [r7, #12]
 800ea50:	68db      	ldr	r3, [r3, #12]
 800ea52:	e000      	b.n	800ea56 <pb_dec_bytes+0x8a>
 800ea54:	4b17      	ldr	r3, [pc, #92]	; (800eab4 <pb_dec_bytes+0xe8>)
 800ea56:	68fa      	ldr	r2, [r7, #12]
 800ea58:	60d3      	str	r3, [r2, #12]
 800ea5a:	2300      	movs	r3, #0
 800ea5c:	e021      	b.n	800eaa2 <pb_dec_bytes+0xd6>
 800ea5e:	68bb      	ldr	r3, [r7, #8]
 800ea60:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800ea64:	b29b      	uxth	r3, r3
 800ea66:	461a      	mov	r2, r3
 800ea68:	69fb      	ldr	r3, [r7, #28]
 800ea6a:	4293      	cmp	r3, r2
 800ea6c:	d90b      	bls.n	800ea86 <pb_dec_bytes+0xba>
 800ea6e:	68fb      	ldr	r3, [r7, #12]
 800ea70:	68db      	ldr	r3, [r3, #12]
 800ea72:	2b00      	cmp	r3, #0
 800ea74:	d002      	beq.n	800ea7c <pb_dec_bytes+0xb0>
 800ea76:	68fb      	ldr	r3, [r7, #12]
 800ea78:	68db      	ldr	r3, [r3, #12]
 800ea7a:	e000      	b.n	800ea7e <pb_dec_bytes+0xb2>
 800ea7c:	4b0b      	ldr	r3, [pc, #44]	; (800eaac <pb_dec_bytes+0xe0>)
 800ea7e:	68fa      	ldr	r2, [r7, #12]
 800ea80:	60d3      	str	r3, [r2, #12]
 800ea82:	2300      	movs	r3, #0
 800ea84:	e00d      	b.n	800eaa2 <pb_dec_bytes+0xd6>
 800ea86:	687b      	ldr	r3, [r7, #4]
 800ea88:	61bb      	str	r3, [r7, #24]
 800ea8a:	697b      	ldr	r3, [r7, #20]
 800ea8c:	b29a      	uxth	r2, r3
 800ea8e:	69bb      	ldr	r3, [r7, #24]
 800ea90:	801a      	strh	r2, [r3, #0]
 800ea92:	69bb      	ldr	r3, [r7, #24]
 800ea94:	3302      	adds	r3, #2
 800ea96:	697a      	ldr	r2, [r7, #20]
 800ea98:	4619      	mov	r1, r3
 800ea9a:	68f8      	ldr	r0, [r7, #12]
 800ea9c:	f7fe fc92 	bl	800d3c4 <pb_read>
 800eaa0:	4603      	mov	r3, r0
 800eaa2:	4618      	mov	r0, r3
 800eaa4:	3720      	adds	r7, #32
 800eaa6:	46bd      	mov	sp, r7
 800eaa8:	bd80      	pop	{r7, pc}
 800eaaa:	bf00      	nop
 800eaac:	08015ae8 	.word	0x08015ae8
 800eab0:	08015af8 	.word	0x08015af8
 800eab4:	08015a60 	.word	0x08015a60

0800eab8 <pb_dec_string>:
 800eab8:	b580      	push	{r7, lr}
 800eaba:	b088      	sub	sp, #32
 800eabc:	af00      	add	r7, sp, #0
 800eabe:	60f8      	str	r0, [r7, #12]
 800eac0:	60b9      	str	r1, [r7, #8]
 800eac2:	607a      	str	r2, [r7, #4]
 800eac4:	f107 0314 	add.w	r3, r7, #20
 800eac8:	4619      	mov	r1, r3
 800eaca:	68f8      	ldr	r0, [r7, #12]
 800eacc:	f7fe fdc6 	bl	800d65c <pb_decode_varint32>
 800ead0:	4603      	mov	r3, r0
 800ead2:	f083 0301 	eor.w	r3, r3, #1
 800ead6:	b2db      	uxtb	r3, r3
 800ead8:	2b00      	cmp	r3, #0
 800eada:	d001      	beq.n	800eae0 <pb_dec_string+0x28>
 800eadc:	2300      	movs	r3, #0
 800eade:	e046      	b.n	800eb6e <pb_dec_string+0xb6>
 800eae0:	697b      	ldr	r3, [r7, #20]
 800eae2:	3301      	adds	r3, #1
 800eae4:	61fb      	str	r3, [r7, #28]
 800eae6:	697b      	ldr	r3, [r7, #20]
 800eae8:	69fa      	ldr	r2, [r7, #28]
 800eaea:	429a      	cmp	r2, r3
 800eaec:	d20b      	bcs.n	800eb06 <pb_dec_string+0x4e>
 800eaee:	68fb      	ldr	r3, [r7, #12]
 800eaf0:	68db      	ldr	r3, [r3, #12]
 800eaf2:	2b00      	cmp	r3, #0
 800eaf4:	d002      	beq.n	800eafc <pb_dec_string+0x44>
 800eaf6:	68fb      	ldr	r3, [r7, #12]
 800eaf8:	68db      	ldr	r3, [r3, #12]
 800eafa:	e000      	b.n	800eafe <pb_dec_string+0x46>
 800eafc:	4b1e      	ldr	r3, [pc, #120]	; (800eb78 <pb_dec_string+0xc0>)
 800eafe:	68fa      	ldr	r2, [r7, #12]
 800eb00:	60d3      	str	r3, [r2, #12]
 800eb02:	2300      	movs	r3, #0
 800eb04:	e033      	b.n	800eb6e <pb_dec_string+0xb6>
 800eb06:	68bb      	ldr	r3, [r7, #8]
 800eb08:	789b      	ldrb	r3, [r3, #2]
 800eb0a:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800eb0e:	2b80      	cmp	r3, #128	; 0x80
 800eb10:	d10b      	bne.n	800eb2a <pb_dec_string+0x72>
 800eb12:	68fb      	ldr	r3, [r7, #12]
 800eb14:	68db      	ldr	r3, [r3, #12]
 800eb16:	2b00      	cmp	r3, #0
 800eb18:	d002      	beq.n	800eb20 <pb_dec_string+0x68>
 800eb1a:	68fb      	ldr	r3, [r7, #12]
 800eb1c:	68db      	ldr	r3, [r3, #12]
 800eb1e:	e000      	b.n	800eb22 <pb_dec_string+0x6a>
 800eb20:	4b16      	ldr	r3, [pc, #88]	; (800eb7c <pb_dec_string+0xc4>)
 800eb22:	68fa      	ldr	r2, [r7, #12]
 800eb24:	60d3      	str	r3, [r2, #12]
 800eb26:	2300      	movs	r3, #0
 800eb28:	e021      	b.n	800eb6e <pb_dec_string+0xb6>
 800eb2a:	68bb      	ldr	r3, [r7, #8]
 800eb2c:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800eb30:	b29b      	uxth	r3, r3
 800eb32:	461a      	mov	r2, r3
 800eb34:	69fb      	ldr	r3, [r7, #28]
 800eb36:	4293      	cmp	r3, r2
 800eb38:	d90b      	bls.n	800eb52 <pb_dec_string+0x9a>
 800eb3a:	68fb      	ldr	r3, [r7, #12]
 800eb3c:	68db      	ldr	r3, [r3, #12]
 800eb3e:	2b00      	cmp	r3, #0
 800eb40:	d002      	beq.n	800eb48 <pb_dec_string+0x90>
 800eb42:	68fb      	ldr	r3, [r7, #12]
 800eb44:	68db      	ldr	r3, [r3, #12]
 800eb46:	e000      	b.n	800eb4a <pb_dec_string+0x92>
 800eb48:	4b0d      	ldr	r3, [pc, #52]	; (800eb80 <pb_dec_string+0xc8>)
 800eb4a:	68fa      	ldr	r2, [r7, #12]
 800eb4c:	60d3      	str	r3, [r2, #12]
 800eb4e:	2300      	movs	r3, #0
 800eb50:	e00d      	b.n	800eb6e <pb_dec_string+0xb6>
 800eb52:	697b      	ldr	r3, [r7, #20]
 800eb54:	461a      	mov	r2, r3
 800eb56:	6879      	ldr	r1, [r7, #4]
 800eb58:	68f8      	ldr	r0, [r7, #12]
 800eb5a:	f7fe fc33 	bl	800d3c4 <pb_read>
 800eb5e:	4603      	mov	r3, r0
 800eb60:	76fb      	strb	r3, [r7, #27]
 800eb62:	697b      	ldr	r3, [r7, #20]
 800eb64:	687a      	ldr	r2, [r7, #4]
 800eb66:	4413      	add	r3, r2
 800eb68:	2200      	movs	r2, #0
 800eb6a:	701a      	strb	r2, [r3, #0]
 800eb6c:	7efb      	ldrb	r3, [r7, #27]
 800eb6e:	4618      	mov	r0, r3
 800eb70:	3720      	adds	r7, #32
 800eb72:	46bd      	mov	sp, r7
 800eb74:	bd80      	pop	{r7, pc}
 800eb76:	bf00      	nop
 800eb78:	08015af8 	.word	0x08015af8
 800eb7c:	08015a60 	.word	0x08015a60
 800eb80:	08015b08 	.word	0x08015b08

0800eb84 <pb_dec_submessage>:
 800eb84:	b580      	push	{r7, lr}
 800eb86:	b08a      	sub	sp, #40	; 0x28
 800eb88:	af00      	add	r7, sp, #0
 800eb8a:	60f8      	str	r0, [r7, #12]
 800eb8c:	60b9      	str	r1, [r7, #8]
 800eb8e:	607a      	str	r2, [r7, #4]
 800eb90:	68bb      	ldr	r3, [r7, #8]
 800eb92:	f8d3 300b 	ldr.w	r3, [r3, #11]
 800eb96:	623b      	str	r3, [r7, #32]
 800eb98:	f107 0310 	add.w	r3, r7, #16
 800eb9c:	4619      	mov	r1, r3
 800eb9e:	68f8      	ldr	r0, [r7, #12]
 800eba0:	f7fe fedc 	bl	800d95c <pb_make_string_substream>
 800eba4:	4603      	mov	r3, r0
 800eba6:	f083 0301 	eor.w	r3, r3, #1
 800ebaa:	b2db      	uxtb	r3, r3
 800ebac:	2b00      	cmp	r3, #0
 800ebae:	d001      	beq.n	800ebb4 <pb_dec_submessage+0x30>
 800ebb0:	2300      	movs	r3, #0
 800ebb2:	e03b      	b.n	800ec2c <pb_dec_submessage+0xa8>
 800ebb4:	68bb      	ldr	r3, [r7, #8]
 800ebb6:	f8d3 300b 	ldr.w	r3, [r3, #11]
 800ebba:	2b00      	cmp	r3, #0
 800ebbc:	d10b      	bne.n	800ebd6 <pb_dec_submessage+0x52>
 800ebbe:	68fb      	ldr	r3, [r7, #12]
 800ebc0:	68db      	ldr	r3, [r3, #12]
 800ebc2:	2b00      	cmp	r3, #0
 800ebc4:	d002      	beq.n	800ebcc <pb_dec_submessage+0x48>
 800ebc6:	68fb      	ldr	r3, [r7, #12]
 800ebc8:	68db      	ldr	r3, [r3, #12]
 800ebca:	e000      	b.n	800ebce <pb_dec_submessage+0x4a>
 800ebcc:	4b19      	ldr	r3, [pc, #100]	; (800ec34 <pb_dec_submessage+0xb0>)
 800ebce:	68fa      	ldr	r2, [r7, #12]
 800ebd0:	60d3      	str	r3, [r2, #12]
 800ebd2:	2300      	movs	r3, #0
 800ebd4:	e02a      	b.n	800ec2c <pb_dec_submessage+0xa8>
 800ebd6:	68bb      	ldr	r3, [r7, #8]
 800ebd8:	789b      	ldrb	r3, [r3, #2]
 800ebda:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800ebde:	2b20      	cmp	r3, #32
 800ebe0:	d10a      	bne.n	800ebf8 <pb_dec_submessage+0x74>
 800ebe2:	f107 0310 	add.w	r3, r7, #16
 800ebe6:	687a      	ldr	r2, [r7, #4]
 800ebe8:	6a39      	ldr	r1, [r7, #32]
 800ebea:	4618      	mov	r0, r3
 800ebec:	f7ff fbfc 	bl	800e3e8 <pb_decode>
 800ebf0:	4603      	mov	r3, r0
 800ebf2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800ebf6:	e009      	b.n	800ec0c <pb_dec_submessage+0x88>
 800ebf8:	f107 0310 	add.w	r3, r7, #16
 800ebfc:	687a      	ldr	r2, [r7, #4]
 800ebfe:	6a39      	ldr	r1, [r7, #32]
 800ec00:	4618      	mov	r0, r3
 800ec02:	f7ff fa87 	bl	800e114 <pb_decode_noinit>
 800ec06:	4603      	mov	r3, r0
 800ec08:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800ec0c:	f107 0310 	add.w	r3, r7, #16
 800ec10:	4619      	mov	r1, r3
 800ec12:	68f8      	ldr	r0, [r7, #12]
 800ec14:	f7fe fedc 	bl	800d9d0 <pb_close_string_substream>
 800ec18:	4603      	mov	r3, r0
 800ec1a:	f083 0301 	eor.w	r3, r3, #1
 800ec1e:	b2db      	uxtb	r3, r3
 800ec20:	2b00      	cmp	r3, #0
 800ec22:	d001      	beq.n	800ec28 <pb_dec_submessage+0xa4>
 800ec24:	2300      	movs	r3, #0
 800ec26:	e001      	b.n	800ec2c <pb_dec_submessage+0xa8>
 800ec28:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800ec2c:	4618      	mov	r0, r3
 800ec2e:	3728      	adds	r7, #40	; 0x28
 800ec30:	46bd      	mov	sp, r7
 800ec32:	bd80      	pop	{r7, pc}
 800ec34:	08015b18 	.word	0x08015b18

0800ec38 <pb_dec_fixed_length_bytes>:
 800ec38:	b580      	push	{r7, lr}
 800ec3a:	b086      	sub	sp, #24
 800ec3c:	af00      	add	r7, sp, #0
 800ec3e:	60f8      	str	r0, [r7, #12]
 800ec40:	60b9      	str	r1, [r7, #8]
 800ec42:	607a      	str	r2, [r7, #4]
 800ec44:	f107 0314 	add.w	r3, r7, #20
 800ec48:	4619      	mov	r1, r3
 800ec4a:	68f8      	ldr	r0, [r7, #12]
 800ec4c:	f7fe fd06 	bl	800d65c <pb_decode_varint32>
 800ec50:	4603      	mov	r3, r0
 800ec52:	f083 0301 	eor.w	r3, r3, #1
 800ec56:	b2db      	uxtb	r3, r3
 800ec58:	2b00      	cmp	r3, #0
 800ec5a:	d001      	beq.n	800ec60 <pb_dec_fixed_length_bytes+0x28>
 800ec5c:	2300      	movs	r3, #0
 800ec5e:	e03b      	b.n	800ecd8 <pb_dec_fixed_length_bytes+0xa0>
 800ec60:	697b      	ldr	r3, [r7, #20]
 800ec62:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800ec66:	d30b      	bcc.n	800ec80 <pb_dec_fixed_length_bytes+0x48>
 800ec68:	68fb      	ldr	r3, [r7, #12]
 800ec6a:	68db      	ldr	r3, [r3, #12]
 800ec6c:	2b00      	cmp	r3, #0
 800ec6e:	d002      	beq.n	800ec76 <pb_dec_fixed_length_bytes+0x3e>
 800ec70:	68fb      	ldr	r3, [r7, #12]
 800ec72:	68db      	ldr	r3, [r3, #12]
 800ec74:	e000      	b.n	800ec78 <pb_dec_fixed_length_bytes+0x40>
 800ec76:	4b1a      	ldr	r3, [pc, #104]	; (800ece0 <pb_dec_fixed_length_bytes+0xa8>)
 800ec78:	68fa      	ldr	r2, [r7, #12]
 800ec7a:	60d3      	str	r3, [r2, #12]
 800ec7c:	2300      	movs	r3, #0
 800ec7e:	e02b      	b.n	800ecd8 <pb_dec_fixed_length_bytes+0xa0>
 800ec80:	697b      	ldr	r3, [r7, #20]
 800ec82:	2b00      	cmp	r3, #0
 800ec84:	d10a      	bne.n	800ec9c <pb_dec_fixed_length_bytes+0x64>
 800ec86:	68bb      	ldr	r3, [r7, #8]
 800ec88:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800ec8c:	b29b      	uxth	r3, r3
 800ec8e:	461a      	mov	r2, r3
 800ec90:	2100      	movs	r1, #0
 800ec92:	6878      	ldr	r0, [r7, #4]
 800ec94:	f001 f8aa 	bl	800fdec <memset>
 800ec98:	2301      	movs	r3, #1
 800ec9a:	e01d      	b.n	800ecd8 <pb_dec_fixed_length_bytes+0xa0>
 800ec9c:	68bb      	ldr	r3, [r7, #8]
 800ec9e:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800eca2:	b29b      	uxth	r3, r3
 800eca4:	461a      	mov	r2, r3
 800eca6:	697b      	ldr	r3, [r7, #20]
 800eca8:	429a      	cmp	r2, r3
 800ecaa:	d00b      	beq.n	800ecc4 <pb_dec_fixed_length_bytes+0x8c>
 800ecac:	68fb      	ldr	r3, [r7, #12]
 800ecae:	68db      	ldr	r3, [r3, #12]
 800ecb0:	2b00      	cmp	r3, #0
 800ecb2:	d002      	beq.n	800ecba <pb_dec_fixed_length_bytes+0x82>
 800ecb4:	68fb      	ldr	r3, [r7, #12]
 800ecb6:	68db      	ldr	r3, [r3, #12]
 800ecb8:	e000      	b.n	800ecbc <pb_dec_fixed_length_bytes+0x84>
 800ecba:	4b0a      	ldr	r3, [pc, #40]	; (800ece4 <pb_dec_fixed_length_bytes+0xac>)
 800ecbc:	68fa      	ldr	r2, [r7, #12]
 800ecbe:	60d3      	str	r3, [r2, #12]
 800ecc0:	2300      	movs	r3, #0
 800ecc2:	e009      	b.n	800ecd8 <pb_dec_fixed_length_bytes+0xa0>
 800ecc4:	68bb      	ldr	r3, [r7, #8]
 800ecc6:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800ecca:	b29b      	uxth	r3, r3
 800eccc:	461a      	mov	r2, r3
 800ecce:	6879      	ldr	r1, [r7, #4]
 800ecd0:	68f8      	ldr	r0, [r7, #12]
 800ecd2:	f7fe fb77 	bl	800d3c4 <pb_read>
 800ecd6:	4603      	mov	r3, r0
 800ecd8:	4618      	mov	r0, r3
 800ecda:	3718      	adds	r7, #24
 800ecdc:	46bd      	mov	sp, r7
 800ecde:	bd80      	pop	{r7, pc}
 800ece0:	08015ae8 	.word	0x08015ae8
 800ece4:	08015b34 	.word	0x08015b34

0800ece8 <pb_write>:
 800ece8:	b580      	push	{r7, lr}
 800ecea:	b084      	sub	sp, #16
 800ecec:	af00      	add	r7, sp, #0
 800ecee:	60f8      	str	r0, [r7, #12]
 800ecf0:	60b9      	str	r1, [r7, #8]
 800ecf2:	607a      	str	r2, [r7, #4]
 800ecf4:	68fb      	ldr	r3, [r7, #12]
 800ecf6:	681b      	ldr	r3, [r3, #0]
 800ecf8:	2b00      	cmp	r3, #0
 800ecfa:	d02b      	beq.n	800ed54 <pb_write+0x6c>
 800ecfc:	68fb      	ldr	r3, [r7, #12]
 800ecfe:	68da      	ldr	r2, [r3, #12]
 800ed00:	687b      	ldr	r3, [r7, #4]
 800ed02:	441a      	add	r2, r3
 800ed04:	68fb      	ldr	r3, [r7, #12]
 800ed06:	689b      	ldr	r3, [r3, #8]
 800ed08:	429a      	cmp	r2, r3
 800ed0a:	d90b      	bls.n	800ed24 <pb_write+0x3c>
 800ed0c:	68fb      	ldr	r3, [r7, #12]
 800ed0e:	691b      	ldr	r3, [r3, #16]
 800ed10:	2b00      	cmp	r3, #0
 800ed12:	d002      	beq.n	800ed1a <pb_write+0x32>
 800ed14:	68fb      	ldr	r3, [r7, #12]
 800ed16:	691b      	ldr	r3, [r3, #16]
 800ed18:	e000      	b.n	800ed1c <pb_write+0x34>
 800ed1a:	4b14      	ldr	r3, [pc, #80]	; (800ed6c <pb_write+0x84>)
 800ed1c:	68fa      	ldr	r2, [r7, #12]
 800ed1e:	6113      	str	r3, [r2, #16]
 800ed20:	2300      	movs	r3, #0
 800ed22:	e01e      	b.n	800ed62 <pb_write+0x7a>
 800ed24:	68fb      	ldr	r3, [r7, #12]
 800ed26:	681b      	ldr	r3, [r3, #0]
 800ed28:	687a      	ldr	r2, [r7, #4]
 800ed2a:	68b9      	ldr	r1, [r7, #8]
 800ed2c:	68f8      	ldr	r0, [r7, #12]
 800ed2e:	4798      	blx	r3
 800ed30:	4603      	mov	r3, r0
 800ed32:	f083 0301 	eor.w	r3, r3, #1
 800ed36:	b2db      	uxtb	r3, r3
 800ed38:	2b00      	cmp	r3, #0
 800ed3a:	d00b      	beq.n	800ed54 <pb_write+0x6c>
 800ed3c:	68fb      	ldr	r3, [r7, #12]
 800ed3e:	691b      	ldr	r3, [r3, #16]
 800ed40:	2b00      	cmp	r3, #0
 800ed42:	d002      	beq.n	800ed4a <pb_write+0x62>
 800ed44:	68fb      	ldr	r3, [r7, #12]
 800ed46:	691b      	ldr	r3, [r3, #16]
 800ed48:	e000      	b.n	800ed4c <pb_write+0x64>
 800ed4a:	4b09      	ldr	r3, [pc, #36]	; (800ed70 <pb_write+0x88>)
 800ed4c:	68fa      	ldr	r2, [r7, #12]
 800ed4e:	6113      	str	r3, [r2, #16]
 800ed50:	2300      	movs	r3, #0
 800ed52:	e006      	b.n	800ed62 <pb_write+0x7a>
 800ed54:	68fb      	ldr	r3, [r7, #12]
 800ed56:	68da      	ldr	r2, [r3, #12]
 800ed58:	687b      	ldr	r3, [r7, #4]
 800ed5a:	441a      	add	r2, r3
 800ed5c:	68fb      	ldr	r3, [r7, #12]
 800ed5e:	60da      	str	r2, [r3, #12]
 800ed60:	2301      	movs	r3, #1
 800ed62:	4618      	mov	r0, r3
 800ed64:	3710      	adds	r7, #16
 800ed66:	46bd      	mov	sp, r7
 800ed68:	bd80      	pop	{r7, pc}
 800ed6a:	bf00      	nop
 800ed6c:	08015b58 	.word	0x08015b58
 800ed70:	08015b64 	.word	0x08015b64

0800ed74 <encode_array>:
 800ed74:	b590      	push	{r4, r7, lr}
 800ed76:	b08d      	sub	sp, #52	; 0x34
 800ed78:	af00      	add	r7, sp, #0
 800ed7a:	60f8      	str	r0, [r7, #12]
 800ed7c:	60b9      	str	r1, [r7, #8]
 800ed7e:	607a      	str	r2, [r7, #4]
 800ed80:	603b      	str	r3, [r7, #0]
 800ed82:	683b      	ldr	r3, [r7, #0]
 800ed84:	2b00      	cmp	r3, #0
 800ed86:	d101      	bne.n	800ed8c <encode_array+0x18>
 800ed88:	2301      	movs	r3, #1
 800ed8a:	e0fb      	b.n	800ef84 <encode_array+0x210>
 800ed8c:	68bb      	ldr	r3, [r7, #8]
 800ed8e:	789b      	ldrb	r3, [r3, #2]
 800ed90:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800ed94:	2b80      	cmp	r3, #128	; 0x80
 800ed96:	d013      	beq.n	800edc0 <encode_array+0x4c>
 800ed98:	68bb      	ldr	r3, [r7, #8]
 800ed9a:	f8b3 3009 	ldrh.w	r3, [r3, #9]
 800ed9e:	b29b      	uxth	r3, r3
 800eda0:	461a      	mov	r2, r3
 800eda2:	683b      	ldr	r3, [r7, #0]
 800eda4:	4293      	cmp	r3, r2
 800eda6:	d90b      	bls.n	800edc0 <encode_array+0x4c>
 800eda8:	68fb      	ldr	r3, [r7, #12]
 800edaa:	691b      	ldr	r3, [r3, #16]
 800edac:	2b00      	cmp	r3, #0
 800edae:	d002      	beq.n	800edb6 <encode_array+0x42>
 800edb0:	68fb      	ldr	r3, [r7, #12]
 800edb2:	691b      	ldr	r3, [r3, #16]
 800edb4:	e000      	b.n	800edb8 <encode_array+0x44>
 800edb6:	4b75      	ldr	r3, [pc, #468]	; (800ef8c <encode_array+0x218>)
 800edb8:	68fa      	ldr	r2, [r7, #12]
 800edba:	6113      	str	r3, [r2, #16]
 800edbc:	2300      	movs	r3, #0
 800edbe:	e0e1      	b.n	800ef84 <encode_array+0x210>
 800edc0:	68bb      	ldr	r3, [r7, #8]
 800edc2:	789b      	ldrb	r3, [r3, #2]
 800edc4:	f003 030f 	and.w	r3, r3, #15
 800edc8:	2b04      	cmp	r3, #4
 800edca:	f300 808d 	bgt.w	800eee8 <encode_array+0x174>
 800edce:	68bb      	ldr	r3, [r7, #8]
 800edd0:	881b      	ldrh	r3, [r3, #0]
 800edd2:	b29b      	uxth	r3, r3
 800edd4:	461a      	mov	r2, r3
 800edd6:	2102      	movs	r1, #2
 800edd8:	68f8      	ldr	r0, [r7, #12]
 800edda:	f000 fcb1 	bl	800f740 <pb_encode_tag>
 800edde:	4603      	mov	r3, r0
 800ede0:	f083 0301 	eor.w	r3, r3, #1
 800ede4:	b2db      	uxtb	r3, r3
 800ede6:	2b00      	cmp	r3, #0
 800ede8:	d001      	beq.n	800edee <encode_array+0x7a>
 800edea:	2300      	movs	r3, #0
 800edec:	e0ca      	b.n	800ef84 <encode_array+0x210>
 800edee:	68bb      	ldr	r3, [r7, #8]
 800edf0:	789b      	ldrb	r3, [r3, #2]
 800edf2:	f003 030f 	and.w	r3, r3, #15
 800edf6:	2b03      	cmp	r3, #3
 800edf8:	d103      	bne.n	800ee02 <encode_array+0x8e>
 800edfa:	683b      	ldr	r3, [r7, #0]
 800edfc:	009b      	lsls	r3, r3, #2
 800edfe:	627b      	str	r3, [r7, #36]	; 0x24
 800ee00:	e035      	b.n	800ee6e <encode_array+0xfa>
 800ee02:	68bb      	ldr	r3, [r7, #8]
 800ee04:	789b      	ldrb	r3, [r3, #2]
 800ee06:	f003 030f 	and.w	r3, r3, #15
 800ee0a:	2b04      	cmp	r3, #4
 800ee0c:	d103      	bne.n	800ee16 <encode_array+0xa2>
 800ee0e:	683b      	ldr	r3, [r7, #0]
 800ee10:	00db      	lsls	r3, r3, #3
 800ee12:	627b      	str	r3, [r7, #36]	; 0x24
 800ee14:	e02b      	b.n	800ee6e <encode_array+0xfa>
 800ee16:	f107 0310 	add.w	r3, r7, #16
 800ee1a:	2200      	movs	r2, #0
 800ee1c:	601a      	str	r2, [r3, #0]
 800ee1e:	605a      	str	r2, [r3, #4]
 800ee20:	609a      	str	r2, [r3, #8]
 800ee22:	60da      	str	r2, [r3, #12]
 800ee24:	611a      	str	r2, [r3, #16]
 800ee26:	687b      	ldr	r3, [r7, #4]
 800ee28:	62bb      	str	r3, [r7, #40]	; 0x28
 800ee2a:	2300      	movs	r3, #0
 800ee2c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ee2e:	e018      	b.n	800ee62 <encode_array+0xee>
 800ee30:	f107 0010 	add.w	r0, r7, #16
 800ee34:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800ee36:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800ee38:	68b9      	ldr	r1, [r7, #8]
 800ee3a:	4798      	blx	r3
 800ee3c:	4603      	mov	r3, r0
 800ee3e:	f083 0301 	eor.w	r3, r3, #1
 800ee42:	b2db      	uxtb	r3, r3
 800ee44:	2b00      	cmp	r3, #0
 800ee46:	d001      	beq.n	800ee4c <encode_array+0xd8>
 800ee48:	2300      	movs	r3, #0
 800ee4a:	e09b      	b.n	800ef84 <encode_array+0x210>
 800ee4c:	68bb      	ldr	r3, [r7, #8]
 800ee4e:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800ee52:	b29b      	uxth	r3, r3
 800ee54:	461a      	mov	r2, r3
 800ee56:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ee58:	4413      	add	r3, r2
 800ee5a:	62bb      	str	r3, [r7, #40]	; 0x28
 800ee5c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ee5e:	3301      	adds	r3, #1
 800ee60:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ee62:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800ee64:	683b      	ldr	r3, [r7, #0]
 800ee66:	429a      	cmp	r2, r3
 800ee68:	d3e2      	bcc.n	800ee30 <encode_array+0xbc>
 800ee6a:	69fb      	ldr	r3, [r7, #28]
 800ee6c:	627b      	str	r3, [r7, #36]	; 0x24
 800ee6e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ee70:	f04f 0400 	mov.w	r4, #0
 800ee74:	461a      	mov	r2, r3
 800ee76:	4623      	mov	r3, r4
 800ee78:	68f8      	ldr	r0, [r7, #12]
 800ee7a:	f000 fb5c 	bl	800f536 <pb_encode_varint>
 800ee7e:	4603      	mov	r3, r0
 800ee80:	f083 0301 	eor.w	r3, r3, #1
 800ee84:	b2db      	uxtb	r3, r3
 800ee86:	2b00      	cmp	r3, #0
 800ee88:	d001      	beq.n	800ee8e <encode_array+0x11a>
 800ee8a:	2300      	movs	r3, #0
 800ee8c:	e07a      	b.n	800ef84 <encode_array+0x210>
 800ee8e:	68fb      	ldr	r3, [r7, #12]
 800ee90:	681b      	ldr	r3, [r3, #0]
 800ee92:	2b00      	cmp	r3, #0
 800ee94:	d106      	bne.n	800eea4 <encode_array+0x130>
 800ee96:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800ee98:	2100      	movs	r1, #0
 800ee9a:	68f8      	ldr	r0, [r7, #12]
 800ee9c:	f7ff ff24 	bl	800ece8 <pb_write>
 800eea0:	4603      	mov	r3, r0
 800eea2:	e06f      	b.n	800ef84 <encode_array+0x210>
 800eea4:	687b      	ldr	r3, [r7, #4]
 800eea6:	62bb      	str	r3, [r7, #40]	; 0x28
 800eea8:	2300      	movs	r3, #0
 800eeaa:	62fb      	str	r3, [r7, #44]	; 0x2c
 800eeac:	e017      	b.n	800eede <encode_array+0x16a>
 800eeae:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800eeb0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800eeb2:	68b9      	ldr	r1, [r7, #8]
 800eeb4:	68f8      	ldr	r0, [r7, #12]
 800eeb6:	4798      	blx	r3
 800eeb8:	4603      	mov	r3, r0
 800eeba:	f083 0301 	eor.w	r3, r3, #1
 800eebe:	b2db      	uxtb	r3, r3
 800eec0:	2b00      	cmp	r3, #0
 800eec2:	d001      	beq.n	800eec8 <encode_array+0x154>
 800eec4:	2300      	movs	r3, #0
 800eec6:	e05d      	b.n	800ef84 <encode_array+0x210>
 800eec8:	68bb      	ldr	r3, [r7, #8]
 800eeca:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800eece:	b29b      	uxth	r3, r3
 800eed0:	461a      	mov	r2, r3
 800eed2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eed4:	4413      	add	r3, r2
 800eed6:	62bb      	str	r3, [r7, #40]	; 0x28
 800eed8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800eeda:	3301      	adds	r3, #1
 800eedc:	62fb      	str	r3, [r7, #44]	; 0x2c
 800eede:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800eee0:	683b      	ldr	r3, [r7, #0]
 800eee2:	429a      	cmp	r2, r3
 800eee4:	d3e3      	bcc.n	800eeae <encode_array+0x13a>
 800eee6:	e04c      	b.n	800ef82 <encode_array+0x20e>
 800eee8:	687b      	ldr	r3, [r7, #4]
 800eeea:	62bb      	str	r3, [r7, #40]	; 0x28
 800eeec:	2300      	movs	r3, #0
 800eeee:	62fb      	str	r3, [r7, #44]	; 0x2c
 800eef0:	e043      	b.n	800ef7a <encode_array+0x206>
 800eef2:	68b9      	ldr	r1, [r7, #8]
 800eef4:	68f8      	ldr	r0, [r7, #12]
 800eef6:	f000 fc47 	bl	800f788 <pb_encode_tag_for_field>
 800eefa:	4603      	mov	r3, r0
 800eefc:	f083 0301 	eor.w	r3, r3, #1
 800ef00:	b2db      	uxtb	r3, r3
 800ef02:	2b00      	cmp	r3, #0
 800ef04:	d001      	beq.n	800ef0a <encode_array+0x196>
 800ef06:	2300      	movs	r3, #0
 800ef08:	e03c      	b.n	800ef84 <encode_array+0x210>
 800ef0a:	68bb      	ldr	r3, [r7, #8]
 800ef0c:	789b      	ldrb	r3, [r3, #2]
 800ef0e:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800ef12:	2b80      	cmp	r3, #128	; 0x80
 800ef14:	d119      	bne.n	800ef4a <encode_array+0x1d6>
 800ef16:	68bb      	ldr	r3, [r7, #8]
 800ef18:	789b      	ldrb	r3, [r3, #2]
 800ef1a:	f003 030f 	and.w	r3, r3, #15
 800ef1e:	2b06      	cmp	r3, #6
 800ef20:	d005      	beq.n	800ef2e <encode_array+0x1ba>
 800ef22:	68bb      	ldr	r3, [r7, #8]
 800ef24:	789b      	ldrb	r3, [r3, #2]
 800ef26:	f003 030f 	and.w	r3, r3, #15
 800ef2a:	2b05      	cmp	r3, #5
 800ef2c:	d10d      	bne.n	800ef4a <encode_array+0x1d6>
 800ef2e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ef30:	681a      	ldr	r2, [r3, #0]
 800ef32:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800ef34:	68b9      	ldr	r1, [r7, #8]
 800ef36:	68f8      	ldr	r0, [r7, #12]
 800ef38:	4798      	blx	r3
 800ef3a:	4603      	mov	r3, r0
 800ef3c:	f083 0301 	eor.w	r3, r3, #1
 800ef40:	b2db      	uxtb	r3, r3
 800ef42:	2b00      	cmp	r3, #0
 800ef44:	d00e      	beq.n	800ef64 <encode_array+0x1f0>
 800ef46:	2300      	movs	r3, #0
 800ef48:	e01c      	b.n	800ef84 <encode_array+0x210>
 800ef4a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800ef4c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800ef4e:	68b9      	ldr	r1, [r7, #8]
 800ef50:	68f8      	ldr	r0, [r7, #12]
 800ef52:	4798      	blx	r3
 800ef54:	4603      	mov	r3, r0
 800ef56:	f083 0301 	eor.w	r3, r3, #1
 800ef5a:	b2db      	uxtb	r3, r3
 800ef5c:	2b00      	cmp	r3, #0
 800ef5e:	d001      	beq.n	800ef64 <encode_array+0x1f0>
 800ef60:	2300      	movs	r3, #0
 800ef62:	e00f      	b.n	800ef84 <encode_array+0x210>
 800ef64:	68bb      	ldr	r3, [r7, #8]
 800ef66:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800ef6a:	b29b      	uxth	r3, r3
 800ef6c:	461a      	mov	r2, r3
 800ef6e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ef70:	4413      	add	r3, r2
 800ef72:	62bb      	str	r3, [r7, #40]	; 0x28
 800ef74:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ef76:	3301      	adds	r3, #1
 800ef78:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ef7a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800ef7c:	683b      	ldr	r3, [r7, #0]
 800ef7e:	429a      	cmp	r2, r3
 800ef80:	d3b7      	bcc.n	800eef2 <encode_array+0x17e>
 800ef82:	2301      	movs	r3, #1
 800ef84:	4618      	mov	r0, r3
 800ef86:	3734      	adds	r7, #52	; 0x34
 800ef88:	46bd      	mov	sp, r7
 800ef8a:	bd90      	pop	{r4, r7, pc}
 800ef8c:	08015b70 	.word	0x08015b70

0800ef90 <pb_check_proto3_default_value>:
 800ef90:	b590      	push	{r4, r7, lr}
 800ef92:	b08d      	sub	sp, #52	; 0x34
 800ef94:	af00      	add	r7, sp, #0
 800ef96:	6078      	str	r0, [r7, #4]
 800ef98:	6039      	str	r1, [r7, #0]
 800ef9a:	687b      	ldr	r3, [r7, #4]
 800ef9c:	789b      	ldrb	r3, [r3, #2]
 800ef9e:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 800efa2:	687b      	ldr	r3, [r7, #4]
 800efa4:	f9b3 3005 	ldrsh.w	r3, [r3, #5]
 800efa8:	b21b      	sxth	r3, r3
 800efaa:	461a      	mov	r2, r3
 800efac:	683b      	ldr	r3, [r7, #0]
 800efae:	4413      	add	r3, r2
 800efb0:	62bb      	str	r3, [r7, #40]	; 0x28
 800efb2:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800efb6:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800efba:	2b00      	cmp	r3, #0
 800efbc:	d101      	bne.n	800efc2 <pb_check_proto3_default_value+0x32>
 800efbe:	2300      	movs	r3, #0
 800efc0:	e0af      	b.n	800f122 <pb_check_proto3_default_value+0x192>
 800efc2:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800efc6:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800efca:	2b20      	cmp	r3, #32
 800efcc:	d107      	bne.n	800efde <pb_check_proto3_default_value+0x4e>
 800efce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800efd0:	881b      	ldrh	r3, [r3, #0]
 800efd2:	2b00      	cmp	r3, #0
 800efd4:	bf0c      	ite	eq
 800efd6:	2301      	moveq	r3, #1
 800efd8:	2300      	movne	r3, #0
 800efda:	b2db      	uxtb	r3, r3
 800efdc:	e0a1      	b.n	800f122 <pb_check_proto3_default_value+0x192>
 800efde:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800efe2:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800efe6:	2b30      	cmp	r3, #48	; 0x30
 800efe8:	d107      	bne.n	800effa <pb_check_proto3_default_value+0x6a>
 800efea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800efec:	881b      	ldrh	r3, [r3, #0]
 800efee:	2b00      	cmp	r3, #0
 800eff0:	bf0c      	ite	eq
 800eff2:	2301      	moveq	r3, #1
 800eff4:	2300      	movne	r3, #0
 800eff6:	b2db      	uxtb	r3, r3
 800eff8:	e093      	b.n	800f122 <pb_check_proto3_default_value+0x192>
 800effa:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800effe:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800f002:	2b10      	cmp	r3, #16
 800f004:	d113      	bne.n	800f02e <pb_check_proto3_default_value+0x9e>
 800f006:	687b      	ldr	r3, [r7, #4]
 800f008:	f9b3 3005 	ldrsh.w	r3, [r3, #5]
 800f00c:	b21b      	sxth	r3, r3
 800f00e:	2b00      	cmp	r3, #0
 800f010:	d00d      	beq.n	800f02e <pb_check_proto3_default_value+0x9e>
 800f012:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800f014:	781b      	ldrb	r3, [r3, #0]
 800f016:	2b00      	cmp	r3, #0
 800f018:	bf14      	ite	ne
 800f01a:	2301      	movne	r3, #1
 800f01c:	2300      	moveq	r3, #0
 800f01e:	b2db      	uxtb	r3, r3
 800f020:	f083 0301 	eor.w	r3, r3, #1
 800f024:	b2db      	uxtb	r3, r3
 800f026:	f003 0301 	and.w	r3, r3, #1
 800f02a:	b2db      	uxtb	r3, r3
 800f02c:	e079      	b.n	800f122 <pb_check_proto3_default_value+0x192>
 800f02e:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800f032:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800f036:	2b00      	cmp	r3, #0
 800f038:	d15b      	bne.n	800f0f2 <pb_check_proto3_default_value+0x162>
 800f03a:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800f03e:	f003 030f 	and.w	r3, r3, #15
 800f042:	2b05      	cmp	r3, #5
 800f044:	d109      	bne.n	800f05a <pb_check_proto3_default_value+0xca>
 800f046:	683b      	ldr	r3, [r7, #0]
 800f048:	627b      	str	r3, [r7, #36]	; 0x24
 800f04a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f04c:	881b      	ldrh	r3, [r3, #0]
 800f04e:	2b00      	cmp	r3, #0
 800f050:	bf0c      	ite	eq
 800f052:	2301      	moveq	r3, #1
 800f054:	2300      	movne	r3, #0
 800f056:	b2db      	uxtb	r3, r3
 800f058:	e063      	b.n	800f122 <pb_check_proto3_default_value+0x192>
 800f05a:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800f05e:	f003 030f 	and.w	r3, r3, #15
 800f062:	2b06      	cmp	r3, #6
 800f064:	d107      	bne.n	800f076 <pb_check_proto3_default_value+0xe6>
 800f066:	683b      	ldr	r3, [r7, #0]
 800f068:	781b      	ldrb	r3, [r3, #0]
 800f06a:	2b00      	cmp	r3, #0
 800f06c:	bf0c      	ite	eq
 800f06e:	2301      	moveq	r3, #1
 800f070:	2300      	movne	r3, #0
 800f072:	b2db      	uxtb	r3, r3
 800f074:	e055      	b.n	800f122 <pb_check_proto3_default_value+0x192>
 800f076:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800f07a:	f003 030f 	and.w	r3, r3, #15
 800f07e:	2b09      	cmp	r3, #9
 800f080:	d109      	bne.n	800f096 <pb_check_proto3_default_value+0x106>
 800f082:	687b      	ldr	r3, [r7, #4]
 800f084:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800f088:	b29b      	uxth	r3, r3
 800f08a:	2b00      	cmp	r3, #0
 800f08c:	bf0c      	ite	eq
 800f08e:	2301      	moveq	r3, #1
 800f090:	2300      	movne	r3, #0
 800f092:	b2db      	uxtb	r3, r3
 800f094:	e045      	b.n	800f122 <pb_check_proto3_default_value+0x192>
 800f096:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800f09a:	f003 030f 	and.w	r3, r3, #15
 800f09e:	2b07      	cmp	r3, #7
 800f0a0:	d127      	bne.n	800f0f2 <pb_check_proto3_default_value+0x162>
 800f0a2:	687b      	ldr	r3, [r7, #4]
 800f0a4:	f8d3 400b 	ldr.w	r4, [r3, #11]
 800f0a8:	6838      	ldr	r0, [r7, #0]
 800f0aa:	f000 f9f0 	bl	800f48e <pb_const_cast>
 800f0ae:	4602      	mov	r2, r0
 800f0b0:	f107 0308 	add.w	r3, r7, #8
 800f0b4:	4621      	mov	r1, r4
 800f0b6:	4618      	mov	r0, r3
 800f0b8:	f7fe f878 	bl	800d1ac <pb_field_iter_begin>
 800f0bc:	4603      	mov	r3, r0
 800f0be:	2b00      	cmp	r3, #0
 800f0c0:	d015      	beq.n	800f0ee <pb_check_proto3_default_value+0x15e>
 800f0c2:	68fb      	ldr	r3, [r7, #12]
 800f0c4:	69ba      	ldr	r2, [r7, #24]
 800f0c6:	4611      	mov	r1, r2
 800f0c8:	4618      	mov	r0, r3
 800f0ca:	f7ff ff61 	bl	800ef90 <pb_check_proto3_default_value>
 800f0ce:	4603      	mov	r3, r0
 800f0d0:	f083 0301 	eor.w	r3, r3, #1
 800f0d4:	b2db      	uxtb	r3, r3
 800f0d6:	2b00      	cmp	r3, #0
 800f0d8:	d001      	beq.n	800f0de <pb_check_proto3_default_value+0x14e>
 800f0da:	2300      	movs	r3, #0
 800f0dc:	e021      	b.n	800f122 <pb_check_proto3_default_value+0x192>
 800f0de:	f107 0308 	add.w	r3, r7, #8
 800f0e2:	4618      	mov	r0, r3
 800f0e4:	f7fe f897 	bl	800d216 <pb_field_iter_next>
 800f0e8:	4603      	mov	r3, r0
 800f0ea:	2b00      	cmp	r3, #0
 800f0ec:	d1e9      	bne.n	800f0c2 <pb_check_proto3_default_value+0x132>
 800f0ee:	2301      	movs	r3, #1
 800f0f0:	e017      	b.n	800f122 <pb_check_proto3_default_value+0x192>
 800f0f2:	683b      	ldr	r3, [r7, #0]
 800f0f4:	623b      	str	r3, [r7, #32]
 800f0f6:	2300      	movs	r3, #0
 800f0f8:	85fb      	strh	r3, [r7, #46]	; 0x2e
 800f0fa:	e00a      	b.n	800f112 <pb_check_proto3_default_value+0x182>
 800f0fc:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 800f0fe:	6a3a      	ldr	r2, [r7, #32]
 800f100:	4413      	add	r3, r2
 800f102:	781b      	ldrb	r3, [r3, #0]
 800f104:	2b00      	cmp	r3, #0
 800f106:	d001      	beq.n	800f10c <pb_check_proto3_default_value+0x17c>
 800f108:	2300      	movs	r3, #0
 800f10a:	e00a      	b.n	800f122 <pb_check_proto3_default_value+0x192>
 800f10c:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 800f10e:	3301      	adds	r3, #1
 800f110:	85fb      	strh	r3, [r7, #46]	; 0x2e
 800f112:	687b      	ldr	r3, [r7, #4]
 800f114:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800f118:	b29b      	uxth	r3, r3
 800f11a:	8dfa      	ldrh	r2, [r7, #46]	; 0x2e
 800f11c:	429a      	cmp	r2, r3
 800f11e:	d3ed      	bcc.n	800f0fc <pb_check_proto3_default_value+0x16c>
 800f120:	2301      	movs	r3, #1
 800f122:	4618      	mov	r0, r3
 800f124:	3734      	adds	r7, #52	; 0x34
 800f126:	46bd      	mov	sp, r7
 800f128:	bd90      	pop	{r4, r7, pc}
	...

0800f12c <encode_basic_field>:
 800f12c:	b580      	push	{r7, lr}
 800f12e:	b08a      	sub	sp, #40	; 0x28
 800f130:	af02      	add	r7, sp, #8
 800f132:	60f8      	str	r0, [r7, #12]
 800f134:	60b9      	str	r1, [r7, #8]
 800f136:	607a      	str	r2, [r7, #4]
 800f138:	f107 0313 	add.w	r3, r7, #19
 800f13c:	61fb      	str	r3, [r7, #28]
 800f13e:	68bb      	ldr	r3, [r7, #8]
 800f140:	789b      	ldrb	r3, [r3, #2]
 800f142:	f003 030f 	and.w	r3, r3, #15
 800f146:	4a75      	ldr	r2, [pc, #468]	; (800f31c <encode_basic_field+0x1f0>)
 800f148:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f14c:	617b      	str	r3, [r7, #20]
 800f14e:	68bb      	ldr	r3, [r7, #8]
 800f150:	f9b3 3005 	ldrsh.w	r3, [r3, #5]
 800f154:	b21b      	sxth	r3, r3
 800f156:	2b00      	cmp	r3, #0
 800f158:	d008      	beq.n	800f16c <encode_basic_field+0x40>
 800f15a:	68bb      	ldr	r3, [r7, #8]
 800f15c:	f9b3 3005 	ldrsh.w	r3, [r3, #5]
 800f160:	b21b      	sxth	r3, r3
 800f162:	461a      	mov	r2, r3
 800f164:	687b      	ldr	r3, [r7, #4]
 800f166:	4413      	add	r3, r2
 800f168:	61fb      	str	r3, [r7, #28]
 800f16a:	e019      	b.n	800f1a0 <encode_basic_field+0x74>
 800f16c:	68bb      	ldr	r3, [r7, #8]
 800f16e:	789b      	ldrb	r3, [r3, #2]
 800f170:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800f174:	2b10      	cmp	r3, #16
 800f176:	d111      	bne.n	800f19c <encode_basic_field+0x70>
 800f178:	6879      	ldr	r1, [r7, #4]
 800f17a:	68b8      	ldr	r0, [r7, #8]
 800f17c:	f7ff ff08 	bl	800ef90 <pb_check_proto3_default_value>
 800f180:	4603      	mov	r3, r0
 800f182:	2b00      	cmp	r3, #0
 800f184:	bf14      	ite	ne
 800f186:	2301      	movne	r3, #1
 800f188:	2300      	moveq	r3, #0
 800f18a:	b2db      	uxtb	r3, r3
 800f18c:	f083 0301 	eor.w	r3, r3, #1
 800f190:	b2db      	uxtb	r3, r3
 800f192:	f003 0301 	and.w	r3, r3, #1
 800f196:	b2db      	uxtb	r3, r3
 800f198:	74fb      	strb	r3, [r7, #19]
 800f19a:	e001      	b.n	800f1a0 <encode_basic_field+0x74>
 800f19c:	2301      	movs	r3, #1
 800f19e:	74fb      	strb	r3, [r7, #19]
 800f1a0:	68bb      	ldr	r3, [r7, #8]
 800f1a2:	789b      	ldrb	r3, [r3, #2]
 800f1a4:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800f1a8:	2b80      	cmp	r3, #128	; 0x80
 800f1aa:	d109      	bne.n	800f1c0 <encode_basic_field+0x94>
 800f1ac:	687b      	ldr	r3, [r7, #4]
 800f1ae:	681b      	ldr	r3, [r3, #0]
 800f1b0:	607b      	str	r3, [r7, #4]
 800f1b2:	687b      	ldr	r3, [r7, #4]
 800f1b4:	2b00      	cmp	r3, #0
 800f1b6:	bf14      	ite	ne
 800f1b8:	2301      	movne	r3, #1
 800f1ba:	2300      	moveq	r3, #0
 800f1bc:	b2db      	uxtb	r3, r3
 800f1be:	74fb      	strb	r3, [r7, #19]
 800f1c0:	68bb      	ldr	r3, [r7, #8]
 800f1c2:	789b      	ldrb	r3, [r3, #2]
 800f1c4:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800f1c8:	2b10      	cmp	r3, #16
 800f1ca:	d031      	beq.n	800f230 <encode_basic_field+0x104>
 800f1cc:	2b10      	cmp	r3, #16
 800f1ce:	dc02      	bgt.n	800f1d6 <encode_basic_field+0xaa>
 800f1d0:	2b00      	cmp	r3, #0
 800f1d2:	d005      	beq.n	800f1e0 <encode_basic_field+0xb4>
 800f1d4:	e08a      	b.n	800f2ec <encode_basic_field+0x1c0>
 800f1d6:	2b20      	cmp	r3, #32
 800f1d8:	d047      	beq.n	800f26a <encode_basic_field+0x13e>
 800f1da:	2b30      	cmp	r3, #48	; 0x30
 800f1dc:	d066      	beq.n	800f2ac <encode_basic_field+0x180>
 800f1de:	e085      	b.n	800f2ec <encode_basic_field+0x1c0>
 800f1e0:	687b      	ldr	r3, [r7, #4]
 800f1e2:	2b00      	cmp	r3, #0
 800f1e4:	d10b      	bne.n	800f1fe <encode_basic_field+0xd2>
 800f1e6:	68fb      	ldr	r3, [r7, #12]
 800f1e8:	691b      	ldr	r3, [r3, #16]
 800f1ea:	2b00      	cmp	r3, #0
 800f1ec:	d002      	beq.n	800f1f4 <encode_basic_field+0xc8>
 800f1ee:	68fb      	ldr	r3, [r7, #12]
 800f1f0:	691b      	ldr	r3, [r3, #16]
 800f1f2:	e000      	b.n	800f1f6 <encode_basic_field+0xca>
 800f1f4:	4b4a      	ldr	r3, [pc, #296]	; (800f320 <encode_basic_field+0x1f4>)
 800f1f6:	68fa      	ldr	r2, [r7, #12]
 800f1f8:	6113      	str	r3, [r2, #16]
 800f1fa:	2300      	movs	r3, #0
 800f1fc:	e08a      	b.n	800f314 <encode_basic_field+0x1e8>
 800f1fe:	68b9      	ldr	r1, [r7, #8]
 800f200:	68f8      	ldr	r0, [r7, #12]
 800f202:	f000 fac1 	bl	800f788 <pb_encode_tag_for_field>
 800f206:	4603      	mov	r3, r0
 800f208:	f083 0301 	eor.w	r3, r3, #1
 800f20c:	b2db      	uxtb	r3, r3
 800f20e:	2b00      	cmp	r3, #0
 800f210:	d001      	beq.n	800f216 <encode_basic_field+0xea>
 800f212:	2300      	movs	r3, #0
 800f214:	e07e      	b.n	800f314 <encode_basic_field+0x1e8>
 800f216:	697b      	ldr	r3, [r7, #20]
 800f218:	687a      	ldr	r2, [r7, #4]
 800f21a:	68b9      	ldr	r1, [r7, #8]
 800f21c:	68f8      	ldr	r0, [r7, #12]
 800f21e:	4798      	blx	r3
 800f220:	4603      	mov	r3, r0
 800f222:	f083 0301 	eor.w	r3, r3, #1
 800f226:	b2db      	uxtb	r3, r3
 800f228:	2b00      	cmp	r3, #0
 800f22a:	d06b      	beq.n	800f304 <encode_basic_field+0x1d8>
 800f22c:	2300      	movs	r3, #0
 800f22e:	e071      	b.n	800f314 <encode_basic_field+0x1e8>
 800f230:	69fb      	ldr	r3, [r7, #28]
 800f232:	781b      	ldrb	r3, [r3, #0]
 800f234:	2b00      	cmp	r3, #0
 800f236:	d067      	beq.n	800f308 <encode_basic_field+0x1dc>
 800f238:	68b9      	ldr	r1, [r7, #8]
 800f23a:	68f8      	ldr	r0, [r7, #12]
 800f23c:	f000 faa4 	bl	800f788 <pb_encode_tag_for_field>
 800f240:	4603      	mov	r3, r0
 800f242:	f083 0301 	eor.w	r3, r3, #1
 800f246:	b2db      	uxtb	r3, r3
 800f248:	2b00      	cmp	r3, #0
 800f24a:	d001      	beq.n	800f250 <encode_basic_field+0x124>
 800f24c:	2300      	movs	r3, #0
 800f24e:	e061      	b.n	800f314 <encode_basic_field+0x1e8>
 800f250:	697b      	ldr	r3, [r7, #20]
 800f252:	687a      	ldr	r2, [r7, #4]
 800f254:	68b9      	ldr	r1, [r7, #8]
 800f256:	68f8      	ldr	r0, [r7, #12]
 800f258:	4798      	blx	r3
 800f25a:	4603      	mov	r3, r0
 800f25c:	f083 0301 	eor.w	r3, r3, #1
 800f260:	b2db      	uxtb	r3, r3
 800f262:	2b00      	cmp	r3, #0
 800f264:	d050      	beq.n	800f308 <encode_basic_field+0x1dc>
 800f266:	2300      	movs	r3, #0
 800f268:	e054      	b.n	800f314 <encode_basic_field+0x1e8>
 800f26a:	68bb      	ldr	r3, [r7, #8]
 800f26c:	f9b3 3005 	ldrsh.w	r3, [r3, #5]
 800f270:	b21b      	sxth	r3, r3
 800f272:	2b00      	cmp	r3, #0
 800f274:	d003      	beq.n	800f27e <encode_basic_field+0x152>
 800f276:	69fb      	ldr	r3, [r7, #28]
 800f278:	881b      	ldrh	r3, [r3, #0]
 800f27a:	837b      	strh	r3, [r7, #26]
 800f27c:	e005      	b.n	800f28a <encode_basic_field+0x15e>
 800f27e:	68bb      	ldr	r3, [r7, #8]
 800f280:	7a5a      	ldrb	r2, [r3, #9]
 800f282:	7a9b      	ldrb	r3, [r3, #10]
 800f284:	021b      	lsls	r3, r3, #8
 800f286:	4313      	orrs	r3, r2
 800f288:	837b      	strh	r3, [r7, #26]
 800f28a:	8b7a      	ldrh	r2, [r7, #26]
 800f28c:	697b      	ldr	r3, [r7, #20]
 800f28e:	9300      	str	r3, [sp, #0]
 800f290:	4613      	mov	r3, r2
 800f292:	687a      	ldr	r2, [r7, #4]
 800f294:	68b9      	ldr	r1, [r7, #8]
 800f296:	68f8      	ldr	r0, [r7, #12]
 800f298:	f7ff fd6c 	bl	800ed74 <encode_array>
 800f29c:	4603      	mov	r3, r0
 800f29e:	f083 0301 	eor.w	r3, r3, #1
 800f2a2:	b2db      	uxtb	r3, r3
 800f2a4:	2b00      	cmp	r3, #0
 800f2a6:	d031      	beq.n	800f30c <encode_basic_field+0x1e0>
 800f2a8:	2300      	movs	r3, #0
 800f2aa:	e033      	b.n	800f314 <encode_basic_field+0x1e8>
 800f2ac:	69fb      	ldr	r3, [r7, #28]
 800f2ae:	881a      	ldrh	r2, [r3, #0]
 800f2b0:	68bb      	ldr	r3, [r7, #8]
 800f2b2:	881b      	ldrh	r3, [r3, #0]
 800f2b4:	b29b      	uxth	r3, r3
 800f2b6:	429a      	cmp	r2, r3
 800f2b8:	d12a      	bne.n	800f310 <encode_basic_field+0x1e4>
 800f2ba:	68b9      	ldr	r1, [r7, #8]
 800f2bc:	68f8      	ldr	r0, [r7, #12]
 800f2be:	f000 fa63 	bl	800f788 <pb_encode_tag_for_field>
 800f2c2:	4603      	mov	r3, r0
 800f2c4:	f083 0301 	eor.w	r3, r3, #1
 800f2c8:	b2db      	uxtb	r3, r3
 800f2ca:	2b00      	cmp	r3, #0
 800f2cc:	d001      	beq.n	800f2d2 <encode_basic_field+0x1a6>
 800f2ce:	2300      	movs	r3, #0
 800f2d0:	e020      	b.n	800f314 <encode_basic_field+0x1e8>
 800f2d2:	697b      	ldr	r3, [r7, #20]
 800f2d4:	687a      	ldr	r2, [r7, #4]
 800f2d6:	68b9      	ldr	r1, [r7, #8]
 800f2d8:	68f8      	ldr	r0, [r7, #12]
 800f2da:	4798      	blx	r3
 800f2dc:	4603      	mov	r3, r0
 800f2de:	f083 0301 	eor.w	r3, r3, #1
 800f2e2:	b2db      	uxtb	r3, r3
 800f2e4:	2b00      	cmp	r3, #0
 800f2e6:	d013      	beq.n	800f310 <encode_basic_field+0x1e4>
 800f2e8:	2300      	movs	r3, #0
 800f2ea:	e013      	b.n	800f314 <encode_basic_field+0x1e8>
 800f2ec:	68fb      	ldr	r3, [r7, #12]
 800f2ee:	691b      	ldr	r3, [r3, #16]
 800f2f0:	2b00      	cmp	r3, #0
 800f2f2:	d002      	beq.n	800f2fa <encode_basic_field+0x1ce>
 800f2f4:	68fb      	ldr	r3, [r7, #12]
 800f2f6:	691b      	ldr	r3, [r3, #16]
 800f2f8:	e000      	b.n	800f2fc <encode_basic_field+0x1d0>
 800f2fa:	4b0a      	ldr	r3, [pc, #40]	; (800f324 <encode_basic_field+0x1f8>)
 800f2fc:	68fa      	ldr	r2, [r7, #12]
 800f2fe:	6113      	str	r3, [r2, #16]
 800f300:	2300      	movs	r3, #0
 800f302:	e007      	b.n	800f314 <encode_basic_field+0x1e8>
 800f304:	bf00      	nop
 800f306:	e004      	b.n	800f312 <encode_basic_field+0x1e6>
 800f308:	bf00      	nop
 800f30a:	e002      	b.n	800f312 <encode_basic_field+0x1e6>
 800f30c:	bf00      	nop
 800f30e:	e000      	b.n	800f312 <encode_basic_field+0x1e6>
 800f310:	bf00      	nop
 800f312:	2301      	movs	r3, #1
 800f314:	4618      	mov	r0, r3
 800f316:	3720      	adds	r7, #32
 800f318:	46bd      	mov	sp, r7
 800f31a:	bd80      	pop	{r7, pc}
 800f31c:	080165c8 	.word	0x080165c8
 800f320:	08015b88 	.word	0x08015b88
 800f324:	08015ba0 	.word	0x08015ba0

0800f328 <encode_callback_field>:
 800f328:	b580      	push	{r7, lr}
 800f32a:	b086      	sub	sp, #24
 800f32c:	af00      	add	r7, sp, #0
 800f32e:	60f8      	str	r0, [r7, #12]
 800f330:	60b9      	str	r1, [r7, #8]
 800f332:	607a      	str	r2, [r7, #4]
 800f334:	687b      	ldr	r3, [r7, #4]
 800f336:	617b      	str	r3, [r7, #20]
 800f338:	697b      	ldr	r3, [r7, #20]
 800f33a:	3304      	adds	r3, #4
 800f33c:	613b      	str	r3, [r7, #16]
 800f33e:	697b      	ldr	r3, [r7, #20]
 800f340:	681b      	ldr	r3, [r3, #0]
 800f342:	2b00      	cmp	r3, #0
 800f344:	d017      	beq.n	800f376 <encode_callback_field+0x4e>
 800f346:	697b      	ldr	r3, [r7, #20]
 800f348:	681b      	ldr	r3, [r3, #0]
 800f34a:	693a      	ldr	r2, [r7, #16]
 800f34c:	68b9      	ldr	r1, [r7, #8]
 800f34e:	68f8      	ldr	r0, [r7, #12]
 800f350:	4798      	blx	r3
 800f352:	4603      	mov	r3, r0
 800f354:	f083 0301 	eor.w	r3, r3, #1
 800f358:	b2db      	uxtb	r3, r3
 800f35a:	2b00      	cmp	r3, #0
 800f35c:	d00b      	beq.n	800f376 <encode_callback_field+0x4e>
 800f35e:	68fb      	ldr	r3, [r7, #12]
 800f360:	691b      	ldr	r3, [r3, #16]
 800f362:	2b00      	cmp	r3, #0
 800f364:	d002      	beq.n	800f36c <encode_callback_field+0x44>
 800f366:	68fb      	ldr	r3, [r7, #12]
 800f368:	691b      	ldr	r3, [r3, #16]
 800f36a:	e000      	b.n	800f36e <encode_callback_field+0x46>
 800f36c:	4b04      	ldr	r3, [pc, #16]	; (800f380 <encode_callback_field+0x58>)
 800f36e:	68fa      	ldr	r2, [r7, #12]
 800f370:	6113      	str	r3, [r2, #16]
 800f372:	2300      	movs	r3, #0
 800f374:	e000      	b.n	800f378 <encode_callback_field+0x50>
 800f376:	2301      	movs	r3, #1
 800f378:	4618      	mov	r0, r3
 800f37a:	3718      	adds	r7, #24
 800f37c:	46bd      	mov	sp, r7
 800f37e:	bd80      	pop	{r7, pc}
 800f380:	08015bb4 	.word	0x08015bb4

0800f384 <encode_field>:
 800f384:	b580      	push	{r7, lr}
 800f386:	b084      	sub	sp, #16
 800f388:	af00      	add	r7, sp, #0
 800f38a:	60f8      	str	r0, [r7, #12]
 800f38c:	60b9      	str	r1, [r7, #8]
 800f38e:	607a      	str	r2, [r7, #4]
 800f390:	68bb      	ldr	r3, [r7, #8]
 800f392:	789b      	ldrb	r3, [r3, #2]
 800f394:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800f398:	2b40      	cmp	r3, #64	; 0x40
 800f39a:	d00a      	beq.n	800f3b2 <encode_field+0x2e>
 800f39c:	2b80      	cmp	r3, #128	; 0x80
 800f39e:	d001      	beq.n	800f3a4 <encode_field+0x20>
 800f3a0:	2b00      	cmp	r3, #0
 800f3a2:	d10d      	bne.n	800f3c0 <encode_field+0x3c>
 800f3a4:	687a      	ldr	r2, [r7, #4]
 800f3a6:	68b9      	ldr	r1, [r7, #8]
 800f3a8:	68f8      	ldr	r0, [r7, #12]
 800f3aa:	f7ff febf 	bl	800f12c <encode_basic_field>
 800f3ae:	4603      	mov	r3, r0
 800f3b0:	e011      	b.n	800f3d6 <encode_field+0x52>
 800f3b2:	687a      	ldr	r2, [r7, #4]
 800f3b4:	68b9      	ldr	r1, [r7, #8]
 800f3b6:	68f8      	ldr	r0, [r7, #12]
 800f3b8:	f7ff ffb6 	bl	800f328 <encode_callback_field>
 800f3bc:	4603      	mov	r3, r0
 800f3be:	e00a      	b.n	800f3d6 <encode_field+0x52>
 800f3c0:	68fb      	ldr	r3, [r7, #12]
 800f3c2:	691b      	ldr	r3, [r3, #16]
 800f3c4:	2b00      	cmp	r3, #0
 800f3c6:	d002      	beq.n	800f3ce <encode_field+0x4a>
 800f3c8:	68fb      	ldr	r3, [r7, #12]
 800f3ca:	691b      	ldr	r3, [r3, #16]
 800f3cc:	e000      	b.n	800f3d0 <encode_field+0x4c>
 800f3ce:	4b04      	ldr	r3, [pc, #16]	; (800f3e0 <encode_field+0x5c>)
 800f3d0:	68fa      	ldr	r2, [r7, #12]
 800f3d2:	6113      	str	r3, [r2, #16]
 800f3d4:	2300      	movs	r3, #0
 800f3d6:	4618      	mov	r0, r3
 800f3d8:	3710      	adds	r7, #16
 800f3da:	46bd      	mov	sp, r7
 800f3dc:	bd80      	pop	{r7, pc}
 800f3de:	bf00      	nop
 800f3e0:	08015ba0 	.word	0x08015ba0

0800f3e4 <default_extension_encoder>:
 800f3e4:	b580      	push	{r7, lr}
 800f3e6:	b084      	sub	sp, #16
 800f3e8:	af00      	add	r7, sp, #0
 800f3ea:	6078      	str	r0, [r7, #4]
 800f3ec:	6039      	str	r1, [r7, #0]
 800f3ee:	683b      	ldr	r3, [r7, #0]
 800f3f0:	681b      	ldr	r3, [r3, #0]
 800f3f2:	689b      	ldr	r3, [r3, #8]
 800f3f4:	60fb      	str	r3, [r7, #12]
 800f3f6:	68fb      	ldr	r3, [r7, #12]
 800f3f8:	789b      	ldrb	r3, [r3, #2]
 800f3fa:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800f3fe:	2b80      	cmp	r3, #128	; 0x80
 800f400:	d108      	bne.n	800f414 <default_extension_encoder+0x30>
 800f402:	683b      	ldr	r3, [r7, #0]
 800f404:	3304      	adds	r3, #4
 800f406:	461a      	mov	r2, r3
 800f408:	68f9      	ldr	r1, [r7, #12]
 800f40a:	6878      	ldr	r0, [r7, #4]
 800f40c:	f7ff ffba 	bl	800f384 <encode_field>
 800f410:	4603      	mov	r3, r0
 800f412:	e007      	b.n	800f424 <default_extension_encoder+0x40>
 800f414:	683b      	ldr	r3, [r7, #0]
 800f416:	685b      	ldr	r3, [r3, #4]
 800f418:	461a      	mov	r2, r3
 800f41a:	68f9      	ldr	r1, [r7, #12]
 800f41c:	6878      	ldr	r0, [r7, #4]
 800f41e:	f7ff ffb1 	bl	800f384 <encode_field>
 800f422:	4603      	mov	r3, r0
 800f424:	4618      	mov	r0, r3
 800f426:	3710      	adds	r7, #16
 800f428:	46bd      	mov	sp, r7
 800f42a:	bd80      	pop	{r7, pc}

0800f42c <encode_extension_field>:
 800f42c:	b580      	push	{r7, lr}
 800f42e:	b086      	sub	sp, #24
 800f430:	af00      	add	r7, sp, #0
 800f432:	60f8      	str	r0, [r7, #12]
 800f434:	60b9      	str	r1, [r7, #8]
 800f436:	607a      	str	r2, [r7, #4]
 800f438:	687b      	ldr	r3, [r7, #4]
 800f43a:	681b      	ldr	r3, [r3, #0]
 800f43c:	617b      	str	r3, [r7, #20]
 800f43e:	e01e      	b.n	800f47e <encode_extension_field+0x52>
 800f440:	697b      	ldr	r3, [r7, #20]
 800f442:	681b      	ldr	r3, [r3, #0]
 800f444:	685b      	ldr	r3, [r3, #4]
 800f446:	2b00      	cmp	r3, #0
 800f448:	d008      	beq.n	800f45c <encode_extension_field+0x30>
 800f44a:	697b      	ldr	r3, [r7, #20]
 800f44c:	681b      	ldr	r3, [r3, #0]
 800f44e:	685b      	ldr	r3, [r3, #4]
 800f450:	6979      	ldr	r1, [r7, #20]
 800f452:	68f8      	ldr	r0, [r7, #12]
 800f454:	4798      	blx	r3
 800f456:	4603      	mov	r3, r0
 800f458:	74fb      	strb	r3, [r7, #19]
 800f45a:	e005      	b.n	800f468 <encode_extension_field+0x3c>
 800f45c:	6979      	ldr	r1, [r7, #20]
 800f45e:	68f8      	ldr	r0, [r7, #12]
 800f460:	f7ff ffc0 	bl	800f3e4 <default_extension_encoder>
 800f464:	4603      	mov	r3, r0
 800f466:	74fb      	strb	r3, [r7, #19]
 800f468:	7cfb      	ldrb	r3, [r7, #19]
 800f46a:	f083 0301 	eor.w	r3, r3, #1
 800f46e:	b2db      	uxtb	r3, r3
 800f470:	2b00      	cmp	r3, #0
 800f472:	d001      	beq.n	800f478 <encode_extension_field+0x4c>
 800f474:	2300      	movs	r3, #0
 800f476:	e006      	b.n	800f486 <encode_extension_field+0x5a>
 800f478:	697b      	ldr	r3, [r7, #20]
 800f47a:	689b      	ldr	r3, [r3, #8]
 800f47c:	617b      	str	r3, [r7, #20]
 800f47e:	697b      	ldr	r3, [r7, #20]
 800f480:	2b00      	cmp	r3, #0
 800f482:	d1dd      	bne.n	800f440 <encode_extension_field+0x14>
 800f484:	2301      	movs	r3, #1
 800f486:	4618      	mov	r0, r3
 800f488:	3718      	adds	r7, #24
 800f48a:	46bd      	mov	sp, r7
 800f48c:	bd80      	pop	{r7, pc}

0800f48e <pb_const_cast>:
 800f48e:	b480      	push	{r7}
 800f490:	b085      	sub	sp, #20
 800f492:	af00      	add	r7, sp, #0
 800f494:	6078      	str	r0, [r7, #4]
 800f496:	687b      	ldr	r3, [r7, #4]
 800f498:	60fb      	str	r3, [r7, #12]
 800f49a:	68fb      	ldr	r3, [r7, #12]
 800f49c:	4618      	mov	r0, r3
 800f49e:	3714      	adds	r7, #20
 800f4a0:	46bd      	mov	sp, r7
 800f4a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4a6:	4770      	bx	lr

0800f4a8 <pb_encode>:
 800f4a8:	b580      	push	{r7, lr}
 800f4aa:	b08a      	sub	sp, #40	; 0x28
 800f4ac:	af00      	add	r7, sp, #0
 800f4ae:	60f8      	str	r0, [r7, #12]
 800f4b0:	60b9      	str	r1, [r7, #8]
 800f4b2:	607a      	str	r2, [r7, #4]
 800f4b4:	6878      	ldr	r0, [r7, #4]
 800f4b6:	f7ff ffea 	bl	800f48e <pb_const_cast>
 800f4ba:	4602      	mov	r2, r0
 800f4bc:	f107 0310 	add.w	r3, r7, #16
 800f4c0:	68b9      	ldr	r1, [r7, #8]
 800f4c2:	4618      	mov	r0, r3
 800f4c4:	f7fd fe72 	bl	800d1ac <pb_field_iter_begin>
 800f4c8:	4603      	mov	r3, r0
 800f4ca:	f083 0301 	eor.w	r3, r3, #1
 800f4ce:	b2db      	uxtb	r3, r3
 800f4d0:	2b00      	cmp	r3, #0
 800f4d2:	d001      	beq.n	800f4d8 <pb_encode+0x30>
 800f4d4:	2301      	movs	r3, #1
 800f4d6:	e02a      	b.n	800f52e <pb_encode+0x86>
 800f4d8:	697b      	ldr	r3, [r7, #20]
 800f4da:	789b      	ldrb	r3, [r3, #2]
 800f4dc:	f003 030f 	and.w	r3, r3, #15
 800f4e0:	2b08      	cmp	r3, #8
 800f4e2:	d10d      	bne.n	800f500 <pb_encode+0x58>
 800f4e4:	697b      	ldr	r3, [r7, #20]
 800f4e6:	6a3a      	ldr	r2, [r7, #32]
 800f4e8:	4619      	mov	r1, r3
 800f4ea:	68f8      	ldr	r0, [r7, #12]
 800f4ec:	f7ff ff9e 	bl	800f42c <encode_extension_field>
 800f4f0:	4603      	mov	r3, r0
 800f4f2:	f083 0301 	eor.w	r3, r3, #1
 800f4f6:	b2db      	uxtb	r3, r3
 800f4f8:	2b00      	cmp	r3, #0
 800f4fa:	d00f      	beq.n	800f51c <pb_encode+0x74>
 800f4fc:	2300      	movs	r3, #0
 800f4fe:	e016      	b.n	800f52e <pb_encode+0x86>
 800f500:	697b      	ldr	r3, [r7, #20]
 800f502:	6a3a      	ldr	r2, [r7, #32]
 800f504:	4619      	mov	r1, r3
 800f506:	68f8      	ldr	r0, [r7, #12]
 800f508:	f7ff ff3c 	bl	800f384 <encode_field>
 800f50c:	4603      	mov	r3, r0
 800f50e:	f083 0301 	eor.w	r3, r3, #1
 800f512:	b2db      	uxtb	r3, r3
 800f514:	2b00      	cmp	r3, #0
 800f516:	d001      	beq.n	800f51c <pb_encode+0x74>
 800f518:	2300      	movs	r3, #0
 800f51a:	e008      	b.n	800f52e <pb_encode+0x86>
 800f51c:	f107 0310 	add.w	r3, r7, #16
 800f520:	4618      	mov	r0, r3
 800f522:	f7fd fe78 	bl	800d216 <pb_field_iter_next>
 800f526:	4603      	mov	r3, r0
 800f528:	2b00      	cmp	r3, #0
 800f52a:	d1d5      	bne.n	800f4d8 <pb_encode+0x30>
 800f52c:	2301      	movs	r3, #1
 800f52e:	4618      	mov	r0, r3
 800f530:	3728      	adds	r7, #40	; 0x28
 800f532:	46bd      	mov	sp, r7
 800f534:	bd80      	pop	{r7, pc}

0800f536 <pb_encode_varint>:
 800f536:	b590      	push	{r4, r7, lr}
 800f538:	b08b      	sub	sp, #44	; 0x2c
 800f53a:	af00      	add	r7, sp, #0
 800f53c:	60f8      	str	r0, [r7, #12]
 800f53e:	e9c7 2300 	strd	r2, r3, [r7]
 800f542:	2300      	movs	r3, #0
 800f544:	627b      	str	r3, [r7, #36]	; 0x24
 800f546:	e9d7 3400 	ldrd	r3, r4, [r7]
 800f54a:	2c00      	cmp	r4, #0
 800f54c:	bf08      	it	eq
 800f54e:	2b80      	cmpeq	r3, #128	; 0x80
 800f550:	d223      	bcs.n	800f59a <pb_encode_varint+0x64>
 800f552:	783b      	ldrb	r3, [r7, #0]
 800f554:	75fb      	strb	r3, [r7, #23]
 800f556:	f107 0317 	add.w	r3, r7, #23
 800f55a:	2201      	movs	r2, #1
 800f55c:	4619      	mov	r1, r3
 800f55e:	68f8      	ldr	r0, [r7, #12]
 800f560:	f7ff fbc2 	bl	800ece8 <pb_write>
 800f564:	4603      	mov	r3, r0
 800f566:	e035      	b.n	800f5d4 <pb_encode_varint+0x9e>
 800f568:	783b      	ldrb	r3, [r7, #0]
 800f56a:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800f56e:	b2d9      	uxtb	r1, r3
 800f570:	f107 0218 	add.w	r2, r7, #24
 800f574:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f576:	4413      	add	r3, r2
 800f578:	460a      	mov	r2, r1
 800f57a:	701a      	strb	r2, [r3, #0]
 800f57c:	e9d7 1200 	ldrd	r1, r2, [r7]
 800f580:	f04f 0300 	mov.w	r3, #0
 800f584:	f04f 0400 	mov.w	r4, #0
 800f588:	09cb      	lsrs	r3, r1, #7
 800f58a:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 800f58e:	09d4      	lsrs	r4, r2, #7
 800f590:	e9c7 3400 	strd	r3, r4, [r7]
 800f594:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f596:	3301      	adds	r3, #1
 800f598:	627b      	str	r3, [r7, #36]	; 0x24
 800f59a:	e9d7 3400 	ldrd	r3, r4, [r7]
 800f59e:	4323      	orrs	r3, r4
 800f5a0:	d1e2      	bne.n	800f568 <pb_encode_varint+0x32>
 800f5a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f5a4:	3b01      	subs	r3, #1
 800f5a6:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800f5aa:	4413      	add	r3, r2
 800f5ac:	f813 2c10 	ldrb.w	r2, [r3, #-16]
 800f5b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f5b2:	3b01      	subs	r3, #1
 800f5b4:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800f5b8:	b2d2      	uxtb	r2, r2
 800f5ba:	f107 0128 	add.w	r1, r7, #40	; 0x28
 800f5be:	440b      	add	r3, r1
 800f5c0:	f803 2c10 	strb.w	r2, [r3, #-16]
 800f5c4:	f107 0318 	add.w	r3, r7, #24
 800f5c8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800f5ca:	4619      	mov	r1, r3
 800f5cc:	68f8      	ldr	r0, [r7, #12]
 800f5ce:	f7ff fb8b 	bl	800ece8 <pb_write>
 800f5d2:	4603      	mov	r3, r0
 800f5d4:	4618      	mov	r0, r3
 800f5d6:	372c      	adds	r7, #44	; 0x2c
 800f5d8:	46bd      	mov	sp, r7
 800f5da:	bd90      	pop	{r4, r7, pc}

0800f5dc <pb_encode_svarint>:
 800f5dc:	b590      	push	{r4, r7, lr}
 800f5de:	b087      	sub	sp, #28
 800f5e0:	af00      	add	r7, sp, #0
 800f5e2:	60f8      	str	r0, [r7, #12]
 800f5e4:	e9c7 2300 	strd	r2, r3, [r7]
 800f5e8:	e9d7 3400 	ldrd	r3, r4, [r7]
 800f5ec:	2b00      	cmp	r3, #0
 800f5ee:	f174 0300 	sbcs.w	r3, r4, #0
 800f5f2:	da0d      	bge.n	800f610 <pb_encode_svarint+0x34>
 800f5f4:	e9d7 1200 	ldrd	r1, r2, [r7]
 800f5f8:	184b      	adds	r3, r1, r1
 800f5fa:	eb42 0402 	adc.w	r4, r2, r2
 800f5fe:	4619      	mov	r1, r3
 800f600:	4622      	mov	r2, r4
 800f602:	ea6f 0301 	mvn.w	r3, r1
 800f606:	ea6f 0402 	mvn.w	r4, r2
 800f60a:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800f60e:	e006      	b.n	800f61e <pb_encode_svarint+0x42>
 800f610:	e9d7 1200 	ldrd	r1, r2, [r7]
 800f614:	184b      	adds	r3, r1, r1
 800f616:	eb42 0402 	adc.w	r4, r2, r2
 800f61a:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800f61e:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800f622:	68f8      	ldr	r0, [r7, #12]
 800f624:	f7ff ff87 	bl	800f536 <pb_encode_varint>
 800f628:	4603      	mov	r3, r0
 800f62a:	4618      	mov	r0, r3
 800f62c:	371c      	adds	r7, #28
 800f62e:	46bd      	mov	sp, r7
 800f630:	bd90      	pop	{r4, r7, pc}

0800f632 <pb_encode_fixed32>:
 800f632:	b580      	push	{r7, lr}
 800f634:	b084      	sub	sp, #16
 800f636:	af00      	add	r7, sp, #0
 800f638:	6078      	str	r0, [r7, #4]
 800f63a:	6039      	str	r1, [r7, #0]
 800f63c:	683b      	ldr	r3, [r7, #0]
 800f63e:	681b      	ldr	r3, [r3, #0]
 800f640:	60fb      	str	r3, [r7, #12]
 800f642:	68fb      	ldr	r3, [r7, #12]
 800f644:	b2db      	uxtb	r3, r3
 800f646:	723b      	strb	r3, [r7, #8]
 800f648:	68fb      	ldr	r3, [r7, #12]
 800f64a:	0a1b      	lsrs	r3, r3, #8
 800f64c:	b2db      	uxtb	r3, r3
 800f64e:	727b      	strb	r3, [r7, #9]
 800f650:	68fb      	ldr	r3, [r7, #12]
 800f652:	0c1b      	lsrs	r3, r3, #16
 800f654:	b2db      	uxtb	r3, r3
 800f656:	72bb      	strb	r3, [r7, #10]
 800f658:	68fb      	ldr	r3, [r7, #12]
 800f65a:	0e1b      	lsrs	r3, r3, #24
 800f65c:	b2db      	uxtb	r3, r3
 800f65e:	72fb      	strb	r3, [r7, #11]
 800f660:	f107 0308 	add.w	r3, r7, #8
 800f664:	2204      	movs	r2, #4
 800f666:	4619      	mov	r1, r3
 800f668:	6878      	ldr	r0, [r7, #4]
 800f66a:	f7ff fb3d 	bl	800ece8 <pb_write>
 800f66e:	4603      	mov	r3, r0
 800f670:	4618      	mov	r0, r3
 800f672:	3710      	adds	r7, #16
 800f674:	46bd      	mov	sp, r7
 800f676:	bd80      	pop	{r7, pc}

0800f678 <pb_encode_fixed64>:
 800f678:	b590      	push	{r4, r7, lr}
 800f67a:	b087      	sub	sp, #28
 800f67c:	af00      	add	r7, sp, #0
 800f67e:	6078      	str	r0, [r7, #4]
 800f680:	6039      	str	r1, [r7, #0]
 800f682:	683b      	ldr	r3, [r7, #0]
 800f684:	e9d3 3400 	ldrd	r3, r4, [r3]
 800f688:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800f68c:	7c3b      	ldrb	r3, [r7, #16]
 800f68e:	723b      	strb	r3, [r7, #8]
 800f690:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 800f694:	f04f 0300 	mov.w	r3, #0
 800f698:	f04f 0400 	mov.w	r4, #0
 800f69c:	0a0b      	lsrs	r3, r1, #8
 800f69e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f6a2:	0a14      	lsrs	r4, r2, #8
 800f6a4:	b2db      	uxtb	r3, r3
 800f6a6:	727b      	strb	r3, [r7, #9]
 800f6a8:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 800f6ac:	f04f 0300 	mov.w	r3, #0
 800f6b0:	f04f 0400 	mov.w	r4, #0
 800f6b4:	0c0b      	lsrs	r3, r1, #16
 800f6b6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800f6ba:	0c14      	lsrs	r4, r2, #16
 800f6bc:	b2db      	uxtb	r3, r3
 800f6be:	72bb      	strb	r3, [r7, #10]
 800f6c0:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 800f6c4:	f04f 0300 	mov.w	r3, #0
 800f6c8:	f04f 0400 	mov.w	r4, #0
 800f6cc:	0e0b      	lsrs	r3, r1, #24
 800f6ce:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800f6d2:	0e14      	lsrs	r4, r2, #24
 800f6d4:	b2db      	uxtb	r3, r3
 800f6d6:	72fb      	strb	r3, [r7, #11]
 800f6d8:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 800f6dc:	f04f 0300 	mov.w	r3, #0
 800f6e0:	f04f 0400 	mov.w	r4, #0
 800f6e4:	0013      	movs	r3, r2
 800f6e6:	2400      	movs	r4, #0
 800f6e8:	b2db      	uxtb	r3, r3
 800f6ea:	733b      	strb	r3, [r7, #12]
 800f6ec:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 800f6f0:	f04f 0300 	mov.w	r3, #0
 800f6f4:	f04f 0400 	mov.w	r4, #0
 800f6f8:	0a13      	lsrs	r3, r2, #8
 800f6fa:	2400      	movs	r4, #0
 800f6fc:	b2db      	uxtb	r3, r3
 800f6fe:	737b      	strb	r3, [r7, #13]
 800f700:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 800f704:	f04f 0300 	mov.w	r3, #0
 800f708:	f04f 0400 	mov.w	r4, #0
 800f70c:	0c13      	lsrs	r3, r2, #16
 800f70e:	2400      	movs	r4, #0
 800f710:	b2db      	uxtb	r3, r3
 800f712:	73bb      	strb	r3, [r7, #14]
 800f714:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 800f718:	f04f 0300 	mov.w	r3, #0
 800f71c:	f04f 0400 	mov.w	r4, #0
 800f720:	0e13      	lsrs	r3, r2, #24
 800f722:	2400      	movs	r4, #0
 800f724:	b2db      	uxtb	r3, r3
 800f726:	73fb      	strb	r3, [r7, #15]
 800f728:	f107 0308 	add.w	r3, r7, #8
 800f72c:	2208      	movs	r2, #8
 800f72e:	4619      	mov	r1, r3
 800f730:	6878      	ldr	r0, [r7, #4]
 800f732:	f7ff fad9 	bl	800ece8 <pb_write>
 800f736:	4603      	mov	r3, r0
 800f738:	4618      	mov	r0, r3
 800f73a:	371c      	adds	r7, #28
 800f73c:	46bd      	mov	sp, r7
 800f73e:	bd90      	pop	{r4, r7, pc}

0800f740 <pb_encode_tag>:
 800f740:	e92d 4890 	stmdb	sp!, {r4, r7, fp, lr}
 800f744:	b086      	sub	sp, #24
 800f746:	af00      	add	r7, sp, #0
 800f748:	60f8      	str	r0, [r7, #12]
 800f74a:	607a      	str	r2, [r7, #4]
 800f74c:	460a      	mov	r2, r1
 800f74e:	72fa      	strb	r2, [r7, #11]
 800f750:	687a      	ldr	r2, [r7, #4]
 800f752:	4611      	mov	r1, r2
 800f754:	f04f 0200 	mov.w	r2, #0
 800f758:	ea4f 7c51 	mov.w	ip, r1, lsr #29
 800f75c:	ea4f 0bc1 	mov.w	fp, r1, lsl #3
 800f760:	7af9      	ldrb	r1, [r7, #11]
 800f762:	f04f 0200 	mov.w	r2, #0
 800f766:	ea4b 0301 	orr.w	r3, fp, r1
 800f76a:	ea4c 0402 	orr.w	r4, ip, r2
 800f76e:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800f772:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800f776:	68f8      	ldr	r0, [r7, #12]
 800f778:	f7ff fedd 	bl	800f536 <pb_encode_varint>
 800f77c:	4603      	mov	r3, r0
 800f77e:	4618      	mov	r0, r3
 800f780:	3718      	adds	r7, #24
 800f782:	46bd      	mov	sp, r7
 800f784:	e8bd 8890 	ldmia.w	sp!, {r4, r7, fp, pc}

0800f788 <pb_encode_tag_for_field>:
 800f788:	b580      	push	{r7, lr}
 800f78a:	b084      	sub	sp, #16
 800f78c:	af00      	add	r7, sp, #0
 800f78e:	6078      	str	r0, [r7, #4]
 800f790:	6039      	str	r1, [r7, #0]
 800f792:	683b      	ldr	r3, [r7, #0]
 800f794:	789b      	ldrb	r3, [r3, #2]
 800f796:	f003 030f 	and.w	r3, r3, #15
 800f79a:	2b09      	cmp	r3, #9
 800f79c:	d822      	bhi.n	800f7e4 <pb_encode_tag_for_field+0x5c>
 800f79e:	a201      	add	r2, pc, #4	; (adr r2, 800f7a4 <pb_encode_tag_for_field+0x1c>)
 800f7a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f7a4:	0800f7cd 	.word	0x0800f7cd
 800f7a8:	0800f7cd 	.word	0x0800f7cd
 800f7ac:	0800f7cd 	.word	0x0800f7cd
 800f7b0:	0800f7d3 	.word	0x0800f7d3
 800f7b4:	0800f7d9 	.word	0x0800f7d9
 800f7b8:	0800f7df 	.word	0x0800f7df
 800f7bc:	0800f7df 	.word	0x0800f7df
 800f7c0:	0800f7df 	.word	0x0800f7df
 800f7c4:	0800f7e5 	.word	0x0800f7e5
 800f7c8:	0800f7df 	.word	0x0800f7df
 800f7cc:	2300      	movs	r3, #0
 800f7ce:	73fb      	strb	r3, [r7, #15]
 800f7d0:	e014      	b.n	800f7fc <pb_encode_tag_for_field+0x74>
 800f7d2:	2305      	movs	r3, #5
 800f7d4:	73fb      	strb	r3, [r7, #15]
 800f7d6:	e011      	b.n	800f7fc <pb_encode_tag_for_field+0x74>
 800f7d8:	2301      	movs	r3, #1
 800f7da:	73fb      	strb	r3, [r7, #15]
 800f7dc:	e00e      	b.n	800f7fc <pb_encode_tag_for_field+0x74>
 800f7de:	2302      	movs	r3, #2
 800f7e0:	73fb      	strb	r3, [r7, #15]
 800f7e2:	e00b      	b.n	800f7fc <pb_encode_tag_for_field+0x74>
 800f7e4:	687b      	ldr	r3, [r7, #4]
 800f7e6:	691b      	ldr	r3, [r3, #16]
 800f7e8:	2b00      	cmp	r3, #0
 800f7ea:	d002      	beq.n	800f7f2 <pb_encode_tag_for_field+0x6a>
 800f7ec:	687b      	ldr	r3, [r7, #4]
 800f7ee:	691b      	ldr	r3, [r3, #16]
 800f7f0:	e000      	b.n	800f7f4 <pb_encode_tag_for_field+0x6c>
 800f7f2:	4b09      	ldr	r3, [pc, #36]	; (800f818 <pb_encode_tag_for_field+0x90>)
 800f7f4:	687a      	ldr	r2, [r7, #4]
 800f7f6:	6113      	str	r3, [r2, #16]
 800f7f8:	2300      	movs	r3, #0
 800f7fa:	e009      	b.n	800f810 <pb_encode_tag_for_field+0x88>
 800f7fc:	683b      	ldr	r3, [r7, #0]
 800f7fe:	881b      	ldrh	r3, [r3, #0]
 800f800:	b29b      	uxth	r3, r3
 800f802:	461a      	mov	r2, r3
 800f804:	7bfb      	ldrb	r3, [r7, #15]
 800f806:	4619      	mov	r1, r3
 800f808:	6878      	ldr	r0, [r7, #4]
 800f80a:	f7ff ff99 	bl	800f740 <pb_encode_tag>
 800f80e:	4603      	mov	r3, r0
 800f810:	4618      	mov	r0, r3
 800f812:	3710      	adds	r7, #16
 800f814:	46bd      	mov	sp, r7
 800f816:	bd80      	pop	{r7, pc}
 800f818:	08015ba0 	.word	0x08015ba0

0800f81c <pb_encode_string>:
 800f81c:	b590      	push	{r4, r7, lr}
 800f81e:	b085      	sub	sp, #20
 800f820:	af00      	add	r7, sp, #0
 800f822:	60f8      	str	r0, [r7, #12]
 800f824:	60b9      	str	r1, [r7, #8]
 800f826:	607a      	str	r2, [r7, #4]
 800f828:	687b      	ldr	r3, [r7, #4]
 800f82a:	f04f 0400 	mov.w	r4, #0
 800f82e:	461a      	mov	r2, r3
 800f830:	4623      	mov	r3, r4
 800f832:	68f8      	ldr	r0, [r7, #12]
 800f834:	f7ff fe7f 	bl	800f536 <pb_encode_varint>
 800f838:	4603      	mov	r3, r0
 800f83a:	f083 0301 	eor.w	r3, r3, #1
 800f83e:	b2db      	uxtb	r3, r3
 800f840:	2b00      	cmp	r3, #0
 800f842:	d001      	beq.n	800f848 <pb_encode_string+0x2c>
 800f844:	2300      	movs	r3, #0
 800f846:	e005      	b.n	800f854 <pb_encode_string+0x38>
 800f848:	687a      	ldr	r2, [r7, #4]
 800f84a:	68b9      	ldr	r1, [r7, #8]
 800f84c:	68f8      	ldr	r0, [r7, #12]
 800f84e:	f7ff fa4b 	bl	800ece8 <pb_write>
 800f852:	4603      	mov	r3, r0
 800f854:	4618      	mov	r0, r3
 800f856:	3714      	adds	r7, #20
 800f858:	46bd      	mov	sp, r7
 800f85a:	bd90      	pop	{r4, r7, pc}

0800f85c <pb_encode_submessage>:
 800f85c:	b590      	push	{r4, r7, lr}
 800f85e:	b08d      	sub	sp, #52	; 0x34
 800f860:	af00      	add	r7, sp, #0
 800f862:	60f8      	str	r0, [r7, #12]
 800f864:	60b9      	str	r1, [r7, #8]
 800f866:	607a      	str	r2, [r7, #4]
 800f868:	f107 0314 	add.w	r3, r7, #20
 800f86c:	2200      	movs	r2, #0
 800f86e:	601a      	str	r2, [r3, #0]
 800f870:	605a      	str	r2, [r3, #4]
 800f872:	609a      	str	r2, [r3, #8]
 800f874:	60da      	str	r2, [r3, #12]
 800f876:	611a      	str	r2, [r3, #16]
 800f878:	f107 0314 	add.w	r3, r7, #20
 800f87c:	687a      	ldr	r2, [r7, #4]
 800f87e:	68b9      	ldr	r1, [r7, #8]
 800f880:	4618      	mov	r0, r3
 800f882:	f7ff fe11 	bl	800f4a8 <pb_encode>
 800f886:	4603      	mov	r3, r0
 800f888:	f083 0301 	eor.w	r3, r3, #1
 800f88c:	b2db      	uxtb	r3, r3
 800f88e:	2b00      	cmp	r3, #0
 800f890:	d004      	beq.n	800f89c <pb_encode_submessage+0x40>
 800f892:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800f894:	68fb      	ldr	r3, [r7, #12]
 800f896:	611a      	str	r2, [r3, #16]
 800f898:	2300      	movs	r3, #0
 800f89a:	e064      	b.n	800f966 <pb_encode_submessage+0x10a>
 800f89c:	6a3b      	ldr	r3, [r7, #32]
 800f89e:	62fb      	str	r3, [r7, #44]	; 0x2c
 800f8a0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800f8a2:	f04f 0400 	mov.w	r4, #0
 800f8a6:	461a      	mov	r2, r3
 800f8a8:	4623      	mov	r3, r4
 800f8aa:	68f8      	ldr	r0, [r7, #12]
 800f8ac:	f7ff fe43 	bl	800f536 <pb_encode_varint>
 800f8b0:	4603      	mov	r3, r0
 800f8b2:	f083 0301 	eor.w	r3, r3, #1
 800f8b6:	b2db      	uxtb	r3, r3
 800f8b8:	2b00      	cmp	r3, #0
 800f8ba:	d001      	beq.n	800f8c0 <pb_encode_submessage+0x64>
 800f8bc:	2300      	movs	r3, #0
 800f8be:	e052      	b.n	800f966 <pb_encode_submessage+0x10a>
 800f8c0:	68fb      	ldr	r3, [r7, #12]
 800f8c2:	681b      	ldr	r3, [r3, #0]
 800f8c4:	2b00      	cmp	r3, #0
 800f8c6:	d106      	bne.n	800f8d6 <pb_encode_submessage+0x7a>
 800f8c8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800f8ca:	2100      	movs	r1, #0
 800f8cc:	68f8      	ldr	r0, [r7, #12]
 800f8ce:	f7ff fa0b 	bl	800ece8 <pb_write>
 800f8d2:	4603      	mov	r3, r0
 800f8d4:	e047      	b.n	800f966 <pb_encode_submessage+0x10a>
 800f8d6:	68fb      	ldr	r3, [r7, #12]
 800f8d8:	68da      	ldr	r2, [r3, #12]
 800f8da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800f8dc:	441a      	add	r2, r3
 800f8de:	68fb      	ldr	r3, [r7, #12]
 800f8e0:	689b      	ldr	r3, [r3, #8]
 800f8e2:	429a      	cmp	r2, r3
 800f8e4:	d90b      	bls.n	800f8fe <pb_encode_submessage+0xa2>
 800f8e6:	68fb      	ldr	r3, [r7, #12]
 800f8e8:	691b      	ldr	r3, [r3, #16]
 800f8ea:	2b00      	cmp	r3, #0
 800f8ec:	d002      	beq.n	800f8f4 <pb_encode_submessage+0x98>
 800f8ee:	68fb      	ldr	r3, [r7, #12]
 800f8f0:	691b      	ldr	r3, [r3, #16]
 800f8f2:	e000      	b.n	800f8f6 <pb_encode_submessage+0x9a>
 800f8f4:	4b1e      	ldr	r3, [pc, #120]	; (800f970 <pb_encode_submessage+0x114>)
 800f8f6:	68fa      	ldr	r2, [r7, #12]
 800f8f8:	6113      	str	r3, [r2, #16]
 800f8fa:	2300      	movs	r3, #0
 800f8fc:	e033      	b.n	800f966 <pb_encode_submessage+0x10a>
 800f8fe:	68fb      	ldr	r3, [r7, #12]
 800f900:	681b      	ldr	r3, [r3, #0]
 800f902:	617b      	str	r3, [r7, #20]
 800f904:	68fb      	ldr	r3, [r7, #12]
 800f906:	685b      	ldr	r3, [r3, #4]
 800f908:	61bb      	str	r3, [r7, #24]
 800f90a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800f90c:	61fb      	str	r3, [r7, #28]
 800f90e:	2300      	movs	r3, #0
 800f910:	623b      	str	r3, [r7, #32]
 800f912:	2300      	movs	r3, #0
 800f914:	627b      	str	r3, [r7, #36]	; 0x24
 800f916:	f107 0314 	add.w	r3, r7, #20
 800f91a:	687a      	ldr	r2, [r7, #4]
 800f91c:	68b9      	ldr	r1, [r7, #8]
 800f91e:	4618      	mov	r0, r3
 800f920:	f7ff fdc2 	bl	800f4a8 <pb_encode>
 800f924:	4603      	mov	r3, r0
 800f926:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800f92a:	68fb      	ldr	r3, [r7, #12]
 800f92c:	68da      	ldr	r2, [r3, #12]
 800f92e:	6a3b      	ldr	r3, [r7, #32]
 800f930:	441a      	add	r2, r3
 800f932:	68fb      	ldr	r3, [r7, #12]
 800f934:	60da      	str	r2, [r3, #12]
 800f936:	69ba      	ldr	r2, [r7, #24]
 800f938:	68fb      	ldr	r3, [r7, #12]
 800f93a:	605a      	str	r2, [r3, #4]
 800f93c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800f93e:	68fb      	ldr	r3, [r7, #12]
 800f940:	611a      	str	r2, [r3, #16]
 800f942:	6a3b      	ldr	r3, [r7, #32]
 800f944:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800f946:	429a      	cmp	r2, r3
 800f948:	d00b      	beq.n	800f962 <pb_encode_submessage+0x106>
 800f94a:	68fb      	ldr	r3, [r7, #12]
 800f94c:	691b      	ldr	r3, [r3, #16]
 800f94e:	2b00      	cmp	r3, #0
 800f950:	d002      	beq.n	800f958 <pb_encode_submessage+0xfc>
 800f952:	68fb      	ldr	r3, [r7, #12]
 800f954:	691b      	ldr	r3, [r3, #16]
 800f956:	e000      	b.n	800f95a <pb_encode_submessage+0xfe>
 800f958:	4b06      	ldr	r3, [pc, #24]	; (800f974 <pb_encode_submessage+0x118>)
 800f95a:	68fa      	ldr	r2, [r7, #12]
 800f95c:	6113      	str	r3, [r2, #16]
 800f95e:	2300      	movs	r3, #0
 800f960:	e001      	b.n	800f966 <pb_encode_submessage+0x10a>
 800f962:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800f966:	4618      	mov	r0, r3
 800f968:	3734      	adds	r7, #52	; 0x34
 800f96a:	46bd      	mov	sp, r7
 800f96c:	bd90      	pop	{r4, r7, pc}
 800f96e:	bf00      	nop
 800f970:	08015b58 	.word	0x08015b58
 800f974:	08015bc4 	.word	0x08015bc4

0800f978 <pb_enc_varint>:
 800f978:	b590      	push	{r4, r7, lr}
 800f97a:	b087      	sub	sp, #28
 800f97c:	af00      	add	r7, sp, #0
 800f97e:	60f8      	str	r0, [r7, #12]
 800f980:	60b9      	str	r1, [r7, #8]
 800f982:	607a      	str	r2, [r7, #4]
 800f984:	f04f 0300 	mov.w	r3, #0
 800f988:	f04f 0400 	mov.w	r4, #0
 800f98c:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800f990:	68bb      	ldr	r3, [r7, #8]
 800f992:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800f996:	b29b      	uxth	r3, r3
 800f998:	2b01      	cmp	r3, #1
 800f99a:	d108      	bne.n	800f9ae <pb_enc_varint+0x36>
 800f99c:	687b      	ldr	r3, [r7, #4]
 800f99e:	f993 3000 	ldrsb.w	r3, [r3]
 800f9a2:	b25b      	sxtb	r3, r3
 800f9a4:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800f9a8:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800f9ac:	e033      	b.n	800fa16 <pb_enc_varint+0x9e>
 800f9ae:	68bb      	ldr	r3, [r7, #8]
 800f9b0:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800f9b4:	b29b      	uxth	r3, r3
 800f9b6:	2b02      	cmp	r3, #2
 800f9b8:	d108      	bne.n	800f9cc <pb_enc_varint+0x54>
 800f9ba:	687b      	ldr	r3, [r7, #4]
 800f9bc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f9c0:	b21b      	sxth	r3, r3
 800f9c2:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800f9c6:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800f9ca:	e024      	b.n	800fa16 <pb_enc_varint+0x9e>
 800f9cc:	68bb      	ldr	r3, [r7, #8]
 800f9ce:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800f9d2:	b29b      	uxth	r3, r3
 800f9d4:	2b04      	cmp	r3, #4
 800f9d6:	d106      	bne.n	800f9e6 <pb_enc_varint+0x6e>
 800f9d8:	687b      	ldr	r3, [r7, #4]
 800f9da:	681b      	ldr	r3, [r3, #0]
 800f9dc:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800f9e0:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800f9e4:	e017      	b.n	800fa16 <pb_enc_varint+0x9e>
 800f9e6:	68bb      	ldr	r3, [r7, #8]
 800f9e8:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800f9ec:	b29b      	uxth	r3, r3
 800f9ee:	2b08      	cmp	r3, #8
 800f9f0:	d105      	bne.n	800f9fe <pb_enc_varint+0x86>
 800f9f2:	687b      	ldr	r3, [r7, #4]
 800f9f4:	e9d3 3400 	ldrd	r3, r4, [r3]
 800f9f8:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800f9fc:	e00b      	b.n	800fa16 <pb_enc_varint+0x9e>
 800f9fe:	68fb      	ldr	r3, [r7, #12]
 800fa00:	691b      	ldr	r3, [r3, #16]
 800fa02:	2b00      	cmp	r3, #0
 800fa04:	d002      	beq.n	800fa0c <pb_enc_varint+0x94>
 800fa06:	68fb      	ldr	r3, [r7, #12]
 800fa08:	691b      	ldr	r3, [r3, #16]
 800fa0a:	e000      	b.n	800fa0e <pb_enc_varint+0x96>
 800fa0c:	4b08      	ldr	r3, [pc, #32]	; (800fa30 <pb_enc_varint+0xb8>)
 800fa0e:	68fa      	ldr	r2, [r7, #12]
 800fa10:	6113      	str	r3, [r2, #16]
 800fa12:	2300      	movs	r3, #0
 800fa14:	e007      	b.n	800fa26 <pb_enc_varint+0xae>
 800fa16:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800fa1a:	461a      	mov	r2, r3
 800fa1c:	4623      	mov	r3, r4
 800fa1e:	68f8      	ldr	r0, [r7, #12]
 800fa20:	f7ff fd89 	bl	800f536 <pb_encode_varint>
 800fa24:	4603      	mov	r3, r0
 800fa26:	4618      	mov	r0, r3
 800fa28:	371c      	adds	r7, #28
 800fa2a:	46bd      	mov	sp, r7
 800fa2c:	bd90      	pop	{r4, r7, pc}
 800fa2e:	bf00      	nop
 800fa30:	08015bd8 	.word	0x08015bd8

0800fa34 <pb_enc_uvarint>:
 800fa34:	b590      	push	{r4, r7, lr}
 800fa36:	b087      	sub	sp, #28
 800fa38:	af00      	add	r7, sp, #0
 800fa3a:	60f8      	str	r0, [r7, #12]
 800fa3c:	60b9      	str	r1, [r7, #8]
 800fa3e:	607a      	str	r2, [r7, #4]
 800fa40:	f04f 0300 	mov.w	r3, #0
 800fa44:	f04f 0400 	mov.w	r4, #0
 800fa48:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800fa4c:	68bb      	ldr	r3, [r7, #8]
 800fa4e:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800fa52:	b29b      	uxth	r3, r3
 800fa54:	2b01      	cmp	r3, #1
 800fa56:	d107      	bne.n	800fa68 <pb_enc_uvarint+0x34>
 800fa58:	687b      	ldr	r3, [r7, #4]
 800fa5a:	781b      	ldrb	r3, [r3, #0]
 800fa5c:	b2db      	uxtb	r3, r3
 800fa5e:	f04f 0400 	mov.w	r4, #0
 800fa62:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800fa66:	e032      	b.n	800face <pb_enc_uvarint+0x9a>
 800fa68:	68bb      	ldr	r3, [r7, #8]
 800fa6a:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800fa6e:	b29b      	uxth	r3, r3
 800fa70:	2b02      	cmp	r3, #2
 800fa72:	d107      	bne.n	800fa84 <pb_enc_uvarint+0x50>
 800fa74:	687b      	ldr	r3, [r7, #4]
 800fa76:	881b      	ldrh	r3, [r3, #0]
 800fa78:	b29b      	uxth	r3, r3
 800fa7a:	f04f 0400 	mov.w	r4, #0
 800fa7e:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800fa82:	e024      	b.n	800face <pb_enc_uvarint+0x9a>
 800fa84:	68bb      	ldr	r3, [r7, #8]
 800fa86:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800fa8a:	b29b      	uxth	r3, r3
 800fa8c:	2b04      	cmp	r3, #4
 800fa8e:	d106      	bne.n	800fa9e <pb_enc_uvarint+0x6a>
 800fa90:	687b      	ldr	r3, [r7, #4]
 800fa92:	681b      	ldr	r3, [r3, #0]
 800fa94:	f04f 0400 	mov.w	r4, #0
 800fa98:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800fa9c:	e017      	b.n	800face <pb_enc_uvarint+0x9a>
 800fa9e:	68bb      	ldr	r3, [r7, #8]
 800faa0:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800faa4:	b29b      	uxth	r3, r3
 800faa6:	2b08      	cmp	r3, #8
 800faa8:	d105      	bne.n	800fab6 <pb_enc_uvarint+0x82>
 800faaa:	687b      	ldr	r3, [r7, #4]
 800faac:	e9d3 3400 	ldrd	r3, r4, [r3]
 800fab0:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800fab4:	e00b      	b.n	800face <pb_enc_uvarint+0x9a>
 800fab6:	68fb      	ldr	r3, [r7, #12]
 800fab8:	691b      	ldr	r3, [r3, #16]
 800faba:	2b00      	cmp	r3, #0
 800fabc:	d002      	beq.n	800fac4 <pb_enc_uvarint+0x90>
 800fabe:	68fb      	ldr	r3, [r7, #12]
 800fac0:	691b      	ldr	r3, [r3, #16]
 800fac2:	e000      	b.n	800fac6 <pb_enc_uvarint+0x92>
 800fac4:	4b07      	ldr	r3, [pc, #28]	; (800fae4 <pb_enc_uvarint+0xb0>)
 800fac6:	68fa      	ldr	r2, [r7, #12]
 800fac8:	6113      	str	r3, [r2, #16]
 800faca:	2300      	movs	r3, #0
 800facc:	e005      	b.n	800fada <pb_enc_uvarint+0xa6>
 800face:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800fad2:	68f8      	ldr	r0, [r7, #12]
 800fad4:	f7ff fd2f 	bl	800f536 <pb_encode_varint>
 800fad8:	4603      	mov	r3, r0
 800fada:	4618      	mov	r0, r3
 800fadc:	371c      	adds	r7, #28
 800fade:	46bd      	mov	sp, r7
 800fae0:	bd90      	pop	{r4, r7, pc}
 800fae2:	bf00      	nop
 800fae4:	08015bd8 	.word	0x08015bd8

0800fae8 <pb_enc_svarint>:
 800fae8:	b590      	push	{r4, r7, lr}
 800faea:	b087      	sub	sp, #28
 800faec:	af00      	add	r7, sp, #0
 800faee:	60f8      	str	r0, [r7, #12]
 800faf0:	60b9      	str	r1, [r7, #8]
 800faf2:	607a      	str	r2, [r7, #4]
 800faf4:	f04f 0300 	mov.w	r3, #0
 800faf8:	f04f 0400 	mov.w	r4, #0
 800fafc:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800fb00:	68bb      	ldr	r3, [r7, #8]
 800fb02:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800fb06:	b29b      	uxth	r3, r3
 800fb08:	2b01      	cmp	r3, #1
 800fb0a:	d108      	bne.n	800fb1e <pb_enc_svarint+0x36>
 800fb0c:	687b      	ldr	r3, [r7, #4]
 800fb0e:	f993 3000 	ldrsb.w	r3, [r3]
 800fb12:	b25b      	sxtb	r3, r3
 800fb14:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800fb18:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800fb1c:	e033      	b.n	800fb86 <pb_enc_svarint+0x9e>
 800fb1e:	68bb      	ldr	r3, [r7, #8]
 800fb20:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800fb24:	b29b      	uxth	r3, r3
 800fb26:	2b02      	cmp	r3, #2
 800fb28:	d108      	bne.n	800fb3c <pb_enc_svarint+0x54>
 800fb2a:	687b      	ldr	r3, [r7, #4]
 800fb2c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fb30:	b21b      	sxth	r3, r3
 800fb32:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800fb36:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800fb3a:	e024      	b.n	800fb86 <pb_enc_svarint+0x9e>
 800fb3c:	68bb      	ldr	r3, [r7, #8]
 800fb3e:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800fb42:	b29b      	uxth	r3, r3
 800fb44:	2b04      	cmp	r3, #4
 800fb46:	d106      	bne.n	800fb56 <pb_enc_svarint+0x6e>
 800fb48:	687b      	ldr	r3, [r7, #4]
 800fb4a:	681b      	ldr	r3, [r3, #0]
 800fb4c:	ea4f 74e3 	mov.w	r4, r3, asr #31
 800fb50:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800fb54:	e017      	b.n	800fb86 <pb_enc_svarint+0x9e>
 800fb56:	68bb      	ldr	r3, [r7, #8]
 800fb58:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800fb5c:	b29b      	uxth	r3, r3
 800fb5e:	2b08      	cmp	r3, #8
 800fb60:	d105      	bne.n	800fb6e <pb_enc_svarint+0x86>
 800fb62:	687b      	ldr	r3, [r7, #4]
 800fb64:	e9d3 3400 	ldrd	r3, r4, [r3]
 800fb68:	e9c7 3404 	strd	r3, r4, [r7, #16]
 800fb6c:	e00b      	b.n	800fb86 <pb_enc_svarint+0x9e>
 800fb6e:	68fb      	ldr	r3, [r7, #12]
 800fb70:	691b      	ldr	r3, [r3, #16]
 800fb72:	2b00      	cmp	r3, #0
 800fb74:	d002      	beq.n	800fb7c <pb_enc_svarint+0x94>
 800fb76:	68fb      	ldr	r3, [r7, #12]
 800fb78:	691b      	ldr	r3, [r3, #16]
 800fb7a:	e000      	b.n	800fb7e <pb_enc_svarint+0x96>
 800fb7c:	4b07      	ldr	r3, [pc, #28]	; (800fb9c <pb_enc_svarint+0xb4>)
 800fb7e:	68fa      	ldr	r2, [r7, #12]
 800fb80:	6113      	str	r3, [r2, #16]
 800fb82:	2300      	movs	r3, #0
 800fb84:	e005      	b.n	800fb92 <pb_enc_svarint+0xaa>
 800fb86:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800fb8a:	68f8      	ldr	r0, [r7, #12]
 800fb8c:	f7ff fd26 	bl	800f5dc <pb_encode_svarint>
 800fb90:	4603      	mov	r3, r0
 800fb92:	4618      	mov	r0, r3
 800fb94:	371c      	adds	r7, #28
 800fb96:	46bd      	mov	sp, r7
 800fb98:	bd90      	pop	{r4, r7, pc}
 800fb9a:	bf00      	nop
 800fb9c:	08015bd8 	.word	0x08015bd8

0800fba0 <pb_enc_fixed64>:
 800fba0:	b580      	push	{r7, lr}
 800fba2:	b084      	sub	sp, #16
 800fba4:	af00      	add	r7, sp, #0
 800fba6:	60f8      	str	r0, [r7, #12]
 800fba8:	60b9      	str	r1, [r7, #8]
 800fbaa:	607a      	str	r2, [r7, #4]
 800fbac:	6879      	ldr	r1, [r7, #4]
 800fbae:	68f8      	ldr	r0, [r7, #12]
 800fbb0:	f7ff fd62 	bl	800f678 <pb_encode_fixed64>
 800fbb4:	4603      	mov	r3, r0
 800fbb6:	4618      	mov	r0, r3
 800fbb8:	3710      	adds	r7, #16
 800fbba:	46bd      	mov	sp, r7
 800fbbc:	bd80      	pop	{r7, pc}

0800fbbe <pb_enc_fixed32>:
 800fbbe:	b580      	push	{r7, lr}
 800fbc0:	b084      	sub	sp, #16
 800fbc2:	af00      	add	r7, sp, #0
 800fbc4:	60f8      	str	r0, [r7, #12]
 800fbc6:	60b9      	str	r1, [r7, #8]
 800fbc8:	607a      	str	r2, [r7, #4]
 800fbca:	6879      	ldr	r1, [r7, #4]
 800fbcc:	68f8      	ldr	r0, [r7, #12]
 800fbce:	f7ff fd30 	bl	800f632 <pb_encode_fixed32>
 800fbd2:	4603      	mov	r3, r0
 800fbd4:	4618      	mov	r0, r3
 800fbd6:	3710      	adds	r7, #16
 800fbd8:	46bd      	mov	sp, r7
 800fbda:	bd80      	pop	{r7, pc}

0800fbdc <pb_enc_bytes>:
 800fbdc:	b580      	push	{r7, lr}
 800fbde:	b086      	sub	sp, #24
 800fbe0:	af00      	add	r7, sp, #0
 800fbe2:	60f8      	str	r0, [r7, #12]
 800fbe4:	60b9      	str	r1, [r7, #8]
 800fbe6:	607a      	str	r2, [r7, #4]
 800fbe8:	2300      	movs	r3, #0
 800fbea:	617b      	str	r3, [r7, #20]
 800fbec:	687b      	ldr	r3, [r7, #4]
 800fbee:	617b      	str	r3, [r7, #20]
 800fbf0:	687b      	ldr	r3, [r7, #4]
 800fbf2:	2b00      	cmp	r3, #0
 800fbf4:	d106      	bne.n	800fc04 <pb_enc_bytes+0x28>
 800fbf6:	2200      	movs	r2, #0
 800fbf8:	2100      	movs	r1, #0
 800fbfa:	68f8      	ldr	r0, [r7, #12]
 800fbfc:	f7ff fe0e 	bl	800f81c <pb_encode_string>
 800fc00:	4603      	mov	r3, r0
 800fc02:	e023      	b.n	800fc4c <pb_enc_bytes+0x70>
 800fc04:	68bb      	ldr	r3, [r7, #8]
 800fc06:	789b      	ldrb	r3, [r3, #2]
 800fc08:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800fc0c:	2b00      	cmp	r3, #0
 800fc0e:	d114      	bne.n	800fc3a <pb_enc_bytes+0x5e>
 800fc10:	697b      	ldr	r3, [r7, #20]
 800fc12:	881b      	ldrh	r3, [r3, #0]
 800fc14:	3302      	adds	r3, #2
 800fc16:	68ba      	ldr	r2, [r7, #8]
 800fc18:	f8b2 2007 	ldrh.w	r2, [r2, #7]
 800fc1c:	b292      	uxth	r2, r2
 800fc1e:	4293      	cmp	r3, r2
 800fc20:	d90b      	bls.n	800fc3a <pb_enc_bytes+0x5e>
 800fc22:	68fb      	ldr	r3, [r7, #12]
 800fc24:	691b      	ldr	r3, [r3, #16]
 800fc26:	2b00      	cmp	r3, #0
 800fc28:	d002      	beq.n	800fc30 <pb_enc_bytes+0x54>
 800fc2a:	68fb      	ldr	r3, [r7, #12]
 800fc2c:	691b      	ldr	r3, [r3, #16]
 800fc2e:	e000      	b.n	800fc32 <pb_enc_bytes+0x56>
 800fc30:	4b08      	ldr	r3, [pc, #32]	; (800fc54 <pb_enc_bytes+0x78>)
 800fc32:	68fa      	ldr	r2, [r7, #12]
 800fc34:	6113      	str	r3, [r2, #16]
 800fc36:	2300      	movs	r3, #0
 800fc38:	e008      	b.n	800fc4c <pb_enc_bytes+0x70>
 800fc3a:	697b      	ldr	r3, [r7, #20]
 800fc3c:	1c99      	adds	r1, r3, #2
 800fc3e:	697b      	ldr	r3, [r7, #20]
 800fc40:	881b      	ldrh	r3, [r3, #0]
 800fc42:	461a      	mov	r2, r3
 800fc44:	68f8      	ldr	r0, [r7, #12]
 800fc46:	f7ff fde9 	bl	800f81c <pb_encode_string>
 800fc4a:	4603      	mov	r3, r0
 800fc4c:	4618      	mov	r0, r3
 800fc4e:	3718      	adds	r7, #24
 800fc50:	46bd      	mov	sp, r7
 800fc52:	bd80      	pop	{r7, pc}
 800fc54:	08015bec 	.word	0x08015bec

0800fc58 <pb_enc_string>:
 800fc58:	b580      	push	{r7, lr}
 800fc5a:	b088      	sub	sp, #32
 800fc5c:	af00      	add	r7, sp, #0
 800fc5e:	60f8      	str	r0, [r7, #12]
 800fc60:	60b9      	str	r1, [r7, #8]
 800fc62:	607a      	str	r2, [r7, #4]
 800fc64:	2300      	movs	r3, #0
 800fc66:	61fb      	str	r3, [r7, #28]
 800fc68:	68bb      	ldr	r3, [r7, #8]
 800fc6a:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800fc6e:	b29b      	uxth	r3, r3
 800fc70:	61bb      	str	r3, [r7, #24]
 800fc72:	687b      	ldr	r3, [r7, #4]
 800fc74:	617b      	str	r3, [r7, #20]
 800fc76:	68bb      	ldr	r3, [r7, #8]
 800fc78:	789b      	ldrb	r3, [r3, #2]
 800fc7a:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800fc7e:	2b80      	cmp	r3, #128	; 0x80
 800fc80:	d102      	bne.n	800fc88 <pb_enc_string+0x30>
 800fc82:	f04f 33ff 	mov.w	r3, #4294967295
 800fc86:	61bb      	str	r3, [r7, #24]
 800fc88:	687b      	ldr	r3, [r7, #4]
 800fc8a:	2b00      	cmp	r3, #0
 800fc8c:	d108      	bne.n	800fca0 <pb_enc_string+0x48>
 800fc8e:	2300      	movs	r3, #0
 800fc90:	61fb      	str	r3, [r7, #28]
 800fc92:	e00d      	b.n	800fcb0 <pb_enc_string+0x58>
 800fc94:	69fb      	ldr	r3, [r7, #28]
 800fc96:	3301      	adds	r3, #1
 800fc98:	61fb      	str	r3, [r7, #28]
 800fc9a:	697b      	ldr	r3, [r7, #20]
 800fc9c:	3301      	adds	r3, #1
 800fc9e:	617b      	str	r3, [r7, #20]
 800fca0:	69fa      	ldr	r2, [r7, #28]
 800fca2:	69bb      	ldr	r3, [r7, #24]
 800fca4:	429a      	cmp	r2, r3
 800fca6:	d203      	bcs.n	800fcb0 <pb_enc_string+0x58>
 800fca8:	697b      	ldr	r3, [r7, #20]
 800fcaa:	781b      	ldrb	r3, [r3, #0]
 800fcac:	2b00      	cmp	r3, #0
 800fcae:	d1f1      	bne.n	800fc94 <pb_enc_string+0x3c>
 800fcb0:	69fa      	ldr	r2, [r7, #28]
 800fcb2:	6879      	ldr	r1, [r7, #4]
 800fcb4:	68f8      	ldr	r0, [r7, #12]
 800fcb6:	f7ff fdb1 	bl	800f81c <pb_encode_string>
 800fcba:	4603      	mov	r3, r0
 800fcbc:	4618      	mov	r0, r3
 800fcbe:	3720      	adds	r7, #32
 800fcc0:	46bd      	mov	sp, r7
 800fcc2:	bd80      	pop	{r7, pc}

0800fcc4 <pb_enc_submessage>:
 800fcc4:	b580      	push	{r7, lr}
 800fcc6:	b084      	sub	sp, #16
 800fcc8:	af00      	add	r7, sp, #0
 800fcca:	60f8      	str	r0, [r7, #12]
 800fccc:	60b9      	str	r1, [r7, #8]
 800fcce:	607a      	str	r2, [r7, #4]
 800fcd0:	68bb      	ldr	r3, [r7, #8]
 800fcd2:	f8d3 300b 	ldr.w	r3, [r3, #11]
 800fcd6:	2b00      	cmp	r3, #0
 800fcd8:	d10b      	bne.n	800fcf2 <pb_enc_submessage+0x2e>
 800fcda:	68fb      	ldr	r3, [r7, #12]
 800fcdc:	691b      	ldr	r3, [r3, #16]
 800fcde:	2b00      	cmp	r3, #0
 800fce0:	d002      	beq.n	800fce8 <pb_enc_submessage+0x24>
 800fce2:	68fb      	ldr	r3, [r7, #12]
 800fce4:	691b      	ldr	r3, [r3, #16]
 800fce6:	e000      	b.n	800fcea <pb_enc_submessage+0x26>
 800fce8:	4b08      	ldr	r3, [pc, #32]	; (800fd0c <pb_enc_submessage+0x48>)
 800fcea:	68fa      	ldr	r2, [r7, #12]
 800fcec:	6113      	str	r3, [r2, #16]
 800fcee:	2300      	movs	r3, #0
 800fcf0:	e008      	b.n	800fd04 <pb_enc_submessage+0x40>
 800fcf2:	68bb      	ldr	r3, [r7, #8]
 800fcf4:	f8d3 300b 	ldr.w	r3, [r3, #11]
 800fcf8:	687a      	ldr	r2, [r7, #4]
 800fcfa:	4619      	mov	r1, r3
 800fcfc:	68f8      	ldr	r0, [r7, #12]
 800fcfe:	f7ff fdad 	bl	800f85c <pb_encode_submessage>
 800fd02:	4603      	mov	r3, r0
 800fd04:	4618      	mov	r0, r3
 800fd06:	3710      	adds	r7, #16
 800fd08:	46bd      	mov	sp, r7
 800fd0a:	bd80      	pop	{r7, pc}
 800fd0c:	08015c00 	.word	0x08015c00

0800fd10 <pb_enc_fixed_length_bytes>:
 800fd10:	b580      	push	{r7, lr}
 800fd12:	b084      	sub	sp, #16
 800fd14:	af00      	add	r7, sp, #0
 800fd16:	60f8      	str	r0, [r7, #12]
 800fd18:	60b9      	str	r1, [r7, #8]
 800fd1a:	607a      	str	r2, [r7, #4]
 800fd1c:	68bb      	ldr	r3, [r7, #8]
 800fd1e:	f8b3 3007 	ldrh.w	r3, [r3, #7]
 800fd22:	b29b      	uxth	r3, r3
 800fd24:	461a      	mov	r2, r3
 800fd26:	6879      	ldr	r1, [r7, #4]
 800fd28:	68f8      	ldr	r0, [r7, #12]
 800fd2a:	f7ff fd77 	bl	800f81c <pb_encode_string>
 800fd2e:	4603      	mov	r3, r0
 800fd30:	4618      	mov	r0, r3
 800fd32:	3710      	adds	r7, #16
 800fd34:	46bd      	mov	sp, r7
 800fd36:	bd80      	pop	{r7, pc}

0800fd38 <__aeabi_memclr>:
 800fd38:	2200      	movs	r2, #0
 800fd3a:	f7f7 b847 	b.w	8006dcc <__aeabi_memset>

0800fd3e <__aeabi_memcpy>:
 800fd3e:	f000 b84a 	b.w	800fdd6 <memcpy>
	...

0800fd44 <__errno>:
 800fd44:	4b01      	ldr	r3, [pc, #4]	; (800fd4c <__errno+0x8>)
 800fd46:	6818      	ldr	r0, [r3, #0]
 800fd48:	4770      	bx	lr
 800fd4a:	bf00      	nop
 800fd4c:	200006c8 	.word	0x200006c8

0800fd50 <__libc_init_array>:
 800fd50:	b570      	push	{r4, r5, r6, lr}
 800fd52:	4e0d      	ldr	r6, [pc, #52]	; (800fd88 <__libc_init_array+0x38>)
 800fd54:	4c0d      	ldr	r4, [pc, #52]	; (800fd8c <__libc_init_array+0x3c>)
 800fd56:	1ba4      	subs	r4, r4, r6
 800fd58:	10a4      	asrs	r4, r4, #2
 800fd5a:	2500      	movs	r5, #0
 800fd5c:	42a5      	cmp	r5, r4
 800fd5e:	d109      	bne.n	800fd74 <__libc_init_array+0x24>
 800fd60:	4e0b      	ldr	r6, [pc, #44]	; (800fd90 <__libc_init_array+0x40>)
 800fd62:	4c0c      	ldr	r4, [pc, #48]	; (800fd94 <__libc_init_array+0x44>)
 800fd64:	f005 f914 	bl	8014f90 <_init>
 800fd68:	1ba4      	subs	r4, r4, r6
 800fd6a:	10a4      	asrs	r4, r4, #2
 800fd6c:	2500      	movs	r5, #0
 800fd6e:	42a5      	cmp	r5, r4
 800fd70:	d105      	bne.n	800fd7e <__libc_init_array+0x2e>
 800fd72:	bd70      	pop	{r4, r5, r6, pc}
 800fd74:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800fd78:	4798      	blx	r3
 800fd7a:	3501      	adds	r5, #1
 800fd7c:	e7ee      	b.n	800fd5c <__libc_init_array+0xc>
 800fd7e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800fd82:	4798      	blx	r3
 800fd84:	3501      	adds	r5, #1
 800fd86:	e7f2      	b.n	800fd6e <__libc_init_array+0x1e>
 800fd88:	08017480 	.word	0x08017480
 800fd8c:	08017480 	.word	0x08017480
 800fd90:	08017480 	.word	0x08017480
 800fd94:	08017484 	.word	0x08017484

0800fd98 <malloc>:
 800fd98:	4b02      	ldr	r3, [pc, #8]	; (800fda4 <malloc+0xc>)
 800fd9a:	4601      	mov	r1, r0
 800fd9c:	6818      	ldr	r0, [r3, #0]
 800fd9e:	f000 b87b 	b.w	800fe98 <_malloc_r>
 800fda2:	bf00      	nop
 800fda4:	200006c8 	.word	0x200006c8

0800fda8 <free>:
 800fda8:	4b02      	ldr	r3, [pc, #8]	; (800fdb4 <free+0xc>)
 800fdaa:	4601      	mov	r1, r0
 800fdac:	6818      	ldr	r0, [r3, #0]
 800fdae:	f000 b825 	b.w	800fdfc <_free_r>
 800fdb2:	bf00      	nop
 800fdb4:	200006c8 	.word	0x200006c8

0800fdb8 <memcmp>:
 800fdb8:	b530      	push	{r4, r5, lr}
 800fdba:	2400      	movs	r4, #0
 800fdbc:	42a2      	cmp	r2, r4
 800fdbe:	d101      	bne.n	800fdc4 <memcmp+0xc>
 800fdc0:	2000      	movs	r0, #0
 800fdc2:	e007      	b.n	800fdd4 <memcmp+0x1c>
 800fdc4:	5d03      	ldrb	r3, [r0, r4]
 800fdc6:	3401      	adds	r4, #1
 800fdc8:	190d      	adds	r5, r1, r4
 800fdca:	f815 5c01 	ldrb.w	r5, [r5, #-1]
 800fdce:	42ab      	cmp	r3, r5
 800fdd0:	d0f4      	beq.n	800fdbc <memcmp+0x4>
 800fdd2:	1b58      	subs	r0, r3, r5
 800fdd4:	bd30      	pop	{r4, r5, pc}

0800fdd6 <memcpy>:
 800fdd6:	b510      	push	{r4, lr}
 800fdd8:	1e43      	subs	r3, r0, #1
 800fdda:	440a      	add	r2, r1
 800fddc:	4291      	cmp	r1, r2
 800fdde:	d100      	bne.n	800fde2 <memcpy+0xc>
 800fde0:	bd10      	pop	{r4, pc}
 800fde2:	f811 4b01 	ldrb.w	r4, [r1], #1
 800fde6:	f803 4f01 	strb.w	r4, [r3, #1]!
 800fdea:	e7f7      	b.n	800fddc <memcpy+0x6>

0800fdec <memset>:
 800fdec:	4402      	add	r2, r0
 800fdee:	4603      	mov	r3, r0
 800fdf0:	4293      	cmp	r3, r2
 800fdf2:	d100      	bne.n	800fdf6 <memset+0xa>
 800fdf4:	4770      	bx	lr
 800fdf6:	f803 1b01 	strb.w	r1, [r3], #1
 800fdfa:	e7f9      	b.n	800fdf0 <memset+0x4>

0800fdfc <_free_r>:
 800fdfc:	b538      	push	{r3, r4, r5, lr}
 800fdfe:	4605      	mov	r5, r0
 800fe00:	2900      	cmp	r1, #0
 800fe02:	d045      	beq.n	800fe90 <_free_r+0x94>
 800fe04:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800fe08:	1f0c      	subs	r4, r1, #4
 800fe0a:	2b00      	cmp	r3, #0
 800fe0c:	bfb8      	it	lt
 800fe0e:	18e4      	addlt	r4, r4, r3
 800fe10:	f001 fe02 	bl	8011a18 <__malloc_lock>
 800fe14:	4a1f      	ldr	r2, [pc, #124]	; (800fe94 <_free_r+0x98>)
 800fe16:	6813      	ldr	r3, [r2, #0]
 800fe18:	4610      	mov	r0, r2
 800fe1a:	b933      	cbnz	r3, 800fe2a <_free_r+0x2e>
 800fe1c:	6063      	str	r3, [r4, #4]
 800fe1e:	6014      	str	r4, [r2, #0]
 800fe20:	4628      	mov	r0, r5
 800fe22:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fe26:	f001 bdf8 	b.w	8011a1a <__malloc_unlock>
 800fe2a:	42a3      	cmp	r3, r4
 800fe2c:	d90c      	bls.n	800fe48 <_free_r+0x4c>
 800fe2e:	6821      	ldr	r1, [r4, #0]
 800fe30:	1862      	adds	r2, r4, r1
 800fe32:	4293      	cmp	r3, r2
 800fe34:	bf04      	itt	eq
 800fe36:	681a      	ldreq	r2, [r3, #0]
 800fe38:	685b      	ldreq	r3, [r3, #4]
 800fe3a:	6063      	str	r3, [r4, #4]
 800fe3c:	bf04      	itt	eq
 800fe3e:	1852      	addeq	r2, r2, r1
 800fe40:	6022      	streq	r2, [r4, #0]
 800fe42:	6004      	str	r4, [r0, #0]
 800fe44:	e7ec      	b.n	800fe20 <_free_r+0x24>
 800fe46:	4613      	mov	r3, r2
 800fe48:	685a      	ldr	r2, [r3, #4]
 800fe4a:	b10a      	cbz	r2, 800fe50 <_free_r+0x54>
 800fe4c:	42a2      	cmp	r2, r4
 800fe4e:	d9fa      	bls.n	800fe46 <_free_r+0x4a>
 800fe50:	6819      	ldr	r1, [r3, #0]
 800fe52:	1858      	adds	r0, r3, r1
 800fe54:	42a0      	cmp	r0, r4
 800fe56:	d10b      	bne.n	800fe70 <_free_r+0x74>
 800fe58:	6820      	ldr	r0, [r4, #0]
 800fe5a:	4401      	add	r1, r0
 800fe5c:	1858      	adds	r0, r3, r1
 800fe5e:	4282      	cmp	r2, r0
 800fe60:	6019      	str	r1, [r3, #0]
 800fe62:	d1dd      	bne.n	800fe20 <_free_r+0x24>
 800fe64:	6810      	ldr	r0, [r2, #0]
 800fe66:	6852      	ldr	r2, [r2, #4]
 800fe68:	605a      	str	r2, [r3, #4]
 800fe6a:	4401      	add	r1, r0
 800fe6c:	6019      	str	r1, [r3, #0]
 800fe6e:	e7d7      	b.n	800fe20 <_free_r+0x24>
 800fe70:	d902      	bls.n	800fe78 <_free_r+0x7c>
 800fe72:	230c      	movs	r3, #12
 800fe74:	602b      	str	r3, [r5, #0]
 800fe76:	e7d3      	b.n	800fe20 <_free_r+0x24>
 800fe78:	6820      	ldr	r0, [r4, #0]
 800fe7a:	1821      	adds	r1, r4, r0
 800fe7c:	428a      	cmp	r2, r1
 800fe7e:	bf04      	itt	eq
 800fe80:	6811      	ldreq	r1, [r2, #0]
 800fe82:	6852      	ldreq	r2, [r2, #4]
 800fe84:	6062      	str	r2, [r4, #4]
 800fe86:	bf04      	itt	eq
 800fe88:	1809      	addeq	r1, r1, r0
 800fe8a:	6021      	streq	r1, [r4, #0]
 800fe8c:	605c      	str	r4, [r3, #4]
 800fe8e:	e7c7      	b.n	800fe20 <_free_r+0x24>
 800fe90:	bd38      	pop	{r3, r4, r5, pc}
 800fe92:	bf00      	nop
 800fe94:	20000bd4 	.word	0x20000bd4

0800fe98 <_malloc_r>:
 800fe98:	b570      	push	{r4, r5, r6, lr}
 800fe9a:	1ccd      	adds	r5, r1, #3
 800fe9c:	f025 0503 	bic.w	r5, r5, #3
 800fea0:	3508      	adds	r5, #8
 800fea2:	2d0c      	cmp	r5, #12
 800fea4:	bf38      	it	cc
 800fea6:	250c      	movcc	r5, #12
 800fea8:	2d00      	cmp	r5, #0
 800feaa:	4606      	mov	r6, r0
 800feac:	db01      	blt.n	800feb2 <_malloc_r+0x1a>
 800feae:	42a9      	cmp	r1, r5
 800feb0:	d903      	bls.n	800feba <_malloc_r+0x22>
 800feb2:	230c      	movs	r3, #12
 800feb4:	6033      	str	r3, [r6, #0]
 800feb6:	2000      	movs	r0, #0
 800feb8:	bd70      	pop	{r4, r5, r6, pc}
 800feba:	f001 fdad 	bl	8011a18 <__malloc_lock>
 800febe:	4a21      	ldr	r2, [pc, #132]	; (800ff44 <_malloc_r+0xac>)
 800fec0:	6814      	ldr	r4, [r2, #0]
 800fec2:	4621      	mov	r1, r4
 800fec4:	b991      	cbnz	r1, 800feec <_malloc_r+0x54>
 800fec6:	4c20      	ldr	r4, [pc, #128]	; (800ff48 <_malloc_r+0xb0>)
 800fec8:	6823      	ldr	r3, [r4, #0]
 800feca:	b91b      	cbnz	r3, 800fed4 <_malloc_r+0x3c>
 800fecc:	4630      	mov	r0, r6
 800fece:	f000 fcfb 	bl	80108c8 <_sbrk_r>
 800fed2:	6020      	str	r0, [r4, #0]
 800fed4:	4629      	mov	r1, r5
 800fed6:	4630      	mov	r0, r6
 800fed8:	f000 fcf6 	bl	80108c8 <_sbrk_r>
 800fedc:	1c43      	adds	r3, r0, #1
 800fede:	d124      	bne.n	800ff2a <_malloc_r+0x92>
 800fee0:	230c      	movs	r3, #12
 800fee2:	6033      	str	r3, [r6, #0]
 800fee4:	4630      	mov	r0, r6
 800fee6:	f001 fd98 	bl	8011a1a <__malloc_unlock>
 800feea:	e7e4      	b.n	800feb6 <_malloc_r+0x1e>
 800feec:	680b      	ldr	r3, [r1, #0]
 800feee:	1b5b      	subs	r3, r3, r5
 800fef0:	d418      	bmi.n	800ff24 <_malloc_r+0x8c>
 800fef2:	2b0b      	cmp	r3, #11
 800fef4:	d90f      	bls.n	800ff16 <_malloc_r+0x7e>
 800fef6:	600b      	str	r3, [r1, #0]
 800fef8:	50cd      	str	r5, [r1, r3]
 800fefa:	18cc      	adds	r4, r1, r3
 800fefc:	4630      	mov	r0, r6
 800fefe:	f001 fd8c 	bl	8011a1a <__malloc_unlock>
 800ff02:	f104 000b 	add.w	r0, r4, #11
 800ff06:	1d23      	adds	r3, r4, #4
 800ff08:	f020 0007 	bic.w	r0, r0, #7
 800ff0c:	1ac3      	subs	r3, r0, r3
 800ff0e:	d0d3      	beq.n	800feb8 <_malloc_r+0x20>
 800ff10:	425a      	negs	r2, r3
 800ff12:	50e2      	str	r2, [r4, r3]
 800ff14:	e7d0      	b.n	800feb8 <_malloc_r+0x20>
 800ff16:	428c      	cmp	r4, r1
 800ff18:	684b      	ldr	r3, [r1, #4]
 800ff1a:	bf16      	itet	ne
 800ff1c:	6063      	strne	r3, [r4, #4]
 800ff1e:	6013      	streq	r3, [r2, #0]
 800ff20:	460c      	movne	r4, r1
 800ff22:	e7eb      	b.n	800fefc <_malloc_r+0x64>
 800ff24:	460c      	mov	r4, r1
 800ff26:	6849      	ldr	r1, [r1, #4]
 800ff28:	e7cc      	b.n	800fec4 <_malloc_r+0x2c>
 800ff2a:	1cc4      	adds	r4, r0, #3
 800ff2c:	f024 0403 	bic.w	r4, r4, #3
 800ff30:	42a0      	cmp	r0, r4
 800ff32:	d005      	beq.n	800ff40 <_malloc_r+0xa8>
 800ff34:	1a21      	subs	r1, r4, r0
 800ff36:	4630      	mov	r0, r6
 800ff38:	f000 fcc6 	bl	80108c8 <_sbrk_r>
 800ff3c:	3001      	adds	r0, #1
 800ff3e:	d0cf      	beq.n	800fee0 <_malloc_r+0x48>
 800ff40:	6025      	str	r5, [r4, #0]
 800ff42:	e7db      	b.n	800fefc <_malloc_r+0x64>
 800ff44:	20000bd4 	.word	0x20000bd4
 800ff48:	20000bd8 	.word	0x20000bd8

0800ff4c <__cvt>:
 800ff4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ff4e:	ed2d 8b02 	vpush	{d8}
 800ff52:	eeb0 8b40 	vmov.f64	d8, d0
 800ff56:	b085      	sub	sp, #20
 800ff58:	4617      	mov	r7, r2
 800ff5a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800ff5c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800ff5e:	ee18 2a90 	vmov	r2, s17
 800ff62:	f025 0520 	bic.w	r5, r5, #32
 800ff66:	2a00      	cmp	r2, #0
 800ff68:	bfb6      	itet	lt
 800ff6a:	222d      	movlt	r2, #45	; 0x2d
 800ff6c:	2200      	movge	r2, #0
 800ff6e:	eeb1 8b40 	vneglt.f64	d8, d0
 800ff72:	2d46      	cmp	r5, #70	; 0x46
 800ff74:	460c      	mov	r4, r1
 800ff76:	701a      	strb	r2, [r3, #0]
 800ff78:	d004      	beq.n	800ff84 <__cvt+0x38>
 800ff7a:	2d45      	cmp	r5, #69	; 0x45
 800ff7c:	d100      	bne.n	800ff80 <__cvt+0x34>
 800ff7e:	3401      	adds	r4, #1
 800ff80:	2102      	movs	r1, #2
 800ff82:	e000      	b.n	800ff86 <__cvt+0x3a>
 800ff84:	2103      	movs	r1, #3
 800ff86:	ab03      	add	r3, sp, #12
 800ff88:	9301      	str	r3, [sp, #4]
 800ff8a:	ab02      	add	r3, sp, #8
 800ff8c:	9300      	str	r3, [sp, #0]
 800ff8e:	4622      	mov	r2, r4
 800ff90:	4633      	mov	r3, r6
 800ff92:	eeb0 0b48 	vmov.f64	d0, d8
 800ff96:	f000 fe07 	bl	8010ba8 <_dtoa_r>
 800ff9a:	2d47      	cmp	r5, #71	; 0x47
 800ff9c:	d101      	bne.n	800ffa2 <__cvt+0x56>
 800ff9e:	07fb      	lsls	r3, r7, #31
 800ffa0:	d51e      	bpl.n	800ffe0 <__cvt+0x94>
 800ffa2:	2d46      	cmp	r5, #70	; 0x46
 800ffa4:	eb00 0304 	add.w	r3, r0, r4
 800ffa8:	d10c      	bne.n	800ffc4 <__cvt+0x78>
 800ffaa:	7802      	ldrb	r2, [r0, #0]
 800ffac:	2a30      	cmp	r2, #48	; 0x30
 800ffae:	d107      	bne.n	800ffc0 <__cvt+0x74>
 800ffb0:	eeb5 8b40 	vcmp.f64	d8, #0.0
 800ffb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ffb8:	bf1c      	itt	ne
 800ffba:	f1c4 0401 	rsbne	r4, r4, #1
 800ffbe:	6034      	strne	r4, [r6, #0]
 800ffc0:	6832      	ldr	r2, [r6, #0]
 800ffc2:	4413      	add	r3, r2
 800ffc4:	eeb5 8b40 	vcmp.f64	d8, #0.0
 800ffc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ffcc:	d007      	beq.n	800ffde <__cvt+0x92>
 800ffce:	2130      	movs	r1, #48	; 0x30
 800ffd0:	9a03      	ldr	r2, [sp, #12]
 800ffd2:	429a      	cmp	r2, r3
 800ffd4:	d204      	bcs.n	800ffe0 <__cvt+0x94>
 800ffd6:	1c54      	adds	r4, r2, #1
 800ffd8:	9403      	str	r4, [sp, #12]
 800ffda:	7011      	strb	r1, [r2, #0]
 800ffdc:	e7f8      	b.n	800ffd0 <__cvt+0x84>
 800ffde:	9303      	str	r3, [sp, #12]
 800ffe0:	9b03      	ldr	r3, [sp, #12]
 800ffe2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ffe4:	1a1b      	subs	r3, r3, r0
 800ffe6:	6013      	str	r3, [r2, #0]
 800ffe8:	b005      	add	sp, #20
 800ffea:	ecbd 8b02 	vpop	{d8}
 800ffee:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fff0 <__exponent>:
 800fff0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fff2:	2900      	cmp	r1, #0
 800fff4:	4604      	mov	r4, r0
 800fff6:	bfba      	itte	lt
 800fff8:	4249      	neglt	r1, r1
 800fffa:	232d      	movlt	r3, #45	; 0x2d
 800fffc:	232b      	movge	r3, #43	; 0x2b
 800fffe:	2909      	cmp	r1, #9
 8010000:	f804 2b02 	strb.w	r2, [r4], #2
 8010004:	7043      	strb	r3, [r0, #1]
 8010006:	dd20      	ble.n	801004a <__exponent+0x5a>
 8010008:	f10d 0307 	add.w	r3, sp, #7
 801000c:	461f      	mov	r7, r3
 801000e:	260a      	movs	r6, #10
 8010010:	fb91 f5f6 	sdiv	r5, r1, r6
 8010014:	fb06 1115 	mls	r1, r6, r5, r1
 8010018:	3130      	adds	r1, #48	; 0x30
 801001a:	2d09      	cmp	r5, #9
 801001c:	f803 1c01 	strb.w	r1, [r3, #-1]
 8010020:	f103 32ff 	add.w	r2, r3, #4294967295
 8010024:	4629      	mov	r1, r5
 8010026:	dc09      	bgt.n	801003c <__exponent+0x4c>
 8010028:	3130      	adds	r1, #48	; 0x30
 801002a:	3b02      	subs	r3, #2
 801002c:	f802 1c01 	strb.w	r1, [r2, #-1]
 8010030:	42bb      	cmp	r3, r7
 8010032:	4622      	mov	r2, r4
 8010034:	d304      	bcc.n	8010040 <__exponent+0x50>
 8010036:	1a10      	subs	r0, r2, r0
 8010038:	b003      	add	sp, #12
 801003a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801003c:	4613      	mov	r3, r2
 801003e:	e7e7      	b.n	8010010 <__exponent+0x20>
 8010040:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010044:	f804 2b01 	strb.w	r2, [r4], #1
 8010048:	e7f2      	b.n	8010030 <__exponent+0x40>
 801004a:	2330      	movs	r3, #48	; 0x30
 801004c:	4419      	add	r1, r3
 801004e:	7083      	strb	r3, [r0, #2]
 8010050:	1d02      	adds	r2, r0, #4
 8010052:	70c1      	strb	r1, [r0, #3]
 8010054:	e7ef      	b.n	8010036 <__exponent+0x46>
	...

08010058 <_printf_float>:
 8010058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801005c:	b08d      	sub	sp, #52	; 0x34
 801005e:	460c      	mov	r4, r1
 8010060:	4616      	mov	r6, r2
 8010062:	461f      	mov	r7, r3
 8010064:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8010068:	4605      	mov	r5, r0
 801006a:	f001 fc63 	bl	8011934 <_localeconv_r>
 801006e:	f8d0 b000 	ldr.w	fp, [r0]
 8010072:	4658      	mov	r0, fp
 8010074:	f7f6 fef7 	bl	8006e66 <strlen>
 8010078:	2300      	movs	r3, #0
 801007a:	930a      	str	r3, [sp, #40]	; 0x28
 801007c:	f8d8 3000 	ldr.w	r3, [r8]
 8010080:	9005      	str	r0, [sp, #20]
 8010082:	3307      	adds	r3, #7
 8010084:	f023 0307 	bic.w	r3, r3, #7
 8010088:	f103 0108 	add.w	r1, r3, #8
 801008c:	f894 9018 	ldrb.w	r9, [r4, #24]
 8010090:	6822      	ldr	r2, [r4, #0]
 8010092:	f8c8 1000 	str.w	r1, [r8]
 8010096:	e9d3 0100 	ldrd	r0, r1, [r3]
 801009a:	e9c4 0112 	strd	r0, r1, [r4, #72]	; 0x48
 801009e:	ed9f 7ba2 	vldr	d7, [pc, #648]	; 8010328 <_printf_float+0x2d0>
 80100a2:	ed94 0b12 	vldr	d0, [r4, #72]	; 0x48
 80100a6:	eeb0 6bc0 	vabs.f64	d6, d0
 80100aa:	eeb4 6b47 	vcmp.f64	d6, d7
 80100ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80100b2:	dd24      	ble.n	80100fe <_printf_float+0xa6>
 80100b4:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 80100b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80100bc:	d502      	bpl.n	80100c4 <_printf_float+0x6c>
 80100be:	232d      	movs	r3, #45	; 0x2d
 80100c0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80100c4:	499a      	ldr	r1, [pc, #616]	; (8010330 <_printf_float+0x2d8>)
 80100c6:	4b9b      	ldr	r3, [pc, #620]	; (8010334 <_printf_float+0x2dc>)
 80100c8:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 80100cc:	bf8c      	ite	hi
 80100ce:	4688      	movhi	r8, r1
 80100d0:	4698      	movls	r8, r3
 80100d2:	f022 0204 	bic.w	r2, r2, #4
 80100d6:	2303      	movs	r3, #3
 80100d8:	6123      	str	r3, [r4, #16]
 80100da:	6022      	str	r2, [r4, #0]
 80100dc:	f04f 0a00 	mov.w	sl, #0
 80100e0:	9700      	str	r7, [sp, #0]
 80100e2:	4633      	mov	r3, r6
 80100e4:	aa0b      	add	r2, sp, #44	; 0x2c
 80100e6:	4621      	mov	r1, r4
 80100e8:	4628      	mov	r0, r5
 80100ea:	f000 f9e1 	bl	80104b0 <_printf_common>
 80100ee:	3001      	adds	r0, #1
 80100f0:	f040 8089 	bne.w	8010206 <_printf_float+0x1ae>
 80100f4:	f04f 30ff 	mov.w	r0, #4294967295
 80100f8:	b00d      	add	sp, #52	; 0x34
 80100fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100fe:	eeb4 0b40 	vcmp.f64	d0, d0
 8010102:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010106:	d702      	bvc.n	801010e <_printf_float+0xb6>
 8010108:	498b      	ldr	r1, [pc, #556]	; (8010338 <_printf_float+0x2e0>)
 801010a:	4b8c      	ldr	r3, [pc, #560]	; (801033c <_printf_float+0x2e4>)
 801010c:	e7dc      	b.n	80100c8 <_printf_float+0x70>
 801010e:	6861      	ldr	r1, [r4, #4]
 8010110:	1c4b      	adds	r3, r1, #1
 8010112:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8010116:	ab0a      	add	r3, sp, #40	; 0x28
 8010118:	a809      	add	r0, sp, #36	; 0x24
 801011a:	d13b      	bne.n	8010194 <_printf_float+0x13c>
 801011c:	2106      	movs	r1, #6
 801011e:	6061      	str	r1, [r4, #4]
 8010120:	f04f 0c00 	mov.w	ip, #0
 8010124:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8010128:	e9cd 0900 	strd	r0, r9, [sp]
 801012c:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8010130:	6022      	str	r2, [r4, #0]
 8010132:	6861      	ldr	r1, [r4, #4]
 8010134:	4628      	mov	r0, r5
 8010136:	f7ff ff09 	bl	800ff4c <__cvt>
 801013a:	f009 03df 	and.w	r3, r9, #223	; 0xdf
 801013e:	2b47      	cmp	r3, #71	; 0x47
 8010140:	4680      	mov	r8, r0
 8010142:	d109      	bne.n	8010158 <_printf_float+0x100>
 8010144:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010146:	1cd8      	adds	r0, r3, #3
 8010148:	db02      	blt.n	8010150 <_printf_float+0xf8>
 801014a:	6862      	ldr	r2, [r4, #4]
 801014c:	4293      	cmp	r3, r2
 801014e:	dd47      	ble.n	80101e0 <_printf_float+0x188>
 8010150:	f1a9 0902 	sub.w	r9, r9, #2
 8010154:	fa5f f989 	uxtb.w	r9, r9
 8010158:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 801015c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801015e:	d824      	bhi.n	80101aa <_printf_float+0x152>
 8010160:	3901      	subs	r1, #1
 8010162:	464a      	mov	r2, r9
 8010164:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8010168:	9109      	str	r1, [sp, #36]	; 0x24
 801016a:	f7ff ff41 	bl	800fff0 <__exponent>
 801016e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010170:	1813      	adds	r3, r2, r0
 8010172:	2a01      	cmp	r2, #1
 8010174:	4682      	mov	sl, r0
 8010176:	6123      	str	r3, [r4, #16]
 8010178:	dc02      	bgt.n	8010180 <_printf_float+0x128>
 801017a:	6822      	ldr	r2, [r4, #0]
 801017c:	07d1      	lsls	r1, r2, #31
 801017e:	d501      	bpl.n	8010184 <_printf_float+0x12c>
 8010180:	3301      	adds	r3, #1
 8010182:	6123      	str	r3, [r4, #16]
 8010184:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8010188:	2b00      	cmp	r3, #0
 801018a:	d0a9      	beq.n	80100e0 <_printf_float+0x88>
 801018c:	232d      	movs	r3, #45	; 0x2d
 801018e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8010192:	e7a5      	b.n	80100e0 <_printf_float+0x88>
 8010194:	f1b9 0f67 	cmp.w	r9, #103	; 0x67
 8010198:	f000 8178 	beq.w	801048c <_printf_float+0x434>
 801019c:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 80101a0:	d1be      	bne.n	8010120 <_printf_float+0xc8>
 80101a2:	2900      	cmp	r1, #0
 80101a4:	d1bc      	bne.n	8010120 <_printf_float+0xc8>
 80101a6:	2101      	movs	r1, #1
 80101a8:	e7b9      	b.n	801011e <_printf_float+0xc6>
 80101aa:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 80101ae:	d119      	bne.n	80101e4 <_printf_float+0x18c>
 80101b0:	2900      	cmp	r1, #0
 80101b2:	6863      	ldr	r3, [r4, #4]
 80101b4:	dd0c      	ble.n	80101d0 <_printf_float+0x178>
 80101b6:	6121      	str	r1, [r4, #16]
 80101b8:	b913      	cbnz	r3, 80101c0 <_printf_float+0x168>
 80101ba:	6822      	ldr	r2, [r4, #0]
 80101bc:	07d2      	lsls	r2, r2, #31
 80101be:	d502      	bpl.n	80101c6 <_printf_float+0x16e>
 80101c0:	3301      	adds	r3, #1
 80101c2:	440b      	add	r3, r1
 80101c4:	6123      	str	r3, [r4, #16]
 80101c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80101c8:	65a3      	str	r3, [r4, #88]	; 0x58
 80101ca:	f04f 0a00 	mov.w	sl, #0
 80101ce:	e7d9      	b.n	8010184 <_printf_float+0x12c>
 80101d0:	b913      	cbnz	r3, 80101d8 <_printf_float+0x180>
 80101d2:	6822      	ldr	r2, [r4, #0]
 80101d4:	07d0      	lsls	r0, r2, #31
 80101d6:	d501      	bpl.n	80101dc <_printf_float+0x184>
 80101d8:	3302      	adds	r3, #2
 80101da:	e7f3      	b.n	80101c4 <_printf_float+0x16c>
 80101dc:	2301      	movs	r3, #1
 80101de:	e7f1      	b.n	80101c4 <_printf_float+0x16c>
 80101e0:	f04f 0967 	mov.w	r9, #103	; 0x67
 80101e4:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80101e8:	4293      	cmp	r3, r2
 80101ea:	db05      	blt.n	80101f8 <_printf_float+0x1a0>
 80101ec:	6822      	ldr	r2, [r4, #0]
 80101ee:	6123      	str	r3, [r4, #16]
 80101f0:	07d1      	lsls	r1, r2, #31
 80101f2:	d5e8      	bpl.n	80101c6 <_printf_float+0x16e>
 80101f4:	3301      	adds	r3, #1
 80101f6:	e7e5      	b.n	80101c4 <_printf_float+0x16c>
 80101f8:	2b00      	cmp	r3, #0
 80101fa:	bfd4      	ite	le
 80101fc:	f1c3 0302 	rsble	r3, r3, #2
 8010200:	2301      	movgt	r3, #1
 8010202:	4413      	add	r3, r2
 8010204:	e7de      	b.n	80101c4 <_printf_float+0x16c>
 8010206:	6823      	ldr	r3, [r4, #0]
 8010208:	055a      	lsls	r2, r3, #21
 801020a:	d407      	bmi.n	801021c <_printf_float+0x1c4>
 801020c:	6923      	ldr	r3, [r4, #16]
 801020e:	4642      	mov	r2, r8
 8010210:	4631      	mov	r1, r6
 8010212:	4628      	mov	r0, r5
 8010214:	47b8      	blx	r7
 8010216:	3001      	adds	r0, #1
 8010218:	d12a      	bne.n	8010270 <_printf_float+0x218>
 801021a:	e76b      	b.n	80100f4 <_printf_float+0x9c>
 801021c:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8010220:	f240 80de 	bls.w	80103e0 <_printf_float+0x388>
 8010224:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
 8010228:	eeb5 7b40 	vcmp.f64	d7, #0.0
 801022c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010230:	d133      	bne.n	801029a <_printf_float+0x242>
 8010232:	2301      	movs	r3, #1
 8010234:	4a42      	ldr	r2, [pc, #264]	; (8010340 <_printf_float+0x2e8>)
 8010236:	4631      	mov	r1, r6
 8010238:	4628      	mov	r0, r5
 801023a:	47b8      	blx	r7
 801023c:	3001      	adds	r0, #1
 801023e:	f43f af59 	beq.w	80100f4 <_printf_float+0x9c>
 8010242:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8010246:	429a      	cmp	r2, r3
 8010248:	db02      	blt.n	8010250 <_printf_float+0x1f8>
 801024a:	6823      	ldr	r3, [r4, #0]
 801024c:	07d8      	lsls	r0, r3, #31
 801024e:	d50f      	bpl.n	8010270 <_printf_float+0x218>
 8010250:	9b05      	ldr	r3, [sp, #20]
 8010252:	465a      	mov	r2, fp
 8010254:	4631      	mov	r1, r6
 8010256:	4628      	mov	r0, r5
 8010258:	47b8      	blx	r7
 801025a:	3001      	adds	r0, #1
 801025c:	f43f af4a 	beq.w	80100f4 <_printf_float+0x9c>
 8010260:	f04f 0800 	mov.w	r8, #0
 8010264:	f104 091a 	add.w	r9, r4, #26
 8010268:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801026a:	3b01      	subs	r3, #1
 801026c:	4543      	cmp	r3, r8
 801026e:	dc09      	bgt.n	8010284 <_printf_float+0x22c>
 8010270:	6823      	ldr	r3, [r4, #0]
 8010272:	079b      	lsls	r3, r3, #30
 8010274:	f100 8105 	bmi.w	8010482 <_printf_float+0x42a>
 8010278:	68e0      	ldr	r0, [r4, #12]
 801027a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801027c:	4298      	cmp	r0, r3
 801027e:	bfb8      	it	lt
 8010280:	4618      	movlt	r0, r3
 8010282:	e739      	b.n	80100f8 <_printf_float+0xa0>
 8010284:	2301      	movs	r3, #1
 8010286:	464a      	mov	r2, r9
 8010288:	4631      	mov	r1, r6
 801028a:	4628      	mov	r0, r5
 801028c:	47b8      	blx	r7
 801028e:	3001      	adds	r0, #1
 8010290:	f43f af30 	beq.w	80100f4 <_printf_float+0x9c>
 8010294:	f108 0801 	add.w	r8, r8, #1
 8010298:	e7e6      	b.n	8010268 <_printf_float+0x210>
 801029a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801029c:	2b00      	cmp	r3, #0
 801029e:	dc2b      	bgt.n	80102f8 <_printf_float+0x2a0>
 80102a0:	2301      	movs	r3, #1
 80102a2:	4a27      	ldr	r2, [pc, #156]	; (8010340 <_printf_float+0x2e8>)
 80102a4:	4631      	mov	r1, r6
 80102a6:	4628      	mov	r0, r5
 80102a8:	47b8      	blx	r7
 80102aa:	3001      	adds	r0, #1
 80102ac:	f43f af22 	beq.w	80100f4 <_printf_float+0x9c>
 80102b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80102b2:	b923      	cbnz	r3, 80102be <_printf_float+0x266>
 80102b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80102b6:	b913      	cbnz	r3, 80102be <_printf_float+0x266>
 80102b8:	6823      	ldr	r3, [r4, #0]
 80102ba:	07d9      	lsls	r1, r3, #31
 80102bc:	d5d8      	bpl.n	8010270 <_printf_float+0x218>
 80102be:	9b05      	ldr	r3, [sp, #20]
 80102c0:	465a      	mov	r2, fp
 80102c2:	4631      	mov	r1, r6
 80102c4:	4628      	mov	r0, r5
 80102c6:	47b8      	blx	r7
 80102c8:	3001      	adds	r0, #1
 80102ca:	f43f af13 	beq.w	80100f4 <_printf_float+0x9c>
 80102ce:	f04f 0900 	mov.w	r9, #0
 80102d2:	f104 0a1a 	add.w	sl, r4, #26
 80102d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80102d8:	425b      	negs	r3, r3
 80102da:	454b      	cmp	r3, r9
 80102dc:	dc01      	bgt.n	80102e2 <_printf_float+0x28a>
 80102de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80102e0:	e795      	b.n	801020e <_printf_float+0x1b6>
 80102e2:	2301      	movs	r3, #1
 80102e4:	4652      	mov	r2, sl
 80102e6:	4631      	mov	r1, r6
 80102e8:	4628      	mov	r0, r5
 80102ea:	47b8      	blx	r7
 80102ec:	3001      	adds	r0, #1
 80102ee:	f43f af01 	beq.w	80100f4 <_printf_float+0x9c>
 80102f2:	f109 0901 	add.w	r9, r9, #1
 80102f6:	e7ee      	b.n	80102d6 <_printf_float+0x27e>
 80102f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80102fa:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80102fc:	429a      	cmp	r2, r3
 80102fe:	bfa8      	it	ge
 8010300:	461a      	movge	r2, r3
 8010302:	2a00      	cmp	r2, #0
 8010304:	4691      	mov	r9, r2
 8010306:	dd07      	ble.n	8010318 <_printf_float+0x2c0>
 8010308:	4613      	mov	r3, r2
 801030a:	4631      	mov	r1, r6
 801030c:	4642      	mov	r2, r8
 801030e:	4628      	mov	r0, r5
 8010310:	47b8      	blx	r7
 8010312:	3001      	adds	r0, #1
 8010314:	f43f aeee 	beq.w	80100f4 <_printf_float+0x9c>
 8010318:	f104 031a 	add.w	r3, r4, #26
 801031c:	f04f 0a00 	mov.w	sl, #0
 8010320:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8010324:	9307      	str	r3, [sp, #28]
 8010326:	e017      	b.n	8010358 <_printf_float+0x300>
 8010328:	ffffffff 	.word	0xffffffff
 801032c:	7fefffff 	.word	0x7fefffff
 8010330:	08017087 	.word	0x08017087
 8010334:	08016a10 	.word	0x08016a10
 8010338:	08016a18 	.word	0x08016a18
 801033c:	08016a14 	.word	0x08016a14
 8010340:	08016a1c 	.word	0x08016a1c
 8010344:	2301      	movs	r3, #1
 8010346:	9a07      	ldr	r2, [sp, #28]
 8010348:	4631      	mov	r1, r6
 801034a:	4628      	mov	r0, r5
 801034c:	47b8      	blx	r7
 801034e:	3001      	adds	r0, #1
 8010350:	f43f aed0 	beq.w	80100f4 <_printf_float+0x9c>
 8010354:	f10a 0a01 	add.w	sl, sl, #1
 8010358:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801035a:	9306      	str	r3, [sp, #24]
 801035c:	eba3 0309 	sub.w	r3, r3, r9
 8010360:	4553      	cmp	r3, sl
 8010362:	dcef      	bgt.n	8010344 <_printf_float+0x2ec>
 8010364:	9b06      	ldr	r3, [sp, #24]
 8010366:	4498      	add	r8, r3
 8010368:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801036c:	429a      	cmp	r2, r3
 801036e:	db15      	blt.n	801039c <_printf_float+0x344>
 8010370:	6823      	ldr	r3, [r4, #0]
 8010372:	07da      	lsls	r2, r3, #31
 8010374:	d412      	bmi.n	801039c <_printf_float+0x344>
 8010376:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010378:	9a06      	ldr	r2, [sp, #24]
 801037a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801037c:	1a9a      	subs	r2, r3, r2
 801037e:	eba3 0a01 	sub.w	sl, r3, r1
 8010382:	4592      	cmp	sl, r2
 8010384:	bfa8      	it	ge
 8010386:	4692      	movge	sl, r2
 8010388:	f1ba 0f00 	cmp.w	sl, #0
 801038c:	dc0e      	bgt.n	80103ac <_printf_float+0x354>
 801038e:	f04f 0800 	mov.w	r8, #0
 8010392:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8010396:	f104 091a 	add.w	r9, r4, #26
 801039a:	e019      	b.n	80103d0 <_printf_float+0x378>
 801039c:	9b05      	ldr	r3, [sp, #20]
 801039e:	465a      	mov	r2, fp
 80103a0:	4631      	mov	r1, r6
 80103a2:	4628      	mov	r0, r5
 80103a4:	47b8      	blx	r7
 80103a6:	3001      	adds	r0, #1
 80103a8:	d1e5      	bne.n	8010376 <_printf_float+0x31e>
 80103aa:	e6a3      	b.n	80100f4 <_printf_float+0x9c>
 80103ac:	4653      	mov	r3, sl
 80103ae:	4642      	mov	r2, r8
 80103b0:	4631      	mov	r1, r6
 80103b2:	4628      	mov	r0, r5
 80103b4:	47b8      	blx	r7
 80103b6:	3001      	adds	r0, #1
 80103b8:	d1e9      	bne.n	801038e <_printf_float+0x336>
 80103ba:	e69b      	b.n	80100f4 <_printf_float+0x9c>
 80103bc:	2301      	movs	r3, #1
 80103be:	464a      	mov	r2, r9
 80103c0:	4631      	mov	r1, r6
 80103c2:	4628      	mov	r0, r5
 80103c4:	47b8      	blx	r7
 80103c6:	3001      	adds	r0, #1
 80103c8:	f43f ae94 	beq.w	80100f4 <_printf_float+0x9c>
 80103cc:	f108 0801 	add.w	r8, r8, #1
 80103d0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80103d4:	1a9b      	subs	r3, r3, r2
 80103d6:	eba3 030a 	sub.w	r3, r3, sl
 80103da:	4543      	cmp	r3, r8
 80103dc:	dcee      	bgt.n	80103bc <_printf_float+0x364>
 80103de:	e747      	b.n	8010270 <_printf_float+0x218>
 80103e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80103e2:	2a01      	cmp	r2, #1
 80103e4:	dc01      	bgt.n	80103ea <_printf_float+0x392>
 80103e6:	07db      	lsls	r3, r3, #31
 80103e8:	d539      	bpl.n	801045e <_printf_float+0x406>
 80103ea:	2301      	movs	r3, #1
 80103ec:	4642      	mov	r2, r8
 80103ee:	4631      	mov	r1, r6
 80103f0:	4628      	mov	r0, r5
 80103f2:	47b8      	blx	r7
 80103f4:	3001      	adds	r0, #1
 80103f6:	f43f ae7d 	beq.w	80100f4 <_printf_float+0x9c>
 80103fa:	9b05      	ldr	r3, [sp, #20]
 80103fc:	465a      	mov	r2, fp
 80103fe:	4631      	mov	r1, r6
 8010400:	4628      	mov	r0, r5
 8010402:	47b8      	blx	r7
 8010404:	3001      	adds	r0, #1
 8010406:	f108 0801 	add.w	r8, r8, #1
 801040a:	f43f ae73 	beq.w	80100f4 <_printf_float+0x9c>
 801040e:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
 8010412:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010414:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8010418:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801041c:	f103 33ff 	add.w	r3, r3, #4294967295
 8010420:	d018      	beq.n	8010454 <_printf_float+0x3fc>
 8010422:	4642      	mov	r2, r8
 8010424:	4631      	mov	r1, r6
 8010426:	4628      	mov	r0, r5
 8010428:	47b8      	blx	r7
 801042a:	3001      	adds	r0, #1
 801042c:	d10e      	bne.n	801044c <_printf_float+0x3f4>
 801042e:	e661      	b.n	80100f4 <_printf_float+0x9c>
 8010430:	2301      	movs	r3, #1
 8010432:	464a      	mov	r2, r9
 8010434:	4631      	mov	r1, r6
 8010436:	4628      	mov	r0, r5
 8010438:	47b8      	blx	r7
 801043a:	3001      	adds	r0, #1
 801043c:	f43f ae5a 	beq.w	80100f4 <_printf_float+0x9c>
 8010440:	f108 0801 	add.w	r8, r8, #1
 8010444:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010446:	3b01      	subs	r3, #1
 8010448:	4543      	cmp	r3, r8
 801044a:	dcf1      	bgt.n	8010430 <_printf_float+0x3d8>
 801044c:	4653      	mov	r3, sl
 801044e:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8010452:	e6dd      	b.n	8010210 <_printf_float+0x1b8>
 8010454:	f04f 0800 	mov.w	r8, #0
 8010458:	f104 091a 	add.w	r9, r4, #26
 801045c:	e7f2      	b.n	8010444 <_printf_float+0x3ec>
 801045e:	2301      	movs	r3, #1
 8010460:	e7df      	b.n	8010422 <_printf_float+0x3ca>
 8010462:	2301      	movs	r3, #1
 8010464:	464a      	mov	r2, r9
 8010466:	4631      	mov	r1, r6
 8010468:	4628      	mov	r0, r5
 801046a:	47b8      	blx	r7
 801046c:	3001      	adds	r0, #1
 801046e:	f43f ae41 	beq.w	80100f4 <_printf_float+0x9c>
 8010472:	f108 0801 	add.w	r8, r8, #1
 8010476:	68e3      	ldr	r3, [r4, #12]
 8010478:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801047a:	1a9b      	subs	r3, r3, r2
 801047c:	4543      	cmp	r3, r8
 801047e:	dcf0      	bgt.n	8010462 <_printf_float+0x40a>
 8010480:	e6fa      	b.n	8010278 <_printf_float+0x220>
 8010482:	f04f 0800 	mov.w	r8, #0
 8010486:	f104 0919 	add.w	r9, r4, #25
 801048a:	e7f4      	b.n	8010476 <_printf_float+0x41e>
 801048c:	2900      	cmp	r1, #0
 801048e:	f43f ae8a 	beq.w	80101a6 <_printf_float+0x14e>
 8010492:	f04f 0c00 	mov.w	ip, #0
 8010496:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801049a:	e9cd 0900 	strd	r0, r9, [sp]
 801049e:	6022      	str	r2, [r4, #0]
 80104a0:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80104a4:	4628      	mov	r0, r5
 80104a6:	f7ff fd51 	bl	800ff4c <__cvt>
 80104aa:	4680      	mov	r8, r0
 80104ac:	e64a      	b.n	8010144 <_printf_float+0xec>
 80104ae:	bf00      	nop

080104b0 <_printf_common>:
 80104b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80104b4:	4691      	mov	r9, r2
 80104b6:	461f      	mov	r7, r3
 80104b8:	688a      	ldr	r2, [r1, #8]
 80104ba:	690b      	ldr	r3, [r1, #16]
 80104bc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80104c0:	4293      	cmp	r3, r2
 80104c2:	bfb8      	it	lt
 80104c4:	4613      	movlt	r3, r2
 80104c6:	f8c9 3000 	str.w	r3, [r9]
 80104ca:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80104ce:	4606      	mov	r6, r0
 80104d0:	460c      	mov	r4, r1
 80104d2:	b112      	cbz	r2, 80104da <_printf_common+0x2a>
 80104d4:	3301      	adds	r3, #1
 80104d6:	f8c9 3000 	str.w	r3, [r9]
 80104da:	6823      	ldr	r3, [r4, #0]
 80104dc:	0699      	lsls	r1, r3, #26
 80104de:	bf42      	ittt	mi
 80104e0:	f8d9 3000 	ldrmi.w	r3, [r9]
 80104e4:	3302      	addmi	r3, #2
 80104e6:	f8c9 3000 	strmi.w	r3, [r9]
 80104ea:	6825      	ldr	r5, [r4, #0]
 80104ec:	f015 0506 	ands.w	r5, r5, #6
 80104f0:	d107      	bne.n	8010502 <_printf_common+0x52>
 80104f2:	f104 0a19 	add.w	sl, r4, #25
 80104f6:	68e3      	ldr	r3, [r4, #12]
 80104f8:	f8d9 2000 	ldr.w	r2, [r9]
 80104fc:	1a9b      	subs	r3, r3, r2
 80104fe:	42ab      	cmp	r3, r5
 8010500:	dc28      	bgt.n	8010554 <_printf_common+0xa4>
 8010502:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8010506:	6822      	ldr	r2, [r4, #0]
 8010508:	3300      	adds	r3, #0
 801050a:	bf18      	it	ne
 801050c:	2301      	movne	r3, #1
 801050e:	0692      	lsls	r2, r2, #26
 8010510:	d42d      	bmi.n	801056e <_printf_common+0xbe>
 8010512:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8010516:	4639      	mov	r1, r7
 8010518:	4630      	mov	r0, r6
 801051a:	47c0      	blx	r8
 801051c:	3001      	adds	r0, #1
 801051e:	d020      	beq.n	8010562 <_printf_common+0xb2>
 8010520:	6823      	ldr	r3, [r4, #0]
 8010522:	68e5      	ldr	r5, [r4, #12]
 8010524:	f8d9 2000 	ldr.w	r2, [r9]
 8010528:	f003 0306 	and.w	r3, r3, #6
 801052c:	2b04      	cmp	r3, #4
 801052e:	bf08      	it	eq
 8010530:	1aad      	subeq	r5, r5, r2
 8010532:	68a3      	ldr	r3, [r4, #8]
 8010534:	6922      	ldr	r2, [r4, #16]
 8010536:	bf0c      	ite	eq
 8010538:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801053c:	2500      	movne	r5, #0
 801053e:	4293      	cmp	r3, r2
 8010540:	bfc4      	itt	gt
 8010542:	1a9b      	subgt	r3, r3, r2
 8010544:	18ed      	addgt	r5, r5, r3
 8010546:	f04f 0900 	mov.w	r9, #0
 801054a:	341a      	adds	r4, #26
 801054c:	454d      	cmp	r5, r9
 801054e:	d11a      	bne.n	8010586 <_printf_common+0xd6>
 8010550:	2000      	movs	r0, #0
 8010552:	e008      	b.n	8010566 <_printf_common+0xb6>
 8010554:	2301      	movs	r3, #1
 8010556:	4652      	mov	r2, sl
 8010558:	4639      	mov	r1, r7
 801055a:	4630      	mov	r0, r6
 801055c:	47c0      	blx	r8
 801055e:	3001      	adds	r0, #1
 8010560:	d103      	bne.n	801056a <_printf_common+0xba>
 8010562:	f04f 30ff 	mov.w	r0, #4294967295
 8010566:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801056a:	3501      	adds	r5, #1
 801056c:	e7c3      	b.n	80104f6 <_printf_common+0x46>
 801056e:	18e1      	adds	r1, r4, r3
 8010570:	1c5a      	adds	r2, r3, #1
 8010572:	2030      	movs	r0, #48	; 0x30
 8010574:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8010578:	4422      	add	r2, r4
 801057a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801057e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8010582:	3302      	adds	r3, #2
 8010584:	e7c5      	b.n	8010512 <_printf_common+0x62>
 8010586:	2301      	movs	r3, #1
 8010588:	4622      	mov	r2, r4
 801058a:	4639      	mov	r1, r7
 801058c:	4630      	mov	r0, r6
 801058e:	47c0      	blx	r8
 8010590:	3001      	adds	r0, #1
 8010592:	d0e6      	beq.n	8010562 <_printf_common+0xb2>
 8010594:	f109 0901 	add.w	r9, r9, #1
 8010598:	e7d8      	b.n	801054c <_printf_common+0x9c>
	...

0801059c <_printf_i>:
 801059c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80105a0:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80105a4:	460c      	mov	r4, r1
 80105a6:	7e09      	ldrb	r1, [r1, #24]
 80105a8:	b085      	sub	sp, #20
 80105aa:	296e      	cmp	r1, #110	; 0x6e
 80105ac:	4617      	mov	r7, r2
 80105ae:	4606      	mov	r6, r0
 80105b0:	4698      	mov	r8, r3
 80105b2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80105b4:	f000 80b3 	beq.w	801071e <_printf_i+0x182>
 80105b8:	d822      	bhi.n	8010600 <_printf_i+0x64>
 80105ba:	2963      	cmp	r1, #99	; 0x63
 80105bc:	d036      	beq.n	801062c <_printf_i+0x90>
 80105be:	d80a      	bhi.n	80105d6 <_printf_i+0x3a>
 80105c0:	2900      	cmp	r1, #0
 80105c2:	f000 80b9 	beq.w	8010738 <_printf_i+0x19c>
 80105c6:	2958      	cmp	r1, #88	; 0x58
 80105c8:	f000 8083 	beq.w	80106d2 <_printf_i+0x136>
 80105cc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80105d0:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 80105d4:	e032      	b.n	801063c <_printf_i+0xa0>
 80105d6:	2964      	cmp	r1, #100	; 0x64
 80105d8:	d001      	beq.n	80105de <_printf_i+0x42>
 80105da:	2969      	cmp	r1, #105	; 0x69
 80105dc:	d1f6      	bne.n	80105cc <_printf_i+0x30>
 80105de:	6820      	ldr	r0, [r4, #0]
 80105e0:	6813      	ldr	r3, [r2, #0]
 80105e2:	0605      	lsls	r5, r0, #24
 80105e4:	f103 0104 	add.w	r1, r3, #4
 80105e8:	d52a      	bpl.n	8010640 <_printf_i+0xa4>
 80105ea:	681b      	ldr	r3, [r3, #0]
 80105ec:	6011      	str	r1, [r2, #0]
 80105ee:	2b00      	cmp	r3, #0
 80105f0:	da03      	bge.n	80105fa <_printf_i+0x5e>
 80105f2:	222d      	movs	r2, #45	; 0x2d
 80105f4:	425b      	negs	r3, r3
 80105f6:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80105fa:	486f      	ldr	r0, [pc, #444]	; (80107b8 <_printf_i+0x21c>)
 80105fc:	220a      	movs	r2, #10
 80105fe:	e039      	b.n	8010674 <_printf_i+0xd8>
 8010600:	2973      	cmp	r1, #115	; 0x73
 8010602:	f000 809d 	beq.w	8010740 <_printf_i+0x1a4>
 8010606:	d808      	bhi.n	801061a <_printf_i+0x7e>
 8010608:	296f      	cmp	r1, #111	; 0x6f
 801060a:	d020      	beq.n	801064e <_printf_i+0xb2>
 801060c:	2970      	cmp	r1, #112	; 0x70
 801060e:	d1dd      	bne.n	80105cc <_printf_i+0x30>
 8010610:	6823      	ldr	r3, [r4, #0]
 8010612:	f043 0320 	orr.w	r3, r3, #32
 8010616:	6023      	str	r3, [r4, #0]
 8010618:	e003      	b.n	8010622 <_printf_i+0x86>
 801061a:	2975      	cmp	r1, #117	; 0x75
 801061c:	d017      	beq.n	801064e <_printf_i+0xb2>
 801061e:	2978      	cmp	r1, #120	; 0x78
 8010620:	d1d4      	bne.n	80105cc <_printf_i+0x30>
 8010622:	2378      	movs	r3, #120	; 0x78
 8010624:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8010628:	4864      	ldr	r0, [pc, #400]	; (80107bc <_printf_i+0x220>)
 801062a:	e055      	b.n	80106d8 <_printf_i+0x13c>
 801062c:	6813      	ldr	r3, [r2, #0]
 801062e:	1d19      	adds	r1, r3, #4
 8010630:	681b      	ldr	r3, [r3, #0]
 8010632:	6011      	str	r1, [r2, #0]
 8010634:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8010638:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801063c:	2301      	movs	r3, #1
 801063e:	e08c      	b.n	801075a <_printf_i+0x1be>
 8010640:	681b      	ldr	r3, [r3, #0]
 8010642:	6011      	str	r1, [r2, #0]
 8010644:	f010 0f40 	tst.w	r0, #64	; 0x40
 8010648:	bf18      	it	ne
 801064a:	b21b      	sxthne	r3, r3
 801064c:	e7cf      	b.n	80105ee <_printf_i+0x52>
 801064e:	6813      	ldr	r3, [r2, #0]
 8010650:	6825      	ldr	r5, [r4, #0]
 8010652:	1d18      	adds	r0, r3, #4
 8010654:	6010      	str	r0, [r2, #0]
 8010656:	0628      	lsls	r0, r5, #24
 8010658:	d501      	bpl.n	801065e <_printf_i+0xc2>
 801065a:	681b      	ldr	r3, [r3, #0]
 801065c:	e002      	b.n	8010664 <_printf_i+0xc8>
 801065e:	0668      	lsls	r0, r5, #25
 8010660:	d5fb      	bpl.n	801065a <_printf_i+0xbe>
 8010662:	881b      	ldrh	r3, [r3, #0]
 8010664:	4854      	ldr	r0, [pc, #336]	; (80107b8 <_printf_i+0x21c>)
 8010666:	296f      	cmp	r1, #111	; 0x6f
 8010668:	bf14      	ite	ne
 801066a:	220a      	movne	r2, #10
 801066c:	2208      	moveq	r2, #8
 801066e:	2100      	movs	r1, #0
 8010670:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8010674:	6865      	ldr	r5, [r4, #4]
 8010676:	60a5      	str	r5, [r4, #8]
 8010678:	2d00      	cmp	r5, #0
 801067a:	f2c0 8095 	blt.w	80107a8 <_printf_i+0x20c>
 801067e:	6821      	ldr	r1, [r4, #0]
 8010680:	f021 0104 	bic.w	r1, r1, #4
 8010684:	6021      	str	r1, [r4, #0]
 8010686:	2b00      	cmp	r3, #0
 8010688:	d13d      	bne.n	8010706 <_printf_i+0x16a>
 801068a:	2d00      	cmp	r5, #0
 801068c:	f040 808e 	bne.w	80107ac <_printf_i+0x210>
 8010690:	4665      	mov	r5, ip
 8010692:	2a08      	cmp	r2, #8
 8010694:	d10b      	bne.n	80106ae <_printf_i+0x112>
 8010696:	6823      	ldr	r3, [r4, #0]
 8010698:	07db      	lsls	r3, r3, #31
 801069a:	d508      	bpl.n	80106ae <_printf_i+0x112>
 801069c:	6923      	ldr	r3, [r4, #16]
 801069e:	6862      	ldr	r2, [r4, #4]
 80106a0:	429a      	cmp	r2, r3
 80106a2:	bfde      	ittt	le
 80106a4:	2330      	movle	r3, #48	; 0x30
 80106a6:	f805 3c01 	strble.w	r3, [r5, #-1]
 80106aa:	f105 35ff 	addle.w	r5, r5, #4294967295
 80106ae:	ebac 0305 	sub.w	r3, ip, r5
 80106b2:	6123      	str	r3, [r4, #16]
 80106b4:	f8cd 8000 	str.w	r8, [sp]
 80106b8:	463b      	mov	r3, r7
 80106ba:	aa03      	add	r2, sp, #12
 80106bc:	4621      	mov	r1, r4
 80106be:	4630      	mov	r0, r6
 80106c0:	f7ff fef6 	bl	80104b0 <_printf_common>
 80106c4:	3001      	adds	r0, #1
 80106c6:	d14d      	bne.n	8010764 <_printf_i+0x1c8>
 80106c8:	f04f 30ff 	mov.w	r0, #4294967295
 80106cc:	b005      	add	sp, #20
 80106ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80106d2:	4839      	ldr	r0, [pc, #228]	; (80107b8 <_printf_i+0x21c>)
 80106d4:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 80106d8:	6813      	ldr	r3, [r2, #0]
 80106da:	6821      	ldr	r1, [r4, #0]
 80106dc:	1d1d      	adds	r5, r3, #4
 80106de:	681b      	ldr	r3, [r3, #0]
 80106e0:	6015      	str	r5, [r2, #0]
 80106e2:	060a      	lsls	r2, r1, #24
 80106e4:	d50b      	bpl.n	80106fe <_printf_i+0x162>
 80106e6:	07ca      	lsls	r2, r1, #31
 80106e8:	bf44      	itt	mi
 80106ea:	f041 0120 	orrmi.w	r1, r1, #32
 80106ee:	6021      	strmi	r1, [r4, #0]
 80106f0:	b91b      	cbnz	r3, 80106fa <_printf_i+0x15e>
 80106f2:	6822      	ldr	r2, [r4, #0]
 80106f4:	f022 0220 	bic.w	r2, r2, #32
 80106f8:	6022      	str	r2, [r4, #0]
 80106fa:	2210      	movs	r2, #16
 80106fc:	e7b7      	b.n	801066e <_printf_i+0xd2>
 80106fe:	064d      	lsls	r5, r1, #25
 8010700:	bf48      	it	mi
 8010702:	b29b      	uxthmi	r3, r3
 8010704:	e7ef      	b.n	80106e6 <_printf_i+0x14a>
 8010706:	4665      	mov	r5, ip
 8010708:	fbb3 f1f2 	udiv	r1, r3, r2
 801070c:	fb02 3311 	mls	r3, r2, r1, r3
 8010710:	5cc3      	ldrb	r3, [r0, r3]
 8010712:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8010716:	460b      	mov	r3, r1
 8010718:	2900      	cmp	r1, #0
 801071a:	d1f5      	bne.n	8010708 <_printf_i+0x16c>
 801071c:	e7b9      	b.n	8010692 <_printf_i+0xf6>
 801071e:	6813      	ldr	r3, [r2, #0]
 8010720:	6825      	ldr	r5, [r4, #0]
 8010722:	6961      	ldr	r1, [r4, #20]
 8010724:	1d18      	adds	r0, r3, #4
 8010726:	6010      	str	r0, [r2, #0]
 8010728:	0628      	lsls	r0, r5, #24
 801072a:	681b      	ldr	r3, [r3, #0]
 801072c:	d501      	bpl.n	8010732 <_printf_i+0x196>
 801072e:	6019      	str	r1, [r3, #0]
 8010730:	e002      	b.n	8010738 <_printf_i+0x19c>
 8010732:	066a      	lsls	r2, r5, #25
 8010734:	d5fb      	bpl.n	801072e <_printf_i+0x192>
 8010736:	8019      	strh	r1, [r3, #0]
 8010738:	2300      	movs	r3, #0
 801073a:	6123      	str	r3, [r4, #16]
 801073c:	4665      	mov	r5, ip
 801073e:	e7b9      	b.n	80106b4 <_printf_i+0x118>
 8010740:	6813      	ldr	r3, [r2, #0]
 8010742:	1d19      	adds	r1, r3, #4
 8010744:	6011      	str	r1, [r2, #0]
 8010746:	681d      	ldr	r5, [r3, #0]
 8010748:	6862      	ldr	r2, [r4, #4]
 801074a:	2100      	movs	r1, #0
 801074c:	4628      	mov	r0, r5
 801074e:	f7f6 fb97 	bl	8006e80 <memchr>
 8010752:	b108      	cbz	r0, 8010758 <_printf_i+0x1bc>
 8010754:	1b40      	subs	r0, r0, r5
 8010756:	6060      	str	r0, [r4, #4]
 8010758:	6863      	ldr	r3, [r4, #4]
 801075a:	6123      	str	r3, [r4, #16]
 801075c:	2300      	movs	r3, #0
 801075e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8010762:	e7a7      	b.n	80106b4 <_printf_i+0x118>
 8010764:	6923      	ldr	r3, [r4, #16]
 8010766:	462a      	mov	r2, r5
 8010768:	4639      	mov	r1, r7
 801076a:	4630      	mov	r0, r6
 801076c:	47c0      	blx	r8
 801076e:	3001      	adds	r0, #1
 8010770:	d0aa      	beq.n	80106c8 <_printf_i+0x12c>
 8010772:	6823      	ldr	r3, [r4, #0]
 8010774:	079b      	lsls	r3, r3, #30
 8010776:	d413      	bmi.n	80107a0 <_printf_i+0x204>
 8010778:	68e0      	ldr	r0, [r4, #12]
 801077a:	9b03      	ldr	r3, [sp, #12]
 801077c:	4298      	cmp	r0, r3
 801077e:	bfb8      	it	lt
 8010780:	4618      	movlt	r0, r3
 8010782:	e7a3      	b.n	80106cc <_printf_i+0x130>
 8010784:	2301      	movs	r3, #1
 8010786:	464a      	mov	r2, r9
 8010788:	4639      	mov	r1, r7
 801078a:	4630      	mov	r0, r6
 801078c:	47c0      	blx	r8
 801078e:	3001      	adds	r0, #1
 8010790:	d09a      	beq.n	80106c8 <_printf_i+0x12c>
 8010792:	3501      	adds	r5, #1
 8010794:	68e3      	ldr	r3, [r4, #12]
 8010796:	9a03      	ldr	r2, [sp, #12]
 8010798:	1a9b      	subs	r3, r3, r2
 801079a:	42ab      	cmp	r3, r5
 801079c:	dcf2      	bgt.n	8010784 <_printf_i+0x1e8>
 801079e:	e7eb      	b.n	8010778 <_printf_i+0x1dc>
 80107a0:	2500      	movs	r5, #0
 80107a2:	f104 0919 	add.w	r9, r4, #25
 80107a6:	e7f5      	b.n	8010794 <_printf_i+0x1f8>
 80107a8:	2b00      	cmp	r3, #0
 80107aa:	d1ac      	bne.n	8010706 <_printf_i+0x16a>
 80107ac:	7803      	ldrb	r3, [r0, #0]
 80107ae:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80107b2:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80107b6:	e76c      	b.n	8010692 <_printf_i+0xf6>
 80107b8:	08016a1e 	.word	0x08016a1e
 80107bc:	08016a2f 	.word	0x08016a2f

080107c0 <iprintf>:
 80107c0:	b40f      	push	{r0, r1, r2, r3}
 80107c2:	4b0a      	ldr	r3, [pc, #40]	; (80107ec <iprintf+0x2c>)
 80107c4:	b513      	push	{r0, r1, r4, lr}
 80107c6:	681c      	ldr	r4, [r3, #0]
 80107c8:	b124      	cbz	r4, 80107d4 <iprintf+0x14>
 80107ca:	69a3      	ldr	r3, [r4, #24]
 80107cc:	b913      	cbnz	r3, 80107d4 <iprintf+0x14>
 80107ce:	4620      	mov	r0, r4
 80107d0:	f001 f826 	bl	8011820 <__sinit>
 80107d4:	ab05      	add	r3, sp, #20
 80107d6:	9a04      	ldr	r2, [sp, #16]
 80107d8:	68a1      	ldr	r1, [r4, #8]
 80107da:	9301      	str	r3, [sp, #4]
 80107dc:	4620      	mov	r0, r4
 80107de:	f001 fc57 	bl	8012090 <_vfiprintf_r>
 80107e2:	b002      	add	sp, #8
 80107e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80107e8:	b004      	add	sp, #16
 80107ea:	4770      	bx	lr
 80107ec:	200006c8 	.word	0x200006c8

080107f0 <_puts_r>:
 80107f0:	b570      	push	{r4, r5, r6, lr}
 80107f2:	460e      	mov	r6, r1
 80107f4:	4605      	mov	r5, r0
 80107f6:	b118      	cbz	r0, 8010800 <_puts_r+0x10>
 80107f8:	6983      	ldr	r3, [r0, #24]
 80107fa:	b90b      	cbnz	r3, 8010800 <_puts_r+0x10>
 80107fc:	f001 f810 	bl	8011820 <__sinit>
 8010800:	69ab      	ldr	r3, [r5, #24]
 8010802:	68ac      	ldr	r4, [r5, #8]
 8010804:	b913      	cbnz	r3, 801080c <_puts_r+0x1c>
 8010806:	4628      	mov	r0, r5
 8010808:	f001 f80a 	bl	8011820 <__sinit>
 801080c:	4b23      	ldr	r3, [pc, #140]	; (801089c <_puts_r+0xac>)
 801080e:	429c      	cmp	r4, r3
 8010810:	d117      	bne.n	8010842 <_puts_r+0x52>
 8010812:	686c      	ldr	r4, [r5, #4]
 8010814:	89a3      	ldrh	r3, [r4, #12]
 8010816:	071b      	lsls	r3, r3, #28
 8010818:	d51d      	bpl.n	8010856 <_puts_r+0x66>
 801081a:	6923      	ldr	r3, [r4, #16]
 801081c:	b1db      	cbz	r3, 8010856 <_puts_r+0x66>
 801081e:	3e01      	subs	r6, #1
 8010820:	68a3      	ldr	r3, [r4, #8]
 8010822:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8010826:	3b01      	subs	r3, #1
 8010828:	60a3      	str	r3, [r4, #8]
 801082a:	b9e9      	cbnz	r1, 8010868 <_puts_r+0x78>
 801082c:	2b00      	cmp	r3, #0
 801082e:	da2e      	bge.n	801088e <_puts_r+0x9e>
 8010830:	4622      	mov	r2, r4
 8010832:	210a      	movs	r1, #10
 8010834:	4628      	mov	r0, r5
 8010836:	f000 f869 	bl	801090c <__swbuf_r>
 801083a:	3001      	adds	r0, #1
 801083c:	d011      	beq.n	8010862 <_puts_r+0x72>
 801083e:	200a      	movs	r0, #10
 8010840:	e011      	b.n	8010866 <_puts_r+0x76>
 8010842:	4b17      	ldr	r3, [pc, #92]	; (80108a0 <_puts_r+0xb0>)
 8010844:	429c      	cmp	r4, r3
 8010846:	d101      	bne.n	801084c <_puts_r+0x5c>
 8010848:	68ac      	ldr	r4, [r5, #8]
 801084a:	e7e3      	b.n	8010814 <_puts_r+0x24>
 801084c:	4b15      	ldr	r3, [pc, #84]	; (80108a4 <_puts_r+0xb4>)
 801084e:	429c      	cmp	r4, r3
 8010850:	bf08      	it	eq
 8010852:	68ec      	ldreq	r4, [r5, #12]
 8010854:	e7de      	b.n	8010814 <_puts_r+0x24>
 8010856:	4621      	mov	r1, r4
 8010858:	4628      	mov	r0, r5
 801085a:	f000 f8a9 	bl	80109b0 <__swsetup_r>
 801085e:	2800      	cmp	r0, #0
 8010860:	d0dd      	beq.n	801081e <_puts_r+0x2e>
 8010862:	f04f 30ff 	mov.w	r0, #4294967295
 8010866:	bd70      	pop	{r4, r5, r6, pc}
 8010868:	2b00      	cmp	r3, #0
 801086a:	da04      	bge.n	8010876 <_puts_r+0x86>
 801086c:	69a2      	ldr	r2, [r4, #24]
 801086e:	429a      	cmp	r2, r3
 8010870:	dc06      	bgt.n	8010880 <_puts_r+0x90>
 8010872:	290a      	cmp	r1, #10
 8010874:	d004      	beq.n	8010880 <_puts_r+0x90>
 8010876:	6823      	ldr	r3, [r4, #0]
 8010878:	1c5a      	adds	r2, r3, #1
 801087a:	6022      	str	r2, [r4, #0]
 801087c:	7019      	strb	r1, [r3, #0]
 801087e:	e7cf      	b.n	8010820 <_puts_r+0x30>
 8010880:	4622      	mov	r2, r4
 8010882:	4628      	mov	r0, r5
 8010884:	f000 f842 	bl	801090c <__swbuf_r>
 8010888:	3001      	adds	r0, #1
 801088a:	d1c9      	bne.n	8010820 <_puts_r+0x30>
 801088c:	e7e9      	b.n	8010862 <_puts_r+0x72>
 801088e:	6823      	ldr	r3, [r4, #0]
 8010890:	200a      	movs	r0, #10
 8010892:	1c5a      	adds	r2, r3, #1
 8010894:	6022      	str	r2, [r4, #0]
 8010896:	7018      	strb	r0, [r3, #0]
 8010898:	e7e5      	b.n	8010866 <_puts_r+0x76>
 801089a:	bf00      	nop
 801089c:	08016a70 	.word	0x08016a70
 80108a0:	08016a90 	.word	0x08016a90
 80108a4:	08016a50 	.word	0x08016a50

080108a8 <puts>:
 80108a8:	4b02      	ldr	r3, [pc, #8]	; (80108b4 <puts+0xc>)
 80108aa:	4601      	mov	r1, r0
 80108ac:	6818      	ldr	r0, [r3, #0]
 80108ae:	f7ff bf9f 	b.w	80107f0 <_puts_r>
 80108b2:	bf00      	nop
 80108b4:	200006c8 	.word	0x200006c8

080108b8 <realloc>:
 80108b8:	4b02      	ldr	r3, [pc, #8]	; (80108c4 <realloc+0xc>)
 80108ba:	460a      	mov	r2, r1
 80108bc:	4601      	mov	r1, r0
 80108be:	6818      	ldr	r0, [r3, #0]
 80108c0:	f001 bb96 	b.w	8011ff0 <_realloc_r>
 80108c4:	200006c8 	.word	0x200006c8

080108c8 <_sbrk_r>:
 80108c8:	b538      	push	{r3, r4, r5, lr}
 80108ca:	4c06      	ldr	r4, [pc, #24]	; (80108e4 <_sbrk_r+0x1c>)
 80108cc:	2300      	movs	r3, #0
 80108ce:	4605      	mov	r5, r0
 80108d0:	4608      	mov	r0, r1
 80108d2:	6023      	str	r3, [r4, #0]
 80108d4:	f7f7 fa56 	bl	8007d84 <_sbrk>
 80108d8:	1c43      	adds	r3, r0, #1
 80108da:	d102      	bne.n	80108e2 <_sbrk_r+0x1a>
 80108dc:	6823      	ldr	r3, [r4, #0]
 80108de:	b103      	cbz	r3, 80108e2 <_sbrk_r+0x1a>
 80108e0:	602b      	str	r3, [r5, #0]
 80108e2:	bd38      	pop	{r3, r4, r5, pc}
 80108e4:	20000e20 	.word	0x20000e20

080108e8 <strncmp>:
 80108e8:	b510      	push	{r4, lr}
 80108ea:	b16a      	cbz	r2, 8010908 <strncmp+0x20>
 80108ec:	3901      	subs	r1, #1
 80108ee:	1884      	adds	r4, r0, r2
 80108f0:	f810 3b01 	ldrb.w	r3, [r0], #1
 80108f4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80108f8:	4293      	cmp	r3, r2
 80108fa:	d103      	bne.n	8010904 <strncmp+0x1c>
 80108fc:	42a0      	cmp	r0, r4
 80108fe:	d001      	beq.n	8010904 <strncmp+0x1c>
 8010900:	2b00      	cmp	r3, #0
 8010902:	d1f5      	bne.n	80108f0 <strncmp+0x8>
 8010904:	1a98      	subs	r0, r3, r2
 8010906:	bd10      	pop	{r4, pc}
 8010908:	4610      	mov	r0, r2
 801090a:	e7fc      	b.n	8010906 <strncmp+0x1e>

0801090c <__swbuf_r>:
 801090c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801090e:	460e      	mov	r6, r1
 8010910:	4614      	mov	r4, r2
 8010912:	4605      	mov	r5, r0
 8010914:	b118      	cbz	r0, 801091e <__swbuf_r+0x12>
 8010916:	6983      	ldr	r3, [r0, #24]
 8010918:	b90b      	cbnz	r3, 801091e <__swbuf_r+0x12>
 801091a:	f000 ff81 	bl	8011820 <__sinit>
 801091e:	4b21      	ldr	r3, [pc, #132]	; (80109a4 <__swbuf_r+0x98>)
 8010920:	429c      	cmp	r4, r3
 8010922:	d12a      	bne.n	801097a <__swbuf_r+0x6e>
 8010924:	686c      	ldr	r4, [r5, #4]
 8010926:	69a3      	ldr	r3, [r4, #24]
 8010928:	60a3      	str	r3, [r4, #8]
 801092a:	89a3      	ldrh	r3, [r4, #12]
 801092c:	071a      	lsls	r2, r3, #28
 801092e:	d52e      	bpl.n	801098e <__swbuf_r+0x82>
 8010930:	6923      	ldr	r3, [r4, #16]
 8010932:	b363      	cbz	r3, 801098e <__swbuf_r+0x82>
 8010934:	6923      	ldr	r3, [r4, #16]
 8010936:	6820      	ldr	r0, [r4, #0]
 8010938:	1ac0      	subs	r0, r0, r3
 801093a:	6963      	ldr	r3, [r4, #20]
 801093c:	b2f6      	uxtb	r6, r6
 801093e:	4283      	cmp	r3, r0
 8010940:	4637      	mov	r7, r6
 8010942:	dc04      	bgt.n	801094e <__swbuf_r+0x42>
 8010944:	4621      	mov	r1, r4
 8010946:	4628      	mov	r0, r5
 8010948:	f000 ff00 	bl	801174c <_fflush_r>
 801094c:	bb28      	cbnz	r0, 801099a <__swbuf_r+0x8e>
 801094e:	68a3      	ldr	r3, [r4, #8]
 8010950:	3b01      	subs	r3, #1
 8010952:	60a3      	str	r3, [r4, #8]
 8010954:	6823      	ldr	r3, [r4, #0]
 8010956:	1c5a      	adds	r2, r3, #1
 8010958:	6022      	str	r2, [r4, #0]
 801095a:	701e      	strb	r6, [r3, #0]
 801095c:	6963      	ldr	r3, [r4, #20]
 801095e:	3001      	adds	r0, #1
 8010960:	4283      	cmp	r3, r0
 8010962:	d004      	beq.n	801096e <__swbuf_r+0x62>
 8010964:	89a3      	ldrh	r3, [r4, #12]
 8010966:	07db      	lsls	r3, r3, #31
 8010968:	d519      	bpl.n	801099e <__swbuf_r+0x92>
 801096a:	2e0a      	cmp	r6, #10
 801096c:	d117      	bne.n	801099e <__swbuf_r+0x92>
 801096e:	4621      	mov	r1, r4
 8010970:	4628      	mov	r0, r5
 8010972:	f000 feeb 	bl	801174c <_fflush_r>
 8010976:	b190      	cbz	r0, 801099e <__swbuf_r+0x92>
 8010978:	e00f      	b.n	801099a <__swbuf_r+0x8e>
 801097a:	4b0b      	ldr	r3, [pc, #44]	; (80109a8 <__swbuf_r+0x9c>)
 801097c:	429c      	cmp	r4, r3
 801097e:	d101      	bne.n	8010984 <__swbuf_r+0x78>
 8010980:	68ac      	ldr	r4, [r5, #8]
 8010982:	e7d0      	b.n	8010926 <__swbuf_r+0x1a>
 8010984:	4b09      	ldr	r3, [pc, #36]	; (80109ac <__swbuf_r+0xa0>)
 8010986:	429c      	cmp	r4, r3
 8010988:	bf08      	it	eq
 801098a:	68ec      	ldreq	r4, [r5, #12]
 801098c:	e7cb      	b.n	8010926 <__swbuf_r+0x1a>
 801098e:	4621      	mov	r1, r4
 8010990:	4628      	mov	r0, r5
 8010992:	f000 f80d 	bl	80109b0 <__swsetup_r>
 8010996:	2800      	cmp	r0, #0
 8010998:	d0cc      	beq.n	8010934 <__swbuf_r+0x28>
 801099a:	f04f 37ff 	mov.w	r7, #4294967295
 801099e:	4638      	mov	r0, r7
 80109a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80109a2:	bf00      	nop
 80109a4:	08016a70 	.word	0x08016a70
 80109a8:	08016a90 	.word	0x08016a90
 80109ac:	08016a50 	.word	0x08016a50

080109b0 <__swsetup_r>:
 80109b0:	4b32      	ldr	r3, [pc, #200]	; (8010a7c <__swsetup_r+0xcc>)
 80109b2:	b570      	push	{r4, r5, r6, lr}
 80109b4:	681d      	ldr	r5, [r3, #0]
 80109b6:	4606      	mov	r6, r0
 80109b8:	460c      	mov	r4, r1
 80109ba:	b125      	cbz	r5, 80109c6 <__swsetup_r+0x16>
 80109bc:	69ab      	ldr	r3, [r5, #24]
 80109be:	b913      	cbnz	r3, 80109c6 <__swsetup_r+0x16>
 80109c0:	4628      	mov	r0, r5
 80109c2:	f000 ff2d 	bl	8011820 <__sinit>
 80109c6:	4b2e      	ldr	r3, [pc, #184]	; (8010a80 <__swsetup_r+0xd0>)
 80109c8:	429c      	cmp	r4, r3
 80109ca:	d10f      	bne.n	80109ec <__swsetup_r+0x3c>
 80109cc:	686c      	ldr	r4, [r5, #4]
 80109ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80109d2:	b29a      	uxth	r2, r3
 80109d4:	0715      	lsls	r5, r2, #28
 80109d6:	d42c      	bmi.n	8010a32 <__swsetup_r+0x82>
 80109d8:	06d0      	lsls	r0, r2, #27
 80109da:	d411      	bmi.n	8010a00 <__swsetup_r+0x50>
 80109dc:	2209      	movs	r2, #9
 80109de:	6032      	str	r2, [r6, #0]
 80109e0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80109e4:	81a3      	strh	r3, [r4, #12]
 80109e6:	f04f 30ff 	mov.w	r0, #4294967295
 80109ea:	e03e      	b.n	8010a6a <__swsetup_r+0xba>
 80109ec:	4b25      	ldr	r3, [pc, #148]	; (8010a84 <__swsetup_r+0xd4>)
 80109ee:	429c      	cmp	r4, r3
 80109f0:	d101      	bne.n	80109f6 <__swsetup_r+0x46>
 80109f2:	68ac      	ldr	r4, [r5, #8]
 80109f4:	e7eb      	b.n	80109ce <__swsetup_r+0x1e>
 80109f6:	4b24      	ldr	r3, [pc, #144]	; (8010a88 <__swsetup_r+0xd8>)
 80109f8:	429c      	cmp	r4, r3
 80109fa:	bf08      	it	eq
 80109fc:	68ec      	ldreq	r4, [r5, #12]
 80109fe:	e7e6      	b.n	80109ce <__swsetup_r+0x1e>
 8010a00:	0751      	lsls	r1, r2, #29
 8010a02:	d512      	bpl.n	8010a2a <__swsetup_r+0x7a>
 8010a04:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010a06:	b141      	cbz	r1, 8010a1a <__swsetup_r+0x6a>
 8010a08:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8010a0c:	4299      	cmp	r1, r3
 8010a0e:	d002      	beq.n	8010a16 <__swsetup_r+0x66>
 8010a10:	4630      	mov	r0, r6
 8010a12:	f7ff f9f3 	bl	800fdfc <_free_r>
 8010a16:	2300      	movs	r3, #0
 8010a18:	6363      	str	r3, [r4, #52]	; 0x34
 8010a1a:	89a3      	ldrh	r3, [r4, #12]
 8010a1c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8010a20:	81a3      	strh	r3, [r4, #12]
 8010a22:	2300      	movs	r3, #0
 8010a24:	6063      	str	r3, [r4, #4]
 8010a26:	6923      	ldr	r3, [r4, #16]
 8010a28:	6023      	str	r3, [r4, #0]
 8010a2a:	89a3      	ldrh	r3, [r4, #12]
 8010a2c:	f043 0308 	orr.w	r3, r3, #8
 8010a30:	81a3      	strh	r3, [r4, #12]
 8010a32:	6923      	ldr	r3, [r4, #16]
 8010a34:	b94b      	cbnz	r3, 8010a4a <__swsetup_r+0x9a>
 8010a36:	89a3      	ldrh	r3, [r4, #12]
 8010a38:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8010a3c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010a40:	d003      	beq.n	8010a4a <__swsetup_r+0x9a>
 8010a42:	4621      	mov	r1, r4
 8010a44:	4630      	mov	r0, r6
 8010a46:	f000 ffa7 	bl	8011998 <__smakebuf_r>
 8010a4a:	89a2      	ldrh	r2, [r4, #12]
 8010a4c:	f012 0301 	ands.w	r3, r2, #1
 8010a50:	d00c      	beq.n	8010a6c <__swsetup_r+0xbc>
 8010a52:	2300      	movs	r3, #0
 8010a54:	60a3      	str	r3, [r4, #8]
 8010a56:	6963      	ldr	r3, [r4, #20]
 8010a58:	425b      	negs	r3, r3
 8010a5a:	61a3      	str	r3, [r4, #24]
 8010a5c:	6923      	ldr	r3, [r4, #16]
 8010a5e:	b953      	cbnz	r3, 8010a76 <__swsetup_r+0xc6>
 8010a60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010a64:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8010a68:	d1ba      	bne.n	80109e0 <__swsetup_r+0x30>
 8010a6a:	bd70      	pop	{r4, r5, r6, pc}
 8010a6c:	0792      	lsls	r2, r2, #30
 8010a6e:	bf58      	it	pl
 8010a70:	6963      	ldrpl	r3, [r4, #20]
 8010a72:	60a3      	str	r3, [r4, #8]
 8010a74:	e7f2      	b.n	8010a5c <__swsetup_r+0xac>
 8010a76:	2000      	movs	r0, #0
 8010a78:	e7f7      	b.n	8010a6a <__swsetup_r+0xba>
 8010a7a:	bf00      	nop
 8010a7c:	200006c8 	.word	0x200006c8
 8010a80:	08016a70 	.word	0x08016a70
 8010a84:	08016a90 	.word	0x08016a90
 8010a88:	08016a50 	.word	0x08016a50

08010a8c <quorem>:
 8010a8c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a90:	6903      	ldr	r3, [r0, #16]
 8010a92:	690c      	ldr	r4, [r1, #16]
 8010a94:	42a3      	cmp	r3, r4
 8010a96:	4680      	mov	r8, r0
 8010a98:	f2c0 8082 	blt.w	8010ba0 <quorem+0x114>
 8010a9c:	3c01      	subs	r4, #1
 8010a9e:	f101 0714 	add.w	r7, r1, #20
 8010aa2:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 8010aa6:	f100 0614 	add.w	r6, r0, #20
 8010aaa:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8010aae:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8010ab2:	eb06 030c 	add.w	r3, r6, ip
 8010ab6:	3501      	adds	r5, #1
 8010ab8:	eb07 090c 	add.w	r9, r7, ip
 8010abc:	9301      	str	r3, [sp, #4]
 8010abe:	fbb0 f5f5 	udiv	r5, r0, r5
 8010ac2:	b395      	cbz	r5, 8010b2a <quorem+0x9e>
 8010ac4:	f04f 0a00 	mov.w	sl, #0
 8010ac8:	4638      	mov	r0, r7
 8010aca:	46b6      	mov	lr, r6
 8010acc:	46d3      	mov	fp, sl
 8010ace:	f850 2b04 	ldr.w	r2, [r0], #4
 8010ad2:	b293      	uxth	r3, r2
 8010ad4:	fb05 a303 	mla	r3, r5, r3, sl
 8010ad8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8010adc:	b29b      	uxth	r3, r3
 8010ade:	ebab 0303 	sub.w	r3, fp, r3
 8010ae2:	0c12      	lsrs	r2, r2, #16
 8010ae4:	f8de b000 	ldr.w	fp, [lr]
 8010ae8:	fb05 a202 	mla	r2, r5, r2, sl
 8010aec:	fa13 f38b 	uxtah	r3, r3, fp
 8010af0:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8010af4:	fa1f fb82 	uxth.w	fp, r2
 8010af8:	f8de 2000 	ldr.w	r2, [lr]
 8010afc:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 8010b00:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8010b04:	b29b      	uxth	r3, r3
 8010b06:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8010b0a:	4581      	cmp	r9, r0
 8010b0c:	ea4f 4b22 	mov.w	fp, r2, asr #16
 8010b10:	f84e 3b04 	str.w	r3, [lr], #4
 8010b14:	d2db      	bcs.n	8010ace <quorem+0x42>
 8010b16:	f856 300c 	ldr.w	r3, [r6, ip]
 8010b1a:	b933      	cbnz	r3, 8010b2a <quorem+0x9e>
 8010b1c:	9b01      	ldr	r3, [sp, #4]
 8010b1e:	3b04      	subs	r3, #4
 8010b20:	429e      	cmp	r6, r3
 8010b22:	461a      	mov	r2, r3
 8010b24:	d330      	bcc.n	8010b88 <quorem+0xfc>
 8010b26:	f8c8 4010 	str.w	r4, [r8, #16]
 8010b2a:	4640      	mov	r0, r8
 8010b2c:	f001 f98c 	bl	8011e48 <__mcmp>
 8010b30:	2800      	cmp	r0, #0
 8010b32:	db25      	blt.n	8010b80 <quorem+0xf4>
 8010b34:	3501      	adds	r5, #1
 8010b36:	4630      	mov	r0, r6
 8010b38:	f04f 0c00 	mov.w	ip, #0
 8010b3c:	f857 2b04 	ldr.w	r2, [r7], #4
 8010b40:	f8d0 e000 	ldr.w	lr, [r0]
 8010b44:	b293      	uxth	r3, r2
 8010b46:	ebac 0303 	sub.w	r3, ip, r3
 8010b4a:	0c12      	lsrs	r2, r2, #16
 8010b4c:	fa13 f38e 	uxtah	r3, r3, lr
 8010b50:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8010b54:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8010b58:	b29b      	uxth	r3, r3
 8010b5a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8010b5e:	45b9      	cmp	r9, r7
 8010b60:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8010b64:	f840 3b04 	str.w	r3, [r0], #4
 8010b68:	d2e8      	bcs.n	8010b3c <quorem+0xb0>
 8010b6a:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8010b6e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8010b72:	b92a      	cbnz	r2, 8010b80 <quorem+0xf4>
 8010b74:	3b04      	subs	r3, #4
 8010b76:	429e      	cmp	r6, r3
 8010b78:	461a      	mov	r2, r3
 8010b7a:	d30b      	bcc.n	8010b94 <quorem+0x108>
 8010b7c:	f8c8 4010 	str.w	r4, [r8, #16]
 8010b80:	4628      	mov	r0, r5
 8010b82:	b003      	add	sp, #12
 8010b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b88:	6812      	ldr	r2, [r2, #0]
 8010b8a:	3b04      	subs	r3, #4
 8010b8c:	2a00      	cmp	r2, #0
 8010b8e:	d1ca      	bne.n	8010b26 <quorem+0x9a>
 8010b90:	3c01      	subs	r4, #1
 8010b92:	e7c5      	b.n	8010b20 <quorem+0x94>
 8010b94:	6812      	ldr	r2, [r2, #0]
 8010b96:	3b04      	subs	r3, #4
 8010b98:	2a00      	cmp	r2, #0
 8010b9a:	d1ef      	bne.n	8010b7c <quorem+0xf0>
 8010b9c:	3c01      	subs	r4, #1
 8010b9e:	e7ea      	b.n	8010b76 <quorem+0xea>
 8010ba0:	2000      	movs	r0, #0
 8010ba2:	e7ee      	b.n	8010b82 <quorem+0xf6>
 8010ba4:	0000      	movs	r0, r0
	...

08010ba8 <_dtoa_r>:
 8010ba8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bac:	ec57 6b10 	vmov	r6, r7, d0
 8010bb0:	b095      	sub	sp, #84	; 0x54
 8010bb2:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8010bb4:	9108      	str	r1, [sp, #32]
 8010bb6:	4604      	mov	r4, r0
 8010bb8:	920a      	str	r2, [sp, #40]	; 0x28
 8010bba:	9311      	str	r3, [sp, #68]	; 0x44
 8010bbc:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 8010bc0:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8010bc4:	b93d      	cbnz	r5, 8010bd6 <_dtoa_r+0x2e>
 8010bc6:	2010      	movs	r0, #16
 8010bc8:	f7ff f8e6 	bl	800fd98 <malloc>
 8010bcc:	6260      	str	r0, [r4, #36]	; 0x24
 8010bce:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8010bd2:	6005      	str	r5, [r0, #0]
 8010bd4:	60c5      	str	r5, [r0, #12]
 8010bd6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010bd8:	6819      	ldr	r1, [r3, #0]
 8010bda:	b151      	cbz	r1, 8010bf2 <_dtoa_r+0x4a>
 8010bdc:	685a      	ldr	r2, [r3, #4]
 8010bde:	604a      	str	r2, [r1, #4]
 8010be0:	2301      	movs	r3, #1
 8010be2:	4093      	lsls	r3, r2
 8010be4:	608b      	str	r3, [r1, #8]
 8010be6:	4620      	mov	r0, r4
 8010be8:	f000 ff4c 	bl	8011a84 <_Bfree>
 8010bec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010bee:	2200      	movs	r2, #0
 8010bf0:	601a      	str	r2, [r3, #0]
 8010bf2:	1e3b      	subs	r3, r7, #0
 8010bf4:	bfb9      	ittee	lt
 8010bf6:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8010bfa:	9303      	strlt	r3, [sp, #12]
 8010bfc:	2300      	movge	r3, #0
 8010bfe:	f8c8 3000 	strge.w	r3, [r8]
 8010c02:	9d03      	ldr	r5, [sp, #12]
 8010c04:	4bac      	ldr	r3, [pc, #688]	; (8010eb8 <_dtoa_r+0x310>)
 8010c06:	bfbc      	itt	lt
 8010c08:	2201      	movlt	r2, #1
 8010c0a:	f8c8 2000 	strlt.w	r2, [r8]
 8010c0e:	43ab      	bics	r3, r5
 8010c10:	d11b      	bne.n	8010c4a <_dtoa_r+0xa2>
 8010c12:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010c14:	f242 730f 	movw	r3, #9999	; 0x270f
 8010c18:	6013      	str	r3, [r2, #0]
 8010c1a:	9b02      	ldr	r3, [sp, #8]
 8010c1c:	b923      	cbnz	r3, 8010c28 <_dtoa_r+0x80>
 8010c1e:	f3c5 0513 	ubfx	r5, r5, #0, #20
 8010c22:	2d00      	cmp	r5, #0
 8010c24:	f000 84dd 	beq.w	80115e2 <_dtoa_r+0xa3a>
 8010c28:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8010c2a:	b953      	cbnz	r3, 8010c42 <_dtoa_r+0x9a>
 8010c2c:	4ba3      	ldr	r3, [pc, #652]	; (8010ebc <_dtoa_r+0x314>)
 8010c2e:	e020      	b.n	8010c72 <_dtoa_r+0xca>
 8010c30:	4ba3      	ldr	r3, [pc, #652]	; (8010ec0 <_dtoa_r+0x318>)
 8010c32:	9304      	str	r3, [sp, #16]
 8010c34:	3308      	adds	r3, #8
 8010c36:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8010c38:	6013      	str	r3, [r2, #0]
 8010c3a:	9804      	ldr	r0, [sp, #16]
 8010c3c:	b015      	add	sp, #84	; 0x54
 8010c3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c42:	4b9e      	ldr	r3, [pc, #632]	; (8010ebc <_dtoa_r+0x314>)
 8010c44:	9304      	str	r3, [sp, #16]
 8010c46:	3303      	adds	r3, #3
 8010c48:	e7f5      	b.n	8010c36 <_dtoa_r+0x8e>
 8010c4a:	ed9d 7b02 	vldr	d7, [sp, #8]
 8010c4e:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8010c52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010c56:	ed8d 7b04 	vstr	d7, [sp, #16]
 8010c5a:	d10c      	bne.n	8010c76 <_dtoa_r+0xce>
 8010c5c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010c5e:	2301      	movs	r3, #1
 8010c60:	6013      	str	r3, [r2, #0]
 8010c62:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8010c64:	2b00      	cmp	r3, #0
 8010c66:	f000 84b9 	beq.w	80115dc <_dtoa_r+0xa34>
 8010c6a:	4b96      	ldr	r3, [pc, #600]	; (8010ec4 <_dtoa_r+0x31c>)
 8010c6c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8010c6e:	6013      	str	r3, [r2, #0]
 8010c70:	3b01      	subs	r3, #1
 8010c72:	9304      	str	r3, [sp, #16]
 8010c74:	e7e1      	b.n	8010c3a <_dtoa_r+0x92>
 8010c76:	a913      	add	r1, sp, #76	; 0x4c
 8010c78:	aa12      	add	r2, sp, #72	; 0x48
 8010c7a:	ed9d 0b04 	vldr	d0, [sp, #16]
 8010c7e:	4620      	mov	r0, r4
 8010c80:	f001 f959 	bl	8011f36 <__d2b>
 8010c84:	f3c5 560a 	ubfx	r6, r5, #20, #11
 8010c88:	9001      	str	r0, [sp, #4]
 8010c8a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010c8c:	2e00      	cmp	r6, #0
 8010c8e:	d046      	beq.n	8010d1e <_dtoa_r+0x176>
 8010c90:	9805      	ldr	r0, [sp, #20]
 8010c92:	f3c0 0013 	ubfx	r0, r0, #0, #20
 8010c96:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8010c9a:	f040 537f 	orr.w	r3, r0, #1069547520	; 0x3fc00000
 8010c9e:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8010ca2:	f2a6 3aff 	subw	sl, r6, #1023	; 0x3ff
 8010ca6:	2700      	movs	r7, #0
 8010ca8:	ee07 aa90 	vmov	s15, sl
 8010cac:	ec43 2b16 	vmov	d6, r2, r3
 8010cb0:	eeb8 5be7 	vcvt.f64.s32	d5, s15
 8010cb4:	ed9f 4b7a 	vldr	d4, [pc, #488]	; 8010ea0 <_dtoa_r+0x2f8>
 8010cb8:	eeb7 7b08 	vmov.f64	d7, #120	; 0x3fc00000  1.5
 8010cbc:	ee36 7b47 	vsub.f64	d7, d6, d7
 8010cc0:	ed9f 6b79 	vldr	d6, [pc, #484]	; 8010ea8 <_dtoa_r+0x300>
 8010cc4:	eea7 6b04 	vfma.f64	d6, d7, d4
 8010cc8:	eeb0 7b46 	vmov.f64	d7, d6
 8010ccc:	ed9f 6b78 	vldr	d6, [pc, #480]	; 8010eb0 <_dtoa_r+0x308>
 8010cd0:	eea5 7b06 	vfma.f64	d7, d5, d6
 8010cd4:	eefd 6bc7 	vcvt.s32.f64	s13, d7
 8010cd8:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8010cdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010ce0:	ee16 ba90 	vmov	fp, s13
 8010ce4:	d508      	bpl.n	8010cf8 <_dtoa_r+0x150>
 8010ce6:	eeb8 6be6 	vcvt.f64.s32	d6, s13
 8010cea:	eeb4 6b47 	vcmp.f64	d6, d7
 8010cee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010cf2:	bf18      	it	ne
 8010cf4:	f10b 3bff 	addne.w	fp, fp, #4294967295
 8010cf8:	f1bb 0f16 	cmp.w	fp, #22
 8010cfc:	d834      	bhi.n	8010d68 <_dtoa_r+0x1c0>
 8010cfe:	4b72      	ldr	r3, [pc, #456]	; (8010ec8 <_dtoa_r+0x320>)
 8010d00:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8010d04:	ed93 7b00 	vldr	d7, [r3]
 8010d08:	ed9d 6b02 	vldr	d6, [sp, #8]
 8010d0c:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8010d10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010d14:	dd01      	ble.n	8010d1a <_dtoa_r+0x172>
 8010d16:	f10b 3bff 	add.w	fp, fp, #4294967295
 8010d1a:	2300      	movs	r3, #0
 8010d1c:	e025      	b.n	8010d6a <_dtoa_r+0x1c2>
 8010d1e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8010d20:	eb01 0a03 	add.w	sl, r1, r3
 8010d24:	f20a 4332 	addw	r3, sl, #1074	; 0x432
 8010d28:	2b20      	cmp	r3, #32
 8010d2a:	dd17      	ble.n	8010d5c <_dtoa_r+0x1b4>
 8010d2c:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8010d30:	9a02      	ldr	r2, [sp, #8]
 8010d32:	409d      	lsls	r5, r3
 8010d34:	f20a 4312 	addw	r3, sl, #1042	; 0x412
 8010d38:	fa22 f303 	lsr.w	r3, r2, r3
 8010d3c:	432b      	orrs	r3, r5
 8010d3e:	ee07 3a90 	vmov	s15, r3
 8010d42:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8010d46:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010d4a:	ed8d 7b04 	vstr	d7, [sp, #16]
 8010d4e:	9805      	ldr	r0, [sp, #20]
 8010d50:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8010d54:	2701      	movs	r7, #1
 8010d56:	f1a0 73f8 	sub.w	r3, r0, #32505856	; 0x1f00000
 8010d5a:	e7a5      	b.n	8010ca8 <_dtoa_r+0x100>
 8010d5c:	9a02      	ldr	r2, [sp, #8]
 8010d5e:	f1c3 0320 	rsb	r3, r3, #32
 8010d62:	fa02 f303 	lsl.w	r3, r2, r3
 8010d66:	e7ea      	b.n	8010d3e <_dtoa_r+0x196>
 8010d68:	2301      	movs	r3, #1
 8010d6a:	eba1 0a0a 	sub.w	sl, r1, sl
 8010d6e:	9310      	str	r3, [sp, #64]	; 0x40
 8010d70:	f1ba 0301 	subs.w	r3, sl, #1
 8010d74:	9307      	str	r3, [sp, #28]
 8010d76:	bf43      	ittte	mi
 8010d78:	2300      	movmi	r3, #0
 8010d7a:	f1ca 0a01 	rsbmi	sl, sl, #1
 8010d7e:	9307      	strmi	r3, [sp, #28]
 8010d80:	f04f 0a00 	movpl.w	sl, #0
 8010d84:	f1bb 0f00 	cmp.w	fp, #0
 8010d88:	db19      	blt.n	8010dbe <_dtoa_r+0x216>
 8010d8a:	9b07      	ldr	r3, [sp, #28]
 8010d8c:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 8010d90:	445b      	add	r3, fp
 8010d92:	9307      	str	r3, [sp, #28]
 8010d94:	f04f 0800 	mov.w	r8, #0
 8010d98:	9b08      	ldr	r3, [sp, #32]
 8010d9a:	2b09      	cmp	r3, #9
 8010d9c:	d866      	bhi.n	8010e6c <_dtoa_r+0x2c4>
 8010d9e:	2b05      	cmp	r3, #5
 8010da0:	bfc4      	itt	gt
 8010da2:	3b04      	subgt	r3, #4
 8010da4:	9308      	strgt	r3, [sp, #32]
 8010da6:	9b08      	ldr	r3, [sp, #32]
 8010da8:	f1a3 0302 	sub.w	r3, r3, #2
 8010dac:	bfcc      	ite	gt
 8010dae:	2500      	movgt	r5, #0
 8010db0:	2501      	movle	r5, #1
 8010db2:	2b03      	cmp	r3, #3
 8010db4:	d866      	bhi.n	8010e84 <_dtoa_r+0x2dc>
 8010db6:	e8df f003 	tbb	[pc, r3]
 8010dba:	5755      	.short	0x5755
 8010dbc:	4909      	.short	0x4909
 8010dbe:	2300      	movs	r3, #0
 8010dc0:	ebaa 0a0b 	sub.w	sl, sl, fp
 8010dc4:	f1cb 0800 	rsb	r8, fp, #0
 8010dc8:	930b      	str	r3, [sp, #44]	; 0x2c
 8010dca:	e7e5      	b.n	8010d98 <_dtoa_r+0x1f0>
 8010dcc:	2301      	movs	r3, #1
 8010dce:	9309      	str	r3, [sp, #36]	; 0x24
 8010dd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010dd2:	2b00      	cmp	r3, #0
 8010dd4:	dd59      	ble.n	8010e8a <_dtoa_r+0x2e2>
 8010dd6:	9306      	str	r3, [sp, #24]
 8010dd8:	4699      	mov	r9, r3
 8010dda:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8010ddc:	2200      	movs	r2, #0
 8010dde:	6072      	str	r2, [r6, #4]
 8010de0:	2204      	movs	r2, #4
 8010de2:	f102 0014 	add.w	r0, r2, #20
 8010de6:	4298      	cmp	r0, r3
 8010de8:	6871      	ldr	r1, [r6, #4]
 8010dea:	d953      	bls.n	8010e94 <_dtoa_r+0x2ec>
 8010dec:	4620      	mov	r0, r4
 8010dee:	f000 fe15 	bl	8011a1c <_Balloc>
 8010df2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010df4:	6030      	str	r0, [r6, #0]
 8010df6:	681b      	ldr	r3, [r3, #0]
 8010df8:	9304      	str	r3, [sp, #16]
 8010dfa:	f1b9 0f0e 	cmp.w	r9, #14
 8010dfe:	f200 80c2 	bhi.w	8010f86 <_dtoa_r+0x3de>
 8010e02:	2d00      	cmp	r5, #0
 8010e04:	f000 80bf 	beq.w	8010f86 <_dtoa_r+0x3de>
 8010e08:	ed9d 7b02 	vldr	d7, [sp, #8]
 8010e0c:	f1bb 0f00 	cmp.w	fp, #0
 8010e10:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 8010e14:	f340 80e6 	ble.w	8010fe4 <_dtoa_r+0x43c>
 8010e18:	4a2b      	ldr	r2, [pc, #172]	; (8010ec8 <_dtoa_r+0x320>)
 8010e1a:	f00b 030f 	and.w	r3, fp, #15
 8010e1e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8010e22:	ed93 7b00 	vldr	d7, [r3]
 8010e26:	ea4f 132b 	mov.w	r3, fp, asr #4
 8010e2a:	06da      	lsls	r2, r3, #27
 8010e2c:	f140 80d8 	bpl.w	8010fe0 <_dtoa_r+0x438>
 8010e30:	4a26      	ldr	r2, [pc, #152]	; (8010ecc <_dtoa_r+0x324>)
 8010e32:	ed9d 5b0e 	vldr	d5, [sp, #56]	; 0x38
 8010e36:	ed92 6b08 	vldr	d6, [r2, #32]
 8010e3a:	ee85 6b06 	vdiv.f64	d6, d5, d6
 8010e3e:	ed8d 6b02 	vstr	d6, [sp, #8]
 8010e42:	f003 030f 	and.w	r3, r3, #15
 8010e46:	2203      	movs	r2, #3
 8010e48:	4920      	ldr	r1, [pc, #128]	; (8010ecc <_dtoa_r+0x324>)
 8010e4a:	e04a      	b.n	8010ee2 <_dtoa_r+0x33a>
 8010e4c:	2301      	movs	r3, #1
 8010e4e:	9309      	str	r3, [sp, #36]	; 0x24
 8010e50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010e52:	445b      	add	r3, fp
 8010e54:	f103 0901 	add.w	r9, r3, #1
 8010e58:	9306      	str	r3, [sp, #24]
 8010e5a:	464b      	mov	r3, r9
 8010e5c:	2b01      	cmp	r3, #1
 8010e5e:	bfb8      	it	lt
 8010e60:	2301      	movlt	r3, #1
 8010e62:	e7ba      	b.n	8010dda <_dtoa_r+0x232>
 8010e64:	2300      	movs	r3, #0
 8010e66:	e7b2      	b.n	8010dce <_dtoa_r+0x226>
 8010e68:	2300      	movs	r3, #0
 8010e6a:	e7f0      	b.n	8010e4e <_dtoa_r+0x2a6>
 8010e6c:	2501      	movs	r5, #1
 8010e6e:	2300      	movs	r3, #0
 8010e70:	e9cd 3508 	strd	r3, r5, [sp, #32]
 8010e74:	f04f 33ff 	mov.w	r3, #4294967295
 8010e78:	9306      	str	r3, [sp, #24]
 8010e7a:	4699      	mov	r9, r3
 8010e7c:	2200      	movs	r2, #0
 8010e7e:	2312      	movs	r3, #18
 8010e80:	920a      	str	r2, [sp, #40]	; 0x28
 8010e82:	e7aa      	b.n	8010dda <_dtoa_r+0x232>
 8010e84:	2301      	movs	r3, #1
 8010e86:	9309      	str	r3, [sp, #36]	; 0x24
 8010e88:	e7f4      	b.n	8010e74 <_dtoa_r+0x2cc>
 8010e8a:	2301      	movs	r3, #1
 8010e8c:	9306      	str	r3, [sp, #24]
 8010e8e:	4699      	mov	r9, r3
 8010e90:	461a      	mov	r2, r3
 8010e92:	e7f5      	b.n	8010e80 <_dtoa_r+0x2d8>
 8010e94:	3101      	adds	r1, #1
 8010e96:	6071      	str	r1, [r6, #4]
 8010e98:	0052      	lsls	r2, r2, #1
 8010e9a:	e7a2      	b.n	8010de2 <_dtoa_r+0x23a>
 8010e9c:	f3af 8000 	nop.w
 8010ea0:	636f4361 	.word	0x636f4361
 8010ea4:	3fd287a7 	.word	0x3fd287a7
 8010ea8:	8b60c8b3 	.word	0x8b60c8b3
 8010eac:	3fc68a28 	.word	0x3fc68a28
 8010eb0:	509f79fb 	.word	0x509f79fb
 8010eb4:	3fd34413 	.word	0x3fd34413
 8010eb8:	7ff00000 	.word	0x7ff00000
 8010ebc:	08016a49 	.word	0x08016a49
 8010ec0:	08016a40 	.word	0x08016a40
 8010ec4:	08016a1d 	.word	0x08016a1d
 8010ec8:	08016ad8 	.word	0x08016ad8
 8010ecc:	08016ab0 	.word	0x08016ab0
 8010ed0:	07de      	lsls	r6, r3, #31
 8010ed2:	d504      	bpl.n	8010ede <_dtoa_r+0x336>
 8010ed4:	ed91 6b00 	vldr	d6, [r1]
 8010ed8:	3201      	adds	r2, #1
 8010eda:	ee27 7b06 	vmul.f64	d7, d7, d6
 8010ede:	105b      	asrs	r3, r3, #1
 8010ee0:	3108      	adds	r1, #8
 8010ee2:	2b00      	cmp	r3, #0
 8010ee4:	d1f4      	bne.n	8010ed0 <_dtoa_r+0x328>
 8010ee6:	ed9d 6b02 	vldr	d6, [sp, #8]
 8010eea:	ee86 7b07 	vdiv.f64	d7, d6, d7
 8010eee:	ed8d 7b02 	vstr	d7, [sp, #8]
 8010ef2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010ef4:	2b00      	cmp	r3, #0
 8010ef6:	f000 80a7 	beq.w	8011048 <_dtoa_r+0x4a0>
 8010efa:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8010efe:	ed9d 7b02 	vldr	d7, [sp, #8]
 8010f02:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8010f06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010f0a:	f140 809d 	bpl.w	8011048 <_dtoa_r+0x4a0>
 8010f0e:	f1b9 0f00 	cmp.w	r9, #0
 8010f12:	f000 8099 	beq.w	8011048 <_dtoa_r+0x4a0>
 8010f16:	9b06      	ldr	r3, [sp, #24]
 8010f18:	2b00      	cmp	r3, #0
 8010f1a:	dd30      	ble.n	8010f7e <_dtoa_r+0x3d6>
 8010f1c:	eeb2 6b04 	vmov.f64	d6, #36	; 0x41200000  10.0
 8010f20:	ee27 7b06 	vmul.f64	d7, d7, d6
 8010f24:	ed8d 7b02 	vstr	d7, [sp, #8]
 8010f28:	9d06      	ldr	r5, [sp, #24]
 8010f2a:	f10b 33ff 	add.w	r3, fp, #4294967295
 8010f2e:	3201      	adds	r2, #1
 8010f30:	ed9d 6b02 	vldr	d6, [sp, #8]
 8010f34:	eeb1 5b0c 	vmov.f64	d5, #28	; 0x40e00000  7.0
 8010f38:	ee07 2a90 	vmov	s15, r2
 8010f3c:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 8010f40:	eea7 5b06 	vfma.f64	d5, d7, d6
 8010f44:	ed8d 5b02 	vstr	d5, [sp, #8]
 8010f48:	9a03      	ldr	r2, [sp, #12]
 8010f4a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8010f4e:	f1a2 7150 	sub.w	r1, r2, #54525952	; 0x3400000
 8010f52:	2d00      	cmp	r5, #0
 8010f54:	d17b      	bne.n	801104e <_dtoa_r+0x4a6>
 8010f56:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
 8010f5a:	ee36 6b47 	vsub.f64	d6, d6, d7
 8010f5e:	ec41 0b17 	vmov	d7, r0, r1
 8010f62:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8010f66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010f6a:	f300 8253 	bgt.w	8011414 <_dtoa_r+0x86c>
 8010f6e:	eeb1 7b47 	vneg.f64	d7, d7
 8010f72:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8010f76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010f7a:	f100 8249 	bmi.w	8011410 <_dtoa_r+0x868>
 8010f7e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8010f82:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8010f86:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8010f88:	2b00      	cmp	r3, #0
 8010f8a:	f2c0 8119 	blt.w	80111c0 <_dtoa_r+0x618>
 8010f8e:	f1bb 0f0e 	cmp.w	fp, #14
 8010f92:	f300 8115 	bgt.w	80111c0 <_dtoa_r+0x618>
 8010f96:	4bc3      	ldr	r3, [pc, #780]	; (80112a4 <_dtoa_r+0x6fc>)
 8010f98:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8010f9c:	ed93 6b00 	vldr	d6, [r3]
 8010fa0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010fa2:	2b00      	cmp	r3, #0
 8010fa4:	f280 80ba 	bge.w	801111c <_dtoa_r+0x574>
 8010fa8:	f1b9 0f00 	cmp.w	r9, #0
 8010fac:	f300 80b6 	bgt.w	801111c <_dtoa_r+0x574>
 8010fb0:	f040 822d 	bne.w	801140e <_dtoa_r+0x866>
 8010fb4:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
 8010fb8:	ee26 6b07 	vmul.f64	d6, d6, d7
 8010fbc:	ed9d 7b02 	vldr	d7, [sp, #8]
 8010fc0:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8010fc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010fc8:	464d      	mov	r5, r9
 8010fca:	464f      	mov	r7, r9
 8010fcc:	f280 8204 	bge.w	80113d8 <_dtoa_r+0x830>
 8010fd0:	9b04      	ldr	r3, [sp, #16]
 8010fd2:	9a04      	ldr	r2, [sp, #16]
 8010fd4:	1c5e      	adds	r6, r3, #1
 8010fd6:	2331      	movs	r3, #49	; 0x31
 8010fd8:	7013      	strb	r3, [r2, #0]
 8010fda:	f10b 0b01 	add.w	fp, fp, #1
 8010fde:	e1ff      	b.n	80113e0 <_dtoa_r+0x838>
 8010fe0:	2202      	movs	r2, #2
 8010fe2:	e731      	b.n	8010e48 <_dtoa_r+0x2a0>
 8010fe4:	d02e      	beq.n	8011044 <_dtoa_r+0x49c>
 8010fe6:	f1cb 0300 	rsb	r3, fp, #0
 8010fea:	4aae      	ldr	r2, [pc, #696]	; (80112a4 <_dtoa_r+0x6fc>)
 8010fec:	f003 010f 	and.w	r1, r3, #15
 8010ff0:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 8010ff4:	ed92 7b00 	vldr	d7, [r2]
 8010ff8:	ed9d 6b0e 	vldr	d6, [sp, #56]	; 0x38
 8010ffc:	ee26 7b07 	vmul.f64	d7, d6, d7
 8011000:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 8011004:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8011008:	e9cd 1202 	strd	r1, r2, [sp, #8]
 801100c:	49a6      	ldr	r1, [pc, #664]	; (80112a8 <_dtoa_r+0x700>)
 801100e:	111b      	asrs	r3, r3, #4
 8011010:	2000      	movs	r0, #0
 8011012:	2202      	movs	r2, #2
 8011014:	b93b      	cbnz	r3, 8011026 <_dtoa_r+0x47e>
 8011016:	2800      	cmp	r0, #0
 8011018:	f43f af6b 	beq.w	8010ef2 <_dtoa_r+0x34a>
 801101c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8011020:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8011024:	e765      	b.n	8010ef2 <_dtoa_r+0x34a>
 8011026:	07dd      	lsls	r5, r3, #31
 8011028:	d509      	bpl.n	801103e <_dtoa_r+0x496>
 801102a:	ed9d 6b0c 	vldr	d6, [sp, #48]	; 0x30
 801102e:	ed91 7b00 	vldr	d7, [r1]
 8011032:	ee26 7b07 	vmul.f64	d7, d6, d7
 8011036:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 801103a:	3201      	adds	r2, #1
 801103c:	2001      	movs	r0, #1
 801103e:	105b      	asrs	r3, r3, #1
 8011040:	3108      	adds	r1, #8
 8011042:	e7e7      	b.n	8011014 <_dtoa_r+0x46c>
 8011044:	2202      	movs	r2, #2
 8011046:	e754      	b.n	8010ef2 <_dtoa_r+0x34a>
 8011048:	465b      	mov	r3, fp
 801104a:	464d      	mov	r5, r9
 801104c:	e770      	b.n	8010f30 <_dtoa_r+0x388>
 801104e:	4a95      	ldr	r2, [pc, #596]	; (80112a4 <_dtoa_r+0x6fc>)
 8011050:	eb02 02c5 	add.w	r2, r2, r5, lsl #3
 8011054:	ed12 4b02 	vldr	d4, [r2, #-8]
 8011058:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801105a:	ec41 0b17 	vmov	d7, r0, r1
 801105e:	b35a      	cbz	r2, 80110b8 <_dtoa_r+0x510>
 8011060:	eeb6 3b00 	vmov.f64	d3, #96	; 0x3f000000  0.5
 8011064:	eeb7 2b00 	vmov.f64	d2, #112	; 0x3f800000  1.0
 8011068:	9e04      	ldr	r6, [sp, #16]
 801106a:	ee83 5b04 	vdiv.f64	d5, d3, d4
 801106e:	eeb2 3b04 	vmov.f64	d3, #36	; 0x41200000  10.0
 8011072:	ee35 7b47 	vsub.f64	d7, d5, d7
 8011076:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 801107a:	ee14 2a90 	vmov	r2, s9
 801107e:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 8011082:	3230      	adds	r2, #48	; 0x30
 8011084:	ee36 6b45 	vsub.f64	d6, d6, d5
 8011088:	eeb4 6bc7 	vcmpe.f64	d6, d7
 801108c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011090:	f806 2b01 	strb.w	r2, [r6], #1
 8011094:	d43b      	bmi.n	801110e <_dtoa_r+0x566>
 8011096:	ee32 5b46 	vsub.f64	d5, d2, d6
 801109a:	eeb4 5bc7 	vcmpe.f64	d5, d7
 801109e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80110a2:	d472      	bmi.n	801118a <_dtoa_r+0x5e2>
 80110a4:	9a04      	ldr	r2, [sp, #16]
 80110a6:	1ab2      	subs	r2, r6, r2
 80110a8:	4295      	cmp	r5, r2
 80110aa:	f77f af68 	ble.w	8010f7e <_dtoa_r+0x3d6>
 80110ae:	ee27 7b03 	vmul.f64	d7, d7, d3
 80110b2:	ee26 6b03 	vmul.f64	d6, d6, d3
 80110b6:	e7de      	b.n	8011076 <_dtoa_r+0x4ce>
 80110b8:	9a04      	ldr	r2, [sp, #16]
 80110ba:	ee24 7b07 	vmul.f64	d7, d4, d7
 80110be:	1956      	adds	r6, r2, r5
 80110c0:	4611      	mov	r1, r2
 80110c2:	eeb2 3b04 	vmov.f64	d3, #36	; 0x41200000  10.0
 80110c6:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 80110ca:	ee14 2a90 	vmov	r2, s9
 80110ce:	3230      	adds	r2, #48	; 0x30
 80110d0:	f801 2b01 	strb.w	r2, [r1], #1
 80110d4:	42b1      	cmp	r1, r6
 80110d6:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 80110da:	ee36 6b45 	vsub.f64	d6, d6, d5
 80110de:	d11a      	bne.n	8011116 <_dtoa_r+0x56e>
 80110e0:	eeb6 5b00 	vmov.f64	d5, #96	; 0x3f000000  0.5
 80110e4:	ee37 4b05 	vadd.f64	d4, d7, d5
 80110e8:	eeb4 6bc4 	vcmpe.f64	d6, d4
 80110ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80110f0:	dc4b      	bgt.n	801118a <_dtoa_r+0x5e2>
 80110f2:	ee35 7b47 	vsub.f64	d7, d5, d7
 80110f6:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80110fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80110fe:	f57f af3e 	bpl.w	8010f7e <_dtoa_r+0x3d6>
 8011102:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8011106:	2a30      	cmp	r2, #48	; 0x30
 8011108:	f106 31ff 	add.w	r1, r6, #4294967295
 801110c:	d001      	beq.n	8011112 <_dtoa_r+0x56a>
 801110e:	469b      	mov	fp, r3
 8011110:	e02a      	b.n	8011168 <_dtoa_r+0x5c0>
 8011112:	460e      	mov	r6, r1
 8011114:	e7f5      	b.n	8011102 <_dtoa_r+0x55a>
 8011116:	ee26 6b03 	vmul.f64	d6, d6, d3
 801111a:	e7d4      	b.n	80110c6 <_dtoa_r+0x51e>
 801111c:	ed9d 7b02 	vldr	d7, [sp, #8]
 8011120:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
 8011124:	9e04      	ldr	r6, [sp, #16]
 8011126:	ee87 5b06 	vdiv.f64	d5, d7, d6
 801112a:	eebd 5bc5 	vcvt.s32.f64	s10, d5
 801112e:	ee15 3a10 	vmov	r3, s10
 8011132:	3330      	adds	r3, #48	; 0x30
 8011134:	f806 3b01 	strb.w	r3, [r6], #1
 8011138:	9b04      	ldr	r3, [sp, #16]
 801113a:	1af3      	subs	r3, r6, r3
 801113c:	4599      	cmp	r9, r3
 801113e:	eeb8 3bc5 	vcvt.f64.s32	d3, s10
 8011142:	eea3 7b46 	vfms.f64	d7, d3, d6
 8011146:	d133      	bne.n	80111b0 <_dtoa_r+0x608>
 8011148:	ee37 7b07 	vadd.f64	d7, d7, d7
 801114c:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8011150:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011154:	dc18      	bgt.n	8011188 <_dtoa_r+0x5e0>
 8011156:	eeb4 7b46 	vcmp.f64	d7, d6
 801115a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801115e:	d103      	bne.n	8011168 <_dtoa_r+0x5c0>
 8011160:	ee15 3a10 	vmov	r3, s10
 8011164:	07db      	lsls	r3, r3, #31
 8011166:	d40f      	bmi.n	8011188 <_dtoa_r+0x5e0>
 8011168:	9901      	ldr	r1, [sp, #4]
 801116a:	4620      	mov	r0, r4
 801116c:	f000 fc8a 	bl	8011a84 <_Bfree>
 8011170:	2300      	movs	r3, #0
 8011172:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011174:	7033      	strb	r3, [r6, #0]
 8011176:	f10b 0301 	add.w	r3, fp, #1
 801117a:	6013      	str	r3, [r2, #0]
 801117c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801117e:	2b00      	cmp	r3, #0
 8011180:	f43f ad5b 	beq.w	8010c3a <_dtoa_r+0x92>
 8011184:	601e      	str	r6, [r3, #0]
 8011186:	e558      	b.n	8010c3a <_dtoa_r+0x92>
 8011188:	465b      	mov	r3, fp
 801118a:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 801118e:	2939      	cmp	r1, #57	; 0x39
 8011190:	f106 32ff 	add.w	r2, r6, #4294967295
 8011194:	d106      	bne.n	80111a4 <_dtoa_r+0x5fc>
 8011196:	9904      	ldr	r1, [sp, #16]
 8011198:	4291      	cmp	r1, r2
 801119a:	d107      	bne.n	80111ac <_dtoa_r+0x604>
 801119c:	2230      	movs	r2, #48	; 0x30
 801119e:	700a      	strb	r2, [r1, #0]
 80111a0:	3301      	adds	r3, #1
 80111a2:	460a      	mov	r2, r1
 80111a4:	7811      	ldrb	r1, [r2, #0]
 80111a6:	3101      	adds	r1, #1
 80111a8:	7011      	strb	r1, [r2, #0]
 80111aa:	e7b0      	b.n	801110e <_dtoa_r+0x566>
 80111ac:	4616      	mov	r6, r2
 80111ae:	e7ec      	b.n	801118a <_dtoa_r+0x5e2>
 80111b0:	ee27 7b04 	vmul.f64	d7, d7, d4
 80111b4:	eeb5 7b40 	vcmp.f64	d7, #0.0
 80111b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80111bc:	d1b3      	bne.n	8011126 <_dtoa_r+0x57e>
 80111be:	e7d3      	b.n	8011168 <_dtoa_r+0x5c0>
 80111c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80111c2:	2a00      	cmp	r2, #0
 80111c4:	f000 808d 	beq.w	80112e2 <_dtoa_r+0x73a>
 80111c8:	9a08      	ldr	r2, [sp, #32]
 80111ca:	2a01      	cmp	r2, #1
 80111cc:	dc72      	bgt.n	80112b4 <_dtoa_r+0x70c>
 80111ce:	2f00      	cmp	r7, #0
 80111d0:	d06c      	beq.n	80112ac <_dtoa_r+0x704>
 80111d2:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80111d6:	4645      	mov	r5, r8
 80111d8:	4656      	mov	r6, sl
 80111da:	9a07      	ldr	r2, [sp, #28]
 80111dc:	2101      	movs	r1, #1
 80111de:	441a      	add	r2, r3
 80111e0:	4620      	mov	r0, r4
 80111e2:	449a      	add	sl, r3
 80111e4:	9207      	str	r2, [sp, #28]
 80111e6:	f000 fced 	bl	8011bc4 <__i2b>
 80111ea:	4607      	mov	r7, r0
 80111ec:	2e00      	cmp	r6, #0
 80111ee:	dd0b      	ble.n	8011208 <_dtoa_r+0x660>
 80111f0:	9b07      	ldr	r3, [sp, #28]
 80111f2:	2b00      	cmp	r3, #0
 80111f4:	dd08      	ble.n	8011208 <_dtoa_r+0x660>
 80111f6:	42b3      	cmp	r3, r6
 80111f8:	9a07      	ldr	r2, [sp, #28]
 80111fa:	bfa8      	it	ge
 80111fc:	4633      	movge	r3, r6
 80111fe:	ebaa 0a03 	sub.w	sl, sl, r3
 8011202:	1af6      	subs	r6, r6, r3
 8011204:	1ad3      	subs	r3, r2, r3
 8011206:	9307      	str	r3, [sp, #28]
 8011208:	f1b8 0f00 	cmp.w	r8, #0
 801120c:	d01d      	beq.n	801124a <_dtoa_r+0x6a2>
 801120e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011210:	2b00      	cmp	r3, #0
 8011212:	d06a      	beq.n	80112ea <_dtoa_r+0x742>
 8011214:	b18d      	cbz	r5, 801123a <_dtoa_r+0x692>
 8011216:	4639      	mov	r1, r7
 8011218:	462a      	mov	r2, r5
 801121a:	4620      	mov	r0, r4
 801121c:	f000 fd72 	bl	8011d04 <__pow5mult>
 8011220:	9a01      	ldr	r2, [sp, #4]
 8011222:	4601      	mov	r1, r0
 8011224:	4607      	mov	r7, r0
 8011226:	4620      	mov	r0, r4
 8011228:	f000 fcd5 	bl	8011bd6 <__multiply>
 801122c:	9901      	ldr	r1, [sp, #4]
 801122e:	900c      	str	r0, [sp, #48]	; 0x30
 8011230:	4620      	mov	r0, r4
 8011232:	f000 fc27 	bl	8011a84 <_Bfree>
 8011236:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011238:	9301      	str	r3, [sp, #4]
 801123a:	ebb8 0205 	subs.w	r2, r8, r5
 801123e:	d004      	beq.n	801124a <_dtoa_r+0x6a2>
 8011240:	9901      	ldr	r1, [sp, #4]
 8011242:	4620      	mov	r0, r4
 8011244:	f000 fd5e 	bl	8011d04 <__pow5mult>
 8011248:	9001      	str	r0, [sp, #4]
 801124a:	2101      	movs	r1, #1
 801124c:	4620      	mov	r0, r4
 801124e:	f000 fcb9 	bl	8011bc4 <__i2b>
 8011252:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011254:	4605      	mov	r5, r0
 8011256:	2b00      	cmp	r3, #0
 8011258:	f000 81ca 	beq.w	80115f0 <_dtoa_r+0xa48>
 801125c:	461a      	mov	r2, r3
 801125e:	4601      	mov	r1, r0
 8011260:	4620      	mov	r0, r4
 8011262:	f000 fd4f 	bl	8011d04 <__pow5mult>
 8011266:	9b08      	ldr	r3, [sp, #32]
 8011268:	2b01      	cmp	r3, #1
 801126a:	4605      	mov	r5, r0
 801126c:	dc44      	bgt.n	80112f8 <_dtoa_r+0x750>
 801126e:	9b02      	ldr	r3, [sp, #8]
 8011270:	2b00      	cmp	r3, #0
 8011272:	d13c      	bne.n	80112ee <_dtoa_r+0x746>
 8011274:	9b03      	ldr	r3, [sp, #12]
 8011276:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801127a:	2b00      	cmp	r3, #0
 801127c:	d137      	bne.n	80112ee <_dtoa_r+0x746>
 801127e:	9b03      	ldr	r3, [sp, #12]
 8011280:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8011284:	0d1b      	lsrs	r3, r3, #20
 8011286:	051b      	lsls	r3, r3, #20
 8011288:	2b00      	cmp	r3, #0
 801128a:	d033      	beq.n	80112f4 <_dtoa_r+0x74c>
 801128c:	9b07      	ldr	r3, [sp, #28]
 801128e:	3301      	adds	r3, #1
 8011290:	f10a 0a01 	add.w	sl, sl, #1
 8011294:	9307      	str	r3, [sp, #28]
 8011296:	f04f 0801 	mov.w	r8, #1
 801129a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801129c:	bb73      	cbnz	r3, 80112fc <_dtoa_r+0x754>
 801129e:	2001      	movs	r0, #1
 80112a0:	e034      	b.n	801130c <_dtoa_r+0x764>
 80112a2:	bf00      	nop
 80112a4:	08016ad8 	.word	0x08016ad8
 80112a8:	08016ab0 	.word	0x08016ab0
 80112ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80112ae:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80112b2:	e790      	b.n	80111d6 <_dtoa_r+0x62e>
 80112b4:	f109 35ff 	add.w	r5, r9, #4294967295
 80112b8:	45a8      	cmp	r8, r5
 80112ba:	bfbf      	itttt	lt
 80112bc:	9b0b      	ldrlt	r3, [sp, #44]	; 0x2c
 80112be:	eba5 0808 	sublt.w	r8, r5, r8
 80112c2:	4443      	addlt	r3, r8
 80112c4:	930b      	strlt	r3, [sp, #44]	; 0x2c
 80112c6:	bfb6      	itet	lt
 80112c8:	46a8      	movlt	r8, r5
 80112ca:	eba8 0505 	subge.w	r5, r8, r5
 80112ce:	2500      	movlt	r5, #0
 80112d0:	f1b9 0f00 	cmp.w	r9, #0
 80112d4:	bfb9      	ittee	lt
 80112d6:	ebaa 0609 	sublt.w	r6, sl, r9
 80112da:	2300      	movlt	r3, #0
 80112dc:	4656      	movge	r6, sl
 80112de:	464b      	movge	r3, r9
 80112e0:	e77b      	b.n	80111da <_dtoa_r+0x632>
 80112e2:	4645      	mov	r5, r8
 80112e4:	4656      	mov	r6, sl
 80112e6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80112e8:	e780      	b.n	80111ec <_dtoa_r+0x644>
 80112ea:	4642      	mov	r2, r8
 80112ec:	e7a8      	b.n	8011240 <_dtoa_r+0x698>
 80112ee:	f04f 0800 	mov.w	r8, #0
 80112f2:	e7d2      	b.n	801129a <_dtoa_r+0x6f2>
 80112f4:	4698      	mov	r8, r3
 80112f6:	e7d0      	b.n	801129a <_dtoa_r+0x6f2>
 80112f8:	f04f 0800 	mov.w	r8, #0
 80112fc:	692b      	ldr	r3, [r5, #16]
 80112fe:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8011302:	6918      	ldr	r0, [r3, #16]
 8011304:	f000 fc10 	bl	8011b28 <__hi0bits>
 8011308:	f1c0 0020 	rsb	r0, r0, #32
 801130c:	9b07      	ldr	r3, [sp, #28]
 801130e:	4418      	add	r0, r3
 8011310:	f010 001f 	ands.w	r0, r0, #31
 8011314:	d047      	beq.n	80113a6 <_dtoa_r+0x7fe>
 8011316:	f1c0 0320 	rsb	r3, r0, #32
 801131a:	2b04      	cmp	r3, #4
 801131c:	dd3b      	ble.n	8011396 <_dtoa_r+0x7ee>
 801131e:	9b07      	ldr	r3, [sp, #28]
 8011320:	f1c0 001c 	rsb	r0, r0, #28
 8011324:	4482      	add	sl, r0
 8011326:	4406      	add	r6, r0
 8011328:	4403      	add	r3, r0
 801132a:	9307      	str	r3, [sp, #28]
 801132c:	f1ba 0f00 	cmp.w	sl, #0
 8011330:	dd05      	ble.n	801133e <_dtoa_r+0x796>
 8011332:	4652      	mov	r2, sl
 8011334:	9901      	ldr	r1, [sp, #4]
 8011336:	4620      	mov	r0, r4
 8011338:	f000 fd32 	bl	8011da0 <__lshift>
 801133c:	9001      	str	r0, [sp, #4]
 801133e:	9b07      	ldr	r3, [sp, #28]
 8011340:	2b00      	cmp	r3, #0
 8011342:	dd05      	ble.n	8011350 <_dtoa_r+0x7a8>
 8011344:	4629      	mov	r1, r5
 8011346:	461a      	mov	r2, r3
 8011348:	4620      	mov	r0, r4
 801134a:	f000 fd29 	bl	8011da0 <__lshift>
 801134e:	4605      	mov	r5, r0
 8011350:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011352:	b353      	cbz	r3, 80113aa <_dtoa_r+0x802>
 8011354:	4629      	mov	r1, r5
 8011356:	9801      	ldr	r0, [sp, #4]
 8011358:	f000 fd76 	bl	8011e48 <__mcmp>
 801135c:	2800      	cmp	r0, #0
 801135e:	da24      	bge.n	80113aa <_dtoa_r+0x802>
 8011360:	2300      	movs	r3, #0
 8011362:	220a      	movs	r2, #10
 8011364:	9901      	ldr	r1, [sp, #4]
 8011366:	4620      	mov	r0, r4
 8011368:	f000 fba3 	bl	8011ab2 <__multadd>
 801136c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801136e:	9001      	str	r0, [sp, #4]
 8011370:	f10b 3bff 	add.w	fp, fp, #4294967295
 8011374:	2b00      	cmp	r3, #0
 8011376:	f000 8142 	beq.w	80115fe <_dtoa_r+0xa56>
 801137a:	2300      	movs	r3, #0
 801137c:	4639      	mov	r1, r7
 801137e:	220a      	movs	r2, #10
 8011380:	4620      	mov	r0, r4
 8011382:	f000 fb96 	bl	8011ab2 <__multadd>
 8011386:	9b06      	ldr	r3, [sp, #24]
 8011388:	2b00      	cmp	r3, #0
 801138a:	4607      	mov	r7, r0
 801138c:	dc4b      	bgt.n	8011426 <_dtoa_r+0x87e>
 801138e:	9b08      	ldr	r3, [sp, #32]
 8011390:	2b02      	cmp	r3, #2
 8011392:	dd48      	ble.n	8011426 <_dtoa_r+0x87e>
 8011394:	e011      	b.n	80113ba <_dtoa_r+0x812>
 8011396:	d0c9      	beq.n	801132c <_dtoa_r+0x784>
 8011398:	9a07      	ldr	r2, [sp, #28]
 801139a:	331c      	adds	r3, #28
 801139c:	441a      	add	r2, r3
 801139e:	449a      	add	sl, r3
 80113a0:	441e      	add	r6, r3
 80113a2:	4613      	mov	r3, r2
 80113a4:	e7c1      	b.n	801132a <_dtoa_r+0x782>
 80113a6:	4603      	mov	r3, r0
 80113a8:	e7f6      	b.n	8011398 <_dtoa_r+0x7f0>
 80113aa:	f1b9 0f00 	cmp.w	r9, #0
 80113ae:	dc34      	bgt.n	801141a <_dtoa_r+0x872>
 80113b0:	9b08      	ldr	r3, [sp, #32]
 80113b2:	2b02      	cmp	r3, #2
 80113b4:	dd31      	ble.n	801141a <_dtoa_r+0x872>
 80113b6:	f8cd 9018 	str.w	r9, [sp, #24]
 80113ba:	9b06      	ldr	r3, [sp, #24]
 80113bc:	b963      	cbnz	r3, 80113d8 <_dtoa_r+0x830>
 80113be:	4629      	mov	r1, r5
 80113c0:	2205      	movs	r2, #5
 80113c2:	4620      	mov	r0, r4
 80113c4:	f000 fb75 	bl	8011ab2 <__multadd>
 80113c8:	4601      	mov	r1, r0
 80113ca:	4605      	mov	r5, r0
 80113cc:	9801      	ldr	r0, [sp, #4]
 80113ce:	f000 fd3b 	bl	8011e48 <__mcmp>
 80113d2:	2800      	cmp	r0, #0
 80113d4:	f73f adfc 	bgt.w	8010fd0 <_dtoa_r+0x428>
 80113d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80113da:	9e04      	ldr	r6, [sp, #16]
 80113dc:	ea6f 0b03 	mvn.w	fp, r3
 80113e0:	f04f 0900 	mov.w	r9, #0
 80113e4:	4629      	mov	r1, r5
 80113e6:	4620      	mov	r0, r4
 80113e8:	f000 fb4c 	bl	8011a84 <_Bfree>
 80113ec:	2f00      	cmp	r7, #0
 80113ee:	f43f aebb 	beq.w	8011168 <_dtoa_r+0x5c0>
 80113f2:	f1b9 0f00 	cmp.w	r9, #0
 80113f6:	d005      	beq.n	8011404 <_dtoa_r+0x85c>
 80113f8:	45b9      	cmp	r9, r7
 80113fa:	d003      	beq.n	8011404 <_dtoa_r+0x85c>
 80113fc:	4649      	mov	r1, r9
 80113fe:	4620      	mov	r0, r4
 8011400:	f000 fb40 	bl	8011a84 <_Bfree>
 8011404:	4639      	mov	r1, r7
 8011406:	4620      	mov	r0, r4
 8011408:	f000 fb3c 	bl	8011a84 <_Bfree>
 801140c:	e6ac      	b.n	8011168 <_dtoa_r+0x5c0>
 801140e:	2500      	movs	r5, #0
 8011410:	462f      	mov	r7, r5
 8011412:	e7e1      	b.n	80113d8 <_dtoa_r+0x830>
 8011414:	469b      	mov	fp, r3
 8011416:	462f      	mov	r7, r5
 8011418:	e5da      	b.n	8010fd0 <_dtoa_r+0x428>
 801141a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801141c:	f8cd 9018 	str.w	r9, [sp, #24]
 8011420:	2b00      	cmp	r3, #0
 8011422:	f000 80f3 	beq.w	801160c <_dtoa_r+0xa64>
 8011426:	2e00      	cmp	r6, #0
 8011428:	dd05      	ble.n	8011436 <_dtoa_r+0x88e>
 801142a:	4639      	mov	r1, r7
 801142c:	4632      	mov	r2, r6
 801142e:	4620      	mov	r0, r4
 8011430:	f000 fcb6 	bl	8011da0 <__lshift>
 8011434:	4607      	mov	r7, r0
 8011436:	f1b8 0f00 	cmp.w	r8, #0
 801143a:	d04c      	beq.n	80114d6 <_dtoa_r+0x92e>
 801143c:	6879      	ldr	r1, [r7, #4]
 801143e:	4620      	mov	r0, r4
 8011440:	f000 faec 	bl	8011a1c <_Balloc>
 8011444:	693a      	ldr	r2, [r7, #16]
 8011446:	3202      	adds	r2, #2
 8011448:	4606      	mov	r6, r0
 801144a:	0092      	lsls	r2, r2, #2
 801144c:	f107 010c 	add.w	r1, r7, #12
 8011450:	300c      	adds	r0, #12
 8011452:	f7fe fcc0 	bl	800fdd6 <memcpy>
 8011456:	2201      	movs	r2, #1
 8011458:	4631      	mov	r1, r6
 801145a:	4620      	mov	r0, r4
 801145c:	f000 fca0 	bl	8011da0 <__lshift>
 8011460:	9b02      	ldr	r3, [sp, #8]
 8011462:	f8dd a010 	ldr.w	sl, [sp, #16]
 8011466:	f003 0301 	and.w	r3, r3, #1
 801146a:	46b9      	mov	r9, r7
 801146c:	9307      	str	r3, [sp, #28]
 801146e:	4607      	mov	r7, r0
 8011470:	4629      	mov	r1, r5
 8011472:	9801      	ldr	r0, [sp, #4]
 8011474:	f7ff fb0a 	bl	8010a8c <quorem>
 8011478:	4649      	mov	r1, r9
 801147a:	4606      	mov	r6, r0
 801147c:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8011480:	9801      	ldr	r0, [sp, #4]
 8011482:	f000 fce1 	bl	8011e48 <__mcmp>
 8011486:	463a      	mov	r2, r7
 8011488:	9002      	str	r0, [sp, #8]
 801148a:	4629      	mov	r1, r5
 801148c:	4620      	mov	r0, r4
 801148e:	f000 fcf5 	bl	8011e7c <__mdiff>
 8011492:	68c3      	ldr	r3, [r0, #12]
 8011494:	4602      	mov	r2, r0
 8011496:	bb03      	cbnz	r3, 80114da <_dtoa_r+0x932>
 8011498:	4601      	mov	r1, r0
 801149a:	9009      	str	r0, [sp, #36]	; 0x24
 801149c:	9801      	ldr	r0, [sp, #4]
 801149e:	f000 fcd3 	bl	8011e48 <__mcmp>
 80114a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80114a4:	4603      	mov	r3, r0
 80114a6:	4611      	mov	r1, r2
 80114a8:	4620      	mov	r0, r4
 80114aa:	9309      	str	r3, [sp, #36]	; 0x24
 80114ac:	f000 faea 	bl	8011a84 <_Bfree>
 80114b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80114b2:	b9a3      	cbnz	r3, 80114de <_dtoa_r+0x936>
 80114b4:	9a08      	ldr	r2, [sp, #32]
 80114b6:	b992      	cbnz	r2, 80114de <_dtoa_r+0x936>
 80114b8:	9a07      	ldr	r2, [sp, #28]
 80114ba:	b982      	cbnz	r2, 80114de <_dtoa_r+0x936>
 80114bc:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80114c0:	d029      	beq.n	8011516 <_dtoa_r+0x96e>
 80114c2:	9b02      	ldr	r3, [sp, #8]
 80114c4:	2b00      	cmp	r3, #0
 80114c6:	dd01      	ble.n	80114cc <_dtoa_r+0x924>
 80114c8:	f106 0831 	add.w	r8, r6, #49	; 0x31
 80114cc:	f10a 0601 	add.w	r6, sl, #1
 80114d0:	f88a 8000 	strb.w	r8, [sl]
 80114d4:	e786      	b.n	80113e4 <_dtoa_r+0x83c>
 80114d6:	4638      	mov	r0, r7
 80114d8:	e7c2      	b.n	8011460 <_dtoa_r+0x8b8>
 80114da:	2301      	movs	r3, #1
 80114dc:	e7e3      	b.n	80114a6 <_dtoa_r+0x8fe>
 80114de:	9a02      	ldr	r2, [sp, #8]
 80114e0:	2a00      	cmp	r2, #0
 80114e2:	db04      	blt.n	80114ee <_dtoa_r+0x946>
 80114e4:	d124      	bne.n	8011530 <_dtoa_r+0x988>
 80114e6:	9a08      	ldr	r2, [sp, #32]
 80114e8:	bb12      	cbnz	r2, 8011530 <_dtoa_r+0x988>
 80114ea:	9a07      	ldr	r2, [sp, #28]
 80114ec:	bb02      	cbnz	r2, 8011530 <_dtoa_r+0x988>
 80114ee:	2b00      	cmp	r3, #0
 80114f0:	ddec      	ble.n	80114cc <_dtoa_r+0x924>
 80114f2:	2201      	movs	r2, #1
 80114f4:	9901      	ldr	r1, [sp, #4]
 80114f6:	4620      	mov	r0, r4
 80114f8:	f000 fc52 	bl	8011da0 <__lshift>
 80114fc:	4629      	mov	r1, r5
 80114fe:	9001      	str	r0, [sp, #4]
 8011500:	f000 fca2 	bl	8011e48 <__mcmp>
 8011504:	2800      	cmp	r0, #0
 8011506:	dc03      	bgt.n	8011510 <_dtoa_r+0x968>
 8011508:	d1e0      	bne.n	80114cc <_dtoa_r+0x924>
 801150a:	f018 0f01 	tst.w	r8, #1
 801150e:	d0dd      	beq.n	80114cc <_dtoa_r+0x924>
 8011510:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8011514:	d1d8      	bne.n	80114c8 <_dtoa_r+0x920>
 8011516:	2339      	movs	r3, #57	; 0x39
 8011518:	f10a 0601 	add.w	r6, sl, #1
 801151c:	f88a 3000 	strb.w	r3, [sl]
 8011520:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8011524:	2b39      	cmp	r3, #57	; 0x39
 8011526:	f106 32ff 	add.w	r2, r6, #4294967295
 801152a:	d04c      	beq.n	80115c6 <_dtoa_r+0xa1e>
 801152c:	3301      	adds	r3, #1
 801152e:	e051      	b.n	80115d4 <_dtoa_r+0xa2c>
 8011530:	2b00      	cmp	r3, #0
 8011532:	f10a 0601 	add.w	r6, sl, #1
 8011536:	dd05      	ble.n	8011544 <_dtoa_r+0x99c>
 8011538:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 801153c:	d0eb      	beq.n	8011516 <_dtoa_r+0x96e>
 801153e:	f108 0801 	add.w	r8, r8, #1
 8011542:	e7c5      	b.n	80114d0 <_dtoa_r+0x928>
 8011544:	9b04      	ldr	r3, [sp, #16]
 8011546:	9a06      	ldr	r2, [sp, #24]
 8011548:	f806 8c01 	strb.w	r8, [r6, #-1]
 801154c:	1af3      	subs	r3, r6, r3
 801154e:	4293      	cmp	r3, r2
 8011550:	d021      	beq.n	8011596 <_dtoa_r+0x9ee>
 8011552:	2300      	movs	r3, #0
 8011554:	220a      	movs	r2, #10
 8011556:	9901      	ldr	r1, [sp, #4]
 8011558:	4620      	mov	r0, r4
 801155a:	f000 faaa 	bl	8011ab2 <__multadd>
 801155e:	45b9      	cmp	r9, r7
 8011560:	9001      	str	r0, [sp, #4]
 8011562:	f04f 0300 	mov.w	r3, #0
 8011566:	f04f 020a 	mov.w	r2, #10
 801156a:	4649      	mov	r1, r9
 801156c:	4620      	mov	r0, r4
 801156e:	d105      	bne.n	801157c <_dtoa_r+0x9d4>
 8011570:	f000 fa9f 	bl	8011ab2 <__multadd>
 8011574:	4681      	mov	r9, r0
 8011576:	4607      	mov	r7, r0
 8011578:	46b2      	mov	sl, r6
 801157a:	e779      	b.n	8011470 <_dtoa_r+0x8c8>
 801157c:	f000 fa99 	bl	8011ab2 <__multadd>
 8011580:	4639      	mov	r1, r7
 8011582:	4681      	mov	r9, r0
 8011584:	2300      	movs	r3, #0
 8011586:	220a      	movs	r2, #10
 8011588:	4620      	mov	r0, r4
 801158a:	f000 fa92 	bl	8011ab2 <__multadd>
 801158e:	4607      	mov	r7, r0
 8011590:	e7f2      	b.n	8011578 <_dtoa_r+0x9d0>
 8011592:	f04f 0900 	mov.w	r9, #0
 8011596:	2201      	movs	r2, #1
 8011598:	9901      	ldr	r1, [sp, #4]
 801159a:	4620      	mov	r0, r4
 801159c:	f000 fc00 	bl	8011da0 <__lshift>
 80115a0:	4629      	mov	r1, r5
 80115a2:	9001      	str	r0, [sp, #4]
 80115a4:	f000 fc50 	bl	8011e48 <__mcmp>
 80115a8:	2800      	cmp	r0, #0
 80115aa:	dcb9      	bgt.n	8011520 <_dtoa_r+0x978>
 80115ac:	d102      	bne.n	80115b4 <_dtoa_r+0xa0c>
 80115ae:	f018 0f01 	tst.w	r8, #1
 80115b2:	d1b5      	bne.n	8011520 <_dtoa_r+0x978>
 80115b4:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80115b8:	2b30      	cmp	r3, #48	; 0x30
 80115ba:	f106 32ff 	add.w	r2, r6, #4294967295
 80115be:	f47f af11 	bne.w	80113e4 <_dtoa_r+0x83c>
 80115c2:	4616      	mov	r6, r2
 80115c4:	e7f6      	b.n	80115b4 <_dtoa_r+0xa0c>
 80115c6:	9b04      	ldr	r3, [sp, #16]
 80115c8:	4293      	cmp	r3, r2
 80115ca:	d105      	bne.n	80115d8 <_dtoa_r+0xa30>
 80115cc:	9a04      	ldr	r2, [sp, #16]
 80115ce:	f10b 0b01 	add.w	fp, fp, #1
 80115d2:	2331      	movs	r3, #49	; 0x31
 80115d4:	7013      	strb	r3, [r2, #0]
 80115d6:	e705      	b.n	80113e4 <_dtoa_r+0x83c>
 80115d8:	4616      	mov	r6, r2
 80115da:	e7a1      	b.n	8011520 <_dtoa_r+0x978>
 80115dc:	4b16      	ldr	r3, [pc, #88]	; (8011638 <_dtoa_r+0xa90>)
 80115de:	f7ff bb48 	b.w	8010c72 <_dtoa_r+0xca>
 80115e2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80115e4:	2b00      	cmp	r3, #0
 80115e6:	f47f ab23 	bne.w	8010c30 <_dtoa_r+0x88>
 80115ea:	4b14      	ldr	r3, [pc, #80]	; (801163c <_dtoa_r+0xa94>)
 80115ec:	f7ff bb41 	b.w	8010c72 <_dtoa_r+0xca>
 80115f0:	9b08      	ldr	r3, [sp, #32]
 80115f2:	2b01      	cmp	r3, #1
 80115f4:	f77f ae3b 	ble.w	801126e <_dtoa_r+0x6c6>
 80115f8:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
 80115fc:	e64f      	b.n	801129e <_dtoa_r+0x6f6>
 80115fe:	9b06      	ldr	r3, [sp, #24]
 8011600:	2b00      	cmp	r3, #0
 8011602:	dc03      	bgt.n	801160c <_dtoa_r+0xa64>
 8011604:	9b08      	ldr	r3, [sp, #32]
 8011606:	2b02      	cmp	r3, #2
 8011608:	f73f aed7 	bgt.w	80113ba <_dtoa_r+0x812>
 801160c:	9e04      	ldr	r6, [sp, #16]
 801160e:	9801      	ldr	r0, [sp, #4]
 8011610:	4629      	mov	r1, r5
 8011612:	f7ff fa3b 	bl	8010a8c <quorem>
 8011616:	f100 0830 	add.w	r8, r0, #48	; 0x30
 801161a:	f806 8b01 	strb.w	r8, [r6], #1
 801161e:	9b04      	ldr	r3, [sp, #16]
 8011620:	9a06      	ldr	r2, [sp, #24]
 8011622:	1af3      	subs	r3, r6, r3
 8011624:	429a      	cmp	r2, r3
 8011626:	ddb4      	ble.n	8011592 <_dtoa_r+0x9ea>
 8011628:	2300      	movs	r3, #0
 801162a:	220a      	movs	r2, #10
 801162c:	9901      	ldr	r1, [sp, #4]
 801162e:	4620      	mov	r0, r4
 8011630:	f000 fa3f 	bl	8011ab2 <__multadd>
 8011634:	9001      	str	r0, [sp, #4]
 8011636:	e7ea      	b.n	801160e <_dtoa_r+0xa66>
 8011638:	08016a1c 	.word	0x08016a1c
 801163c:	08016a40 	.word	0x08016a40

08011640 <__sflush_r>:
 8011640:	898a      	ldrh	r2, [r1, #12]
 8011642:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011646:	4605      	mov	r5, r0
 8011648:	0710      	lsls	r0, r2, #28
 801164a:	460c      	mov	r4, r1
 801164c:	d458      	bmi.n	8011700 <__sflush_r+0xc0>
 801164e:	684b      	ldr	r3, [r1, #4]
 8011650:	2b00      	cmp	r3, #0
 8011652:	dc05      	bgt.n	8011660 <__sflush_r+0x20>
 8011654:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8011656:	2b00      	cmp	r3, #0
 8011658:	dc02      	bgt.n	8011660 <__sflush_r+0x20>
 801165a:	2000      	movs	r0, #0
 801165c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011660:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8011662:	2e00      	cmp	r6, #0
 8011664:	d0f9      	beq.n	801165a <__sflush_r+0x1a>
 8011666:	2300      	movs	r3, #0
 8011668:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801166c:	682f      	ldr	r7, [r5, #0]
 801166e:	6a21      	ldr	r1, [r4, #32]
 8011670:	602b      	str	r3, [r5, #0]
 8011672:	d032      	beq.n	80116da <__sflush_r+0x9a>
 8011674:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8011676:	89a3      	ldrh	r3, [r4, #12]
 8011678:	075a      	lsls	r2, r3, #29
 801167a:	d505      	bpl.n	8011688 <__sflush_r+0x48>
 801167c:	6863      	ldr	r3, [r4, #4]
 801167e:	1ac0      	subs	r0, r0, r3
 8011680:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011682:	b10b      	cbz	r3, 8011688 <__sflush_r+0x48>
 8011684:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8011686:	1ac0      	subs	r0, r0, r3
 8011688:	2300      	movs	r3, #0
 801168a:	4602      	mov	r2, r0
 801168c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801168e:	6a21      	ldr	r1, [r4, #32]
 8011690:	4628      	mov	r0, r5
 8011692:	47b0      	blx	r6
 8011694:	1c43      	adds	r3, r0, #1
 8011696:	89a3      	ldrh	r3, [r4, #12]
 8011698:	d106      	bne.n	80116a8 <__sflush_r+0x68>
 801169a:	6829      	ldr	r1, [r5, #0]
 801169c:	291d      	cmp	r1, #29
 801169e:	d848      	bhi.n	8011732 <__sflush_r+0xf2>
 80116a0:	4a29      	ldr	r2, [pc, #164]	; (8011748 <__sflush_r+0x108>)
 80116a2:	40ca      	lsrs	r2, r1
 80116a4:	07d6      	lsls	r6, r2, #31
 80116a6:	d544      	bpl.n	8011732 <__sflush_r+0xf2>
 80116a8:	2200      	movs	r2, #0
 80116aa:	6062      	str	r2, [r4, #4]
 80116ac:	04d9      	lsls	r1, r3, #19
 80116ae:	6922      	ldr	r2, [r4, #16]
 80116b0:	6022      	str	r2, [r4, #0]
 80116b2:	d504      	bpl.n	80116be <__sflush_r+0x7e>
 80116b4:	1c42      	adds	r2, r0, #1
 80116b6:	d101      	bne.n	80116bc <__sflush_r+0x7c>
 80116b8:	682b      	ldr	r3, [r5, #0]
 80116ba:	b903      	cbnz	r3, 80116be <__sflush_r+0x7e>
 80116bc:	6560      	str	r0, [r4, #84]	; 0x54
 80116be:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80116c0:	602f      	str	r7, [r5, #0]
 80116c2:	2900      	cmp	r1, #0
 80116c4:	d0c9      	beq.n	801165a <__sflush_r+0x1a>
 80116c6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80116ca:	4299      	cmp	r1, r3
 80116cc:	d002      	beq.n	80116d4 <__sflush_r+0x94>
 80116ce:	4628      	mov	r0, r5
 80116d0:	f7fe fb94 	bl	800fdfc <_free_r>
 80116d4:	2000      	movs	r0, #0
 80116d6:	6360      	str	r0, [r4, #52]	; 0x34
 80116d8:	e7c0      	b.n	801165c <__sflush_r+0x1c>
 80116da:	2301      	movs	r3, #1
 80116dc:	4628      	mov	r0, r5
 80116de:	47b0      	blx	r6
 80116e0:	1c41      	adds	r1, r0, #1
 80116e2:	d1c8      	bne.n	8011676 <__sflush_r+0x36>
 80116e4:	682b      	ldr	r3, [r5, #0]
 80116e6:	2b00      	cmp	r3, #0
 80116e8:	d0c5      	beq.n	8011676 <__sflush_r+0x36>
 80116ea:	2b1d      	cmp	r3, #29
 80116ec:	d001      	beq.n	80116f2 <__sflush_r+0xb2>
 80116ee:	2b16      	cmp	r3, #22
 80116f0:	d101      	bne.n	80116f6 <__sflush_r+0xb6>
 80116f2:	602f      	str	r7, [r5, #0]
 80116f4:	e7b1      	b.n	801165a <__sflush_r+0x1a>
 80116f6:	89a3      	ldrh	r3, [r4, #12]
 80116f8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80116fc:	81a3      	strh	r3, [r4, #12]
 80116fe:	e7ad      	b.n	801165c <__sflush_r+0x1c>
 8011700:	690f      	ldr	r7, [r1, #16]
 8011702:	2f00      	cmp	r7, #0
 8011704:	d0a9      	beq.n	801165a <__sflush_r+0x1a>
 8011706:	0793      	lsls	r3, r2, #30
 8011708:	680e      	ldr	r6, [r1, #0]
 801170a:	bf08      	it	eq
 801170c:	694b      	ldreq	r3, [r1, #20]
 801170e:	600f      	str	r7, [r1, #0]
 8011710:	bf18      	it	ne
 8011712:	2300      	movne	r3, #0
 8011714:	eba6 0807 	sub.w	r8, r6, r7
 8011718:	608b      	str	r3, [r1, #8]
 801171a:	f1b8 0f00 	cmp.w	r8, #0
 801171e:	dd9c      	ble.n	801165a <__sflush_r+0x1a>
 8011720:	4643      	mov	r3, r8
 8011722:	463a      	mov	r2, r7
 8011724:	6a21      	ldr	r1, [r4, #32]
 8011726:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8011728:	4628      	mov	r0, r5
 801172a:	47b0      	blx	r6
 801172c:	2800      	cmp	r0, #0
 801172e:	dc06      	bgt.n	801173e <__sflush_r+0xfe>
 8011730:	89a3      	ldrh	r3, [r4, #12]
 8011732:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8011736:	81a3      	strh	r3, [r4, #12]
 8011738:	f04f 30ff 	mov.w	r0, #4294967295
 801173c:	e78e      	b.n	801165c <__sflush_r+0x1c>
 801173e:	4407      	add	r7, r0
 8011740:	eba8 0800 	sub.w	r8, r8, r0
 8011744:	e7e9      	b.n	801171a <__sflush_r+0xda>
 8011746:	bf00      	nop
 8011748:	20400001 	.word	0x20400001

0801174c <_fflush_r>:
 801174c:	b538      	push	{r3, r4, r5, lr}
 801174e:	690b      	ldr	r3, [r1, #16]
 8011750:	4605      	mov	r5, r0
 8011752:	460c      	mov	r4, r1
 8011754:	b1db      	cbz	r3, 801178e <_fflush_r+0x42>
 8011756:	b118      	cbz	r0, 8011760 <_fflush_r+0x14>
 8011758:	6983      	ldr	r3, [r0, #24]
 801175a:	b90b      	cbnz	r3, 8011760 <_fflush_r+0x14>
 801175c:	f000 f860 	bl	8011820 <__sinit>
 8011760:	4b0c      	ldr	r3, [pc, #48]	; (8011794 <_fflush_r+0x48>)
 8011762:	429c      	cmp	r4, r3
 8011764:	d109      	bne.n	801177a <_fflush_r+0x2e>
 8011766:	686c      	ldr	r4, [r5, #4]
 8011768:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801176c:	b17b      	cbz	r3, 801178e <_fflush_r+0x42>
 801176e:	4621      	mov	r1, r4
 8011770:	4628      	mov	r0, r5
 8011772:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011776:	f7ff bf63 	b.w	8011640 <__sflush_r>
 801177a:	4b07      	ldr	r3, [pc, #28]	; (8011798 <_fflush_r+0x4c>)
 801177c:	429c      	cmp	r4, r3
 801177e:	d101      	bne.n	8011784 <_fflush_r+0x38>
 8011780:	68ac      	ldr	r4, [r5, #8]
 8011782:	e7f1      	b.n	8011768 <_fflush_r+0x1c>
 8011784:	4b05      	ldr	r3, [pc, #20]	; (801179c <_fflush_r+0x50>)
 8011786:	429c      	cmp	r4, r3
 8011788:	bf08      	it	eq
 801178a:	68ec      	ldreq	r4, [r5, #12]
 801178c:	e7ec      	b.n	8011768 <_fflush_r+0x1c>
 801178e:	2000      	movs	r0, #0
 8011790:	bd38      	pop	{r3, r4, r5, pc}
 8011792:	bf00      	nop
 8011794:	08016a70 	.word	0x08016a70
 8011798:	08016a90 	.word	0x08016a90
 801179c:	08016a50 	.word	0x08016a50

080117a0 <std>:
 80117a0:	2300      	movs	r3, #0
 80117a2:	b510      	push	{r4, lr}
 80117a4:	4604      	mov	r4, r0
 80117a6:	e9c0 3300 	strd	r3, r3, [r0]
 80117aa:	6083      	str	r3, [r0, #8]
 80117ac:	8181      	strh	r1, [r0, #12]
 80117ae:	6643      	str	r3, [r0, #100]	; 0x64
 80117b0:	81c2      	strh	r2, [r0, #14]
 80117b2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80117b6:	6183      	str	r3, [r0, #24]
 80117b8:	4619      	mov	r1, r3
 80117ba:	2208      	movs	r2, #8
 80117bc:	305c      	adds	r0, #92	; 0x5c
 80117be:	f7fe fb15 	bl	800fdec <memset>
 80117c2:	4b05      	ldr	r3, [pc, #20]	; (80117d8 <std+0x38>)
 80117c4:	6263      	str	r3, [r4, #36]	; 0x24
 80117c6:	4b05      	ldr	r3, [pc, #20]	; (80117dc <std+0x3c>)
 80117c8:	62a3      	str	r3, [r4, #40]	; 0x28
 80117ca:	4b05      	ldr	r3, [pc, #20]	; (80117e0 <std+0x40>)
 80117cc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80117ce:	4b05      	ldr	r3, [pc, #20]	; (80117e4 <std+0x44>)
 80117d0:	6224      	str	r4, [r4, #32]
 80117d2:	6323      	str	r3, [r4, #48]	; 0x30
 80117d4:	bd10      	pop	{r4, pc}
 80117d6:	bf00      	nop
 80117d8:	080122bd 	.word	0x080122bd
 80117dc:	080122df 	.word	0x080122df
 80117e0:	08012317 	.word	0x08012317
 80117e4:	0801233b 	.word	0x0801233b

080117e8 <_cleanup_r>:
 80117e8:	4901      	ldr	r1, [pc, #4]	; (80117f0 <_cleanup_r+0x8>)
 80117ea:	f000 b885 	b.w	80118f8 <_fwalk_reent>
 80117ee:	bf00      	nop
 80117f0:	0801174d 	.word	0x0801174d

080117f4 <__sfmoreglue>:
 80117f4:	b570      	push	{r4, r5, r6, lr}
 80117f6:	1e4a      	subs	r2, r1, #1
 80117f8:	2568      	movs	r5, #104	; 0x68
 80117fa:	4355      	muls	r5, r2
 80117fc:	460e      	mov	r6, r1
 80117fe:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8011802:	f7fe fb49 	bl	800fe98 <_malloc_r>
 8011806:	4604      	mov	r4, r0
 8011808:	b140      	cbz	r0, 801181c <__sfmoreglue+0x28>
 801180a:	2100      	movs	r1, #0
 801180c:	e9c0 1600 	strd	r1, r6, [r0]
 8011810:	300c      	adds	r0, #12
 8011812:	60a0      	str	r0, [r4, #8]
 8011814:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8011818:	f7fe fae8 	bl	800fdec <memset>
 801181c:	4620      	mov	r0, r4
 801181e:	bd70      	pop	{r4, r5, r6, pc}

08011820 <__sinit>:
 8011820:	6983      	ldr	r3, [r0, #24]
 8011822:	b510      	push	{r4, lr}
 8011824:	4604      	mov	r4, r0
 8011826:	bb33      	cbnz	r3, 8011876 <__sinit+0x56>
 8011828:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 801182c:	6503      	str	r3, [r0, #80]	; 0x50
 801182e:	4b12      	ldr	r3, [pc, #72]	; (8011878 <__sinit+0x58>)
 8011830:	4a12      	ldr	r2, [pc, #72]	; (801187c <__sinit+0x5c>)
 8011832:	681b      	ldr	r3, [r3, #0]
 8011834:	6282      	str	r2, [r0, #40]	; 0x28
 8011836:	4298      	cmp	r0, r3
 8011838:	bf04      	itt	eq
 801183a:	2301      	moveq	r3, #1
 801183c:	6183      	streq	r3, [r0, #24]
 801183e:	f000 f81f 	bl	8011880 <__sfp>
 8011842:	6060      	str	r0, [r4, #4]
 8011844:	4620      	mov	r0, r4
 8011846:	f000 f81b 	bl	8011880 <__sfp>
 801184a:	60a0      	str	r0, [r4, #8]
 801184c:	4620      	mov	r0, r4
 801184e:	f000 f817 	bl	8011880 <__sfp>
 8011852:	2200      	movs	r2, #0
 8011854:	60e0      	str	r0, [r4, #12]
 8011856:	2104      	movs	r1, #4
 8011858:	6860      	ldr	r0, [r4, #4]
 801185a:	f7ff ffa1 	bl	80117a0 <std>
 801185e:	2201      	movs	r2, #1
 8011860:	2109      	movs	r1, #9
 8011862:	68a0      	ldr	r0, [r4, #8]
 8011864:	f7ff ff9c 	bl	80117a0 <std>
 8011868:	2202      	movs	r2, #2
 801186a:	2112      	movs	r1, #18
 801186c:	68e0      	ldr	r0, [r4, #12]
 801186e:	f7ff ff97 	bl	80117a0 <std>
 8011872:	2301      	movs	r3, #1
 8011874:	61a3      	str	r3, [r4, #24]
 8011876:	bd10      	pop	{r4, pc}
 8011878:	08016a0c 	.word	0x08016a0c
 801187c:	080117e9 	.word	0x080117e9

08011880 <__sfp>:
 8011880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011882:	4b1b      	ldr	r3, [pc, #108]	; (80118f0 <__sfp+0x70>)
 8011884:	681e      	ldr	r6, [r3, #0]
 8011886:	69b3      	ldr	r3, [r6, #24]
 8011888:	4607      	mov	r7, r0
 801188a:	b913      	cbnz	r3, 8011892 <__sfp+0x12>
 801188c:	4630      	mov	r0, r6
 801188e:	f7ff ffc7 	bl	8011820 <__sinit>
 8011892:	3648      	adds	r6, #72	; 0x48
 8011894:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8011898:	3b01      	subs	r3, #1
 801189a:	d503      	bpl.n	80118a4 <__sfp+0x24>
 801189c:	6833      	ldr	r3, [r6, #0]
 801189e:	b133      	cbz	r3, 80118ae <__sfp+0x2e>
 80118a0:	6836      	ldr	r6, [r6, #0]
 80118a2:	e7f7      	b.n	8011894 <__sfp+0x14>
 80118a4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80118a8:	b16d      	cbz	r5, 80118c6 <__sfp+0x46>
 80118aa:	3468      	adds	r4, #104	; 0x68
 80118ac:	e7f4      	b.n	8011898 <__sfp+0x18>
 80118ae:	2104      	movs	r1, #4
 80118b0:	4638      	mov	r0, r7
 80118b2:	f7ff ff9f 	bl	80117f4 <__sfmoreglue>
 80118b6:	6030      	str	r0, [r6, #0]
 80118b8:	2800      	cmp	r0, #0
 80118ba:	d1f1      	bne.n	80118a0 <__sfp+0x20>
 80118bc:	230c      	movs	r3, #12
 80118be:	603b      	str	r3, [r7, #0]
 80118c0:	4604      	mov	r4, r0
 80118c2:	4620      	mov	r0, r4
 80118c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80118c6:	4b0b      	ldr	r3, [pc, #44]	; (80118f4 <__sfp+0x74>)
 80118c8:	6665      	str	r5, [r4, #100]	; 0x64
 80118ca:	e9c4 5500 	strd	r5, r5, [r4]
 80118ce:	60a5      	str	r5, [r4, #8]
 80118d0:	e9c4 3503 	strd	r3, r5, [r4, #12]
 80118d4:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80118d8:	2208      	movs	r2, #8
 80118da:	4629      	mov	r1, r5
 80118dc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80118e0:	f7fe fa84 	bl	800fdec <memset>
 80118e4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80118e8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80118ec:	e7e9      	b.n	80118c2 <__sfp+0x42>
 80118ee:	bf00      	nop
 80118f0:	08016a0c 	.word	0x08016a0c
 80118f4:	ffff0001 	.word	0xffff0001

080118f8 <_fwalk_reent>:
 80118f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80118fc:	4680      	mov	r8, r0
 80118fe:	4689      	mov	r9, r1
 8011900:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8011904:	2600      	movs	r6, #0
 8011906:	b914      	cbnz	r4, 801190e <_fwalk_reent+0x16>
 8011908:	4630      	mov	r0, r6
 801190a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801190e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8011912:	3f01      	subs	r7, #1
 8011914:	d501      	bpl.n	801191a <_fwalk_reent+0x22>
 8011916:	6824      	ldr	r4, [r4, #0]
 8011918:	e7f5      	b.n	8011906 <_fwalk_reent+0xe>
 801191a:	89ab      	ldrh	r3, [r5, #12]
 801191c:	2b01      	cmp	r3, #1
 801191e:	d907      	bls.n	8011930 <_fwalk_reent+0x38>
 8011920:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8011924:	3301      	adds	r3, #1
 8011926:	d003      	beq.n	8011930 <_fwalk_reent+0x38>
 8011928:	4629      	mov	r1, r5
 801192a:	4640      	mov	r0, r8
 801192c:	47c8      	blx	r9
 801192e:	4306      	orrs	r6, r0
 8011930:	3568      	adds	r5, #104	; 0x68
 8011932:	e7ee      	b.n	8011912 <_fwalk_reent+0x1a>

08011934 <_localeconv_r>:
 8011934:	4b04      	ldr	r3, [pc, #16]	; (8011948 <_localeconv_r+0x14>)
 8011936:	681b      	ldr	r3, [r3, #0]
 8011938:	6a18      	ldr	r0, [r3, #32]
 801193a:	4b04      	ldr	r3, [pc, #16]	; (801194c <_localeconv_r+0x18>)
 801193c:	2800      	cmp	r0, #0
 801193e:	bf08      	it	eq
 8011940:	4618      	moveq	r0, r3
 8011942:	30f0      	adds	r0, #240	; 0xf0
 8011944:	4770      	bx	lr
 8011946:	bf00      	nop
 8011948:	200006c8 	.word	0x200006c8
 801194c:	2000072c 	.word	0x2000072c

08011950 <__swhatbuf_r>:
 8011950:	b570      	push	{r4, r5, r6, lr}
 8011952:	460e      	mov	r6, r1
 8011954:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011958:	2900      	cmp	r1, #0
 801195a:	b096      	sub	sp, #88	; 0x58
 801195c:	4614      	mov	r4, r2
 801195e:	461d      	mov	r5, r3
 8011960:	da07      	bge.n	8011972 <__swhatbuf_r+0x22>
 8011962:	2300      	movs	r3, #0
 8011964:	602b      	str	r3, [r5, #0]
 8011966:	89b3      	ldrh	r3, [r6, #12]
 8011968:	061a      	lsls	r2, r3, #24
 801196a:	d410      	bmi.n	801198e <__swhatbuf_r+0x3e>
 801196c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011970:	e00e      	b.n	8011990 <__swhatbuf_r+0x40>
 8011972:	466a      	mov	r2, sp
 8011974:	f000 fd08 	bl	8012388 <_fstat_r>
 8011978:	2800      	cmp	r0, #0
 801197a:	dbf2      	blt.n	8011962 <__swhatbuf_r+0x12>
 801197c:	9a01      	ldr	r2, [sp, #4]
 801197e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8011982:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8011986:	425a      	negs	r2, r3
 8011988:	415a      	adcs	r2, r3
 801198a:	602a      	str	r2, [r5, #0]
 801198c:	e7ee      	b.n	801196c <__swhatbuf_r+0x1c>
 801198e:	2340      	movs	r3, #64	; 0x40
 8011990:	2000      	movs	r0, #0
 8011992:	6023      	str	r3, [r4, #0]
 8011994:	b016      	add	sp, #88	; 0x58
 8011996:	bd70      	pop	{r4, r5, r6, pc}

08011998 <__smakebuf_r>:
 8011998:	898b      	ldrh	r3, [r1, #12]
 801199a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801199c:	079d      	lsls	r5, r3, #30
 801199e:	4606      	mov	r6, r0
 80119a0:	460c      	mov	r4, r1
 80119a2:	d507      	bpl.n	80119b4 <__smakebuf_r+0x1c>
 80119a4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80119a8:	6023      	str	r3, [r4, #0]
 80119aa:	6123      	str	r3, [r4, #16]
 80119ac:	2301      	movs	r3, #1
 80119ae:	6163      	str	r3, [r4, #20]
 80119b0:	b002      	add	sp, #8
 80119b2:	bd70      	pop	{r4, r5, r6, pc}
 80119b4:	ab01      	add	r3, sp, #4
 80119b6:	466a      	mov	r2, sp
 80119b8:	f7ff ffca 	bl	8011950 <__swhatbuf_r>
 80119bc:	9900      	ldr	r1, [sp, #0]
 80119be:	4605      	mov	r5, r0
 80119c0:	4630      	mov	r0, r6
 80119c2:	f7fe fa69 	bl	800fe98 <_malloc_r>
 80119c6:	b948      	cbnz	r0, 80119dc <__smakebuf_r+0x44>
 80119c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80119cc:	059a      	lsls	r2, r3, #22
 80119ce:	d4ef      	bmi.n	80119b0 <__smakebuf_r+0x18>
 80119d0:	f023 0303 	bic.w	r3, r3, #3
 80119d4:	f043 0302 	orr.w	r3, r3, #2
 80119d8:	81a3      	strh	r3, [r4, #12]
 80119da:	e7e3      	b.n	80119a4 <__smakebuf_r+0xc>
 80119dc:	4b0d      	ldr	r3, [pc, #52]	; (8011a14 <__smakebuf_r+0x7c>)
 80119de:	62b3      	str	r3, [r6, #40]	; 0x28
 80119e0:	89a3      	ldrh	r3, [r4, #12]
 80119e2:	6020      	str	r0, [r4, #0]
 80119e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80119e8:	81a3      	strh	r3, [r4, #12]
 80119ea:	9b00      	ldr	r3, [sp, #0]
 80119ec:	6163      	str	r3, [r4, #20]
 80119ee:	9b01      	ldr	r3, [sp, #4]
 80119f0:	6120      	str	r0, [r4, #16]
 80119f2:	b15b      	cbz	r3, 8011a0c <__smakebuf_r+0x74>
 80119f4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80119f8:	4630      	mov	r0, r6
 80119fa:	f000 fcd7 	bl	80123ac <_isatty_r>
 80119fe:	b128      	cbz	r0, 8011a0c <__smakebuf_r+0x74>
 8011a00:	89a3      	ldrh	r3, [r4, #12]
 8011a02:	f023 0303 	bic.w	r3, r3, #3
 8011a06:	f043 0301 	orr.w	r3, r3, #1
 8011a0a:	81a3      	strh	r3, [r4, #12]
 8011a0c:	89a3      	ldrh	r3, [r4, #12]
 8011a0e:	431d      	orrs	r5, r3
 8011a10:	81a5      	strh	r5, [r4, #12]
 8011a12:	e7cd      	b.n	80119b0 <__smakebuf_r+0x18>
 8011a14:	080117e9 	.word	0x080117e9

08011a18 <__malloc_lock>:
 8011a18:	4770      	bx	lr

08011a1a <__malloc_unlock>:
 8011a1a:	4770      	bx	lr

08011a1c <_Balloc>:
 8011a1c:	b570      	push	{r4, r5, r6, lr}
 8011a1e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8011a20:	4604      	mov	r4, r0
 8011a22:	460e      	mov	r6, r1
 8011a24:	b93d      	cbnz	r5, 8011a36 <_Balloc+0x1a>
 8011a26:	2010      	movs	r0, #16
 8011a28:	f7fe f9b6 	bl	800fd98 <malloc>
 8011a2c:	6260      	str	r0, [r4, #36]	; 0x24
 8011a2e:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8011a32:	6005      	str	r5, [r0, #0]
 8011a34:	60c5      	str	r5, [r0, #12]
 8011a36:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8011a38:	68eb      	ldr	r3, [r5, #12]
 8011a3a:	b183      	cbz	r3, 8011a5e <_Balloc+0x42>
 8011a3c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8011a3e:	68db      	ldr	r3, [r3, #12]
 8011a40:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8011a44:	b9b8      	cbnz	r0, 8011a76 <_Balloc+0x5a>
 8011a46:	2101      	movs	r1, #1
 8011a48:	fa01 f506 	lsl.w	r5, r1, r6
 8011a4c:	1d6a      	adds	r2, r5, #5
 8011a4e:	0092      	lsls	r2, r2, #2
 8011a50:	4620      	mov	r0, r4
 8011a52:	f000 fabf 	bl	8011fd4 <_calloc_r>
 8011a56:	b160      	cbz	r0, 8011a72 <_Balloc+0x56>
 8011a58:	e9c0 6501 	strd	r6, r5, [r0, #4]
 8011a5c:	e00e      	b.n	8011a7c <_Balloc+0x60>
 8011a5e:	2221      	movs	r2, #33	; 0x21
 8011a60:	2104      	movs	r1, #4
 8011a62:	4620      	mov	r0, r4
 8011a64:	f000 fab6 	bl	8011fd4 <_calloc_r>
 8011a68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8011a6a:	60e8      	str	r0, [r5, #12]
 8011a6c:	68db      	ldr	r3, [r3, #12]
 8011a6e:	2b00      	cmp	r3, #0
 8011a70:	d1e4      	bne.n	8011a3c <_Balloc+0x20>
 8011a72:	2000      	movs	r0, #0
 8011a74:	bd70      	pop	{r4, r5, r6, pc}
 8011a76:	6802      	ldr	r2, [r0, #0]
 8011a78:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8011a7c:	2300      	movs	r3, #0
 8011a7e:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8011a82:	e7f7      	b.n	8011a74 <_Balloc+0x58>

08011a84 <_Bfree>:
 8011a84:	b570      	push	{r4, r5, r6, lr}
 8011a86:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8011a88:	4606      	mov	r6, r0
 8011a8a:	460d      	mov	r5, r1
 8011a8c:	b93c      	cbnz	r4, 8011a9e <_Bfree+0x1a>
 8011a8e:	2010      	movs	r0, #16
 8011a90:	f7fe f982 	bl	800fd98 <malloc>
 8011a94:	6270      	str	r0, [r6, #36]	; 0x24
 8011a96:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8011a9a:	6004      	str	r4, [r0, #0]
 8011a9c:	60c4      	str	r4, [r0, #12]
 8011a9e:	b13d      	cbz	r5, 8011ab0 <_Bfree+0x2c>
 8011aa0:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8011aa2:	686a      	ldr	r2, [r5, #4]
 8011aa4:	68db      	ldr	r3, [r3, #12]
 8011aa6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8011aaa:	6029      	str	r1, [r5, #0]
 8011aac:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8011ab0:	bd70      	pop	{r4, r5, r6, pc}

08011ab2 <__multadd>:
 8011ab2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ab6:	690d      	ldr	r5, [r1, #16]
 8011ab8:	461f      	mov	r7, r3
 8011aba:	4606      	mov	r6, r0
 8011abc:	460c      	mov	r4, r1
 8011abe:	f101 0c14 	add.w	ip, r1, #20
 8011ac2:	2300      	movs	r3, #0
 8011ac4:	f8dc 0000 	ldr.w	r0, [ip]
 8011ac8:	b281      	uxth	r1, r0
 8011aca:	fb02 7101 	mla	r1, r2, r1, r7
 8011ace:	0c0f      	lsrs	r7, r1, #16
 8011ad0:	0c00      	lsrs	r0, r0, #16
 8011ad2:	fb02 7000 	mla	r0, r2, r0, r7
 8011ad6:	b289      	uxth	r1, r1
 8011ad8:	3301      	adds	r3, #1
 8011ada:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8011ade:	429d      	cmp	r5, r3
 8011ae0:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8011ae4:	f84c 1b04 	str.w	r1, [ip], #4
 8011ae8:	dcec      	bgt.n	8011ac4 <__multadd+0x12>
 8011aea:	b1d7      	cbz	r7, 8011b22 <__multadd+0x70>
 8011aec:	68a3      	ldr	r3, [r4, #8]
 8011aee:	42ab      	cmp	r3, r5
 8011af0:	dc12      	bgt.n	8011b18 <__multadd+0x66>
 8011af2:	6861      	ldr	r1, [r4, #4]
 8011af4:	4630      	mov	r0, r6
 8011af6:	3101      	adds	r1, #1
 8011af8:	f7ff ff90 	bl	8011a1c <_Balloc>
 8011afc:	6922      	ldr	r2, [r4, #16]
 8011afe:	3202      	adds	r2, #2
 8011b00:	f104 010c 	add.w	r1, r4, #12
 8011b04:	4680      	mov	r8, r0
 8011b06:	0092      	lsls	r2, r2, #2
 8011b08:	300c      	adds	r0, #12
 8011b0a:	f7fe f964 	bl	800fdd6 <memcpy>
 8011b0e:	4621      	mov	r1, r4
 8011b10:	4630      	mov	r0, r6
 8011b12:	f7ff ffb7 	bl	8011a84 <_Bfree>
 8011b16:	4644      	mov	r4, r8
 8011b18:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8011b1c:	3501      	adds	r5, #1
 8011b1e:	615f      	str	r7, [r3, #20]
 8011b20:	6125      	str	r5, [r4, #16]
 8011b22:	4620      	mov	r0, r4
 8011b24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011b28 <__hi0bits>:
 8011b28:	0c02      	lsrs	r2, r0, #16
 8011b2a:	0412      	lsls	r2, r2, #16
 8011b2c:	4603      	mov	r3, r0
 8011b2e:	b9b2      	cbnz	r2, 8011b5e <__hi0bits+0x36>
 8011b30:	0403      	lsls	r3, r0, #16
 8011b32:	2010      	movs	r0, #16
 8011b34:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8011b38:	bf04      	itt	eq
 8011b3a:	021b      	lsleq	r3, r3, #8
 8011b3c:	3008      	addeq	r0, #8
 8011b3e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8011b42:	bf04      	itt	eq
 8011b44:	011b      	lsleq	r3, r3, #4
 8011b46:	3004      	addeq	r0, #4
 8011b48:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8011b4c:	bf04      	itt	eq
 8011b4e:	009b      	lsleq	r3, r3, #2
 8011b50:	3002      	addeq	r0, #2
 8011b52:	2b00      	cmp	r3, #0
 8011b54:	db06      	blt.n	8011b64 <__hi0bits+0x3c>
 8011b56:	005b      	lsls	r3, r3, #1
 8011b58:	d503      	bpl.n	8011b62 <__hi0bits+0x3a>
 8011b5a:	3001      	adds	r0, #1
 8011b5c:	4770      	bx	lr
 8011b5e:	2000      	movs	r0, #0
 8011b60:	e7e8      	b.n	8011b34 <__hi0bits+0xc>
 8011b62:	2020      	movs	r0, #32
 8011b64:	4770      	bx	lr

08011b66 <__lo0bits>:
 8011b66:	6803      	ldr	r3, [r0, #0]
 8011b68:	f013 0207 	ands.w	r2, r3, #7
 8011b6c:	4601      	mov	r1, r0
 8011b6e:	d00b      	beq.n	8011b88 <__lo0bits+0x22>
 8011b70:	07da      	lsls	r2, r3, #31
 8011b72:	d423      	bmi.n	8011bbc <__lo0bits+0x56>
 8011b74:	0798      	lsls	r0, r3, #30
 8011b76:	bf49      	itett	mi
 8011b78:	085b      	lsrmi	r3, r3, #1
 8011b7a:	089b      	lsrpl	r3, r3, #2
 8011b7c:	2001      	movmi	r0, #1
 8011b7e:	600b      	strmi	r3, [r1, #0]
 8011b80:	bf5c      	itt	pl
 8011b82:	600b      	strpl	r3, [r1, #0]
 8011b84:	2002      	movpl	r0, #2
 8011b86:	4770      	bx	lr
 8011b88:	b298      	uxth	r0, r3
 8011b8a:	b9a8      	cbnz	r0, 8011bb8 <__lo0bits+0x52>
 8011b8c:	0c1b      	lsrs	r3, r3, #16
 8011b8e:	2010      	movs	r0, #16
 8011b90:	f013 0fff 	tst.w	r3, #255	; 0xff
 8011b94:	bf04      	itt	eq
 8011b96:	0a1b      	lsreq	r3, r3, #8
 8011b98:	3008      	addeq	r0, #8
 8011b9a:	071a      	lsls	r2, r3, #28
 8011b9c:	bf04      	itt	eq
 8011b9e:	091b      	lsreq	r3, r3, #4
 8011ba0:	3004      	addeq	r0, #4
 8011ba2:	079a      	lsls	r2, r3, #30
 8011ba4:	bf04      	itt	eq
 8011ba6:	089b      	lsreq	r3, r3, #2
 8011ba8:	3002      	addeq	r0, #2
 8011baa:	07da      	lsls	r2, r3, #31
 8011bac:	d402      	bmi.n	8011bb4 <__lo0bits+0x4e>
 8011bae:	085b      	lsrs	r3, r3, #1
 8011bb0:	d006      	beq.n	8011bc0 <__lo0bits+0x5a>
 8011bb2:	3001      	adds	r0, #1
 8011bb4:	600b      	str	r3, [r1, #0]
 8011bb6:	4770      	bx	lr
 8011bb8:	4610      	mov	r0, r2
 8011bba:	e7e9      	b.n	8011b90 <__lo0bits+0x2a>
 8011bbc:	2000      	movs	r0, #0
 8011bbe:	4770      	bx	lr
 8011bc0:	2020      	movs	r0, #32
 8011bc2:	4770      	bx	lr

08011bc4 <__i2b>:
 8011bc4:	b510      	push	{r4, lr}
 8011bc6:	460c      	mov	r4, r1
 8011bc8:	2101      	movs	r1, #1
 8011bca:	f7ff ff27 	bl	8011a1c <_Balloc>
 8011bce:	2201      	movs	r2, #1
 8011bd0:	6144      	str	r4, [r0, #20]
 8011bd2:	6102      	str	r2, [r0, #16]
 8011bd4:	bd10      	pop	{r4, pc}

08011bd6 <__multiply>:
 8011bd6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011bda:	4614      	mov	r4, r2
 8011bdc:	690a      	ldr	r2, [r1, #16]
 8011bde:	6923      	ldr	r3, [r4, #16]
 8011be0:	429a      	cmp	r2, r3
 8011be2:	bfb8      	it	lt
 8011be4:	460b      	movlt	r3, r1
 8011be6:	4688      	mov	r8, r1
 8011be8:	bfbc      	itt	lt
 8011bea:	46a0      	movlt	r8, r4
 8011bec:	461c      	movlt	r4, r3
 8011bee:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8011bf2:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8011bf6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8011bfa:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8011bfe:	eb07 0609 	add.w	r6, r7, r9
 8011c02:	42b3      	cmp	r3, r6
 8011c04:	bfb8      	it	lt
 8011c06:	3101      	addlt	r1, #1
 8011c08:	f7ff ff08 	bl	8011a1c <_Balloc>
 8011c0c:	f100 0514 	add.w	r5, r0, #20
 8011c10:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8011c14:	462b      	mov	r3, r5
 8011c16:	2200      	movs	r2, #0
 8011c18:	4573      	cmp	r3, lr
 8011c1a:	d316      	bcc.n	8011c4a <__multiply+0x74>
 8011c1c:	f104 0214 	add.w	r2, r4, #20
 8011c20:	f108 0114 	add.w	r1, r8, #20
 8011c24:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8011c28:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8011c2c:	9300      	str	r3, [sp, #0]
 8011c2e:	9b00      	ldr	r3, [sp, #0]
 8011c30:	9201      	str	r2, [sp, #4]
 8011c32:	4293      	cmp	r3, r2
 8011c34:	d80c      	bhi.n	8011c50 <__multiply+0x7a>
 8011c36:	2e00      	cmp	r6, #0
 8011c38:	dd03      	ble.n	8011c42 <__multiply+0x6c>
 8011c3a:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8011c3e:	2b00      	cmp	r3, #0
 8011c40:	d05d      	beq.n	8011cfe <__multiply+0x128>
 8011c42:	6106      	str	r6, [r0, #16]
 8011c44:	b003      	add	sp, #12
 8011c46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c4a:	f843 2b04 	str.w	r2, [r3], #4
 8011c4e:	e7e3      	b.n	8011c18 <__multiply+0x42>
 8011c50:	f8b2 b000 	ldrh.w	fp, [r2]
 8011c54:	f1bb 0f00 	cmp.w	fp, #0
 8011c58:	d023      	beq.n	8011ca2 <__multiply+0xcc>
 8011c5a:	4689      	mov	r9, r1
 8011c5c:	46ac      	mov	ip, r5
 8011c5e:	f04f 0800 	mov.w	r8, #0
 8011c62:	f859 4b04 	ldr.w	r4, [r9], #4
 8011c66:	f8dc a000 	ldr.w	sl, [ip]
 8011c6a:	b2a3      	uxth	r3, r4
 8011c6c:	fa1f fa8a 	uxth.w	sl, sl
 8011c70:	fb0b a303 	mla	r3, fp, r3, sl
 8011c74:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8011c78:	f8dc 4000 	ldr.w	r4, [ip]
 8011c7c:	4443      	add	r3, r8
 8011c7e:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8011c82:	fb0b 840a 	mla	r4, fp, sl, r8
 8011c86:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8011c8a:	46e2      	mov	sl, ip
 8011c8c:	b29b      	uxth	r3, r3
 8011c8e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8011c92:	454f      	cmp	r7, r9
 8011c94:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8011c98:	f84a 3b04 	str.w	r3, [sl], #4
 8011c9c:	d82b      	bhi.n	8011cf6 <__multiply+0x120>
 8011c9e:	f8cc 8004 	str.w	r8, [ip, #4]
 8011ca2:	9b01      	ldr	r3, [sp, #4]
 8011ca4:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8011ca8:	3204      	adds	r2, #4
 8011caa:	f1ba 0f00 	cmp.w	sl, #0
 8011cae:	d020      	beq.n	8011cf2 <__multiply+0x11c>
 8011cb0:	682b      	ldr	r3, [r5, #0]
 8011cb2:	4689      	mov	r9, r1
 8011cb4:	46a8      	mov	r8, r5
 8011cb6:	f04f 0b00 	mov.w	fp, #0
 8011cba:	f8b9 c000 	ldrh.w	ip, [r9]
 8011cbe:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8011cc2:	fb0a 440c 	mla	r4, sl, ip, r4
 8011cc6:	445c      	add	r4, fp
 8011cc8:	46c4      	mov	ip, r8
 8011cca:	b29b      	uxth	r3, r3
 8011ccc:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8011cd0:	f84c 3b04 	str.w	r3, [ip], #4
 8011cd4:	f859 3b04 	ldr.w	r3, [r9], #4
 8011cd8:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 8011cdc:	0c1b      	lsrs	r3, r3, #16
 8011cde:	fb0a b303 	mla	r3, sl, r3, fp
 8011ce2:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8011ce6:	454f      	cmp	r7, r9
 8011ce8:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8011cec:	d805      	bhi.n	8011cfa <__multiply+0x124>
 8011cee:	f8c8 3004 	str.w	r3, [r8, #4]
 8011cf2:	3504      	adds	r5, #4
 8011cf4:	e79b      	b.n	8011c2e <__multiply+0x58>
 8011cf6:	46d4      	mov	ip, sl
 8011cf8:	e7b3      	b.n	8011c62 <__multiply+0x8c>
 8011cfa:	46e0      	mov	r8, ip
 8011cfc:	e7dd      	b.n	8011cba <__multiply+0xe4>
 8011cfe:	3e01      	subs	r6, #1
 8011d00:	e799      	b.n	8011c36 <__multiply+0x60>
	...

08011d04 <__pow5mult>:
 8011d04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011d08:	4615      	mov	r5, r2
 8011d0a:	f012 0203 	ands.w	r2, r2, #3
 8011d0e:	4606      	mov	r6, r0
 8011d10:	460f      	mov	r7, r1
 8011d12:	d007      	beq.n	8011d24 <__pow5mult+0x20>
 8011d14:	3a01      	subs	r2, #1
 8011d16:	4c21      	ldr	r4, [pc, #132]	; (8011d9c <__pow5mult+0x98>)
 8011d18:	2300      	movs	r3, #0
 8011d1a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8011d1e:	f7ff fec8 	bl	8011ab2 <__multadd>
 8011d22:	4607      	mov	r7, r0
 8011d24:	10ad      	asrs	r5, r5, #2
 8011d26:	d035      	beq.n	8011d94 <__pow5mult+0x90>
 8011d28:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8011d2a:	b93c      	cbnz	r4, 8011d3c <__pow5mult+0x38>
 8011d2c:	2010      	movs	r0, #16
 8011d2e:	f7fe f833 	bl	800fd98 <malloc>
 8011d32:	6270      	str	r0, [r6, #36]	; 0x24
 8011d34:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8011d38:	6004      	str	r4, [r0, #0]
 8011d3a:	60c4      	str	r4, [r0, #12]
 8011d3c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8011d40:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8011d44:	b94c      	cbnz	r4, 8011d5a <__pow5mult+0x56>
 8011d46:	f240 2171 	movw	r1, #625	; 0x271
 8011d4a:	4630      	mov	r0, r6
 8011d4c:	f7ff ff3a 	bl	8011bc4 <__i2b>
 8011d50:	2300      	movs	r3, #0
 8011d52:	f8c8 0008 	str.w	r0, [r8, #8]
 8011d56:	4604      	mov	r4, r0
 8011d58:	6003      	str	r3, [r0, #0]
 8011d5a:	f04f 0800 	mov.w	r8, #0
 8011d5e:	07eb      	lsls	r3, r5, #31
 8011d60:	d50a      	bpl.n	8011d78 <__pow5mult+0x74>
 8011d62:	4639      	mov	r1, r7
 8011d64:	4622      	mov	r2, r4
 8011d66:	4630      	mov	r0, r6
 8011d68:	f7ff ff35 	bl	8011bd6 <__multiply>
 8011d6c:	4639      	mov	r1, r7
 8011d6e:	4681      	mov	r9, r0
 8011d70:	4630      	mov	r0, r6
 8011d72:	f7ff fe87 	bl	8011a84 <_Bfree>
 8011d76:	464f      	mov	r7, r9
 8011d78:	106d      	asrs	r5, r5, #1
 8011d7a:	d00b      	beq.n	8011d94 <__pow5mult+0x90>
 8011d7c:	6820      	ldr	r0, [r4, #0]
 8011d7e:	b938      	cbnz	r0, 8011d90 <__pow5mult+0x8c>
 8011d80:	4622      	mov	r2, r4
 8011d82:	4621      	mov	r1, r4
 8011d84:	4630      	mov	r0, r6
 8011d86:	f7ff ff26 	bl	8011bd6 <__multiply>
 8011d8a:	6020      	str	r0, [r4, #0]
 8011d8c:	f8c0 8000 	str.w	r8, [r0]
 8011d90:	4604      	mov	r4, r0
 8011d92:	e7e4      	b.n	8011d5e <__pow5mult+0x5a>
 8011d94:	4638      	mov	r0, r7
 8011d96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011d9a:	bf00      	nop
 8011d9c:	08016ba0 	.word	0x08016ba0

08011da0 <__lshift>:
 8011da0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011da4:	460c      	mov	r4, r1
 8011da6:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8011daa:	6923      	ldr	r3, [r4, #16]
 8011dac:	6849      	ldr	r1, [r1, #4]
 8011dae:	eb0a 0903 	add.w	r9, sl, r3
 8011db2:	68a3      	ldr	r3, [r4, #8]
 8011db4:	4607      	mov	r7, r0
 8011db6:	4616      	mov	r6, r2
 8011db8:	f109 0501 	add.w	r5, r9, #1
 8011dbc:	42ab      	cmp	r3, r5
 8011dbe:	db32      	blt.n	8011e26 <__lshift+0x86>
 8011dc0:	4638      	mov	r0, r7
 8011dc2:	f7ff fe2b 	bl	8011a1c <_Balloc>
 8011dc6:	2300      	movs	r3, #0
 8011dc8:	4680      	mov	r8, r0
 8011dca:	f100 0114 	add.w	r1, r0, #20
 8011dce:	461a      	mov	r2, r3
 8011dd0:	4553      	cmp	r3, sl
 8011dd2:	db2b      	blt.n	8011e2c <__lshift+0x8c>
 8011dd4:	6920      	ldr	r0, [r4, #16]
 8011dd6:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8011dda:	f104 0314 	add.w	r3, r4, #20
 8011dde:	f016 021f 	ands.w	r2, r6, #31
 8011de2:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8011de6:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8011dea:	d025      	beq.n	8011e38 <__lshift+0x98>
 8011dec:	f1c2 0e20 	rsb	lr, r2, #32
 8011df0:	2000      	movs	r0, #0
 8011df2:	681e      	ldr	r6, [r3, #0]
 8011df4:	468a      	mov	sl, r1
 8011df6:	4096      	lsls	r6, r2
 8011df8:	4330      	orrs	r0, r6
 8011dfa:	f84a 0b04 	str.w	r0, [sl], #4
 8011dfe:	f853 0b04 	ldr.w	r0, [r3], #4
 8011e02:	459c      	cmp	ip, r3
 8011e04:	fa20 f00e 	lsr.w	r0, r0, lr
 8011e08:	d814      	bhi.n	8011e34 <__lshift+0x94>
 8011e0a:	6048      	str	r0, [r1, #4]
 8011e0c:	b108      	cbz	r0, 8011e12 <__lshift+0x72>
 8011e0e:	f109 0502 	add.w	r5, r9, #2
 8011e12:	3d01      	subs	r5, #1
 8011e14:	4638      	mov	r0, r7
 8011e16:	f8c8 5010 	str.w	r5, [r8, #16]
 8011e1a:	4621      	mov	r1, r4
 8011e1c:	f7ff fe32 	bl	8011a84 <_Bfree>
 8011e20:	4640      	mov	r0, r8
 8011e22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011e26:	3101      	adds	r1, #1
 8011e28:	005b      	lsls	r3, r3, #1
 8011e2a:	e7c7      	b.n	8011dbc <__lshift+0x1c>
 8011e2c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8011e30:	3301      	adds	r3, #1
 8011e32:	e7cd      	b.n	8011dd0 <__lshift+0x30>
 8011e34:	4651      	mov	r1, sl
 8011e36:	e7dc      	b.n	8011df2 <__lshift+0x52>
 8011e38:	3904      	subs	r1, #4
 8011e3a:	f853 2b04 	ldr.w	r2, [r3], #4
 8011e3e:	f841 2f04 	str.w	r2, [r1, #4]!
 8011e42:	459c      	cmp	ip, r3
 8011e44:	d8f9      	bhi.n	8011e3a <__lshift+0x9a>
 8011e46:	e7e4      	b.n	8011e12 <__lshift+0x72>

08011e48 <__mcmp>:
 8011e48:	6903      	ldr	r3, [r0, #16]
 8011e4a:	690a      	ldr	r2, [r1, #16]
 8011e4c:	1a9b      	subs	r3, r3, r2
 8011e4e:	b530      	push	{r4, r5, lr}
 8011e50:	d10c      	bne.n	8011e6c <__mcmp+0x24>
 8011e52:	0092      	lsls	r2, r2, #2
 8011e54:	3014      	adds	r0, #20
 8011e56:	3114      	adds	r1, #20
 8011e58:	1884      	adds	r4, r0, r2
 8011e5a:	4411      	add	r1, r2
 8011e5c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8011e60:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8011e64:	4295      	cmp	r5, r2
 8011e66:	d003      	beq.n	8011e70 <__mcmp+0x28>
 8011e68:	d305      	bcc.n	8011e76 <__mcmp+0x2e>
 8011e6a:	2301      	movs	r3, #1
 8011e6c:	4618      	mov	r0, r3
 8011e6e:	bd30      	pop	{r4, r5, pc}
 8011e70:	42a0      	cmp	r0, r4
 8011e72:	d3f3      	bcc.n	8011e5c <__mcmp+0x14>
 8011e74:	e7fa      	b.n	8011e6c <__mcmp+0x24>
 8011e76:	f04f 33ff 	mov.w	r3, #4294967295
 8011e7a:	e7f7      	b.n	8011e6c <__mcmp+0x24>

08011e7c <__mdiff>:
 8011e7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011e80:	460d      	mov	r5, r1
 8011e82:	4607      	mov	r7, r0
 8011e84:	4611      	mov	r1, r2
 8011e86:	4628      	mov	r0, r5
 8011e88:	4614      	mov	r4, r2
 8011e8a:	f7ff ffdd 	bl	8011e48 <__mcmp>
 8011e8e:	1e06      	subs	r6, r0, #0
 8011e90:	d108      	bne.n	8011ea4 <__mdiff+0x28>
 8011e92:	4631      	mov	r1, r6
 8011e94:	4638      	mov	r0, r7
 8011e96:	f7ff fdc1 	bl	8011a1c <_Balloc>
 8011e9a:	2301      	movs	r3, #1
 8011e9c:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8011ea0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011ea4:	bfa4      	itt	ge
 8011ea6:	4623      	movge	r3, r4
 8011ea8:	462c      	movge	r4, r5
 8011eaa:	4638      	mov	r0, r7
 8011eac:	6861      	ldr	r1, [r4, #4]
 8011eae:	bfa6      	itte	ge
 8011eb0:	461d      	movge	r5, r3
 8011eb2:	2600      	movge	r6, #0
 8011eb4:	2601      	movlt	r6, #1
 8011eb6:	f7ff fdb1 	bl	8011a1c <_Balloc>
 8011eba:	692b      	ldr	r3, [r5, #16]
 8011ebc:	60c6      	str	r6, [r0, #12]
 8011ebe:	6926      	ldr	r6, [r4, #16]
 8011ec0:	f105 0914 	add.w	r9, r5, #20
 8011ec4:	f104 0214 	add.w	r2, r4, #20
 8011ec8:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8011ecc:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8011ed0:	f100 0514 	add.w	r5, r0, #20
 8011ed4:	f04f 0e00 	mov.w	lr, #0
 8011ed8:	f852 ab04 	ldr.w	sl, [r2], #4
 8011edc:	f859 4b04 	ldr.w	r4, [r9], #4
 8011ee0:	fa1e f18a 	uxtah	r1, lr, sl
 8011ee4:	b2a3      	uxth	r3, r4
 8011ee6:	1ac9      	subs	r1, r1, r3
 8011ee8:	0c23      	lsrs	r3, r4, #16
 8011eea:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 8011eee:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8011ef2:	b289      	uxth	r1, r1
 8011ef4:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8011ef8:	45c8      	cmp	r8, r9
 8011efa:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8011efe:	4694      	mov	ip, r2
 8011f00:	f845 3b04 	str.w	r3, [r5], #4
 8011f04:	d8e8      	bhi.n	8011ed8 <__mdiff+0x5c>
 8011f06:	45bc      	cmp	ip, r7
 8011f08:	d304      	bcc.n	8011f14 <__mdiff+0x98>
 8011f0a:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8011f0e:	b183      	cbz	r3, 8011f32 <__mdiff+0xb6>
 8011f10:	6106      	str	r6, [r0, #16]
 8011f12:	e7c5      	b.n	8011ea0 <__mdiff+0x24>
 8011f14:	f85c 1b04 	ldr.w	r1, [ip], #4
 8011f18:	fa1e f381 	uxtah	r3, lr, r1
 8011f1c:	141a      	asrs	r2, r3, #16
 8011f1e:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8011f22:	b29b      	uxth	r3, r3
 8011f24:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8011f28:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8011f2c:	f845 3b04 	str.w	r3, [r5], #4
 8011f30:	e7e9      	b.n	8011f06 <__mdiff+0x8a>
 8011f32:	3e01      	subs	r6, #1
 8011f34:	e7e9      	b.n	8011f0a <__mdiff+0x8e>

08011f36 <__d2b>:
 8011f36:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011f3a:	460e      	mov	r6, r1
 8011f3c:	2101      	movs	r1, #1
 8011f3e:	ec59 8b10 	vmov	r8, r9, d0
 8011f42:	4615      	mov	r5, r2
 8011f44:	f7ff fd6a 	bl	8011a1c <_Balloc>
 8011f48:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8011f4c:	4607      	mov	r7, r0
 8011f4e:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8011f52:	bb34      	cbnz	r4, 8011fa2 <__d2b+0x6c>
 8011f54:	9301      	str	r3, [sp, #4]
 8011f56:	f1b8 0300 	subs.w	r3, r8, #0
 8011f5a:	d027      	beq.n	8011fac <__d2b+0x76>
 8011f5c:	a802      	add	r0, sp, #8
 8011f5e:	f840 3d08 	str.w	r3, [r0, #-8]!
 8011f62:	f7ff fe00 	bl	8011b66 <__lo0bits>
 8011f66:	9900      	ldr	r1, [sp, #0]
 8011f68:	b1f0      	cbz	r0, 8011fa8 <__d2b+0x72>
 8011f6a:	9a01      	ldr	r2, [sp, #4]
 8011f6c:	f1c0 0320 	rsb	r3, r0, #32
 8011f70:	fa02 f303 	lsl.w	r3, r2, r3
 8011f74:	430b      	orrs	r3, r1
 8011f76:	40c2      	lsrs	r2, r0
 8011f78:	617b      	str	r3, [r7, #20]
 8011f7a:	9201      	str	r2, [sp, #4]
 8011f7c:	9b01      	ldr	r3, [sp, #4]
 8011f7e:	61bb      	str	r3, [r7, #24]
 8011f80:	2b00      	cmp	r3, #0
 8011f82:	bf14      	ite	ne
 8011f84:	2102      	movne	r1, #2
 8011f86:	2101      	moveq	r1, #1
 8011f88:	6139      	str	r1, [r7, #16]
 8011f8a:	b1c4      	cbz	r4, 8011fbe <__d2b+0x88>
 8011f8c:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8011f90:	4404      	add	r4, r0
 8011f92:	6034      	str	r4, [r6, #0]
 8011f94:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8011f98:	6028      	str	r0, [r5, #0]
 8011f9a:	4638      	mov	r0, r7
 8011f9c:	b003      	add	sp, #12
 8011f9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011fa2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8011fa6:	e7d5      	b.n	8011f54 <__d2b+0x1e>
 8011fa8:	6179      	str	r1, [r7, #20]
 8011faa:	e7e7      	b.n	8011f7c <__d2b+0x46>
 8011fac:	a801      	add	r0, sp, #4
 8011fae:	f7ff fdda 	bl	8011b66 <__lo0bits>
 8011fb2:	9b01      	ldr	r3, [sp, #4]
 8011fb4:	617b      	str	r3, [r7, #20]
 8011fb6:	2101      	movs	r1, #1
 8011fb8:	6139      	str	r1, [r7, #16]
 8011fba:	3020      	adds	r0, #32
 8011fbc:	e7e5      	b.n	8011f8a <__d2b+0x54>
 8011fbe:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8011fc2:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8011fc6:	6030      	str	r0, [r6, #0]
 8011fc8:	6918      	ldr	r0, [r3, #16]
 8011fca:	f7ff fdad 	bl	8011b28 <__hi0bits>
 8011fce:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8011fd2:	e7e1      	b.n	8011f98 <__d2b+0x62>

08011fd4 <_calloc_r>:
 8011fd4:	b538      	push	{r3, r4, r5, lr}
 8011fd6:	fb02 f401 	mul.w	r4, r2, r1
 8011fda:	4621      	mov	r1, r4
 8011fdc:	f7fd ff5c 	bl	800fe98 <_malloc_r>
 8011fe0:	4605      	mov	r5, r0
 8011fe2:	b118      	cbz	r0, 8011fec <_calloc_r+0x18>
 8011fe4:	4622      	mov	r2, r4
 8011fe6:	2100      	movs	r1, #0
 8011fe8:	f7fd ff00 	bl	800fdec <memset>
 8011fec:	4628      	mov	r0, r5
 8011fee:	bd38      	pop	{r3, r4, r5, pc}

08011ff0 <_realloc_r>:
 8011ff0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011ff2:	4607      	mov	r7, r0
 8011ff4:	4614      	mov	r4, r2
 8011ff6:	460e      	mov	r6, r1
 8011ff8:	b921      	cbnz	r1, 8012004 <_realloc_r+0x14>
 8011ffa:	4611      	mov	r1, r2
 8011ffc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8012000:	f7fd bf4a 	b.w	800fe98 <_malloc_r>
 8012004:	b922      	cbnz	r2, 8012010 <_realloc_r+0x20>
 8012006:	f7fd fef9 	bl	800fdfc <_free_r>
 801200a:	4625      	mov	r5, r4
 801200c:	4628      	mov	r0, r5
 801200e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012010:	f000 fa00 	bl	8012414 <_malloc_usable_size_r>
 8012014:	42a0      	cmp	r0, r4
 8012016:	d20f      	bcs.n	8012038 <_realloc_r+0x48>
 8012018:	4621      	mov	r1, r4
 801201a:	4638      	mov	r0, r7
 801201c:	f7fd ff3c 	bl	800fe98 <_malloc_r>
 8012020:	4605      	mov	r5, r0
 8012022:	2800      	cmp	r0, #0
 8012024:	d0f2      	beq.n	801200c <_realloc_r+0x1c>
 8012026:	4631      	mov	r1, r6
 8012028:	4622      	mov	r2, r4
 801202a:	f7fd fed4 	bl	800fdd6 <memcpy>
 801202e:	4631      	mov	r1, r6
 8012030:	4638      	mov	r0, r7
 8012032:	f7fd fee3 	bl	800fdfc <_free_r>
 8012036:	e7e9      	b.n	801200c <_realloc_r+0x1c>
 8012038:	4635      	mov	r5, r6
 801203a:	e7e7      	b.n	801200c <_realloc_r+0x1c>

0801203c <__sfputc_r>:
 801203c:	6893      	ldr	r3, [r2, #8]
 801203e:	3b01      	subs	r3, #1
 8012040:	2b00      	cmp	r3, #0
 8012042:	b410      	push	{r4}
 8012044:	6093      	str	r3, [r2, #8]
 8012046:	da08      	bge.n	801205a <__sfputc_r+0x1e>
 8012048:	6994      	ldr	r4, [r2, #24]
 801204a:	42a3      	cmp	r3, r4
 801204c:	db01      	blt.n	8012052 <__sfputc_r+0x16>
 801204e:	290a      	cmp	r1, #10
 8012050:	d103      	bne.n	801205a <__sfputc_r+0x1e>
 8012052:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012056:	f7fe bc59 	b.w	801090c <__swbuf_r>
 801205a:	6813      	ldr	r3, [r2, #0]
 801205c:	1c58      	adds	r0, r3, #1
 801205e:	6010      	str	r0, [r2, #0]
 8012060:	7019      	strb	r1, [r3, #0]
 8012062:	4608      	mov	r0, r1
 8012064:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012068:	4770      	bx	lr

0801206a <__sfputs_r>:
 801206a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801206c:	4606      	mov	r6, r0
 801206e:	460f      	mov	r7, r1
 8012070:	4614      	mov	r4, r2
 8012072:	18d5      	adds	r5, r2, r3
 8012074:	42ac      	cmp	r4, r5
 8012076:	d101      	bne.n	801207c <__sfputs_r+0x12>
 8012078:	2000      	movs	r0, #0
 801207a:	e007      	b.n	801208c <__sfputs_r+0x22>
 801207c:	463a      	mov	r2, r7
 801207e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8012082:	4630      	mov	r0, r6
 8012084:	f7ff ffda 	bl	801203c <__sfputc_r>
 8012088:	1c43      	adds	r3, r0, #1
 801208a:	d1f3      	bne.n	8012074 <__sfputs_r+0xa>
 801208c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08012090 <_vfiprintf_r>:
 8012090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012094:	460c      	mov	r4, r1
 8012096:	b09d      	sub	sp, #116	; 0x74
 8012098:	4617      	mov	r7, r2
 801209a:	461d      	mov	r5, r3
 801209c:	4606      	mov	r6, r0
 801209e:	b118      	cbz	r0, 80120a8 <_vfiprintf_r+0x18>
 80120a0:	6983      	ldr	r3, [r0, #24]
 80120a2:	b90b      	cbnz	r3, 80120a8 <_vfiprintf_r+0x18>
 80120a4:	f7ff fbbc 	bl	8011820 <__sinit>
 80120a8:	4b7c      	ldr	r3, [pc, #496]	; (801229c <_vfiprintf_r+0x20c>)
 80120aa:	429c      	cmp	r4, r3
 80120ac:	d158      	bne.n	8012160 <_vfiprintf_r+0xd0>
 80120ae:	6874      	ldr	r4, [r6, #4]
 80120b0:	89a3      	ldrh	r3, [r4, #12]
 80120b2:	0718      	lsls	r0, r3, #28
 80120b4:	d55e      	bpl.n	8012174 <_vfiprintf_r+0xe4>
 80120b6:	6923      	ldr	r3, [r4, #16]
 80120b8:	2b00      	cmp	r3, #0
 80120ba:	d05b      	beq.n	8012174 <_vfiprintf_r+0xe4>
 80120bc:	2300      	movs	r3, #0
 80120be:	9309      	str	r3, [sp, #36]	; 0x24
 80120c0:	2320      	movs	r3, #32
 80120c2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80120c6:	2330      	movs	r3, #48	; 0x30
 80120c8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80120cc:	9503      	str	r5, [sp, #12]
 80120ce:	f04f 0b01 	mov.w	fp, #1
 80120d2:	46b8      	mov	r8, r7
 80120d4:	4645      	mov	r5, r8
 80120d6:	f815 3b01 	ldrb.w	r3, [r5], #1
 80120da:	b10b      	cbz	r3, 80120e0 <_vfiprintf_r+0x50>
 80120dc:	2b25      	cmp	r3, #37	; 0x25
 80120de:	d154      	bne.n	801218a <_vfiprintf_r+0xfa>
 80120e0:	ebb8 0a07 	subs.w	sl, r8, r7
 80120e4:	d00b      	beq.n	80120fe <_vfiprintf_r+0x6e>
 80120e6:	4653      	mov	r3, sl
 80120e8:	463a      	mov	r2, r7
 80120ea:	4621      	mov	r1, r4
 80120ec:	4630      	mov	r0, r6
 80120ee:	f7ff ffbc 	bl	801206a <__sfputs_r>
 80120f2:	3001      	adds	r0, #1
 80120f4:	f000 80c2 	beq.w	801227c <_vfiprintf_r+0x1ec>
 80120f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80120fa:	4453      	add	r3, sl
 80120fc:	9309      	str	r3, [sp, #36]	; 0x24
 80120fe:	f898 3000 	ldrb.w	r3, [r8]
 8012102:	2b00      	cmp	r3, #0
 8012104:	f000 80ba 	beq.w	801227c <_vfiprintf_r+0x1ec>
 8012108:	2300      	movs	r3, #0
 801210a:	f04f 32ff 	mov.w	r2, #4294967295
 801210e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8012112:	9304      	str	r3, [sp, #16]
 8012114:	9307      	str	r3, [sp, #28]
 8012116:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801211a:	931a      	str	r3, [sp, #104]	; 0x68
 801211c:	46a8      	mov	r8, r5
 801211e:	2205      	movs	r2, #5
 8012120:	f818 1b01 	ldrb.w	r1, [r8], #1
 8012124:	485e      	ldr	r0, [pc, #376]	; (80122a0 <_vfiprintf_r+0x210>)
 8012126:	f7f4 feab 	bl	8006e80 <memchr>
 801212a:	9b04      	ldr	r3, [sp, #16]
 801212c:	bb78      	cbnz	r0, 801218e <_vfiprintf_r+0xfe>
 801212e:	06d9      	lsls	r1, r3, #27
 8012130:	bf44      	itt	mi
 8012132:	2220      	movmi	r2, #32
 8012134:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8012138:	071a      	lsls	r2, r3, #28
 801213a:	bf44      	itt	mi
 801213c:	222b      	movmi	r2, #43	; 0x2b
 801213e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8012142:	782a      	ldrb	r2, [r5, #0]
 8012144:	2a2a      	cmp	r2, #42	; 0x2a
 8012146:	d02a      	beq.n	801219e <_vfiprintf_r+0x10e>
 8012148:	9a07      	ldr	r2, [sp, #28]
 801214a:	46a8      	mov	r8, r5
 801214c:	2000      	movs	r0, #0
 801214e:	250a      	movs	r5, #10
 8012150:	4641      	mov	r1, r8
 8012152:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012156:	3b30      	subs	r3, #48	; 0x30
 8012158:	2b09      	cmp	r3, #9
 801215a:	d969      	bls.n	8012230 <_vfiprintf_r+0x1a0>
 801215c:	b360      	cbz	r0, 80121b8 <_vfiprintf_r+0x128>
 801215e:	e024      	b.n	80121aa <_vfiprintf_r+0x11a>
 8012160:	4b50      	ldr	r3, [pc, #320]	; (80122a4 <_vfiprintf_r+0x214>)
 8012162:	429c      	cmp	r4, r3
 8012164:	d101      	bne.n	801216a <_vfiprintf_r+0xda>
 8012166:	68b4      	ldr	r4, [r6, #8]
 8012168:	e7a2      	b.n	80120b0 <_vfiprintf_r+0x20>
 801216a:	4b4f      	ldr	r3, [pc, #316]	; (80122a8 <_vfiprintf_r+0x218>)
 801216c:	429c      	cmp	r4, r3
 801216e:	bf08      	it	eq
 8012170:	68f4      	ldreq	r4, [r6, #12]
 8012172:	e79d      	b.n	80120b0 <_vfiprintf_r+0x20>
 8012174:	4621      	mov	r1, r4
 8012176:	4630      	mov	r0, r6
 8012178:	f7fe fc1a 	bl	80109b0 <__swsetup_r>
 801217c:	2800      	cmp	r0, #0
 801217e:	d09d      	beq.n	80120bc <_vfiprintf_r+0x2c>
 8012180:	f04f 30ff 	mov.w	r0, #4294967295
 8012184:	b01d      	add	sp, #116	; 0x74
 8012186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801218a:	46a8      	mov	r8, r5
 801218c:	e7a2      	b.n	80120d4 <_vfiprintf_r+0x44>
 801218e:	4a44      	ldr	r2, [pc, #272]	; (80122a0 <_vfiprintf_r+0x210>)
 8012190:	1a80      	subs	r0, r0, r2
 8012192:	fa0b f000 	lsl.w	r0, fp, r0
 8012196:	4318      	orrs	r0, r3
 8012198:	9004      	str	r0, [sp, #16]
 801219a:	4645      	mov	r5, r8
 801219c:	e7be      	b.n	801211c <_vfiprintf_r+0x8c>
 801219e:	9a03      	ldr	r2, [sp, #12]
 80121a0:	1d11      	adds	r1, r2, #4
 80121a2:	6812      	ldr	r2, [r2, #0]
 80121a4:	9103      	str	r1, [sp, #12]
 80121a6:	2a00      	cmp	r2, #0
 80121a8:	db01      	blt.n	80121ae <_vfiprintf_r+0x11e>
 80121aa:	9207      	str	r2, [sp, #28]
 80121ac:	e004      	b.n	80121b8 <_vfiprintf_r+0x128>
 80121ae:	4252      	negs	r2, r2
 80121b0:	f043 0302 	orr.w	r3, r3, #2
 80121b4:	9207      	str	r2, [sp, #28]
 80121b6:	9304      	str	r3, [sp, #16]
 80121b8:	f898 3000 	ldrb.w	r3, [r8]
 80121bc:	2b2e      	cmp	r3, #46	; 0x2e
 80121be:	d10e      	bne.n	80121de <_vfiprintf_r+0x14e>
 80121c0:	f898 3001 	ldrb.w	r3, [r8, #1]
 80121c4:	2b2a      	cmp	r3, #42	; 0x2a
 80121c6:	d138      	bne.n	801223a <_vfiprintf_r+0x1aa>
 80121c8:	9b03      	ldr	r3, [sp, #12]
 80121ca:	1d1a      	adds	r2, r3, #4
 80121cc:	681b      	ldr	r3, [r3, #0]
 80121ce:	9203      	str	r2, [sp, #12]
 80121d0:	2b00      	cmp	r3, #0
 80121d2:	bfb8      	it	lt
 80121d4:	f04f 33ff 	movlt.w	r3, #4294967295
 80121d8:	f108 0802 	add.w	r8, r8, #2
 80121dc:	9305      	str	r3, [sp, #20]
 80121de:	4d33      	ldr	r5, [pc, #204]	; (80122ac <_vfiprintf_r+0x21c>)
 80121e0:	f898 1000 	ldrb.w	r1, [r8]
 80121e4:	2203      	movs	r2, #3
 80121e6:	4628      	mov	r0, r5
 80121e8:	f7f4 fe4a 	bl	8006e80 <memchr>
 80121ec:	b140      	cbz	r0, 8012200 <_vfiprintf_r+0x170>
 80121ee:	2340      	movs	r3, #64	; 0x40
 80121f0:	1b40      	subs	r0, r0, r5
 80121f2:	fa03 f000 	lsl.w	r0, r3, r0
 80121f6:	9b04      	ldr	r3, [sp, #16]
 80121f8:	4303      	orrs	r3, r0
 80121fa:	f108 0801 	add.w	r8, r8, #1
 80121fe:	9304      	str	r3, [sp, #16]
 8012200:	f898 1000 	ldrb.w	r1, [r8]
 8012204:	482a      	ldr	r0, [pc, #168]	; (80122b0 <_vfiprintf_r+0x220>)
 8012206:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801220a:	2206      	movs	r2, #6
 801220c:	f108 0701 	add.w	r7, r8, #1
 8012210:	f7f4 fe36 	bl	8006e80 <memchr>
 8012214:	2800      	cmp	r0, #0
 8012216:	d037      	beq.n	8012288 <_vfiprintf_r+0x1f8>
 8012218:	4b26      	ldr	r3, [pc, #152]	; (80122b4 <_vfiprintf_r+0x224>)
 801221a:	bb1b      	cbnz	r3, 8012264 <_vfiprintf_r+0x1d4>
 801221c:	9b03      	ldr	r3, [sp, #12]
 801221e:	3307      	adds	r3, #7
 8012220:	f023 0307 	bic.w	r3, r3, #7
 8012224:	3308      	adds	r3, #8
 8012226:	9303      	str	r3, [sp, #12]
 8012228:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801222a:	444b      	add	r3, r9
 801222c:	9309      	str	r3, [sp, #36]	; 0x24
 801222e:	e750      	b.n	80120d2 <_vfiprintf_r+0x42>
 8012230:	fb05 3202 	mla	r2, r5, r2, r3
 8012234:	2001      	movs	r0, #1
 8012236:	4688      	mov	r8, r1
 8012238:	e78a      	b.n	8012150 <_vfiprintf_r+0xc0>
 801223a:	2300      	movs	r3, #0
 801223c:	f108 0801 	add.w	r8, r8, #1
 8012240:	9305      	str	r3, [sp, #20]
 8012242:	4619      	mov	r1, r3
 8012244:	250a      	movs	r5, #10
 8012246:	4640      	mov	r0, r8
 8012248:	f810 2b01 	ldrb.w	r2, [r0], #1
 801224c:	3a30      	subs	r2, #48	; 0x30
 801224e:	2a09      	cmp	r2, #9
 8012250:	d903      	bls.n	801225a <_vfiprintf_r+0x1ca>
 8012252:	2b00      	cmp	r3, #0
 8012254:	d0c3      	beq.n	80121de <_vfiprintf_r+0x14e>
 8012256:	9105      	str	r1, [sp, #20]
 8012258:	e7c1      	b.n	80121de <_vfiprintf_r+0x14e>
 801225a:	fb05 2101 	mla	r1, r5, r1, r2
 801225e:	2301      	movs	r3, #1
 8012260:	4680      	mov	r8, r0
 8012262:	e7f0      	b.n	8012246 <_vfiprintf_r+0x1b6>
 8012264:	ab03      	add	r3, sp, #12
 8012266:	9300      	str	r3, [sp, #0]
 8012268:	4622      	mov	r2, r4
 801226a:	4b13      	ldr	r3, [pc, #76]	; (80122b8 <_vfiprintf_r+0x228>)
 801226c:	a904      	add	r1, sp, #16
 801226e:	4630      	mov	r0, r6
 8012270:	f7fd fef2 	bl	8010058 <_printf_float>
 8012274:	f1b0 3fff 	cmp.w	r0, #4294967295
 8012278:	4681      	mov	r9, r0
 801227a:	d1d5      	bne.n	8012228 <_vfiprintf_r+0x198>
 801227c:	89a3      	ldrh	r3, [r4, #12]
 801227e:	065b      	lsls	r3, r3, #25
 8012280:	f53f af7e 	bmi.w	8012180 <_vfiprintf_r+0xf0>
 8012284:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012286:	e77d      	b.n	8012184 <_vfiprintf_r+0xf4>
 8012288:	ab03      	add	r3, sp, #12
 801228a:	9300      	str	r3, [sp, #0]
 801228c:	4622      	mov	r2, r4
 801228e:	4b0a      	ldr	r3, [pc, #40]	; (80122b8 <_vfiprintf_r+0x228>)
 8012290:	a904      	add	r1, sp, #16
 8012292:	4630      	mov	r0, r6
 8012294:	f7fe f982 	bl	801059c <_printf_i>
 8012298:	e7ec      	b.n	8012274 <_vfiprintf_r+0x1e4>
 801229a:	bf00      	nop
 801229c:	08016a70 	.word	0x08016a70
 80122a0:	08016bac 	.word	0x08016bac
 80122a4:	08016a90 	.word	0x08016a90
 80122a8:	08016a50 	.word	0x08016a50
 80122ac:	08016bb2 	.word	0x08016bb2
 80122b0:	08016bb6 	.word	0x08016bb6
 80122b4:	08010059 	.word	0x08010059
 80122b8:	0801206b 	.word	0x0801206b

080122bc <__sread>:
 80122bc:	b510      	push	{r4, lr}
 80122be:	460c      	mov	r4, r1
 80122c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80122c4:	f000 f8ae 	bl	8012424 <_read_r>
 80122c8:	2800      	cmp	r0, #0
 80122ca:	bfab      	itete	ge
 80122cc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80122ce:	89a3      	ldrhlt	r3, [r4, #12]
 80122d0:	181b      	addge	r3, r3, r0
 80122d2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80122d6:	bfac      	ite	ge
 80122d8:	6563      	strge	r3, [r4, #84]	; 0x54
 80122da:	81a3      	strhlt	r3, [r4, #12]
 80122dc:	bd10      	pop	{r4, pc}

080122de <__swrite>:
 80122de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80122e2:	461f      	mov	r7, r3
 80122e4:	898b      	ldrh	r3, [r1, #12]
 80122e6:	05db      	lsls	r3, r3, #23
 80122e8:	4605      	mov	r5, r0
 80122ea:	460c      	mov	r4, r1
 80122ec:	4616      	mov	r6, r2
 80122ee:	d505      	bpl.n	80122fc <__swrite+0x1e>
 80122f0:	2302      	movs	r3, #2
 80122f2:	2200      	movs	r2, #0
 80122f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80122f8:	f000 f868 	bl	80123cc <_lseek_r>
 80122fc:	89a3      	ldrh	r3, [r4, #12]
 80122fe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8012302:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8012306:	81a3      	strh	r3, [r4, #12]
 8012308:	4632      	mov	r2, r6
 801230a:	463b      	mov	r3, r7
 801230c:	4628      	mov	r0, r5
 801230e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012312:	f000 b817 	b.w	8012344 <_write_r>

08012316 <__sseek>:
 8012316:	b510      	push	{r4, lr}
 8012318:	460c      	mov	r4, r1
 801231a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801231e:	f000 f855 	bl	80123cc <_lseek_r>
 8012322:	1c43      	adds	r3, r0, #1
 8012324:	89a3      	ldrh	r3, [r4, #12]
 8012326:	bf15      	itete	ne
 8012328:	6560      	strne	r0, [r4, #84]	; 0x54
 801232a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801232e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8012332:	81a3      	strheq	r3, [r4, #12]
 8012334:	bf18      	it	ne
 8012336:	81a3      	strhne	r3, [r4, #12]
 8012338:	bd10      	pop	{r4, pc}

0801233a <__sclose>:
 801233a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801233e:	f000 b813 	b.w	8012368 <_close_r>
	...

08012344 <_write_r>:
 8012344:	b538      	push	{r3, r4, r5, lr}
 8012346:	4c07      	ldr	r4, [pc, #28]	; (8012364 <_write_r+0x20>)
 8012348:	4605      	mov	r5, r0
 801234a:	4608      	mov	r0, r1
 801234c:	4611      	mov	r1, r2
 801234e:	2200      	movs	r2, #0
 8012350:	6022      	str	r2, [r4, #0]
 8012352:	461a      	mov	r2, r3
 8012354:	f7f9 f86a 	bl	800b42c <_write>
 8012358:	1c43      	adds	r3, r0, #1
 801235a:	d102      	bne.n	8012362 <_write_r+0x1e>
 801235c:	6823      	ldr	r3, [r4, #0]
 801235e:	b103      	cbz	r3, 8012362 <_write_r+0x1e>
 8012360:	602b      	str	r3, [r5, #0]
 8012362:	bd38      	pop	{r3, r4, r5, pc}
 8012364:	20000e20 	.word	0x20000e20

08012368 <_close_r>:
 8012368:	b538      	push	{r3, r4, r5, lr}
 801236a:	4c06      	ldr	r4, [pc, #24]	; (8012384 <_close_r+0x1c>)
 801236c:	2300      	movs	r3, #0
 801236e:	4605      	mov	r5, r0
 8012370:	4608      	mov	r0, r1
 8012372:	6023      	str	r3, [r4, #0]
 8012374:	f7f5 fcd1 	bl	8007d1a <_close>
 8012378:	1c43      	adds	r3, r0, #1
 801237a:	d102      	bne.n	8012382 <_close_r+0x1a>
 801237c:	6823      	ldr	r3, [r4, #0]
 801237e:	b103      	cbz	r3, 8012382 <_close_r+0x1a>
 8012380:	602b      	str	r3, [r5, #0]
 8012382:	bd38      	pop	{r3, r4, r5, pc}
 8012384:	20000e20 	.word	0x20000e20

08012388 <_fstat_r>:
 8012388:	b538      	push	{r3, r4, r5, lr}
 801238a:	4c07      	ldr	r4, [pc, #28]	; (80123a8 <_fstat_r+0x20>)
 801238c:	2300      	movs	r3, #0
 801238e:	4605      	mov	r5, r0
 8012390:	4608      	mov	r0, r1
 8012392:	4611      	mov	r1, r2
 8012394:	6023      	str	r3, [r4, #0]
 8012396:	f7f5 fccc 	bl	8007d32 <_fstat>
 801239a:	1c43      	adds	r3, r0, #1
 801239c:	d102      	bne.n	80123a4 <_fstat_r+0x1c>
 801239e:	6823      	ldr	r3, [r4, #0]
 80123a0:	b103      	cbz	r3, 80123a4 <_fstat_r+0x1c>
 80123a2:	602b      	str	r3, [r5, #0]
 80123a4:	bd38      	pop	{r3, r4, r5, pc}
 80123a6:	bf00      	nop
 80123a8:	20000e20 	.word	0x20000e20

080123ac <_isatty_r>:
 80123ac:	b538      	push	{r3, r4, r5, lr}
 80123ae:	4c06      	ldr	r4, [pc, #24]	; (80123c8 <_isatty_r+0x1c>)
 80123b0:	2300      	movs	r3, #0
 80123b2:	4605      	mov	r5, r0
 80123b4:	4608      	mov	r0, r1
 80123b6:	6023      	str	r3, [r4, #0]
 80123b8:	f7f5 fccb 	bl	8007d52 <_isatty>
 80123bc:	1c43      	adds	r3, r0, #1
 80123be:	d102      	bne.n	80123c6 <_isatty_r+0x1a>
 80123c0:	6823      	ldr	r3, [r4, #0]
 80123c2:	b103      	cbz	r3, 80123c6 <_isatty_r+0x1a>
 80123c4:	602b      	str	r3, [r5, #0]
 80123c6:	bd38      	pop	{r3, r4, r5, pc}
 80123c8:	20000e20 	.word	0x20000e20

080123cc <_lseek_r>:
 80123cc:	b538      	push	{r3, r4, r5, lr}
 80123ce:	4c07      	ldr	r4, [pc, #28]	; (80123ec <_lseek_r+0x20>)
 80123d0:	4605      	mov	r5, r0
 80123d2:	4608      	mov	r0, r1
 80123d4:	4611      	mov	r1, r2
 80123d6:	2200      	movs	r2, #0
 80123d8:	6022      	str	r2, [r4, #0]
 80123da:	461a      	mov	r2, r3
 80123dc:	f7f5 fcc4 	bl	8007d68 <_lseek>
 80123e0:	1c43      	adds	r3, r0, #1
 80123e2:	d102      	bne.n	80123ea <_lseek_r+0x1e>
 80123e4:	6823      	ldr	r3, [r4, #0]
 80123e6:	b103      	cbz	r3, 80123ea <_lseek_r+0x1e>
 80123e8:	602b      	str	r3, [r5, #0]
 80123ea:	bd38      	pop	{r3, r4, r5, pc}
 80123ec:	20000e20 	.word	0x20000e20

080123f0 <__ascii_mbtowc>:
 80123f0:	b082      	sub	sp, #8
 80123f2:	b901      	cbnz	r1, 80123f6 <__ascii_mbtowc+0x6>
 80123f4:	a901      	add	r1, sp, #4
 80123f6:	b142      	cbz	r2, 801240a <__ascii_mbtowc+0x1a>
 80123f8:	b14b      	cbz	r3, 801240e <__ascii_mbtowc+0x1e>
 80123fa:	7813      	ldrb	r3, [r2, #0]
 80123fc:	600b      	str	r3, [r1, #0]
 80123fe:	7812      	ldrb	r2, [r2, #0]
 8012400:	1c10      	adds	r0, r2, #0
 8012402:	bf18      	it	ne
 8012404:	2001      	movne	r0, #1
 8012406:	b002      	add	sp, #8
 8012408:	4770      	bx	lr
 801240a:	4610      	mov	r0, r2
 801240c:	e7fb      	b.n	8012406 <__ascii_mbtowc+0x16>
 801240e:	f06f 0001 	mvn.w	r0, #1
 8012412:	e7f8      	b.n	8012406 <__ascii_mbtowc+0x16>

08012414 <_malloc_usable_size_r>:
 8012414:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8012418:	1f18      	subs	r0, r3, #4
 801241a:	2b00      	cmp	r3, #0
 801241c:	bfbc      	itt	lt
 801241e:	580b      	ldrlt	r3, [r1, r0]
 8012420:	18c0      	addlt	r0, r0, r3
 8012422:	4770      	bx	lr

08012424 <_read_r>:
 8012424:	b538      	push	{r3, r4, r5, lr}
 8012426:	4c07      	ldr	r4, [pc, #28]	; (8012444 <_read_r+0x20>)
 8012428:	4605      	mov	r5, r0
 801242a:	4608      	mov	r0, r1
 801242c:	4611      	mov	r1, r2
 801242e:	2200      	movs	r2, #0
 8012430:	6022      	str	r2, [r4, #0]
 8012432:	461a      	mov	r2, r3
 8012434:	f7f5 fc54 	bl	8007ce0 <_read>
 8012438:	1c43      	adds	r3, r0, #1
 801243a:	d102      	bne.n	8012442 <_read_r+0x1e>
 801243c:	6823      	ldr	r3, [r4, #0]
 801243e:	b103      	cbz	r3, 8012442 <_read_r+0x1e>
 8012440:	602b      	str	r3, [r5, #0]
 8012442:	bd38      	pop	{r3, r4, r5, pc}
 8012444:	20000e20 	.word	0x20000e20

08012448 <__ascii_wctomb>:
 8012448:	b149      	cbz	r1, 801245e <__ascii_wctomb+0x16>
 801244a:	2aff      	cmp	r2, #255	; 0xff
 801244c:	bf85      	ittet	hi
 801244e:	238a      	movhi	r3, #138	; 0x8a
 8012450:	6003      	strhi	r3, [r0, #0]
 8012452:	700a      	strbls	r2, [r1, #0]
 8012454:	f04f 30ff 	movhi.w	r0, #4294967295
 8012458:	bf98      	it	ls
 801245a:	2001      	movls	r0, #1
 801245c:	4770      	bx	lr
 801245e:	4608      	mov	r0, r1
 8012460:	4770      	bx	lr
	...

08012464 <asinhf>:
 8012464:	b510      	push	{r4, lr}
 8012466:	ee10 4a10 	vmov	r4, s0
 801246a:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 801246e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8012472:	ed2d 8b04 	vpush	{d8-d9}
 8012476:	eeb0 8a40 	vmov.f32	s16, s0
 801247a:	db06      	blt.n	801248a <asinhf+0x26>
 801247c:	ee30 8a00 	vadd.f32	s16, s0, s0
 8012480:	eeb0 0a48 	vmov.f32	s0, s16
 8012484:	ecbd 8b04 	vpop	{d8-d9}
 8012488:	bd10      	pop	{r4, pc}
 801248a:	f1b3 5f46 	cmp.w	r3, #830472192	; 0x31800000
 801248e:	da21      	bge.n	80124d4 <asinhf+0x70>
 8012490:	eddf 7a26 	vldr	s15, [pc, #152]	; 801252c <asinhf+0xc8>
 8012494:	ee70 7a27 	vadd.f32	s15, s0, s15
 8012498:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801249c:	eef4 7ac7 	vcmpe.f32	s15, s14
 80124a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80124a4:	dcec      	bgt.n	8012480 <asinhf+0x1c>
 80124a6:	eeb0 0a48 	vmov.f32	s0, s16
 80124aa:	f000 fbf3 	bl	8012c94 <fabsf>
 80124ae:	ee68 8a08 	vmul.f32	s17, s16, s16
 80124b2:	eeb7 8a00 	vmov.f32	s16, #112	; 0x3f800000  1.0
 80124b6:	eeb0 9a40 	vmov.f32	s18, s0
 80124ba:	ee38 0a88 	vadd.f32	s0, s17, s16
 80124be:	f001 ff5f 	bl	8014380 <__ieee754_sqrtf>
 80124c2:	ee30 8a08 	vadd.f32	s16, s0, s16
 80124c6:	ee88 0a88 	vdiv.f32	s0, s17, s16
 80124ca:	ee30 0a09 	vadd.f32	s0, s0, s18
 80124ce:	f000 fc93 	bl	8012df8 <log1pf>
 80124d2:	e028      	b.n	8012526 <asinhf+0xc2>
 80124d4:	f1b3 4f9b 	cmp.w	r3, #1300234240	; 0x4d800000
 80124d8:	dd0c      	ble.n	80124f4 <asinhf+0x90>
 80124da:	f000 fbdb 	bl	8012c94 <fabsf>
 80124de:	f000 fc23 	bl	8012d28 <logf>
 80124e2:	ed9f 8a13 	vldr	s16, [pc, #76]	; 8012530 <asinhf+0xcc>
 80124e6:	ee30 8a08 	vadd.f32	s16, s0, s16
 80124ea:	2c00      	cmp	r4, #0
 80124ec:	bfd8      	it	le
 80124ee:	eeb1 8a48 	vnegle.f32	s16, s16
 80124f2:	e7c5      	b.n	8012480 <asinhf+0x1c>
 80124f4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80124f8:	ddd5      	ble.n	80124a6 <asinhf+0x42>
 80124fa:	f000 fbcb 	bl	8012c94 <fabsf>
 80124fe:	eeb7 9a00 	vmov.f32	s18, #112	; 0x3f800000  1.0
 8012502:	eef0 8a40 	vmov.f32	s17, s0
 8012506:	eeb0 0a49 	vmov.f32	s0, s18
 801250a:	eea8 0a08 	vfma.f32	s0, s16, s16
 801250e:	f001 ff37 	bl	8014380 <__ieee754_sqrtf>
 8012512:	ee70 7a28 	vadd.f32	s15, s0, s17
 8012516:	ee89 0a27 	vdiv.f32	s0, s18, s15
 801251a:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 801251e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8012522:	f000 fc01 	bl	8012d28 <logf>
 8012526:	eeb0 8a40 	vmov.f32	s16, s0
 801252a:	e7de      	b.n	80124ea <asinhf+0x86>
 801252c:	7149f2ca 	.word	0x7149f2ca
 8012530:	3f317218 	.word	0x3f317218

08012534 <atanf>:
 8012534:	b538      	push	{r3, r4, r5, lr}
 8012536:	ee10 5a10 	vmov	r5, s0
 801253a:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 801253e:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 8012542:	eef0 7a40 	vmov.f32	s15, s0
 8012546:	db0f      	blt.n	8012568 <atanf+0x34>
 8012548:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 801254c:	dd04      	ble.n	8012558 <atanf+0x24>
 801254e:	ee70 7a00 	vadd.f32	s15, s0, s0
 8012552:	eeb0 0a67 	vmov.f32	s0, s15
 8012556:	bd38      	pop	{r3, r4, r5, pc}
 8012558:	ed9f 7a4c 	vldr	s14, [pc, #304]	; 801268c <atanf+0x158>
 801255c:	eddf 7a4c 	vldr	s15, [pc, #304]	; 8012690 <atanf+0x15c>
 8012560:	2d00      	cmp	r5, #0
 8012562:	fe77 7a87 	vselgt.f32	s15, s15, s14
 8012566:	e7f4      	b.n	8012552 <atanf+0x1e>
 8012568:	4b4a      	ldr	r3, [pc, #296]	; (8012694 <atanf+0x160>)
 801256a:	429c      	cmp	r4, r3
 801256c:	dc10      	bgt.n	8012590 <atanf+0x5c>
 801256e:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 8012572:	da0a      	bge.n	801258a <atanf+0x56>
 8012574:	ed9f 7a48 	vldr	s14, [pc, #288]	; 8012698 <atanf+0x164>
 8012578:	ee30 7a07 	vadd.f32	s14, s0, s14
 801257c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012580:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8012584:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012588:	dce3      	bgt.n	8012552 <atanf+0x1e>
 801258a:	f04f 33ff 	mov.w	r3, #4294967295
 801258e:	e013      	b.n	80125b8 <atanf+0x84>
 8012590:	f000 fb80 	bl	8012c94 <fabsf>
 8012594:	4b41      	ldr	r3, [pc, #260]	; (801269c <atanf+0x168>)
 8012596:	429c      	cmp	r4, r3
 8012598:	dc4f      	bgt.n	801263a <atanf+0x106>
 801259a:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 801259e:	429c      	cmp	r4, r3
 80125a0:	dc41      	bgt.n	8012626 <atanf+0xf2>
 80125a2:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 80125a6:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 80125aa:	eea0 7a27 	vfma.f32	s14, s0, s15
 80125ae:	2300      	movs	r3, #0
 80125b0:	ee30 0a27 	vadd.f32	s0, s0, s15
 80125b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80125b8:	1c5a      	adds	r2, r3, #1
 80125ba:	ee27 6aa7 	vmul.f32	s12, s15, s15
 80125be:	ed9f 7a38 	vldr	s14, [pc, #224]	; 80126a0 <atanf+0x16c>
 80125c2:	eddf 5a38 	vldr	s11, [pc, #224]	; 80126a4 <atanf+0x170>
 80125c6:	ed9f 5a38 	vldr	s10, [pc, #224]	; 80126a8 <atanf+0x174>
 80125ca:	ee66 6a06 	vmul.f32	s13, s12, s12
 80125ce:	eee6 5a87 	vfma.f32	s11, s13, s14
 80125d2:	ed9f 7a36 	vldr	s14, [pc, #216]	; 80126ac <atanf+0x178>
 80125d6:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80125da:	eddf 5a35 	vldr	s11, [pc, #212]	; 80126b0 <atanf+0x17c>
 80125de:	eee7 5a26 	vfma.f32	s11, s14, s13
 80125e2:	ed9f 7a34 	vldr	s14, [pc, #208]	; 80126b4 <atanf+0x180>
 80125e6:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80125ea:	eddf 5a33 	vldr	s11, [pc, #204]	; 80126b8 <atanf+0x184>
 80125ee:	eee7 5a26 	vfma.f32	s11, s14, s13
 80125f2:	ed9f 7a32 	vldr	s14, [pc, #200]	; 80126bc <atanf+0x188>
 80125f6:	eea6 5a87 	vfma.f32	s10, s13, s14
 80125fa:	ed9f 7a31 	vldr	s14, [pc, #196]	; 80126c0 <atanf+0x18c>
 80125fe:	eea5 7a26 	vfma.f32	s14, s10, s13
 8012602:	ed9f 5a30 	vldr	s10, [pc, #192]	; 80126c4 <atanf+0x190>
 8012606:	eea7 5a26 	vfma.f32	s10, s14, s13
 801260a:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 80126c8 <atanf+0x194>
 801260e:	eea5 7a26 	vfma.f32	s14, s10, s13
 8012612:	ee27 7a26 	vmul.f32	s14, s14, s13
 8012616:	eea5 7a86 	vfma.f32	s14, s11, s12
 801261a:	ee27 7a27 	vmul.f32	s14, s14, s15
 801261e:	d121      	bne.n	8012664 <atanf+0x130>
 8012620:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8012624:	e795      	b.n	8012552 <atanf+0x1e>
 8012626:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801262a:	ee30 7a67 	vsub.f32	s14, s0, s15
 801262e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8012632:	2301      	movs	r3, #1
 8012634:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012638:	e7be      	b.n	80125b8 <atanf+0x84>
 801263a:	4b24      	ldr	r3, [pc, #144]	; (80126cc <atanf+0x198>)
 801263c:	429c      	cmp	r4, r3
 801263e:	dc0b      	bgt.n	8012658 <atanf+0x124>
 8012640:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8012644:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012648:	eea0 7a27 	vfma.f32	s14, s0, s15
 801264c:	2302      	movs	r3, #2
 801264e:	ee70 6a67 	vsub.f32	s13, s0, s15
 8012652:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8012656:	e7af      	b.n	80125b8 <atanf+0x84>
 8012658:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 801265c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012660:	2303      	movs	r3, #3
 8012662:	e7a9      	b.n	80125b8 <atanf+0x84>
 8012664:	4a1a      	ldr	r2, [pc, #104]	; (80126d0 <atanf+0x19c>)
 8012666:	491b      	ldr	r1, [pc, #108]	; (80126d4 <atanf+0x1a0>)
 8012668:	009b      	lsls	r3, r3, #2
 801266a:	441a      	add	r2, r3
 801266c:	440b      	add	r3, r1
 801266e:	edd3 6a00 	vldr	s13, [r3]
 8012672:	ee37 7a66 	vsub.f32	s14, s14, s13
 8012676:	2d00      	cmp	r5, #0
 8012678:	ee77 7a67 	vsub.f32	s15, s14, s15
 801267c:	ed92 7a00 	vldr	s14, [r2]
 8012680:	ee77 7a67 	vsub.f32	s15, s14, s15
 8012684:	bfb8      	it	lt
 8012686:	eef1 7a67 	vneglt.f32	s15, s15
 801268a:	e762      	b.n	8012552 <atanf+0x1e>
 801268c:	bfc90fdb 	.word	0xbfc90fdb
 8012690:	3fc90fdb 	.word	0x3fc90fdb
 8012694:	3edfffff 	.word	0x3edfffff
 8012698:	7149f2ca 	.word	0x7149f2ca
 801269c:	3f97ffff 	.word	0x3f97ffff
 80126a0:	3c8569d7 	.word	0x3c8569d7
 80126a4:	3d4bda59 	.word	0x3d4bda59
 80126a8:	bd6ef16b 	.word	0xbd6ef16b
 80126ac:	3d886b35 	.word	0x3d886b35
 80126b0:	3dba2e6e 	.word	0x3dba2e6e
 80126b4:	3e124925 	.word	0x3e124925
 80126b8:	3eaaaaab 	.word	0x3eaaaaab
 80126bc:	bd15a221 	.word	0xbd15a221
 80126c0:	bd9d8795 	.word	0xbd9d8795
 80126c4:	bde38e38 	.word	0xbde38e38
 80126c8:	be4ccccd 	.word	0xbe4ccccd
 80126cc:	401bffff 	.word	0x401bffff
 80126d0:	08016cc8 	.word	0x08016cc8
 80126d4:	08016cd8 	.word	0x08016cd8

080126d8 <ceilf>:
 80126d8:	ee10 3a10 	vmov	r3, s0
 80126dc:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80126e0:	0dca      	lsrs	r2, r1, #23
 80126e2:	3a7f      	subs	r2, #127	; 0x7f
 80126e4:	2a16      	cmp	r2, #22
 80126e6:	dc2a      	bgt.n	801273e <ceilf+0x66>
 80126e8:	2a00      	cmp	r2, #0
 80126ea:	da11      	bge.n	8012710 <ceilf+0x38>
 80126ec:	eddf 7a18 	vldr	s15, [pc, #96]	; 8012750 <ceilf+0x78>
 80126f0:	ee30 0a27 	vadd.f32	s0, s0, s15
 80126f4:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80126f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80126fc:	dd05      	ble.n	801270a <ceilf+0x32>
 80126fe:	2b00      	cmp	r3, #0
 8012700:	db23      	blt.n	801274a <ceilf+0x72>
 8012702:	2900      	cmp	r1, #0
 8012704:	bf18      	it	ne
 8012706:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 801270a:	ee00 3a10 	vmov	s0, r3
 801270e:	4770      	bx	lr
 8012710:	4910      	ldr	r1, [pc, #64]	; (8012754 <ceilf+0x7c>)
 8012712:	4111      	asrs	r1, r2
 8012714:	420b      	tst	r3, r1
 8012716:	d0fa      	beq.n	801270e <ceilf+0x36>
 8012718:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8012750 <ceilf+0x78>
 801271c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8012720:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012724:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012728:	ddef      	ble.n	801270a <ceilf+0x32>
 801272a:	2b00      	cmp	r3, #0
 801272c:	bfc2      	ittt	gt
 801272e:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8012732:	fa40 f202 	asrgt.w	r2, r0, r2
 8012736:	189b      	addgt	r3, r3, r2
 8012738:	ea23 0301 	bic.w	r3, r3, r1
 801273c:	e7e5      	b.n	801270a <ceilf+0x32>
 801273e:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8012742:	d3e4      	bcc.n	801270e <ceilf+0x36>
 8012744:	ee30 0a00 	vadd.f32	s0, s0, s0
 8012748:	4770      	bx	lr
 801274a:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 801274e:	e7dc      	b.n	801270a <ceilf+0x32>
 8012750:	7149f2ca 	.word	0x7149f2ca
 8012754:	007fffff 	.word	0x007fffff

08012758 <cosf>:
 8012758:	ee10 3a10 	vmov	r3, s0
 801275c:	b507      	push	{r0, r1, r2, lr}
 801275e:	4a1c      	ldr	r2, [pc, #112]	; (80127d0 <cosf+0x78>)
 8012760:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8012764:	4293      	cmp	r3, r2
 8012766:	dc04      	bgt.n	8012772 <cosf+0x1a>
 8012768:	eddf 0a1a 	vldr	s1, [pc, #104]	; 80127d4 <cosf+0x7c>
 801276c:	f001 fe0c 	bl	8014388 <__kernel_cosf>
 8012770:	e004      	b.n	801277c <cosf+0x24>
 8012772:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8012776:	db04      	blt.n	8012782 <cosf+0x2a>
 8012778:	ee30 0a40 	vsub.f32	s0, s0, s0
 801277c:	b003      	add	sp, #12
 801277e:	f85d fb04 	ldr.w	pc, [sp], #4
 8012782:	4668      	mov	r0, sp
 8012784:	f001 fc62 	bl	801404c <__ieee754_rem_pio2f>
 8012788:	f000 0003 	and.w	r0, r0, #3
 801278c:	2801      	cmp	r0, #1
 801278e:	d007      	beq.n	80127a0 <cosf+0x48>
 8012790:	2802      	cmp	r0, #2
 8012792:	d00e      	beq.n	80127b2 <cosf+0x5a>
 8012794:	b9a0      	cbnz	r0, 80127c0 <cosf+0x68>
 8012796:	eddd 0a01 	vldr	s1, [sp, #4]
 801279a:	ed9d 0a00 	vldr	s0, [sp]
 801279e:	e7e5      	b.n	801276c <cosf+0x14>
 80127a0:	eddd 0a01 	vldr	s1, [sp, #4]
 80127a4:	ed9d 0a00 	vldr	s0, [sp]
 80127a8:	f002 f8ce 	bl	8014948 <__kernel_sinf>
 80127ac:	eeb1 0a40 	vneg.f32	s0, s0
 80127b0:	e7e4      	b.n	801277c <cosf+0x24>
 80127b2:	eddd 0a01 	vldr	s1, [sp, #4]
 80127b6:	ed9d 0a00 	vldr	s0, [sp]
 80127ba:	f001 fde5 	bl	8014388 <__kernel_cosf>
 80127be:	e7f5      	b.n	80127ac <cosf+0x54>
 80127c0:	2001      	movs	r0, #1
 80127c2:	eddd 0a01 	vldr	s1, [sp, #4]
 80127c6:	ed9d 0a00 	vldr	s0, [sp]
 80127ca:	f002 f8bd 	bl	8014948 <__kernel_sinf>
 80127ce:	e7d5      	b.n	801277c <cosf+0x24>
 80127d0:	3f490fd8 	.word	0x3f490fd8
 80127d4:	00000000 	.word	0x00000000

080127d8 <erff>:
 80127d8:	b538      	push	{r3, r4, r5, lr}
 80127da:	ee10 4a10 	vmov	r4, s0
 80127de:	f024 4500 	bic.w	r5, r4, #2147483648	; 0x80000000
 80127e2:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 80127e6:	ed2d 8b06 	vpush	{d8-d10}
 80127ea:	eef0 7a40 	vmov.f32	s15, s0
 80127ee:	db12      	blt.n	8012816 <erff+0x3e>
 80127f0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80127f4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80127f8:	0fe4      	lsrs	r4, r4, #31
 80127fa:	0064      	lsls	r4, r4, #1
 80127fc:	f1c4 0301 	rsb	r3, r4, #1
 8012800:	ee00 3a10 	vmov	s0, r3
 8012804:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8012808:	ee70 7a07 	vadd.f32	s15, s0, s14
 801280c:	ecbd 8b06 	vpop	{d8-d10}
 8012810:	eeb0 0a67 	vmov.f32	s0, s15
 8012814:	bd38      	pop	{r3, r4, r5, pc}
 8012816:	4ba4      	ldr	r3, [pc, #656]	; (8012aa8 <erff+0x2d0>)
 8012818:	429d      	cmp	r5, r3
 801281a:	dc4a      	bgt.n	80128b2 <erff+0xda>
 801281c:	f1b5 5f46 	cmp.w	r5, #830472192	; 0x31800000
 8012820:	da16      	bge.n	8012850 <erff+0x78>
 8012822:	f1b5 6f80 	cmp.w	r5, #67108864	; 0x4000000
 8012826:	da0e      	bge.n	8012846 <erff+0x6e>
 8012828:	ed9f 0aa0 	vldr	s0, [pc, #640]	; 8012aac <erff+0x2d4>
 801282c:	ee27 0a80 	vmul.f32	s0, s15, s0
 8012830:	eeb2 7a00 	vmov.f32	s14, #32	; 0x41000000  8.0
 8012834:	eea7 0a87 	vfma.f32	s0, s15, s14
 8012838:	eef0 7a40 	vmov.f32	s15, s0
 801283c:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8012840:	ee67 7a80 	vmul.f32	s15, s15, s0
 8012844:	e7e2      	b.n	801280c <erff+0x34>
 8012846:	ed9f 7a9a 	vldr	s14, [pc, #616]	; 8012ab0 <erff+0x2d8>
 801284a:	eee0 7a07 	vfma.f32	s15, s0, s14
 801284e:	e7dd      	b.n	801280c <erff+0x34>
 8012850:	ee20 7a00 	vmul.f32	s14, s0, s0
 8012854:	ed9f 6a97 	vldr	s12, [pc, #604]	; 8012ab4 <erff+0x2dc>
 8012858:	eddf 6a97 	vldr	s13, [pc, #604]	; 8012ab8 <erff+0x2e0>
 801285c:	eddf 5a97 	vldr	s11, [pc, #604]	; 8012abc <erff+0x2e4>
 8012860:	eee7 6a06 	vfma.f32	s13, s14, s12
 8012864:	ed9f 6a96 	vldr	s12, [pc, #600]	; 8012ac0 <erff+0x2e8>
 8012868:	eea6 6a87 	vfma.f32	s12, s13, s14
 801286c:	eddf 6a95 	vldr	s13, [pc, #596]	; 8012ac4 <erff+0x2ec>
 8012870:	eee6 6a07 	vfma.f32	s13, s12, s14
 8012874:	ed9f 6a8e 	vldr	s12, [pc, #568]	; 8012ab0 <erff+0x2d8>
 8012878:	eea6 6a87 	vfma.f32	s12, s13, s14
 801287c:	eddf 6a92 	vldr	s13, [pc, #584]	; 8012ac8 <erff+0x2f0>
 8012880:	eee7 6a25 	vfma.f32	s13, s14, s11
 8012884:	eddf 5a91 	vldr	s11, [pc, #580]	; 8012acc <erff+0x2f4>
 8012888:	eee6 5a87 	vfma.f32	s11, s13, s14
 801288c:	eddf 6a90 	vldr	s13, [pc, #576]	; 8012ad0 <erff+0x2f8>
 8012890:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012894:	eddf 5a8f 	vldr	s11, [pc, #572]	; 8012ad4 <erff+0x2fc>
 8012898:	eee6 5a87 	vfma.f32	s11, s13, s14
 801289c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80128a0:	eee5 6a87 	vfma.f32	s13, s11, s14
 80128a4:	eeb0 7a66 	vmov.f32	s14, s13
 80128a8:	eec6 6a07 	vdiv.f32	s13, s12, s14
 80128ac:	eee0 7a26 	vfma.f32	s15, s0, s13
 80128b0:	e7ac      	b.n	801280c <erff+0x34>
 80128b2:	4b89      	ldr	r3, [pc, #548]	; (8012ad8 <erff+0x300>)
 80128b4:	429d      	cmp	r5, r3
 80128b6:	dc44      	bgt.n	8012942 <erff+0x16a>
 80128b8:	f000 f9ec 	bl	8012c94 <fabsf>
 80128bc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80128c0:	ee30 0a67 	vsub.f32	s0, s0, s15
 80128c4:	ed9f 7a85 	vldr	s14, [pc, #532]	; 8012adc <erff+0x304>
 80128c8:	eddf 6a85 	vldr	s13, [pc, #532]	; 8012ae0 <erff+0x308>
 80128cc:	ed9f 6a85 	vldr	s12, [pc, #532]	; 8012ae4 <erff+0x30c>
 80128d0:	eee0 6a07 	vfma.f32	s13, s0, s14
 80128d4:	2c00      	cmp	r4, #0
 80128d6:	ed9f 7a84 	vldr	s14, [pc, #528]	; 8012ae8 <erff+0x310>
 80128da:	eea6 7a80 	vfma.f32	s14, s13, s0
 80128de:	eddf 6a83 	vldr	s13, [pc, #524]	; 8012aec <erff+0x314>
 80128e2:	eee7 6a00 	vfma.f32	s13, s14, s0
 80128e6:	ed9f 7a82 	vldr	s14, [pc, #520]	; 8012af0 <erff+0x318>
 80128ea:	eea6 7a80 	vfma.f32	s14, s13, s0
 80128ee:	eddf 6a81 	vldr	s13, [pc, #516]	; 8012af4 <erff+0x31c>
 80128f2:	eee7 6a00 	vfma.f32	s13, s14, s0
 80128f6:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8012af8 <erff+0x320>
 80128fa:	eea6 7a80 	vfma.f32	s14, s13, s0
 80128fe:	eddf 6a7f 	vldr	s13, [pc, #508]	; 8012afc <erff+0x324>
 8012902:	eee0 6a06 	vfma.f32	s13, s0, s12
 8012906:	ed9f 6a7e 	vldr	s12, [pc, #504]	; 8012b00 <erff+0x328>
 801290a:	eea6 6a80 	vfma.f32	s12, s13, s0
 801290e:	eddf 6a7d 	vldr	s13, [pc, #500]	; 8012b04 <erff+0x32c>
 8012912:	eee6 6a00 	vfma.f32	s13, s12, s0
 8012916:	ed9f 6a7c 	vldr	s12, [pc, #496]	; 8012b08 <erff+0x330>
 801291a:	eea6 6a80 	vfma.f32	s12, s13, s0
 801291e:	eddf 6a7b 	vldr	s13, [pc, #492]	; 8012b0c <erff+0x334>
 8012922:	eee6 6a00 	vfma.f32	s13, s12, s0
 8012926:	eee6 7a80 	vfma.f32	s15, s13, s0
 801292a:	ee87 0a27 	vdiv.f32	s0, s14, s15
 801292e:	bfab      	itete	ge
 8012930:	eddf 7a77 	vldrge	s15, [pc, #476]	; 8012b10 <erff+0x338>
 8012934:	eddf 7a77 	vldrlt	s15, [pc, #476]	; 8012b14 <erff+0x33c>
 8012938:	ee70 7a27 	vaddge.f32	s15, s0, s15
 801293c:	ee77 7ac0 	vsublt.f32	s15, s15, s0
 8012940:	e764      	b.n	801280c <erff+0x34>
 8012942:	4b75      	ldr	r3, [pc, #468]	; (8012b18 <erff+0x340>)
 8012944:	429d      	cmp	r5, r3
 8012946:	dd07      	ble.n	8012958 <erff+0x180>
 8012948:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801294c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8012950:	2c00      	cmp	r4, #0
 8012952:	fe60 7a27 	vselge.f32	s15, s0, s15
 8012956:	e759      	b.n	801280c <erff+0x34>
 8012958:	f000 f99c 	bl	8012c94 <fabsf>
 801295c:	4b6f      	ldr	r3, [pc, #444]	; (8012b1c <erff+0x344>)
 801295e:	ee60 7a00 	vmul.f32	s15, s0, s0
 8012962:	eeb0 9a40 	vmov.f32	s18, s0
 8012966:	429d      	cmp	r5, r3
 8012968:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801296c:	ee80 7a27 	vdiv.f32	s14, s0, s15
 8012970:	eef0 8a40 	vmov.f32	s17, s0
 8012974:	dc64      	bgt.n	8012a40 <erff+0x268>
 8012976:	eddf 7a6a 	vldr	s15, [pc, #424]	; 8012b20 <erff+0x348>
 801297a:	eddf 6a6a 	vldr	s13, [pc, #424]	; 8012b24 <erff+0x34c>
 801297e:	eddf 9a6a 	vldr	s19, [pc, #424]	; 8012b28 <erff+0x350>
 8012982:	eee7 6a27 	vfma.f32	s13, s14, s15
 8012986:	eddf 7a69 	vldr	s15, [pc, #420]	; 8012b2c <erff+0x354>
 801298a:	eee6 7a87 	vfma.f32	s15, s13, s14
 801298e:	eddf 6a68 	vldr	s13, [pc, #416]	; 8012b30 <erff+0x358>
 8012992:	eee7 6a87 	vfma.f32	s13, s15, s14
 8012996:	eddf 7a67 	vldr	s15, [pc, #412]	; 8012b34 <erff+0x35c>
 801299a:	eee6 7a87 	vfma.f32	s15, s13, s14
 801299e:	eddf 6a66 	vldr	s13, [pc, #408]	; 8012b38 <erff+0x360>
 80129a2:	eee7 6a87 	vfma.f32	s13, s15, s14
 80129a6:	eddf 7a65 	vldr	s15, [pc, #404]	; 8012b3c <erff+0x364>
 80129aa:	eee6 7a87 	vfma.f32	s15, s13, s14
 80129ae:	eddf 6a64 	vldr	s13, [pc, #400]	; 8012b40 <erff+0x368>
 80129b2:	eee7 9a87 	vfma.f32	s19, s15, s14
 80129b6:	eddf 7a63 	vldr	s15, [pc, #396]	; 8012b44 <erff+0x36c>
 80129ba:	eee7 7a26 	vfma.f32	s15, s14, s13
 80129be:	eddf 6a62 	vldr	s13, [pc, #392]	; 8012b48 <erff+0x370>
 80129c2:	eee7 6a87 	vfma.f32	s13, s15, s14
 80129c6:	eddf 7a61 	vldr	s15, [pc, #388]	; 8012b4c <erff+0x374>
 80129ca:	eee6 7a87 	vfma.f32	s15, s13, s14
 80129ce:	eddf 6a60 	vldr	s13, [pc, #384]	; 8012b50 <erff+0x378>
 80129d2:	eee7 6a87 	vfma.f32	s13, s15, s14
 80129d6:	eddf 7a5f 	vldr	s15, [pc, #380]	; 8012b54 <erff+0x37c>
 80129da:	eee6 7a87 	vfma.f32	s15, s13, s14
 80129de:	eddf 6a5e 	vldr	s13, [pc, #376]	; 8012b58 <erff+0x380>
 80129e2:	eee7 6a87 	vfma.f32	s13, s15, s14
 80129e6:	eddf 7a5d 	vldr	s15, [pc, #372]	; 8012b5c <erff+0x384>
 80129ea:	ee19 3a10 	vmov	r3, s18
 80129ee:	eee6 7a87 	vfma.f32	s15, s13, s14
 80129f2:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 80129f6:	f023 030f 	bic.w	r3, r3, #15
 80129fa:	ee08 3a10 	vmov	s16, r3
 80129fe:	eef0 aa68 	vmov.f32	s21, s17
 8012a02:	eebe 0a02 	vmov.f32	s0, #226	; 0xbf100000 -0.5625000
 8012a06:	eee7 aa87 	vfma.f32	s21, s15, s14
 8012a0a:	eea8 0a48 	vfms.f32	s0, s16, s16
 8012a0e:	f000 f8c3 	bl	8012b98 <expf>
 8012a12:	eeb0 aa40 	vmov.f32	s20, s0
 8012a16:	ee89 0aaa 	vdiv.f32	s0, s19, s21
 8012a1a:	ee78 7a49 	vsub.f32	s15, s16, s18
 8012a1e:	ee38 8a09 	vadd.f32	s16, s16, s18
 8012a22:	eea7 0a88 	vfma.f32	s0, s15, s16
 8012a26:	f000 f8b7 	bl	8012b98 <expf>
 8012a2a:	ee2a 0a00 	vmul.f32	s0, s20, s0
 8012a2e:	2c00      	cmp	r4, #0
 8012a30:	eec0 7a09 	vdiv.f32	s15, s0, s18
 8012a34:	bfac      	ite	ge
 8012a36:	ee78 7ae7 	vsubge.f32	s15, s17, s15
 8012a3a:	ee77 7ae8 	vsublt.f32	s15, s15, s17
 8012a3e:	e6e5      	b.n	801280c <erff+0x34>
 8012a40:	eddf 6a47 	vldr	s13, [pc, #284]	; 8012b60 <erff+0x388>
 8012a44:	eddf 7a47 	vldr	s15, [pc, #284]	; 8012b64 <erff+0x38c>
 8012a48:	eddf 9a47 	vldr	s19, [pc, #284]	; 8012b68 <erff+0x390>
 8012a4c:	eee7 7a26 	vfma.f32	s15, s14, s13
 8012a50:	eddf 6a46 	vldr	s13, [pc, #280]	; 8012b6c <erff+0x394>
 8012a54:	eee7 6a87 	vfma.f32	s13, s15, s14
 8012a58:	eddf 7a45 	vldr	s15, [pc, #276]	; 8012b70 <erff+0x398>
 8012a5c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012a60:	eddf 6a44 	vldr	s13, [pc, #272]	; 8012b74 <erff+0x39c>
 8012a64:	eee7 6a87 	vfma.f32	s13, s15, s14
 8012a68:	eddf 7a43 	vldr	s15, [pc, #268]	; 8012b78 <erff+0x3a0>
 8012a6c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012a70:	eddf 6a42 	vldr	s13, [pc, #264]	; 8012b7c <erff+0x3a4>
 8012a74:	eee7 9a87 	vfma.f32	s19, s15, s14
 8012a78:	eddf 7a41 	vldr	s15, [pc, #260]	; 8012b80 <erff+0x3a8>
 8012a7c:	eee7 6a27 	vfma.f32	s13, s14, s15
 8012a80:	eddf 7a40 	vldr	s15, [pc, #256]	; 8012b84 <erff+0x3ac>
 8012a84:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012a88:	eddf 6a3f 	vldr	s13, [pc, #252]	; 8012b88 <erff+0x3b0>
 8012a8c:	eee7 6a87 	vfma.f32	s13, s15, s14
 8012a90:	eddf 7a3e 	vldr	s15, [pc, #248]	; 8012b8c <erff+0x3b4>
 8012a94:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012a98:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8012b90 <erff+0x3b8>
 8012a9c:	eee7 6a87 	vfma.f32	s13, s15, s14
 8012aa0:	eddf 7a3c 	vldr	s15, [pc, #240]	; 8012b94 <erff+0x3bc>
 8012aa4:	e7a1      	b.n	80129ea <erff+0x212>
 8012aa6:	bf00      	nop
 8012aa8:	3f57ffff 	.word	0x3f57ffff
 8012aac:	3f8375d4 	.word	0x3f8375d4
 8012ab0:	3e0375d4 	.word	0x3e0375d4
 8012ab4:	b7c756b1 	.word	0xb7c756b1
 8012ab8:	bbbd1489 	.word	0xbbbd1489
 8012abc:	b684e21a 	.word	0xb684e21a
 8012ac0:	bce9528f 	.word	0xbce9528f
 8012ac4:	bea66beb 	.word	0xbea66beb
 8012ac8:	390aee49 	.word	0x390aee49
 8012acc:	3ba68116 	.word	0x3ba68116
 8012ad0:	3d852a63 	.word	0x3d852a63
 8012ad4:	3ecbbbce 	.word	0x3ecbbbce
 8012ad8:	3f9fffff 	.word	0x3f9fffff
 8012adc:	bb0df9c0 	.word	0xbb0df9c0
 8012ae0:	3d1151b3 	.word	0x3d1151b3
 8012ae4:	3c445aa3 	.word	0x3c445aa3
 8012ae8:	bde31cc2 	.word	0xbde31cc2
 8012aec:	3ea2fe54 	.word	0x3ea2fe54
 8012af0:	bebe9208 	.word	0xbebe9208
 8012af4:	3ed46805 	.word	0x3ed46805
 8012af8:	bb1acdc6 	.word	0xbb1acdc6
 8012afc:	3c5f6e13 	.word	0x3c5f6e13
 8012b00:	3e013307 	.word	0x3e013307
 8012b04:	3d931ae7 	.word	0x3d931ae7
 8012b08:	3f0a5785 	.word	0x3f0a5785
 8012b0c:	3dd9f331 	.word	0x3dd9f331
 8012b10:	3f58560b 	.word	0x3f58560b
 8012b14:	bf58560b 	.word	0xbf58560b
 8012b18:	40bfffff 	.word	0x40bfffff
 8012b1c:	4036db6d 	.word	0x4036db6d
 8012b20:	c11d077e 	.word	0xc11d077e
 8012b24:	c2a2932b 	.word	0xc2a2932b
 8012b28:	bc21a093 	.word	0xbc21a093
 8012b2c:	c3389ae7 	.word	0xc3389ae7
 8012b30:	c322658c 	.word	0xc322658c
 8012b34:	c2798057 	.word	0xc2798057
 8012b38:	c128f022 	.word	0xc128f022
 8012b3c:	bf31a0b7 	.word	0xbf31a0b7
 8012b40:	bd777f97 	.word	0xbd777f97
 8012b44:	40d23f7c 	.word	0x40d23f7c
 8012b48:	42d9451f 	.word	0x42d9451f
 8012b4c:	43d6810b 	.word	0x43d6810b
 8012b50:	442158c9 	.word	0x442158c9
 8012b54:	43d9486f 	.word	0x43d9486f
 8012b58:	4309a863 	.word	0x4309a863
 8012b5c:	419d35ce 	.word	0x419d35ce
 8012b60:	c3f1c275 	.word	0xc3f1c275
 8012b64:	c480230b 	.word	0xc480230b
 8012b68:	bc21a092 	.word	0xbc21a092
 8012b6c:	c41f6441 	.word	0xc41f6441
 8012b70:	c320a2ea 	.word	0xc320a2ea
 8012b74:	c18e104b 	.word	0xc18e104b
 8012b78:	bf4c9dd4 	.word	0xbf4c9dd4
 8012b7c:	43ed43a7 	.word	0x43ed43a7
 8012b80:	c1b38712 	.word	0xc1b38712
 8012b84:	451f90ce 	.word	0x451f90ce
 8012b88:	4547fdbb 	.word	0x4547fdbb
 8012b8c:	44c01759 	.word	0x44c01759
 8012b90:	43a2e571 	.word	0x43a2e571
 8012b94:	41f2b459 	.word	0x41f2b459

08012b98 <expf>:
 8012b98:	ee10 2a10 	vmov	r2, s0
 8012b9c:	f240 412a 	movw	r1, #1066	; 0x42a
 8012ba0:	f3c2 530a 	ubfx	r3, r2, #20, #11
 8012ba4:	428b      	cmp	r3, r1
 8012ba6:	e92d 0830 	stmdb	sp!, {r4, r5, fp}
 8012baa:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
 8012bae:	d92e      	bls.n	8012c0e <expf+0x76>
 8012bb0:	f512 0f00 	cmn.w	r2, #8388608	; 0x800000
 8012bb4:	d061      	beq.n	8012c7a <expf+0xe2>
 8012bb6:	f5b3 6fff 	cmp.w	r3, #2040	; 0x7f8
 8012bba:	d304      	bcc.n	8012bc6 <expf+0x2e>
 8012bbc:	ee30 0a00 	vadd.f32	s0, s0, s0
 8012bc0:	e8bd 0830 	ldmia.w	sp!, {r4, r5, fp}
 8012bc4:	4770      	bx	lr
 8012bc6:	eddf 7a2e 	vldr	s15, [pc, #184]	; 8012c80 <expf+0xe8>
 8012bca:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8012bce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bd2:	dd04      	ble.n	8012bde <expf+0x46>
 8012bd4:	2000      	movs	r0, #0
 8012bd6:	e8bd 0830 	ldmia.w	sp!, {r4, r5, fp}
 8012bda:	f002 b807 	b.w	8014bec <__math_oflowf>
 8012bde:	eddf 7a29 	vldr	s15, [pc, #164]	; 8012c84 <expf+0xec>
 8012be2:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8012be6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bea:	d504      	bpl.n	8012bf6 <expf+0x5e>
 8012bec:	2000      	movs	r0, #0
 8012bee:	e8bd 0830 	ldmia.w	sp!, {r4, r5, fp}
 8012bf2:	f001 bfef 	b.w	8014bd4 <__math_uflowf>
 8012bf6:	eddf 7a24 	vldr	s15, [pc, #144]	; 8012c88 <expf+0xf0>
 8012bfa:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8012bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012c02:	d504      	bpl.n	8012c0e <expf+0x76>
 8012c04:	2000      	movs	r0, #0
 8012c06:	e8bd 0830 	ldmia.w	sp!, {r4, r5, fp}
 8012c0a:	f001 bfe9 	b.w	8014be0 <__math_may_uflowf>
 8012c0e:	491f      	ldr	r1, [pc, #124]	; (8012c8c <expf+0xf4>)
 8012c10:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
 8012c14:	ed91 5b4a 	vldr	d5, [r1, #296]	; 0x128
 8012c18:	ed91 7b48 	vldr	d7, [r1, #288]	; 0x120
 8012c1c:	eeb0 4b47 	vmov.f64	d4, d7
 8012c20:	eea5 4b06 	vfma.f64	d4, d5, d6
 8012c24:	ec55 4b14 	vmov	r4, r5, d4
 8012c28:	ee34 7b47 	vsub.f64	d7, d4, d7
 8012c2c:	f004 021f 	and.w	r2, r4, #31
 8012c30:	ee95 7b06 	vfnms.f64	d7, d5, d6
 8012c34:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8012c38:	ed91 6b50 	vldr	d6, [r1, #320]	; 0x140
 8012c3c:	e9d2 4500 	ldrd	r4, r5, [r2]
 8012c40:	eea6 0b07 	vfma.f64	d0, d6, d7
 8012c44:	ee14 0a10 	vmov	r0, s8
 8012c48:	ed91 5b4c 	vldr	d5, [r1, #304]	; 0x130
 8012c4c:	ed91 6b4e 	vldr	d6, [r1, #312]	; 0x138
 8012c50:	f04f 0b00 	mov.w	fp, #0
 8012c54:	eb1b 0204 	adds.w	r2, fp, r4
 8012c58:	ea4f 3cc0 	mov.w	ip, r0, lsl #15
 8012c5c:	eb4c 0305 	adc.w	r3, ip, r5
 8012c60:	eea5 6b07 	vfma.f64	d6, d5, d7
 8012c64:	ee27 7b07 	vmul.f64	d7, d7, d7
 8012c68:	eea6 0b07 	vfma.f64	d0, d6, d7
 8012c6c:	ec43 2b17 	vmov	d7, r2, r3
 8012c70:	ee20 0b07 	vmul.f64	d0, d0, d7
 8012c74:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 8012c78:	e7a2      	b.n	8012bc0 <expf+0x28>
 8012c7a:	ed9f 0a05 	vldr	s0, [pc, #20]	; 8012c90 <expf+0xf8>
 8012c7e:	e79f      	b.n	8012bc0 <expf+0x28>
 8012c80:	42b17217 	.word	0x42b17217
 8012c84:	c2cff1b4 	.word	0xc2cff1b4
 8012c88:	c2ce8ecf 	.word	0xc2ce8ecf
 8012c8c:	08016ce8 	.word	0x08016ce8
 8012c90:	00000000 	.word	0x00000000

08012c94 <fabsf>:
 8012c94:	ee10 3a10 	vmov	r3, s0
 8012c98:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8012c9c:	ee00 3a10 	vmov	s0, r3
 8012ca0:	4770      	bx	lr
	...

08012ca4 <floorf>:
 8012ca4:	ee10 3a10 	vmov	r3, s0
 8012ca8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8012cac:	0dca      	lsrs	r2, r1, #23
 8012cae:	3a7f      	subs	r2, #127	; 0x7f
 8012cb0:	2a16      	cmp	r2, #22
 8012cb2:	dc2a      	bgt.n	8012d0a <floorf+0x66>
 8012cb4:	2a00      	cmp	r2, #0
 8012cb6:	da11      	bge.n	8012cdc <floorf+0x38>
 8012cb8:	eddf 7a18 	vldr	s15, [pc, #96]	; 8012d1c <floorf+0x78>
 8012cbc:	ee30 0a27 	vadd.f32	s0, s0, s15
 8012cc0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012cc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012cc8:	dd05      	ble.n	8012cd6 <floorf+0x32>
 8012cca:	2b00      	cmp	r3, #0
 8012ccc:	da23      	bge.n	8012d16 <floorf+0x72>
 8012cce:	4a14      	ldr	r2, [pc, #80]	; (8012d20 <floorf+0x7c>)
 8012cd0:	2900      	cmp	r1, #0
 8012cd2:	bf18      	it	ne
 8012cd4:	4613      	movne	r3, r2
 8012cd6:	ee00 3a10 	vmov	s0, r3
 8012cda:	4770      	bx	lr
 8012cdc:	4911      	ldr	r1, [pc, #68]	; (8012d24 <floorf+0x80>)
 8012cde:	4111      	asrs	r1, r2
 8012ce0:	420b      	tst	r3, r1
 8012ce2:	d0fa      	beq.n	8012cda <floorf+0x36>
 8012ce4:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8012d1c <floorf+0x78>
 8012ce8:	ee30 0a27 	vadd.f32	s0, s0, s15
 8012cec:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8012cf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012cf4:	ddef      	ble.n	8012cd6 <floorf+0x32>
 8012cf6:	2b00      	cmp	r3, #0
 8012cf8:	bfbe      	ittt	lt
 8012cfa:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8012cfe:	fa40 f202 	asrlt.w	r2, r0, r2
 8012d02:	189b      	addlt	r3, r3, r2
 8012d04:	ea23 0301 	bic.w	r3, r3, r1
 8012d08:	e7e5      	b.n	8012cd6 <floorf+0x32>
 8012d0a:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8012d0e:	d3e4      	bcc.n	8012cda <floorf+0x36>
 8012d10:	ee30 0a00 	vadd.f32	s0, s0, s0
 8012d14:	4770      	bx	lr
 8012d16:	2300      	movs	r3, #0
 8012d18:	e7dd      	b.n	8012cd6 <floorf+0x32>
 8012d1a:	bf00      	nop
 8012d1c:	7149f2ca 	.word	0x7149f2ca
 8012d20:	bf800000 	.word	0xbf800000
 8012d24:	007fffff 	.word	0x007fffff

08012d28 <logf>:
 8012d28:	ee10 3a10 	vmov	r3, s0
 8012d2c:	f1b3 5f7e 	cmp.w	r3, #1065353216	; 0x3f800000
 8012d30:	b410      	push	{r4}
 8012d32:	d057      	beq.n	8012de4 <logf+0xbc>
 8012d34:	f5a3 0200 	sub.w	r2, r3, #8388608	; 0x800000
 8012d38:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8012d3c:	d31a      	bcc.n	8012d74 <logf+0x4c>
 8012d3e:	005a      	lsls	r2, r3, #1
 8012d40:	d104      	bne.n	8012d4c <logf+0x24>
 8012d42:	2001      	movs	r0, #1
 8012d44:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012d48:	f001 bf56 	b.w	8014bf8 <__math_divzerof>
 8012d4c:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8012d50:	d045      	beq.n	8012dde <logf+0xb6>
 8012d52:	2b00      	cmp	r3, #0
 8012d54:	db02      	blt.n	8012d5c <logf+0x34>
 8012d56:	f1b2 4f7f 	cmp.w	r2, #4278190080	; 0xff000000
 8012d5a:	d303      	bcc.n	8012d64 <logf+0x3c>
 8012d5c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012d60:	f001 bf5a 	b.w	8014c18 <__math_invalidf>
 8012d64:	eddf 7a21 	vldr	s15, [pc, #132]	; 8012dec <logf+0xc4>
 8012d68:	ee20 0a27 	vmul.f32	s0, s0, s15
 8012d6c:	ee10 3a10 	vmov	r3, s0
 8012d70:	f1a3 6338 	sub.w	r3, r3, #192937984	; 0xb800000
 8012d74:	f103 4240 	add.w	r2, r3, #3221225472	; 0xc0000000
 8012d78:	491d      	ldr	r1, [pc, #116]	; (8012df0 <logf+0xc8>)
 8012d7a:	eebf 6b00 	vmov.f64	d6, #240	; 0xbf800000 -1.0
 8012d7e:	f502 024d 	add.w	r2, r2, #13434880	; 0xcd0000
 8012d82:	f3c2 40c3 	ubfx	r0, r2, #19, #4
 8012d86:	0dd4      	lsrs	r4, r2, #23
 8012d88:	eb01 1000 	add.w	r0, r1, r0, lsl #4
 8012d8c:	05e4      	lsls	r4, r4, #23
 8012d8e:	ed90 5b00 	vldr	d5, [r0]
 8012d92:	1b1b      	subs	r3, r3, r4
 8012d94:	ee07 3a90 	vmov	s15, r3
 8012d98:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8012d9c:	eea5 6b07 	vfma.f64	d6, d5, d7
 8012da0:	ed91 5b44 	vldr	d5, [r1, #272]	; 0x110
 8012da4:	ee26 3b06 	vmul.f64	d3, d6, d6
 8012da8:	ed91 7b46 	vldr	d7, [r1, #280]	; 0x118
 8012dac:	eea5 7b06 	vfma.f64	d7, d5, d6
 8012db0:	ed91 5b42 	vldr	d5, [r1, #264]	; 0x108
 8012db4:	15d2      	asrs	r2, r2, #23
 8012db6:	ed91 4b40 	vldr	d4, [r1, #256]	; 0x100
 8012dba:	eea5 7b03 	vfma.f64	d7, d5, d3
 8012dbe:	eeb0 5b47 	vmov.f64	d5, d7
 8012dc2:	ed90 0b02 	vldr	d0, [r0, #8]
 8012dc6:	ee07 2a90 	vmov	s15, r2
 8012dca:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 8012dce:	eea7 0b04 	vfma.f64	d0, d7, d4
 8012dd2:	ee30 0b06 	vadd.f64	d0, d0, d6
 8012dd6:	eea3 0b05 	vfma.f64	d0, d3, d5
 8012dda:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 8012dde:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012de2:	4770      	bx	lr
 8012de4:	ed9f 0a03 	vldr	s0, [pc, #12]	; 8012df4 <logf+0xcc>
 8012de8:	e7f9      	b.n	8012dde <logf+0xb6>
 8012dea:	bf00      	nop
 8012dec:	4b000000 	.word	0x4b000000
 8012df0:	08016e30 	.word	0x08016e30
 8012df4:	00000000 	.word	0x00000000

08012df8 <log1pf>:
 8012df8:	ee10 2a10 	vmov	r2, s0
 8012dfc:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8012e00:	db02      	blt.n	8012e08 <log1pf+0x10>
 8012e02:	ee30 0a00 	vadd.f32	s0, s0, s0
 8012e06:	4770      	bx	lr
 8012e08:	4b70      	ldr	r3, [pc, #448]	; (8012fcc <log1pf+0x1d4>)
 8012e0a:	429a      	cmp	r2, r3
 8012e0c:	dc78      	bgt.n	8012f00 <log1pf+0x108>
 8012e0e:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
 8012e12:	f1b3 5f7e 	cmp.w	r3, #1065353216	; 0x3f800000
 8012e16:	db12      	blt.n	8012e3e <log1pf+0x46>
 8012e18:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8012e1c:	eeb4 0a67 	vcmp.f32	s0, s15
 8012e20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e24:	bf05      	ittet	eq
 8012e26:	ed9f 7a6a 	vldreq	s14, [pc, #424]	; 8012fd0 <log1pf+0x1d8>
 8012e2a:	eddf 7a6a 	vldreq	s15, [pc, #424]	; 8012fd4 <log1pf+0x1dc>
 8012e2e:	ee70 7a40 	vsubne.f32	s15, s0, s0
 8012e32:	ee87 0a27 	vdiveq.f32	s0, s14, s15
 8012e36:	bf18      	it	ne
 8012e38:	ee87 0aa7 	vdivne.f32	s0, s15, s15
 8012e3c:	4770      	bx	lr
 8012e3e:	f1b3 5f44 	cmp.w	r3, #822083584	; 0x31000000
 8012e42:	da13      	bge.n	8012e6c <log1pf+0x74>
 8012e44:	eddf 7a64 	vldr	s15, [pc, #400]	; 8012fd8 <log1pf+0x1e0>
 8012e48:	ee70 7a27 	vadd.f32	s15, s0, s15
 8012e4c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012e50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e54:	dd03      	ble.n	8012e5e <log1pf+0x66>
 8012e56:	f1b3 5f12 	cmp.w	r3, #612368384	; 0x24800000
 8012e5a:	f2c0 80b6 	blt.w	8012fca <log1pf+0x1d2>
 8012e5e:	ee20 7a40 	vnmul.f32	s14, s0, s0
 8012e62:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8012e66:	eea7 0a27 	vfma.f32	s0, s14, s15
 8012e6a:	4770      	bx	lr
 8012e6c:	4b5b      	ldr	r3, [pc, #364]	; (8012fdc <log1pf+0x1e4>)
 8012e6e:	441a      	add	r2, r3
 8012e70:	429a      	cmp	r2, r3
 8012e72:	d84d      	bhi.n	8012f10 <log1pf+0x118>
 8012e74:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8012e78:	ee30 7a27 	vadd.f32	s14, s0, s15
 8012e7c:	ee17 2a10 	vmov	r2, s14
 8012e80:	15d3      	asrs	r3, r2, #23
 8012e82:	3b7f      	subs	r3, #127	; 0x7f
 8012e84:	2b00      	cmp	r3, #0
 8012e86:	bfcb      	itete	gt
 8012e88:	ee37 0a40 	vsubgt.f32	s0, s14, s0
 8012e8c:	ee77 7a67 	vsuble.f32	s15, s14, s15
 8012e90:	ee37 0ac0 	vsubgt.f32	s0, s15, s0
 8012e94:	ee30 0a67 	vsuble.f32	s0, s0, s15
 8012e98:	eec0 6a07 	vdiv.f32	s13, s0, s14
 8012e9c:	4950      	ldr	r1, [pc, #320]	; (8012fe0 <log1pf+0x1e8>)
 8012e9e:	f3c2 0216 	ubfx	r2, r2, #0, #23
 8012ea2:	428a      	cmp	r2, r1
 8012ea4:	bfc9      	itett	gt
 8012ea6:	f042 517c 	orrgt.w	r1, r2, #1056964608	; 0x3f000000
 8012eaa:	f042 517e 	orrle.w	r1, r2, #1065353216	; 0x3f800000
 8012eae:	f5c2 0200 	rsbgt	r2, r2, #8388608	; 0x800000
 8012eb2:	3301      	addgt	r3, #1
 8012eb4:	bfc8      	it	gt
 8012eb6:	1092      	asrgt	r2, r2, #2
 8012eb8:	ee07 1a90 	vmov	s15, r1
 8012ebc:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8012ec0:	ee37 0ac0 	vsub.f32	s0, s15, s0
 8012ec4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012ec8:	ee20 7a07 	vmul.f32	s14, s0, s14
 8012ecc:	ee27 7a00 	vmul.f32	s14, s14, s0
 8012ed0:	2a00      	cmp	r2, #0
 8012ed2:	d13d      	bne.n	8012f50 <log1pf+0x158>
 8012ed4:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8012ed8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012edc:	d11b      	bne.n	8012f16 <log1pf+0x11e>
 8012ede:	2b00      	cmp	r3, #0
 8012ee0:	d071      	beq.n	8012fc6 <log1pf+0x1ce>
 8012ee2:	ee07 3a90 	vmov	s15, r3
 8012ee6:	ed9f 7a3f 	vldr	s14, [pc, #252]	; 8012fe4 <log1pf+0x1ec>
 8012eea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012eee:	eee7 6a87 	vfma.f32	s13, s15, s14
 8012ef2:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 8012fe8 <log1pf+0x1f0>
 8012ef6:	eeb0 0a66 	vmov.f32	s0, s13
 8012efa:	eea7 0a87 	vfma.f32	s0, s15, s14
 8012efe:	4770      	bx	lr
 8012f00:	f1b2 4fb4 	cmp.w	r2, #1509949440	; 0x5a000000
 8012f04:	dbb6      	blt.n	8012e74 <log1pf+0x7c>
 8012f06:	15d3      	asrs	r3, r2, #23
 8012f08:	3b7f      	subs	r3, #127	; 0x7f
 8012f0a:	eddf 6a32 	vldr	s13, [pc, #200]	; 8012fd4 <log1pf+0x1dc>
 8012f0e:	e7c5      	b.n	8012e9c <log1pf+0xa4>
 8012f10:	2201      	movs	r2, #1
 8012f12:	2300      	movs	r3, #0
 8012f14:	e7d6      	b.n	8012ec4 <log1pf+0xcc>
 8012f16:	eddf 7a35 	vldr	s15, [pc, #212]	; 8012fec <log1pf+0x1f4>
 8012f1a:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8012f1e:	eea0 6a67 	vfms.f32	s12, s0, s15
 8012f22:	ee26 6a07 	vmul.f32	s12, s12, s14
 8012f26:	b913      	cbnz	r3, 8012f2e <log1pf+0x136>
 8012f28:	ee30 0a46 	vsub.f32	s0, s0, s12
 8012f2c:	4770      	bx	lr
 8012f2e:	ee07 3a90 	vmov	s15, r3
 8012f32:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 8012fe4 <log1pf+0x1ec>
 8012f36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012f3a:	eee7 6a87 	vfma.f32	s13, s15, s14
 8012f3e:	ee36 7a66 	vsub.f32	s14, s12, s13
 8012f42:	ee37 0a40 	vsub.f32	s0, s14, s0
 8012f46:	ed9f 7a28 	vldr	s14, [pc, #160]	; 8012fe8 <log1pf+0x1f0>
 8012f4a:	ee97 0a87 	vfnms.f32	s0, s15, s14
 8012f4e:	4770      	bx	lr
 8012f50:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 8012f54:	ee70 7a27 	vadd.f32	s15, s0, s15
 8012f58:	ed9f 6a25 	vldr	s12, [pc, #148]	; 8012ff0 <log1pf+0x1f8>
 8012f5c:	ed9f 5a25 	vldr	s10, [pc, #148]	; 8012ff4 <log1pf+0x1fc>
 8012f60:	eec0 5a27 	vdiv.f32	s11, s0, s15
 8012f64:	ee65 7aa5 	vmul.f32	s15, s11, s11
 8012f68:	eea7 5a86 	vfma.f32	s10, s15, s12
 8012f6c:	ed9f 6a22 	vldr	s12, [pc, #136]	; 8012ff8 <log1pf+0x200>
 8012f70:	eea5 6a27 	vfma.f32	s12, s10, s15
 8012f74:	ed9f 5a21 	vldr	s10, [pc, #132]	; 8012ffc <log1pf+0x204>
 8012f78:	eea6 5a27 	vfma.f32	s10, s12, s15
 8012f7c:	ed9f 6a20 	vldr	s12, [pc, #128]	; 8013000 <log1pf+0x208>
 8012f80:	eea5 6a27 	vfma.f32	s12, s10, s15
 8012f84:	ed9f 5a1f 	vldr	s10, [pc, #124]	; 8013004 <log1pf+0x20c>
 8012f88:	eea6 5a27 	vfma.f32	s10, s12, s15
 8012f8c:	ed9f 6a17 	vldr	s12, [pc, #92]	; 8012fec <log1pf+0x1f4>
 8012f90:	eea5 6a27 	vfma.f32	s12, s10, s15
 8012f94:	eeb0 5a47 	vmov.f32	s10, s14
 8012f98:	eea6 5a27 	vfma.f32	s10, s12, s15
 8012f9c:	ee25 6a25 	vmul.f32	s12, s10, s11
 8012fa0:	b923      	cbnz	r3, 8012fac <log1pf+0x1b4>
 8012fa2:	ee37 7a46 	vsub.f32	s14, s14, s12
 8012fa6:	ee30 0a47 	vsub.f32	s0, s0, s14
 8012faa:	4770      	bx	lr
 8012fac:	ee07 3a90 	vmov	s15, r3
 8012fb0:	eddf 5a0c 	vldr	s11, [pc, #48]	; 8012fe4 <log1pf+0x1ec>
 8012fb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012fb8:	eee7 6aa5 	vfma.f32	s13, s15, s11
 8012fbc:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012fc0:	ee37 7a66 	vsub.f32	s14, s14, s13
 8012fc4:	e7bd      	b.n	8012f42 <log1pf+0x14a>
 8012fc6:	ed9f 0a03 	vldr	s0, [pc, #12]	; 8012fd4 <log1pf+0x1dc>
 8012fca:	4770      	bx	lr
 8012fcc:	3ed413d6 	.word	0x3ed413d6
 8012fd0:	cc000000 	.word	0xcc000000
 8012fd4:	00000000 	.word	0x00000000
 8012fd8:	4c000000 	.word	0x4c000000
 8012fdc:	416a09e0 	.word	0x416a09e0
 8012fe0:	003504f6 	.word	0x003504f6
 8012fe4:	3717f7d1 	.word	0x3717f7d1
 8012fe8:	3f317180 	.word	0x3f317180
 8012fec:	3f2aaaab 	.word	0x3f2aaaab
 8012ff0:	3e178897 	.word	0x3e178897
 8012ff4:	3e1cd04f 	.word	0x3e1cd04f
 8012ff8:	3e3a3325 	.word	0x3e3a3325
 8012ffc:	3e638e29 	.word	0x3e638e29
 8013000:	3e924925 	.word	0x3e924925
 8013004:	3ecccccd 	.word	0x3ecccccd

08013008 <checkint>:
 8013008:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 801300c:	2b7e      	cmp	r3, #126	; 0x7e
 801300e:	dd10      	ble.n	8013032 <checkint+0x2a>
 8013010:	2b96      	cmp	r3, #150	; 0x96
 8013012:	dc0c      	bgt.n	801302e <checkint+0x26>
 8013014:	2201      	movs	r2, #1
 8013016:	f1c3 0396 	rsb	r3, r3, #150	; 0x96
 801301a:	fa02 f303 	lsl.w	r3, r2, r3
 801301e:	1e5a      	subs	r2, r3, #1
 8013020:	4202      	tst	r2, r0
 8013022:	d106      	bne.n	8013032 <checkint+0x2a>
 8013024:	4203      	tst	r3, r0
 8013026:	bf0c      	ite	eq
 8013028:	2002      	moveq	r0, #2
 801302a:	2001      	movne	r0, #1
 801302c:	4770      	bx	lr
 801302e:	2002      	movs	r0, #2
 8013030:	4770      	bx	lr
 8013032:	2000      	movs	r0, #0
 8013034:	4770      	bx	lr
	...

08013038 <powf>:
 8013038:	ee10 1a10 	vmov	r1, s0
 801303c:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 8013040:	ee10 4a90 	vmov	r4, s1
 8013044:	f5a1 0300 	sub.w	r3, r1, #8388608	; 0x800000
 8013048:	0062      	lsls	r2, r4, #1
 801304a:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
 801304e:	eef0 4a60 	vmov.f32	s9, s1
 8013052:	f102 30ff 	add.w	r0, r2, #4294967295
 8013056:	4b92      	ldr	r3, [pc, #584]	; (80132a0 <powf+0x268>)
 8013058:	d255      	bcs.n	8013106 <powf+0xce>
 801305a:	4298      	cmp	r0, r3
 801305c:	d855      	bhi.n	801310a <powf+0xd2>
 801305e:	2000      	movs	r0, #0
 8013060:	f101 4340 	add.w	r3, r1, #3221225472	; 0xc0000000
 8013064:	4a8f      	ldr	r2, [pc, #572]	; (80132a4 <powf+0x26c>)
 8013066:	eebf 2b00 	vmov.f64	d2, #240	; 0xbf800000 -1.0
 801306a:	f503 034d 	add.w	r3, r3, #13434880	; 0xcd0000
 801306e:	f3c3 44c3 	ubfx	r4, r3, #19, #4
 8013072:	0ddb      	lsrs	r3, r3, #23
 8013074:	eb02 1404 	add.w	r4, r2, r4, lsl #4
 8013078:	05db      	lsls	r3, r3, #23
 801307a:	ed94 6b00 	vldr	d6, [r4]
 801307e:	1ac9      	subs	r1, r1, r3
 8013080:	ee07 1a90 	vmov	s15, r1
 8013084:	ed92 5b40 	vldr	d5, [r2, #256]	; 0x100
 8013088:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 801308c:	eea6 2b07 	vfma.f64	d2, d6, d7
 8013090:	ed92 7b42 	vldr	d7, [r2, #264]	; 0x108
 8013094:	ee22 6b02 	vmul.f64	d6, d2, d2
 8013098:	eea2 7b05 	vfma.f64	d7, d2, d5
 801309c:	15db      	asrs	r3, r3, #23
 801309e:	ed94 5b02 	vldr	d5, [r4, #8]
 80130a2:	ee00 3a10 	vmov	s0, r3
 80130a6:	eeb8 0bc0 	vcvt.f64.s32	d0, s0
 80130aa:	ee30 0b05 	vadd.f64	d0, d0, d5
 80130ae:	ed92 5b48 	vldr	d5, [r2, #288]	; 0x120
 80130b2:	ed92 3b44 	vldr	d3, [r2, #272]	; 0x110
 80130b6:	eea2 0b05 	vfma.f64	d0, d2, d5
 80130ba:	ed92 5b46 	vldr	d5, [r2, #280]	; 0x118
 80130be:	eea2 5b03 	vfma.f64	d5, d2, d3
 80130c2:	eea6 0b05 	vfma.f64	d0, d6, d5
 80130c6:	ee26 6b06 	vmul.f64	d6, d6, d6
 80130ca:	eea7 0b06 	vfma.f64	d0, d7, d6
 80130ce:	eeb7 7ae4 	vcvt.f64.f32	d7, s9
 80130d2:	ee20 0b07 	vmul.f64	d0, d0, d7
 80130d6:	ee10 3a90 	vmov	r3, s1
 80130da:	2500      	movs	r5, #0
 80130dc:	0bda      	lsrs	r2, r3, #15
 80130de:	2300      	movs	r3, #0
 80130e0:	b292      	uxth	r2, r2
 80130e2:	f248 04be 	movw	r4, #32958	; 0x80be
 80130e6:	429d      	cmp	r5, r3
 80130e8:	bf08      	it	eq
 80130ea:	4294      	cmpeq	r4, r2
 80130ec:	f080 8094 	bcs.w	8013218 <powf+0x1e0>
 80130f0:	ed9f 7b65 	vldr	d7, [pc, #404]	; 8013288 <powf+0x250>
 80130f4:	eeb4 0bc7 	vcmpe.f64	d0, d7
 80130f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80130fc:	dd76      	ble.n	80131ec <powf+0x1b4>
 80130fe:	e8bd 48f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, lr}
 8013102:	f001 bd73 	b.w	8014bec <__math_oflowf>
 8013106:	4298      	cmp	r0, r3
 8013108:	d92d      	bls.n	8013166 <powf+0x12e>
 801310a:	b952      	cbnz	r2, 8013122 <powf+0xea>
 801310c:	f481 0380 	eor.w	r3, r1, #4194304	; 0x400000
 8013110:	005b      	lsls	r3, r3, #1
 8013112:	f513 0f00 	cmn.w	r3, #8388608	; 0x800000
 8013116:	f240 80ae 	bls.w	8013276 <powf+0x23e>
 801311a:	ee30 0a24 	vadd.f32	s0, s0, s9
 801311e:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 8013122:	f1b1 5f7e 	cmp.w	r1, #1065353216	; 0x3f800000
 8013126:	d105      	bne.n	8013134 <powf+0xfc>
 8013128:	f484 0480 	eor.w	r4, r4, #4194304	; 0x400000
 801312c:	0064      	lsls	r4, r4, #1
 801312e:	f514 0f00 	cmn.w	r4, #8388608	; 0x800000
 8013132:	e7f0      	b.n	8013116 <powf+0xde>
 8013134:	004b      	lsls	r3, r1, #1
 8013136:	f1b3 4f7f 	cmp.w	r3, #4278190080	; 0xff000000
 801313a:	d8ee      	bhi.n	801311a <powf+0xe2>
 801313c:	f1b2 4f7f 	cmp.w	r2, #4278190080	; 0xff000000
 8013140:	d1eb      	bne.n	801311a <powf+0xe2>
 8013142:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
 8013146:	f000 8096 	beq.w	8013276 <powf+0x23e>
 801314a:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
 801314e:	ea6f 0404 	mvn.w	r4, r4
 8013152:	bf34      	ite	cc
 8013154:	2300      	movcc	r3, #0
 8013156:	2301      	movcs	r3, #1
 8013158:	0fe4      	lsrs	r4, r4, #31
 801315a:	42a3      	cmp	r3, r4
 801315c:	f040 808e 	bne.w	801327c <powf+0x244>
 8013160:	ee24 0aa4 	vmul.f32	s0, s9, s9
 8013164:	e7db      	b.n	801311e <powf+0xe6>
 8013166:	004d      	lsls	r5, r1, #1
 8013168:	1e6a      	subs	r2, r5, #1
 801316a:	429a      	cmp	r2, r3
 801316c:	d91b      	bls.n	80131a6 <powf+0x16e>
 801316e:	2900      	cmp	r1, #0
 8013170:	ee20 0a00 	vmul.f32	s0, s0, s0
 8013174:	da0e      	bge.n	8013194 <powf+0x15c>
 8013176:	ee10 0a90 	vmov	r0, s1
 801317a:	f7ff ff45 	bl	8013008 <checkint>
 801317e:	2801      	cmp	r0, #1
 8013180:	d108      	bne.n	8013194 <powf+0x15c>
 8013182:	eeb1 0a40 	vneg.f32	s0, s0
 8013186:	b93d      	cbnz	r5, 8013198 <powf+0x160>
 8013188:	2c00      	cmp	r4, #0
 801318a:	dac8      	bge.n	801311e <powf+0xe6>
 801318c:	e8bd 48f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, lr}
 8013190:	f001 bd32 	b.w	8014bf8 <__math_divzerof>
 8013194:	2000      	movs	r0, #0
 8013196:	e7f6      	b.n	8013186 <powf+0x14e>
 8013198:	2c00      	cmp	r4, #0
 801319a:	dac0      	bge.n	801311e <powf+0xe6>
 801319c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80131a0:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80131a4:	e7bb      	b.n	801311e <powf+0xe6>
 80131a6:	2900      	cmp	r1, #0
 80131a8:	da1e      	bge.n	80131e8 <powf+0x1b0>
 80131aa:	ee10 0a90 	vmov	r0, s1
 80131ae:	f7ff ff2b 	bl	8013008 <checkint>
 80131b2:	b918      	cbnz	r0, 80131bc <powf+0x184>
 80131b4:	e8bd 48f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, lr}
 80131b8:	f001 bd2e 	b.w	8014c18 <__math_invalidf>
 80131bc:	2801      	cmp	r0, #1
 80131be:	bf0c      	ite	eq
 80131c0:	f44f 3080 	moveq.w	r0, #65536	; 0x10000
 80131c4:	2000      	movne	r0, #0
 80131c6:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80131ca:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80131ce:	f4bf af47 	bcs.w	8013060 <powf+0x28>
 80131d2:	eddf 0a35 	vldr	s1, [pc, #212]	; 80132a8 <powf+0x270>
 80131d6:	ee20 0a20 	vmul.f32	s0, s0, s1
 80131da:	ee10 3a10 	vmov	r3, s0
 80131de:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80131e2:	f1a3 6138 	sub.w	r1, r3, #192937984	; 0xb800000
 80131e6:	e73b      	b.n	8013060 <powf+0x28>
 80131e8:	2000      	movs	r0, #0
 80131ea:	e7ee      	b.n	80131ca <powf+0x192>
 80131ec:	ed9f 7b28 	vldr	d7, [pc, #160]	; 8013290 <powf+0x258>
 80131f0:	eeb4 0bc7 	vcmpe.f64	d0, d7
 80131f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131f8:	d803      	bhi.n	8013202 <powf+0x1ca>
 80131fa:	e8bd 48f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, lr}
 80131fe:	f001 bce9 	b.w	8014bd4 <__math_uflowf>
 8013202:	ed9f 7b25 	vldr	d7, [pc, #148]	; 8013298 <powf+0x260>
 8013206:	eeb4 0bc7 	vcmpe.f64	d0, d7
 801320a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801320e:	d503      	bpl.n	8013218 <powf+0x1e0>
 8013210:	e8bd 48f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, lr}
 8013214:	f001 bce4 	b.w	8014be0 <__math_may_uflowf>
 8013218:	4924      	ldr	r1, [pc, #144]	; (80132ac <powf+0x274>)
 801321a:	ed91 7b40 	vldr	d7, [r1, #256]	; 0x100
 801321e:	ee30 6b07 	vadd.f64	d6, d0, d7
 8013222:	ec55 4b16 	vmov	r4, r5, d6
 8013226:	ee36 7b47 	vsub.f64	d7, d6, d7
 801322a:	f004 021f 	and.w	r2, r4, #31
 801322e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8013232:	ed91 6b46 	vldr	d6, [r1, #280]	; 0x118
 8013236:	ee30 0b47 	vsub.f64	d0, d0, d7
 801323a:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
 801323e:	e9d2 6700 	ldrd	r6, r7, [r2]
 8013242:	eea0 7b06 	vfma.f64	d7, d0, d6
 8013246:	1824      	adds	r4, r4, r0
 8013248:	ed91 5b42 	vldr	d5, [r1, #264]	; 0x108
 801324c:	ed91 6b44 	vldr	d6, [r1, #272]	; 0x110
 8013250:	2000      	movs	r0, #0
 8013252:	1982      	adds	r2, r0, r6
 8013254:	ea4f 31c4 	mov.w	r1, r4, lsl #15
 8013258:	eb41 0307 	adc.w	r3, r1, r7
 801325c:	eea0 6b05 	vfma.f64	d6, d0, d5
 8013260:	ee20 0b00 	vmul.f64	d0, d0, d0
 8013264:	eea6 7b00 	vfma.f64	d7, d6, d0
 8013268:	ec43 2b16 	vmov	d6, r2, r3
 801326c:	ee27 0b06 	vmul.f64	d0, d7, d6
 8013270:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 8013274:	e753      	b.n	801311e <powf+0xe6>
 8013276:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801327a:	e750      	b.n	801311e <powf+0xe6>
 801327c:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 80132b0 <powf+0x278>
 8013280:	e74d      	b.n	801311e <powf+0xe6>
 8013282:	bf00      	nop
 8013284:	f3af 8000 	nop.w
 8013288:	ffd1d571 	.word	0xffd1d571
 801328c:	405fffff 	.word	0x405fffff
 8013290:	00000000 	.word	0x00000000
 8013294:	c062c000 	.word	0xc062c000
 8013298:	00000000 	.word	0x00000000
 801329c:	c062a000 	.word	0xc062a000
 80132a0:	fefffffe 	.word	0xfefffffe
 80132a4:	08016f50 	.word	0x08016f50
 80132a8:	4b000000 	.word	0x4b000000
 80132ac:	08016ce8 	.word	0x08016ce8
 80132b0:	00000000 	.word	0x00000000

080132b4 <roundf>:
 80132b4:	ee10 0a10 	vmov	r0, s0
 80132b8:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 80132bc:	f1a3 027f 	sub.w	r2, r3, #127	; 0x7f
 80132c0:	2a16      	cmp	r2, #22
 80132c2:	dc15      	bgt.n	80132f0 <roundf+0x3c>
 80132c4:	2a00      	cmp	r2, #0
 80132c6:	da08      	bge.n	80132da <roundf+0x26>
 80132c8:	3201      	adds	r2, #1
 80132ca:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80132ce:	d101      	bne.n	80132d4 <roundf+0x20>
 80132d0:	f043 537e 	orr.w	r3, r3, #1065353216	; 0x3f800000
 80132d4:	ee00 3a10 	vmov	s0, r3
 80132d8:	4770      	bx	lr
 80132da:	4908      	ldr	r1, [pc, #32]	; (80132fc <roundf+0x48>)
 80132dc:	4111      	asrs	r1, r2
 80132de:	4208      	tst	r0, r1
 80132e0:	d0fa      	beq.n	80132d8 <roundf+0x24>
 80132e2:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80132e6:	4113      	asrs	r3, r2
 80132e8:	4403      	add	r3, r0
 80132ea:	ea23 0301 	bic.w	r3, r3, r1
 80132ee:	e7f1      	b.n	80132d4 <roundf+0x20>
 80132f0:	2a80      	cmp	r2, #128	; 0x80
 80132f2:	d1f1      	bne.n	80132d8 <roundf+0x24>
 80132f4:	ee30 0a00 	vadd.f32	s0, s0, s0
 80132f8:	4770      	bx	lr
 80132fa:	bf00      	nop
 80132fc:	007fffff 	.word	0x007fffff

08013300 <sinf>:
 8013300:	ee10 3a10 	vmov	r3, s0
 8013304:	b507      	push	{r0, r1, r2, lr}
 8013306:	4a1d      	ldr	r2, [pc, #116]	; (801337c <sinf+0x7c>)
 8013308:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801330c:	4293      	cmp	r3, r2
 801330e:	dc05      	bgt.n	801331c <sinf+0x1c>
 8013310:	eddf 0a1b 	vldr	s1, [pc, #108]	; 8013380 <sinf+0x80>
 8013314:	2000      	movs	r0, #0
 8013316:	f001 fb17 	bl	8014948 <__kernel_sinf>
 801331a:	e004      	b.n	8013326 <sinf+0x26>
 801331c:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8013320:	db04      	blt.n	801332c <sinf+0x2c>
 8013322:	ee30 0a40 	vsub.f32	s0, s0, s0
 8013326:	b003      	add	sp, #12
 8013328:	f85d fb04 	ldr.w	pc, [sp], #4
 801332c:	4668      	mov	r0, sp
 801332e:	f000 fe8d 	bl	801404c <__ieee754_rem_pio2f>
 8013332:	f000 0003 	and.w	r0, r0, #3
 8013336:	2801      	cmp	r0, #1
 8013338:	d008      	beq.n	801334c <sinf+0x4c>
 801333a:	2802      	cmp	r0, #2
 801333c:	d00d      	beq.n	801335a <sinf+0x5a>
 801333e:	b9b0      	cbnz	r0, 801336e <sinf+0x6e>
 8013340:	2001      	movs	r0, #1
 8013342:	eddd 0a01 	vldr	s1, [sp, #4]
 8013346:	ed9d 0a00 	vldr	s0, [sp]
 801334a:	e7e4      	b.n	8013316 <sinf+0x16>
 801334c:	eddd 0a01 	vldr	s1, [sp, #4]
 8013350:	ed9d 0a00 	vldr	s0, [sp]
 8013354:	f001 f818 	bl	8014388 <__kernel_cosf>
 8013358:	e7e5      	b.n	8013326 <sinf+0x26>
 801335a:	2001      	movs	r0, #1
 801335c:	eddd 0a01 	vldr	s1, [sp, #4]
 8013360:	ed9d 0a00 	vldr	s0, [sp]
 8013364:	f001 faf0 	bl	8014948 <__kernel_sinf>
 8013368:	eeb1 0a40 	vneg.f32	s0, s0
 801336c:	e7db      	b.n	8013326 <sinf+0x26>
 801336e:	eddd 0a01 	vldr	s1, [sp, #4]
 8013372:	ed9d 0a00 	vldr	s0, [sp]
 8013376:	f001 f807 	bl	8014388 <__kernel_cosf>
 801337a:	e7f5      	b.n	8013368 <sinf+0x68>
 801337c:	3f490fd8 	.word	0x3f490fd8
 8013380:	00000000 	.word	0x00000000

08013384 <tanf>:
 8013384:	ee10 3a10 	vmov	r3, s0
 8013388:	b507      	push	{r0, r1, r2, lr}
 801338a:	4a10      	ldr	r2, [pc, #64]	; (80133cc <tanf+0x48>)
 801338c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8013390:	4293      	cmp	r3, r2
 8013392:	dc05      	bgt.n	80133a0 <tanf+0x1c>
 8013394:	eddf 0a0e 	vldr	s1, [pc, #56]	; 80133d0 <tanf+0x4c>
 8013398:	2001      	movs	r0, #1
 801339a:	f001 fb1d 	bl	80149d8 <__kernel_tanf>
 801339e:	e004      	b.n	80133aa <tanf+0x26>
 80133a0:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80133a4:	db04      	blt.n	80133b0 <tanf+0x2c>
 80133a6:	ee30 0a40 	vsub.f32	s0, s0, s0
 80133aa:	b003      	add	sp, #12
 80133ac:	f85d fb04 	ldr.w	pc, [sp], #4
 80133b0:	4668      	mov	r0, sp
 80133b2:	f000 fe4b 	bl	801404c <__ieee754_rem_pio2f>
 80133b6:	0040      	lsls	r0, r0, #1
 80133b8:	f000 0002 	and.w	r0, r0, #2
 80133bc:	f1c0 0001 	rsb	r0, r0, #1
 80133c0:	eddd 0a01 	vldr	s1, [sp, #4]
 80133c4:	ed9d 0a00 	vldr	s0, [sp]
 80133c8:	e7e7      	b.n	801339a <tanf+0x16>
 80133ca:	bf00      	nop
 80133cc:	3f490fda 	.word	0x3f490fda
 80133d0:	00000000 	.word	0x00000000

080133d4 <tanhf>:
 80133d4:	b510      	push	{r4, lr}
 80133d6:	ee10 4a10 	vmov	r4, s0
 80133da:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 80133de:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80133e2:	ed2d 8b02 	vpush	{d8}
 80133e6:	eef0 7a40 	vmov.f32	s15, s0
 80133ea:	db0c      	blt.n	8013406 <tanhf+0x32>
 80133ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80133f0:	ee87 0a27 	vdiv.f32	s0, s14, s15
 80133f4:	2c00      	cmp	r4, #0
 80133f6:	bfac      	ite	ge
 80133f8:	ee30 0a07 	vaddge.f32	s0, s0, s14
 80133fc:	ee30 0a47 	vsublt.f32	s0, s0, s14
 8013400:	ecbd 8b02 	vpop	{d8}
 8013404:	bd10      	pop	{r4, pc}
 8013406:	4a1b      	ldr	r2, [pc, #108]	; (8013474 <tanhf+0xa0>)
 8013408:	4293      	cmp	r3, r2
 801340a:	dc30      	bgt.n	801346e <tanhf+0x9a>
 801340c:	f1b3 5f10 	cmp.w	r3, #603979776	; 0x24000000
 8013410:	da06      	bge.n	8013420 <tanhf+0x4c>
 8013412:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8013416:	ee37 0a80 	vadd.f32	s0, s15, s0
 801341a:	ee20 0a27 	vmul.f32	s0, s0, s15
 801341e:	e7ef      	b.n	8013400 <tanhf+0x2c>
 8013420:	f1b3 5f7e 	cmp.w	r3, #1065353216	; 0x3f800000
 8013424:	eeb0 8a00 	vmov.f32	s16, #0	; 0x40000000  2.0
 8013428:	db12      	blt.n	8013450 <tanhf+0x7c>
 801342a:	f7ff fc33 	bl	8012c94 <fabsf>
 801342e:	ee30 0a00 	vadd.f32	s0, s0, s0
 8013432:	f001 fc0d 	bl	8014c50 <expm1f>
 8013436:	ee30 0a08 	vadd.f32	s0, s0, s16
 801343a:	eec8 7a00 	vdiv.f32	s15, s16, s0
 801343e:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8013442:	ee30 0a67 	vsub.f32	s0, s0, s15
 8013446:	2c00      	cmp	r4, #0
 8013448:	bfb8      	it	lt
 801344a:	eeb1 0a40 	vneglt.f32	s0, s0
 801344e:	e7d7      	b.n	8013400 <tanhf+0x2c>
 8013450:	f7ff fc20 	bl	8012c94 <fabsf>
 8013454:	eef8 7a00 	vmov.f32	s15, #128	; 0xc0000000 -2.0
 8013458:	ee20 0a27 	vmul.f32	s0, s0, s15
 801345c:	f001 fbf8 	bl	8014c50 <expm1f>
 8013460:	ee70 7a08 	vadd.f32	s15, s0, s16
 8013464:	eeb1 7a40 	vneg.f32	s14, s0
 8013468:	ee87 0a27 	vdiv.f32	s0, s14, s15
 801346c:	e7eb      	b.n	8013446 <tanhf+0x72>
 801346e:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8013472:	e7e8      	b.n	8013446 <tanhf+0x72>
 8013474:	41afffff 	.word	0x41afffff

08013478 <acosf>:
 8013478:	b510      	push	{r4, lr}
 801347a:	ed2d 8b02 	vpush	{d8}
 801347e:	4c25      	ldr	r4, [pc, #148]	; (8013514 <acosf+0x9c>)
 8013480:	b08a      	sub	sp, #40	; 0x28
 8013482:	eeb0 8a40 	vmov.f32	s16, s0
 8013486:	f000 fa77 	bl	8013978 <__ieee754_acosf>
 801348a:	f994 3000 	ldrsb.w	r3, [r4]
 801348e:	3301      	adds	r3, #1
 8013490:	eef0 8a40 	vmov.f32	s17, s0
 8013494:	d038      	beq.n	8013508 <acosf+0x90>
 8013496:	eeb4 8a48 	vcmp.f32	s16, s16
 801349a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801349e:	d633      	bvs.n	8013508 <acosf+0x90>
 80134a0:	eeb0 0a48 	vmov.f32	s0, s16
 80134a4:	f7ff fbf6 	bl	8012c94 <fabsf>
 80134a8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80134ac:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80134b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134b4:	dd28      	ble.n	8013508 <acosf+0x90>
 80134b6:	2301      	movs	r3, #1
 80134b8:	9300      	str	r3, [sp, #0]
 80134ba:	eeb7 8ac8 	vcvt.f64.f32	d8, s16
 80134be:	4b16      	ldr	r3, [pc, #88]	; (8013518 <acosf+0xa0>)
 80134c0:	9301      	str	r3, [sp, #4]
 80134c2:	4816      	ldr	r0, [pc, #88]	; (801351c <acosf+0xa4>)
 80134c4:	2300      	movs	r3, #0
 80134c6:	9308      	str	r3, [sp, #32]
 80134c8:	ed8d 8b04 	vstr	d8, [sp, #16]
 80134cc:	ed8d 8b02 	vstr	d8, [sp, #8]
 80134d0:	f001 fbb6 	bl	8014c40 <nan>
 80134d4:	f994 3000 	ldrsb.w	r3, [r4]
 80134d8:	2b02      	cmp	r3, #2
 80134da:	ed8d 0b06 	vstr	d0, [sp, #24]
 80134de:	d104      	bne.n	80134ea <acosf+0x72>
 80134e0:	f7fc fc30 	bl	800fd44 <__errno>
 80134e4:	2321      	movs	r3, #33	; 0x21
 80134e6:	6003      	str	r3, [r0, #0]
 80134e8:	e004      	b.n	80134f4 <acosf+0x7c>
 80134ea:	4668      	mov	r0, sp
 80134ec:	f001 fba3 	bl	8014c36 <matherr>
 80134f0:	2800      	cmp	r0, #0
 80134f2:	d0f5      	beq.n	80134e0 <acosf+0x68>
 80134f4:	9b08      	ldr	r3, [sp, #32]
 80134f6:	b11b      	cbz	r3, 8013500 <acosf+0x88>
 80134f8:	f7fc fc24 	bl	800fd44 <__errno>
 80134fc:	9b08      	ldr	r3, [sp, #32]
 80134fe:	6003      	str	r3, [r0, #0]
 8013500:	ed9d 0b06 	vldr	d0, [sp, #24]
 8013504:	eef7 8bc0 	vcvt.f32.f64	s17, d0
 8013508:	eeb0 0a68 	vmov.f32	s0, s17
 801350c:	b00a      	add	sp, #40	; 0x28
 801350e:	ecbd 8b02 	vpop	{d8}
 8013512:	bd10      	pop	{r4, pc}
 8013514:	20000898 	.word	0x20000898
 8013518:	08017078 	.word	0x08017078
 801351c:	08016bb1 	.word	0x08016bb1

08013520 <acoshf>:
 8013520:	b500      	push	{lr}
 8013522:	ed2d 8b02 	vpush	{d8}
 8013526:	b08b      	sub	sp, #44	; 0x2c
 8013528:	eeb0 8a40 	vmov.f32	s16, s0
 801352c:	f000 fb20 	bl	8013b70 <__ieee754_acoshf>
 8013530:	4b21      	ldr	r3, [pc, #132]	; (80135b8 <acoshf+0x98>)
 8013532:	f993 3000 	ldrsb.w	r3, [r3]
 8013536:	1c5a      	adds	r2, r3, #1
 8013538:	d034      	beq.n	80135a4 <acoshf+0x84>
 801353a:	eeb4 8a48 	vcmp.f32	s16, s16
 801353e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013542:	d62f      	bvs.n	80135a4 <acoshf+0x84>
 8013544:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013548:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801354c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013550:	d528      	bpl.n	80135a4 <acoshf+0x84>
 8013552:	2201      	movs	r2, #1
 8013554:	ed9f 7b16 	vldr	d7, [pc, #88]	; 80135b0 <acoshf+0x90>
 8013558:	eeb7 8ac8 	vcvt.f64.f32	d8, s16
 801355c:	9200      	str	r2, [sp, #0]
 801355e:	4a17      	ldr	r2, [pc, #92]	; (80135bc <acoshf+0x9c>)
 8013560:	9201      	str	r2, [sp, #4]
 8013562:	2b02      	cmp	r3, #2
 8013564:	f04f 0200 	mov.w	r2, #0
 8013568:	ee87 6b07 	vdiv.f64	d6, d7, d7
 801356c:	9208      	str	r2, [sp, #32]
 801356e:	ed8d 8b04 	vstr	d8, [sp, #16]
 8013572:	ed8d 8b02 	vstr	d8, [sp, #8]
 8013576:	ed8d 6b06 	vstr	d6, [sp, #24]
 801357a:	d104      	bne.n	8013586 <acoshf+0x66>
 801357c:	f7fc fbe2 	bl	800fd44 <__errno>
 8013580:	2321      	movs	r3, #33	; 0x21
 8013582:	6003      	str	r3, [r0, #0]
 8013584:	e004      	b.n	8013590 <acoshf+0x70>
 8013586:	4668      	mov	r0, sp
 8013588:	f001 fb55 	bl	8014c36 <matherr>
 801358c:	2800      	cmp	r0, #0
 801358e:	d0f5      	beq.n	801357c <acoshf+0x5c>
 8013590:	9b08      	ldr	r3, [sp, #32]
 8013592:	b11b      	cbz	r3, 801359c <acoshf+0x7c>
 8013594:	f7fc fbd6 	bl	800fd44 <__errno>
 8013598:	9b08      	ldr	r3, [sp, #32]
 801359a:	6003      	str	r3, [r0, #0]
 801359c:	ed9d 0b06 	vldr	d0, [sp, #24]
 80135a0:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 80135a4:	b00b      	add	sp, #44	; 0x2c
 80135a6:	ecbd 8b02 	vpop	{d8}
 80135aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80135ae:	bf00      	nop
	...
 80135b8:	20000898 	.word	0x20000898
 80135bc:	0801707e 	.word	0x0801707e

080135c0 <asinf>:
 80135c0:	b510      	push	{r4, lr}
 80135c2:	ed2d 8b02 	vpush	{d8}
 80135c6:	4c25      	ldr	r4, [pc, #148]	; (801365c <asinf+0x9c>)
 80135c8:	b08a      	sub	sp, #40	; 0x28
 80135ca:	eeb0 8a40 	vmov.f32	s16, s0
 80135ce:	f000 fb23 	bl	8013c18 <__ieee754_asinf>
 80135d2:	f994 3000 	ldrsb.w	r3, [r4]
 80135d6:	3301      	adds	r3, #1
 80135d8:	eef0 8a40 	vmov.f32	s17, s0
 80135dc:	d038      	beq.n	8013650 <asinf+0x90>
 80135de:	eeb4 8a48 	vcmp.f32	s16, s16
 80135e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80135e6:	d633      	bvs.n	8013650 <asinf+0x90>
 80135e8:	eeb0 0a48 	vmov.f32	s0, s16
 80135ec:	f7ff fb52 	bl	8012c94 <fabsf>
 80135f0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80135f4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80135f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80135fc:	dd28      	ble.n	8013650 <asinf+0x90>
 80135fe:	2301      	movs	r3, #1
 8013600:	9300      	str	r3, [sp, #0]
 8013602:	eeb7 8ac8 	vcvt.f64.f32	d8, s16
 8013606:	4b16      	ldr	r3, [pc, #88]	; (8013660 <asinf+0xa0>)
 8013608:	9301      	str	r3, [sp, #4]
 801360a:	4816      	ldr	r0, [pc, #88]	; (8013664 <asinf+0xa4>)
 801360c:	2300      	movs	r3, #0
 801360e:	9308      	str	r3, [sp, #32]
 8013610:	ed8d 8b04 	vstr	d8, [sp, #16]
 8013614:	ed8d 8b02 	vstr	d8, [sp, #8]
 8013618:	f001 fb12 	bl	8014c40 <nan>
 801361c:	f994 3000 	ldrsb.w	r3, [r4]
 8013620:	2b02      	cmp	r3, #2
 8013622:	ed8d 0b06 	vstr	d0, [sp, #24]
 8013626:	d104      	bne.n	8013632 <asinf+0x72>
 8013628:	f7fc fb8c 	bl	800fd44 <__errno>
 801362c:	2321      	movs	r3, #33	; 0x21
 801362e:	6003      	str	r3, [r0, #0]
 8013630:	e004      	b.n	801363c <asinf+0x7c>
 8013632:	4668      	mov	r0, sp
 8013634:	f001 faff 	bl	8014c36 <matherr>
 8013638:	2800      	cmp	r0, #0
 801363a:	d0f5      	beq.n	8013628 <asinf+0x68>
 801363c:	9b08      	ldr	r3, [sp, #32]
 801363e:	b11b      	cbz	r3, 8013648 <asinf+0x88>
 8013640:	f7fc fb80 	bl	800fd44 <__errno>
 8013644:	9b08      	ldr	r3, [sp, #32]
 8013646:	6003      	str	r3, [r0, #0]
 8013648:	ed9d 0b06 	vldr	d0, [sp, #24]
 801364c:	eef7 8bc0 	vcvt.f32.f64	s17, d0
 8013650:	eeb0 0a68 	vmov.f32	s0, s17
 8013654:	b00a      	add	sp, #40	; 0x28
 8013656:	ecbd 8b02 	vpop	{d8}
 801365a:	bd10      	pop	{r4, pc}
 801365c:	20000898 	.word	0x20000898
 8013660:	08017085 	.word	0x08017085
 8013664:	08016bb1 	.word	0x08016bb1

08013668 <atanhf>:
 8013668:	b510      	push	{r4, lr}
 801366a:	ed2d 8b02 	vpush	{d8}
 801366e:	4c30      	ldr	r4, [pc, #192]	; (8013730 <atanhf+0xc8>)
 8013670:	b08a      	sub	sp, #40	; 0x28
 8013672:	eeb0 8a40 	vmov.f32	s16, s0
 8013676:	f000 fbb7 	bl	8013de8 <__ieee754_atanhf>
 801367a:	f994 3000 	ldrsb.w	r3, [r4]
 801367e:	3301      	adds	r3, #1
 8013680:	eef0 8a40 	vmov.f32	s17, s0
 8013684:	d049      	beq.n	801371a <atanhf+0xb2>
 8013686:	eeb4 8a48 	vcmp.f32	s16, s16
 801368a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801368e:	d644      	bvs.n	801371a <atanhf+0xb2>
 8013690:	eeb0 0a48 	vmov.f32	s0, s16
 8013694:	f7ff fafe 	bl	8012c94 <fabsf>
 8013698:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801369c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80136a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136a4:	db39      	blt.n	801371a <atanhf+0xb2>
 80136a6:	eeb7 8ac8 	vcvt.f64.f32	d8, s16
 80136aa:	f994 3000 	ldrsb.w	r3, [r4]
 80136ae:	4a21      	ldr	r2, [pc, #132]	; (8013734 <atanhf+0xcc>)
 80136b0:	ed9f 7b1d 	vldr	d7, [pc, #116]	; 8013728 <atanhf+0xc0>
 80136b4:	dd13      	ble.n	80136de <atanhf+0x76>
 80136b6:	ee87 6b07 	vdiv.f64	d6, d7, d7
 80136ba:	2101      	movs	r1, #1
 80136bc:	ed8d 8b04 	vstr	d8, [sp, #16]
 80136c0:	ed8d 8b02 	vstr	d8, [sp, #8]
 80136c4:	ed8d 6b06 	vstr	d6, [sp, #24]
 80136c8:	e9cd 1200 	strd	r1, r2, [sp]
 80136cc:	2200      	movs	r2, #0
 80136ce:	9208      	str	r2, [sp, #32]
 80136d0:	2b02      	cmp	r3, #2
 80136d2:	d113      	bne.n	80136fc <atanhf+0x94>
 80136d4:	f7fc fb36 	bl	800fd44 <__errno>
 80136d8:	2321      	movs	r3, #33	; 0x21
 80136da:	6003      	str	r3, [r0, #0]
 80136dc:	e013      	b.n	8013706 <atanhf+0x9e>
 80136de:	2102      	movs	r1, #2
 80136e0:	e9cd 1200 	strd	r1, r2, [sp]
 80136e4:	ee88 6b07 	vdiv.f64	d6, d8, d7
 80136e8:	2200      	movs	r2, #0
 80136ea:	9208      	str	r2, [sp, #32]
 80136ec:	ed8d 8b04 	vstr	d8, [sp, #16]
 80136f0:	ed8d 8b02 	vstr	d8, [sp, #8]
 80136f4:	ed8d 6b06 	vstr	d6, [sp, #24]
 80136f8:	428b      	cmp	r3, r1
 80136fa:	e7ea      	b.n	80136d2 <atanhf+0x6a>
 80136fc:	4668      	mov	r0, sp
 80136fe:	f001 fa9a 	bl	8014c36 <matherr>
 8013702:	2800      	cmp	r0, #0
 8013704:	d0e6      	beq.n	80136d4 <atanhf+0x6c>
 8013706:	9b08      	ldr	r3, [sp, #32]
 8013708:	b11b      	cbz	r3, 8013712 <atanhf+0xaa>
 801370a:	f7fc fb1b 	bl	800fd44 <__errno>
 801370e:	9b08      	ldr	r3, [sp, #32]
 8013710:	6003      	str	r3, [r0, #0]
 8013712:	ed9d 0b06 	vldr	d0, [sp, #24]
 8013716:	eef7 8bc0 	vcvt.f32.f64	s17, d0
 801371a:	eeb0 0a68 	vmov.f32	s0, s17
 801371e:	b00a      	add	sp, #40	; 0x28
 8013720:	ecbd 8b02 	vpop	{d8}
 8013724:	bd10      	pop	{r4, pc}
 8013726:	bf00      	nop
	...
 8013730:	20000898 	.word	0x20000898
 8013734:	0801708b 	.word	0x0801708b

08013738 <coshf>:
 8013738:	b510      	push	{r4, lr}
 801373a:	ed2d 8b02 	vpush	{d8}
 801373e:	4c27      	ldr	r4, [pc, #156]	; (80137dc <coshf+0xa4>)
 8013740:	b08a      	sub	sp, #40	; 0x28
 8013742:	eeb0 8a40 	vmov.f32	s16, s0
 8013746:	f000 fb95 	bl	8013e74 <__ieee754_coshf>
 801374a:	f994 3000 	ldrsb.w	r3, [r4]
 801374e:	3301      	adds	r3, #1
 8013750:	eef0 8a40 	vmov.f32	s17, s0
 8013754:	d031      	beq.n	80137ba <coshf+0x82>
 8013756:	eeb4 8a48 	vcmp.f32	s16, s16
 801375a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801375e:	d62c      	bvs.n	80137ba <coshf+0x82>
 8013760:	eeb0 0a48 	vmov.f32	s0, s16
 8013764:	f7ff fa96 	bl	8012c94 <fabsf>
 8013768:	eddf 7a1d 	vldr	s15, [pc, #116]	; 80137e0 <coshf+0xa8>
 801376c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8013770:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013774:	dd21      	ble.n	80137ba <coshf+0x82>
 8013776:	2303      	movs	r3, #3
 8013778:	9300      	str	r3, [sp, #0]
 801377a:	4b1a      	ldr	r3, [pc, #104]	; (80137e4 <coshf+0xac>)
 801377c:	9301      	str	r3, [sp, #4]
 801377e:	2300      	movs	r3, #0
 8013780:	eeb7 8ac8 	vcvt.f64.f32	d8, s16
 8013784:	9308      	str	r3, [sp, #32]
 8013786:	f994 3000 	ldrsb.w	r3, [r4]
 801378a:	ed8d 8b04 	vstr	d8, [sp, #16]
 801378e:	ed8d 8b02 	vstr	d8, [sp, #8]
 8013792:	b9c3      	cbnz	r3, 80137c6 <coshf+0x8e>
 8013794:	4b14      	ldr	r3, [pc, #80]	; (80137e8 <coshf+0xb0>)
 8013796:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 801379a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801379e:	4668      	mov	r0, sp
 80137a0:	f001 fa49 	bl	8014c36 <matherr>
 80137a4:	b1a8      	cbz	r0, 80137d2 <coshf+0x9a>
 80137a6:	9b08      	ldr	r3, [sp, #32]
 80137a8:	b11b      	cbz	r3, 80137b2 <coshf+0x7a>
 80137aa:	f7fc facb 	bl	800fd44 <__errno>
 80137ae:	9b08      	ldr	r3, [sp, #32]
 80137b0:	6003      	str	r3, [r0, #0]
 80137b2:	ed9d 0b06 	vldr	d0, [sp, #24]
 80137b6:	eef7 8bc0 	vcvt.f32.f64	s17, d0
 80137ba:	eeb0 0a68 	vmov.f32	s0, s17
 80137be:	b00a      	add	sp, #40	; 0x28
 80137c0:	ecbd 8b02 	vpop	{d8}
 80137c4:	bd10      	pop	{r4, pc}
 80137c6:	4909      	ldr	r1, [pc, #36]	; (80137ec <coshf+0xb4>)
 80137c8:	2000      	movs	r0, #0
 80137ca:	2b02      	cmp	r3, #2
 80137cc:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80137d0:	d1e5      	bne.n	801379e <coshf+0x66>
 80137d2:	f7fc fab7 	bl	800fd44 <__errno>
 80137d6:	2322      	movs	r3, #34	; 0x22
 80137d8:	6003      	str	r3, [r0, #0]
 80137da:	e7e4      	b.n	80137a6 <coshf+0x6e>
 80137dc:	20000898 	.word	0x20000898
 80137e0:	42b2d4fc 	.word	0x42b2d4fc
 80137e4:	0801707f 	.word	0x0801707f
 80137e8:	47efffff 	.word	0x47efffff
 80137ec:	7ff00000 	.word	0x7ff00000

080137f0 <fmodf>:
 80137f0:	b500      	push	{lr}
 80137f2:	ed2d 8b02 	vpush	{d8}
 80137f6:	b08b      	sub	sp, #44	; 0x2c
 80137f8:	eeb0 8a40 	vmov.f32	s16, s0
 80137fc:	eef0 8a60 	vmov.f32	s17, s1
 8013800:	f000 fb9c 	bl	8013f3c <__ieee754_fmodf>
 8013804:	4b24      	ldr	r3, [pc, #144]	; (8013898 <fmodf+0xa8>)
 8013806:	f993 3000 	ldrsb.w	r3, [r3]
 801380a:	1c5a      	adds	r2, r3, #1
 801380c:	d02d      	beq.n	801386a <fmodf+0x7a>
 801380e:	eef4 8a68 	vcmp.f32	s17, s17
 8013812:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013816:	d628      	bvs.n	801386a <fmodf+0x7a>
 8013818:	eeb4 8a48 	vcmp.f32	s16, s16
 801381c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013820:	d623      	bvs.n	801386a <fmodf+0x7a>
 8013822:	eef5 8a40 	vcmp.f32	s17, #0.0
 8013826:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801382a:	d11e      	bne.n	801386a <fmodf+0x7a>
 801382c:	2201      	movs	r2, #1
 801382e:	9200      	str	r2, [sp, #0]
 8013830:	eeb7 0ac8 	vcvt.f64.f32	d0, s16
 8013834:	4a19      	ldr	r2, [pc, #100]	; (801389c <fmodf+0xac>)
 8013836:	9201      	str	r2, [sp, #4]
 8013838:	eeb7 7ae8 	vcvt.f64.f32	d7, s17
 801383c:	2200      	movs	r2, #0
 801383e:	9208      	str	r2, [sp, #32]
 8013840:	ed8d 0b02 	vstr	d0, [sp, #8]
 8013844:	ed8d 7b04 	vstr	d7, [sp, #16]
 8013848:	b9a3      	cbnz	r3, 8013874 <fmodf+0x84>
 801384a:	ed8d 0b06 	vstr	d0, [sp, #24]
 801384e:	4668      	mov	r0, sp
 8013850:	f001 f9f1 	bl	8014c36 <matherr>
 8013854:	b1b0      	cbz	r0, 8013884 <fmodf+0x94>
 8013856:	9b08      	ldr	r3, [sp, #32]
 8013858:	b11b      	cbz	r3, 8013862 <fmodf+0x72>
 801385a:	f7fc fa73 	bl	800fd44 <__errno>
 801385e:	9b08      	ldr	r3, [sp, #32]
 8013860:	6003      	str	r3, [r0, #0]
 8013862:	ed9d 0b06 	vldr	d0, [sp, #24]
 8013866:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 801386a:	b00b      	add	sp, #44	; 0x2c
 801386c:	ecbd 8b02 	vpop	{d8}
 8013870:	f85d fb04 	ldr.w	pc, [sp], #4
 8013874:	ed9f 7b06 	vldr	d7, [pc, #24]	; 8013890 <fmodf+0xa0>
 8013878:	2b02      	cmp	r3, #2
 801387a:	ee87 6b07 	vdiv.f64	d6, d7, d7
 801387e:	ed8d 6b06 	vstr	d6, [sp, #24]
 8013882:	d1e4      	bne.n	801384e <fmodf+0x5e>
 8013884:	f7fc fa5e 	bl	800fd44 <__errno>
 8013888:	2321      	movs	r3, #33	; 0x21
 801388a:	6003      	str	r3, [r0, #0]
 801388c:	e7e3      	b.n	8013856 <fmodf+0x66>
 801388e:	bf00      	nop
	...
 8013898:	20000898 	.word	0x20000898
 801389c:	08017092 	.word	0x08017092

080138a0 <sinhf>:
 80138a0:	b530      	push	{r4, r5, lr}
 80138a2:	ed2d 8b02 	vpush	{d8}
 80138a6:	4c32      	ldr	r4, [pc, #200]	; (8013970 <sinhf+0xd0>)
 80138a8:	b08b      	sub	sp, #44	; 0x2c
 80138aa:	eef0 8a40 	vmov.f32	s17, s0
 80138ae:	f000 fcf9 	bl	80142a4 <__ieee754_sinhf>
 80138b2:	f994 3000 	ldrsb.w	r3, [r4]
 80138b6:	3301      	adds	r3, #1
 80138b8:	eeb0 8a40 	vmov.f32	s16, s0
 80138bc:	d030      	beq.n	8013920 <sinhf+0x80>
 80138be:	f001 faf1 	bl	8014ea4 <finitef>
 80138c2:	4605      	mov	r5, r0
 80138c4:	bb60      	cbnz	r0, 8013920 <sinhf+0x80>
 80138c6:	eeb0 0a68 	vmov.f32	s0, s17
 80138ca:	f001 faeb 	bl	8014ea4 <finitef>
 80138ce:	b338      	cbz	r0, 8013920 <sinhf+0x80>
 80138d0:	2303      	movs	r3, #3
 80138d2:	9300      	str	r3, [sp, #0]
 80138d4:	4b27      	ldr	r3, [pc, #156]	; (8013974 <sinhf+0xd4>)
 80138d6:	9301      	str	r3, [sp, #4]
 80138d8:	eeb7 7ae8 	vcvt.f64.f32	d7, s17
 80138dc:	f994 3000 	ldrsb.w	r3, [r4]
 80138e0:	9508      	str	r5, [sp, #32]
 80138e2:	ed8d 7b04 	vstr	d7, [sp, #16]
 80138e6:	ed8d 7b02 	vstr	d7, [sp, #8]
 80138ea:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 80138ee:	b9eb      	cbnz	r3, 801392c <sinhf+0x8c>
 80138f0:	ed9f 7b17 	vldr	d7, [pc, #92]	; 8013950 <sinhf+0xb0>
 80138f4:	ed9f 6b18 	vldr	d6, [pc, #96]	; 8013958 <sinhf+0xb8>
 80138f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80138fc:	fe37 7b06 	vselgt.f64	d7, d7, d6
 8013900:	ed8d 7b06 	vstr	d7, [sp, #24]
 8013904:	4668      	mov	r0, sp
 8013906:	f001 f996 	bl	8014c36 <matherr>
 801390a:	b1d8      	cbz	r0, 8013944 <sinhf+0xa4>
 801390c:	9b08      	ldr	r3, [sp, #32]
 801390e:	b11b      	cbz	r3, 8013918 <sinhf+0x78>
 8013910:	f7fc fa18 	bl	800fd44 <__errno>
 8013914:	9b08      	ldr	r3, [sp, #32]
 8013916:	6003      	str	r3, [r0, #0]
 8013918:	ed9d 8b06 	vldr	d8, [sp, #24]
 801391c:	eeb7 8bc8 	vcvt.f32.f64	s16, d8
 8013920:	eeb0 0a48 	vmov.f32	s0, s16
 8013924:	b00b      	add	sp, #44	; 0x2c
 8013926:	ecbd 8b02 	vpop	{d8}
 801392a:	bd30      	pop	{r4, r5, pc}
 801392c:	ed9f 7b0c 	vldr	d7, [pc, #48]	; 8013960 <sinhf+0xc0>
 8013930:	ed9f 6b0d 	vldr	d6, [pc, #52]	; 8013968 <sinhf+0xc8>
 8013934:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013938:	fe37 7b06 	vselgt.f64	d7, d7, d6
 801393c:	2b02      	cmp	r3, #2
 801393e:	ed8d 7b06 	vstr	d7, [sp, #24]
 8013942:	d1df      	bne.n	8013904 <sinhf+0x64>
 8013944:	f7fc f9fe 	bl	800fd44 <__errno>
 8013948:	2322      	movs	r3, #34	; 0x22
 801394a:	6003      	str	r3, [r0, #0]
 801394c:	e7de      	b.n	801390c <sinhf+0x6c>
 801394e:	bf00      	nop
 8013950:	e0000000 	.word	0xe0000000
 8013954:	47efffff 	.word	0x47efffff
 8013958:	e0000000 	.word	0xe0000000
 801395c:	c7efffff 	.word	0xc7efffff
 8013960:	00000000 	.word	0x00000000
 8013964:	7ff00000 	.word	0x7ff00000
 8013968:	00000000 	.word	0x00000000
 801396c:	fff00000 	.word	0xfff00000
 8013970:	20000898 	.word	0x20000898
 8013974:	08017098 	.word	0x08017098

08013978 <__ieee754_acosf>:
 8013978:	b508      	push	{r3, lr}
 801397a:	ee10 3a10 	vmov	r3, s0
 801397e:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8013982:	f1b2 5f7e 	cmp.w	r2, #1065353216	; 0x3f800000
 8013986:	ed2d 8b0c 	vpush	{d8-d13}
 801398a:	d109      	bne.n	80139a0 <__ieee754_acosf+0x28>
 801398c:	ed9f 0a67 	vldr	s0, [pc, #412]	; 8013b2c <__ieee754_acosf+0x1b4>
 8013990:	ed9f 8a67 	vldr	s16, [pc, #412]	; 8013b30 <__ieee754_acosf+0x1b8>
 8013994:	2b00      	cmp	r3, #0
 8013996:	fe30 0a08 	vselgt.f32	s0, s0, s16
 801399a:	ecbd 8b0c 	vpop	{d8-d13}
 801399e:	bd08      	pop	{r3, pc}
 80139a0:	dd04      	ble.n	80139ac <__ieee754_acosf+0x34>
 80139a2:	ee30 8a40 	vsub.f32	s16, s0, s0
 80139a6:	ee88 0a08 	vdiv.f32	s0, s16, s16
 80139aa:	e7f6      	b.n	801399a <__ieee754_acosf+0x22>
 80139ac:	f1b2 5f7c 	cmp.w	r2, #1056964608	; 0x3f000000
 80139b0:	da3e      	bge.n	8013a30 <__ieee754_acosf+0xb8>
 80139b2:	f1b2 5f0c 	cmp.w	r2, #587202560	; 0x23000000
 80139b6:	f340 80b5 	ble.w	8013b24 <__ieee754_acosf+0x1ac>
 80139ba:	ee60 7a00 	vmul.f32	s15, s0, s0
 80139be:	eddf 6a5d 	vldr	s13, [pc, #372]	; 8013b34 <__ieee754_acosf+0x1bc>
 80139c2:	ed9f 7a5d 	vldr	s14, [pc, #372]	; 8013b38 <__ieee754_acosf+0x1c0>
 80139c6:	ed9f 6a5d 	vldr	s12, [pc, #372]	; 8013b3c <__ieee754_acosf+0x1c4>
 80139ca:	ed9f 8a5d 	vldr	s16, [pc, #372]	; 8013b40 <__ieee754_acosf+0x1c8>
 80139ce:	eea7 7aa6 	vfma.f32	s14, s15, s13
 80139d2:	eddf 6a5c 	vldr	s13, [pc, #368]	; 8013b44 <__ieee754_acosf+0x1cc>
 80139d6:	eee7 6a27 	vfma.f32	s13, s14, s15
 80139da:	ed9f 7a5b 	vldr	s14, [pc, #364]	; 8013b48 <__ieee754_acosf+0x1d0>
 80139de:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80139e2:	eddf 6a5a 	vldr	s13, [pc, #360]	; 8013b4c <__ieee754_acosf+0x1d4>
 80139e6:	eee7 6a27 	vfma.f32	s13, s14, s15
 80139ea:	ed9f 7a59 	vldr	s14, [pc, #356]	; 8013b50 <__ieee754_acosf+0x1d8>
 80139ee:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80139f2:	eddf 6a58 	vldr	s13, [pc, #352]	; 8013b54 <__ieee754_acosf+0x1dc>
 80139f6:	eea7 6aa6 	vfma.f32	s12, s15, s13
 80139fa:	eddf 6a57 	vldr	s13, [pc, #348]	; 8013b58 <__ieee754_acosf+0x1e0>
 80139fe:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013a02:	ed9f 6a56 	vldr	s12, [pc, #344]	; 8013b5c <__ieee754_acosf+0x1e4>
 8013a06:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8013a0a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013a0e:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013a12:	ee27 7a27 	vmul.f32	s14, s14, s15
 8013a16:	eef0 7a66 	vmov.f32	s15, s13
 8013a1a:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8013a1e:	eea0 8a66 	vfms.f32	s16, s0, s13
 8013a22:	ee30 8a48 	vsub.f32	s16, s0, s16
 8013a26:	ed9f 0a4e 	vldr	s0, [pc, #312]	; 8013b60 <__ieee754_acosf+0x1e8>
 8013a2a:	ee30 0a48 	vsub.f32	s0, s0, s16
 8013a2e:	e7b4      	b.n	801399a <__ieee754_acosf+0x22>
 8013a30:	2b00      	cmp	r3, #0
 8013a32:	eddf da40 	vldr	s27, [pc, #256]	; 8013b34 <__ieee754_acosf+0x1bc>
 8013a36:	eddf ca40 	vldr	s25, [pc, #256]	; 8013b38 <__ieee754_acosf+0x1c0>
 8013a3a:	ed9f ca42 	vldr	s24, [pc, #264]	; 8013b44 <__ieee754_acosf+0x1cc>
 8013a3e:	eddf ba42 	vldr	s23, [pc, #264]	; 8013b48 <__ieee754_acosf+0x1d0>
 8013a42:	ed9f ba42 	vldr	s22, [pc, #264]	; 8013b4c <__ieee754_acosf+0x1d4>
 8013a46:	eddf 8a42 	vldr	s17, [pc, #264]	; 8013b50 <__ieee754_acosf+0x1d8>
 8013a4a:	ed9f da42 	vldr	s26, [pc, #264]	; 8013b54 <__ieee754_acosf+0x1dc>
 8013a4e:	eddf aa3b 	vldr	s21, [pc, #236]	; 8013b3c <__ieee754_acosf+0x1c4>
 8013a52:	ed9f aa41 	vldr	s20, [pc, #260]	; 8013b58 <__ieee754_acosf+0x1e0>
 8013a56:	eddf 9a41 	vldr	s19, [pc, #260]	; 8013b5c <__ieee754_acosf+0x1e4>
 8013a5a:	eeb7 9a00 	vmov.f32	s18, #112	; 0x3f800000  1.0
 8013a5e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8013a62:	da28      	bge.n	8013ab6 <__ieee754_acosf+0x13e>
 8013a64:	ee30 0a09 	vadd.f32	s0, s0, s18
 8013a68:	ee20 0a27 	vmul.f32	s0, s0, s15
 8013a6c:	eee0 ca2d 	vfma.f32	s25, s0, s27
 8013a70:	eee0 aa0d 	vfma.f32	s21, s0, s26
 8013a74:	eeac ca80 	vfma.f32	s24, s25, s0
 8013a78:	eeaa aa80 	vfma.f32	s20, s21, s0
 8013a7c:	eeec ba00 	vfma.f32	s23, s24, s0
 8013a80:	eeea 9a00 	vfma.f32	s19, s20, s0
 8013a84:	eeab ba80 	vfma.f32	s22, s23, s0
 8013a88:	eea9 9a80 	vfma.f32	s18, s19, s0
 8013a8c:	eeeb 8a00 	vfma.f32	s17, s22, s0
 8013a90:	ee68 8a80 	vmul.f32	s17, s17, s0
 8013a94:	f000 fc74 	bl	8014380 <__ieee754_sqrtf>
 8013a98:	ee88 7a89 	vdiv.f32	s14, s17, s18
 8013a9c:	eddf 7a31 	vldr	s15, [pc, #196]	; 8013b64 <__ieee754_acosf+0x1ec>
 8013aa0:	eee0 7a07 	vfma.f32	s15, s0, s14
 8013aa4:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 8013aa8:	ee77 7a80 	vadd.f32	s15, s15, s0
 8013aac:	ed9f 0a2e 	vldr	s0, [pc, #184]	; 8013b68 <__ieee754_acosf+0x1f0>
 8013ab0:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8013ab4:	e771      	b.n	801399a <__ieee754_acosf+0x22>
 8013ab6:	ee39 8a40 	vsub.f32	s16, s18, s0
 8013aba:	ee28 8a27 	vmul.f32	s16, s16, s15
 8013abe:	eeb0 0a48 	vmov.f32	s0, s16
 8013ac2:	f000 fc5d 	bl	8014380 <__ieee754_sqrtf>
 8013ac6:	eee8 ca2d 	vfma.f32	s25, s16, s27
 8013aca:	eee8 aa0d 	vfma.f32	s21, s16, s26
 8013ace:	eeac ca88 	vfma.f32	s24, s25, s16
 8013ad2:	eeaa aa88 	vfma.f32	s20, s21, s16
 8013ad6:	eeec ba08 	vfma.f32	s23, s24, s16
 8013ada:	ee10 3a10 	vmov	r3, s0
 8013ade:	eeab ba88 	vfma.f32	s22, s23, s16
 8013ae2:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8013ae6:	f023 030f 	bic.w	r3, r3, #15
 8013aea:	eeea 9a08 	vfma.f32	s19, s20, s16
 8013aee:	ee07 3a90 	vmov	s15, r3
 8013af2:	eeeb 8a08 	vfma.f32	s17, s22, s16
 8013af6:	eeb0 6a48 	vmov.f32	s12, s16
 8013afa:	eea7 6ae7 	vfms.f32	s12, s15, s15
 8013afe:	eea9 9a88 	vfma.f32	s18, s19, s16
 8013b02:	ee70 6a27 	vadd.f32	s13, s0, s15
 8013b06:	ee68 8a88 	vmul.f32	s17, s17, s16
 8013b0a:	eeb0 7a40 	vmov.f32	s14, s0
 8013b0e:	ee86 0a26 	vdiv.f32	s0, s12, s13
 8013b12:	eec8 6a89 	vdiv.f32	s13, s17, s18
 8013b16:	eea7 0a26 	vfma.f32	s0, s14, s13
 8013b1a:	ee30 0a27 	vadd.f32	s0, s0, s15
 8013b1e:	ee30 0a00 	vadd.f32	s0, s0, s0
 8013b22:	e73a      	b.n	801399a <__ieee754_acosf+0x22>
 8013b24:	ed9f 0a11 	vldr	s0, [pc, #68]	; 8013b6c <__ieee754_acosf+0x1f4>
 8013b28:	e737      	b.n	801399a <__ieee754_acosf+0x22>
 8013b2a:	bf00      	nop
 8013b2c:	00000000 	.word	0x00000000
 8013b30:	40490fdb 	.word	0x40490fdb
 8013b34:	3811ef08 	.word	0x3811ef08
 8013b38:	3a4f7f04 	.word	0x3a4f7f04
 8013b3c:	bf303361 	.word	0xbf303361
 8013b40:	33a22168 	.word	0x33a22168
 8013b44:	bd241146 	.word	0xbd241146
 8013b48:	3e4e0aa8 	.word	0x3e4e0aa8
 8013b4c:	bea6b090 	.word	0xbea6b090
 8013b50:	3e2aaaab 	.word	0x3e2aaaab
 8013b54:	3d9dc62e 	.word	0x3d9dc62e
 8013b58:	4001572d 	.word	0x4001572d
 8013b5c:	c019d139 	.word	0xc019d139
 8013b60:	3fc90fda 	.word	0x3fc90fda
 8013b64:	b3a22168 	.word	0xb3a22168
 8013b68:	40490fda 	.word	0x40490fda
 8013b6c:	3fc90fdb 	.word	0x3fc90fdb

08013b70 <__ieee754_acoshf>:
 8013b70:	b508      	push	{r3, lr}
 8013b72:	ee10 3a10 	vmov	r3, s0
 8013b76:	f1b3 5f7e 	cmp.w	r3, #1065353216	; 0x3f800000
 8013b7a:	ed2d 8b04 	vpush	{d8-d9}
 8013b7e:	eeb0 8a40 	vmov.f32	s16, s0
 8013b82:	da06      	bge.n	8013b92 <__ieee754_acoshf+0x22>
 8013b84:	ee30 8a40 	vsub.f32	s16, s0, s0
 8013b88:	ee88 0a08 	vdiv.f32	s0, s16, s16
 8013b8c:	ecbd 8b04 	vpop	{d8-d9}
 8013b90:	bd08      	pop	{r3, pc}
 8013b92:	f1b3 4f9b 	cmp.w	r3, #1300234240	; 0x4d800000
 8013b96:	db0c      	blt.n	8013bb2 <__ieee754_acoshf+0x42>
 8013b98:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8013b9c:	db02      	blt.n	8013ba4 <__ieee754_acoshf+0x34>
 8013b9e:	ee30 0a00 	vadd.f32	s0, s0, s0
 8013ba2:	e7f3      	b.n	8013b8c <__ieee754_acoshf+0x1c>
 8013ba4:	f7ff f8c0 	bl	8012d28 <logf>
 8013ba8:	ed9f 8a19 	vldr	s16, [pc, #100]	; 8013c10 <__ieee754_acoshf+0xa0>
 8013bac:	ee30 0a08 	vadd.f32	s0, s0, s16
 8013bb0:	e7ec      	b.n	8013b8c <__ieee754_acoshf+0x1c>
 8013bb2:	f1b3 5f7e 	cmp.w	r3, #1065353216	; 0x3f800000
 8013bb6:	d028      	beq.n	8013c0a <__ieee754_acoshf+0x9a>
 8013bb8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8013bbc:	eeb7 9a00 	vmov.f32	s18, #112	; 0x3f800000  1.0
 8013bc0:	eef0 8a00 	vmov.f32	s17, #0	; 0x40000000  2.0
 8013bc4:	dd11      	ble.n	8013bea <__ieee754_acoshf+0x7a>
 8013bc6:	eebf 0a00 	vmov.f32	s0, #240	; 0xbf800000 -1.0
 8013bca:	eea8 0a08 	vfma.f32	s0, s16, s16
 8013bce:	f000 fbd7 	bl	8014380 <__ieee754_sqrtf>
 8013bd2:	ee70 7a08 	vadd.f32	s15, s0, s16
 8013bd6:	ee89 0a27 	vdiv.f32	s0, s18, s15
 8013bda:	ee98 0a28 	vfnms.f32	s0, s16, s17
 8013bde:	ecbd 8b04 	vpop	{d8-d9}
 8013be2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013be6:	f7ff b89f 	b.w	8012d28 <logf>
 8013bea:	ee30 8a49 	vsub.f32	s16, s0, s18
 8013bee:	ee28 0a08 	vmul.f32	s0, s16, s16
 8013bf2:	eea8 0a28 	vfma.f32	s0, s16, s17
 8013bf6:	f000 fbc3 	bl	8014380 <__ieee754_sqrtf>
 8013bfa:	ee30 0a08 	vadd.f32	s0, s0, s16
 8013bfe:	ecbd 8b04 	vpop	{d8-d9}
 8013c02:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013c06:	f7ff b8f7 	b.w	8012df8 <log1pf>
 8013c0a:	ed9f 0a02 	vldr	s0, [pc, #8]	; 8013c14 <__ieee754_acoshf+0xa4>
 8013c0e:	e7bd      	b.n	8013b8c <__ieee754_acoshf+0x1c>
 8013c10:	3f317218 	.word	0x3f317218
 8013c14:	00000000 	.word	0x00000000

08013c18 <__ieee754_asinf>:
 8013c18:	b538      	push	{r3, r4, r5, lr}
 8013c1a:	ee10 5a10 	vmov	r5, s0
 8013c1e:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 8013c22:	f1b4 5f7e 	cmp.w	r4, #1065353216	; 0x3f800000
 8013c26:	ed2d 8b04 	vpush	{d8-d9}
 8013c2a:	d10c      	bne.n	8013c46 <__ieee754_asinf+0x2e>
 8013c2c:	eddf 7a5e 	vldr	s15, [pc, #376]	; 8013da8 <__ieee754_asinf+0x190>
 8013c30:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8013dac <__ieee754_asinf+0x194>
 8013c34:	ee60 7a27 	vmul.f32	s15, s0, s15
 8013c38:	eee0 7a07 	vfma.f32	s15, s0, s14
 8013c3c:	eeb0 0a67 	vmov.f32	s0, s15
 8013c40:	ecbd 8b04 	vpop	{d8-d9}
 8013c44:	bd38      	pop	{r3, r4, r5, pc}
 8013c46:	dd04      	ble.n	8013c52 <__ieee754_asinf+0x3a>
 8013c48:	ee70 7a40 	vsub.f32	s15, s0, s0
 8013c4c:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 8013c50:	e7f6      	b.n	8013c40 <__ieee754_asinf+0x28>
 8013c52:	f1b4 5f7c 	cmp.w	r4, #1056964608	; 0x3f000000
 8013c56:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 8013c5a:	da0b      	bge.n	8013c74 <__ieee754_asinf+0x5c>
 8013c5c:	f1b4 5f48 	cmp.w	r4, #838860800	; 0x32000000
 8013c60:	da52      	bge.n	8013d08 <__ieee754_asinf+0xf0>
 8013c62:	eddf 7a53 	vldr	s15, [pc, #332]	; 8013db0 <__ieee754_asinf+0x198>
 8013c66:	ee70 7a27 	vadd.f32	s15, s0, s15
 8013c6a:	eef4 7ae8 	vcmpe.f32	s15, s17
 8013c6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013c72:	dce5      	bgt.n	8013c40 <__ieee754_asinf+0x28>
 8013c74:	f7ff f80e 	bl	8012c94 <fabsf>
 8013c78:	ee38 0ac0 	vsub.f32	s0, s17, s0
 8013c7c:	eeb6 8a00 	vmov.f32	s16, #96	; 0x3f000000  0.5
 8013c80:	ee20 8a08 	vmul.f32	s16, s0, s16
 8013c84:	eddf 7a4b 	vldr	s15, [pc, #300]	; 8013db4 <__ieee754_asinf+0x19c>
 8013c88:	ed9f 7a4b 	vldr	s14, [pc, #300]	; 8013db8 <__ieee754_asinf+0x1a0>
 8013c8c:	ed9f 9a4b 	vldr	s18, [pc, #300]	; 8013dbc <__ieee754_asinf+0x1a4>
 8013c90:	eea8 7a27 	vfma.f32	s14, s16, s15
 8013c94:	eddf 7a4a 	vldr	s15, [pc, #296]	; 8013dc0 <__ieee754_asinf+0x1a8>
 8013c98:	eee7 7a08 	vfma.f32	s15, s14, s16
 8013c9c:	ed9f 7a49 	vldr	s14, [pc, #292]	; 8013dc4 <__ieee754_asinf+0x1ac>
 8013ca0:	eea7 7a88 	vfma.f32	s14, s15, s16
 8013ca4:	eddf 7a48 	vldr	s15, [pc, #288]	; 8013dc8 <__ieee754_asinf+0x1b0>
 8013ca8:	eee7 7a08 	vfma.f32	s15, s14, s16
 8013cac:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8013dcc <__ieee754_asinf+0x1b4>
 8013cb0:	eea7 9a88 	vfma.f32	s18, s15, s16
 8013cb4:	eddf 7a46 	vldr	s15, [pc, #280]	; 8013dd0 <__ieee754_asinf+0x1b8>
 8013cb8:	eee8 7a07 	vfma.f32	s15, s16, s14
 8013cbc:	ed9f 7a45 	vldr	s14, [pc, #276]	; 8013dd4 <__ieee754_asinf+0x1bc>
 8013cc0:	eea7 7a88 	vfma.f32	s14, s15, s16
 8013cc4:	eddf 7a44 	vldr	s15, [pc, #272]	; 8013dd8 <__ieee754_asinf+0x1c0>
 8013cc8:	eee7 7a08 	vfma.f32	s15, s14, s16
 8013ccc:	eeb0 0a48 	vmov.f32	s0, s16
 8013cd0:	eee7 8a88 	vfma.f32	s17, s15, s16
 8013cd4:	f000 fb54 	bl	8014380 <__ieee754_sqrtf>
 8013cd8:	4b40      	ldr	r3, [pc, #256]	; (8013ddc <__ieee754_asinf+0x1c4>)
 8013cda:	ee29 9a08 	vmul.f32	s18, s18, s16
 8013cde:	429c      	cmp	r4, r3
 8013ce0:	ee89 6a28 	vdiv.f32	s12, s18, s17
 8013ce4:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 8013ce8:	dd3d      	ble.n	8013d66 <__ieee754_asinf+0x14e>
 8013cea:	eea0 0a06 	vfma.f32	s0, s0, s12
 8013cee:	eddf 7a3c 	vldr	s15, [pc, #240]	; 8013de0 <__ieee754_asinf+0x1c8>
 8013cf2:	eee0 7a07 	vfma.f32	s15, s0, s14
 8013cf6:	ed9f 0a2d 	vldr	s0, [pc, #180]	; 8013dac <__ieee754_asinf+0x194>
 8013cfa:	ee30 0a67 	vsub.f32	s0, s0, s15
 8013cfe:	2d00      	cmp	r5, #0
 8013d00:	bfd8      	it	le
 8013d02:	eeb1 0a40 	vnegle.f32	s0, s0
 8013d06:	e79b      	b.n	8013c40 <__ieee754_asinf+0x28>
 8013d08:	ee60 7a00 	vmul.f32	s15, s0, s0
 8013d0c:	eddf 6a29 	vldr	s13, [pc, #164]	; 8013db4 <__ieee754_asinf+0x19c>
 8013d10:	ed9f 7a29 	vldr	s14, [pc, #164]	; 8013db8 <__ieee754_asinf+0x1a0>
 8013d14:	ed9f 6a2d 	vldr	s12, [pc, #180]	; 8013dcc <__ieee754_asinf+0x1b4>
 8013d18:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8013d1c:	eddf 6a28 	vldr	s13, [pc, #160]	; 8013dc0 <__ieee754_asinf+0x1a8>
 8013d20:	eee7 6a27 	vfma.f32	s13, s14, s15
 8013d24:	ed9f 7a27 	vldr	s14, [pc, #156]	; 8013dc4 <__ieee754_asinf+0x1ac>
 8013d28:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8013d2c:	eddf 6a26 	vldr	s13, [pc, #152]	; 8013dc8 <__ieee754_asinf+0x1b0>
 8013d30:	eee7 6a27 	vfma.f32	s13, s14, s15
 8013d34:	ed9f 7a21 	vldr	s14, [pc, #132]	; 8013dbc <__ieee754_asinf+0x1a4>
 8013d38:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8013d3c:	eddf 6a24 	vldr	s13, [pc, #144]	; 8013dd0 <__ieee754_asinf+0x1b8>
 8013d40:	eee7 6a86 	vfma.f32	s13, s15, s12
 8013d44:	ed9f 6a23 	vldr	s12, [pc, #140]	; 8013dd4 <__ieee754_asinf+0x1bc>
 8013d48:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8013d4c:	eddf 6a22 	vldr	s13, [pc, #136]	; 8013dd8 <__ieee754_asinf+0x1c0>
 8013d50:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013d54:	ee27 7a27 	vmul.f32	s14, s14, s15
 8013d58:	eee6 8aa7 	vfma.f32	s17, s13, s15
 8013d5c:	eec7 7a28 	vdiv.f32	s15, s14, s17
 8013d60:	eea0 0a27 	vfma.f32	s0, s0, s15
 8013d64:	e76c      	b.n	8013c40 <__ieee754_asinf+0x28>
 8013d66:	ee10 3a10 	vmov	r3, s0
 8013d6a:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8013d6e:	f023 030f 	bic.w	r3, r3, #15
 8013d72:	ee07 3a90 	vmov	s15, r3
 8013d76:	eef1 6a67 	vneg.f32	s13, s15
 8013d7a:	eea6 8aa7 	vfma.f32	s16, s13, s15
 8013d7e:	ee70 5a00 	vadd.f32	s11, s0, s0
 8013d82:	ee37 0a80 	vadd.f32	s0, s15, s0
 8013d86:	eddf 7a08 	vldr	s15, [pc, #32]	; 8013da8 <__ieee754_asinf+0x190>
 8013d8a:	ee88 5a00 	vdiv.f32	s10, s16, s0
 8013d8e:	ed9f 0a15 	vldr	s0, [pc, #84]	; 8013de4 <__ieee754_asinf+0x1cc>
 8013d92:	eee5 7a47 	vfms.f32	s15, s10, s14
 8013d96:	eed5 7a86 	vfnms.f32	s15, s11, s12
 8013d9a:	eeb0 6a40 	vmov.f32	s12, s0
 8013d9e:	eea6 6a87 	vfma.f32	s12, s13, s14
 8013da2:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8013da6:	e7a8      	b.n	8013cfa <__ieee754_asinf+0xe2>
 8013da8:	b33bbd2e 	.word	0xb33bbd2e
 8013dac:	3fc90fdb 	.word	0x3fc90fdb
 8013db0:	7149f2ca 	.word	0x7149f2ca
 8013db4:	3811ef08 	.word	0x3811ef08
 8013db8:	3a4f7f04 	.word	0x3a4f7f04
 8013dbc:	3e2aaaab 	.word	0x3e2aaaab
 8013dc0:	bd241146 	.word	0xbd241146
 8013dc4:	3e4e0aa8 	.word	0x3e4e0aa8
 8013dc8:	bea6b090 	.word	0xbea6b090
 8013dcc:	3d9dc62e 	.word	0x3d9dc62e
 8013dd0:	bf303361 	.word	0xbf303361
 8013dd4:	4001572d 	.word	0x4001572d
 8013dd8:	c019d139 	.word	0xc019d139
 8013ddc:	3f799999 	.word	0x3f799999
 8013de0:	333bbd2e 	.word	0x333bbd2e
 8013de4:	3f490fdb 	.word	0x3f490fdb

08013de8 <__ieee754_atanhf>:
 8013de8:	b510      	push	{r4, lr}
 8013dea:	ee10 4a10 	vmov	r4, s0
 8013dee:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8013df2:	f1b3 5f7e 	cmp.w	r3, #1065353216	; 0x3f800000
 8013df6:	ed2d 8b02 	vpush	{d8}
 8013dfa:	dd06      	ble.n	8013e0a <__ieee754_atanhf+0x22>
 8013dfc:	ee70 7a40 	vsub.f32	s15, s0, s0
 8013e00:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 8013e04:	ecbd 8b02 	vpop	{d8}
 8013e08:	bd10      	pop	{r4, pc}
 8013e0a:	d104      	bne.n	8013e16 <__ieee754_atanhf+0x2e>
 8013e0c:	eddf 7a17 	vldr	s15, [pc, #92]	; 8013e6c <__ieee754_atanhf+0x84>
 8013e10:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8013e14:	e7f6      	b.n	8013e04 <__ieee754_atanhf+0x1c>
 8013e16:	f1b3 5f46 	cmp.w	r3, #830472192	; 0x31800000
 8013e1a:	da08      	bge.n	8013e2e <__ieee754_atanhf+0x46>
 8013e1c:	eddf 7a14 	vldr	s15, [pc, #80]	; 8013e70 <__ieee754_atanhf+0x88>
 8013e20:	ee70 7a27 	vadd.f32	s15, s0, s15
 8013e24:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013e28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e2c:	dcea      	bgt.n	8013e04 <__ieee754_atanhf+0x1c>
 8013e2e:	ee07 3a90 	vmov	s15, r3
 8013e32:	ee37 0aa7 	vadd.f32	s0, s15, s15
 8013e36:	f1b3 5f7c 	cmp.w	r3, #1056964608	; 0x3f000000
 8013e3a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013e3e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8013e42:	bfb6      	itet	lt
 8013e44:	ee60 7a27 	vmullt.f32	s15, s0, s15
 8013e48:	ee80 0a07 	vdivge.f32	s0, s0, s14
 8013e4c:	eec7 6a87 	vdivlt.f32	s13, s15, s14
 8013e50:	eeb6 8a00 	vmov.f32	s16, #96	; 0x3f000000  0.5
 8013e54:	bfb8      	it	lt
 8013e56:	ee36 0a80 	vaddlt.f32	s0, s13, s0
 8013e5a:	f7fe ffcd 	bl	8012df8 <log1pf>
 8013e5e:	ee20 0a08 	vmul.f32	s0, s0, s16
 8013e62:	2c00      	cmp	r4, #0
 8013e64:	bfb8      	it	lt
 8013e66:	eeb1 0a40 	vneglt.f32	s0, s0
 8013e6a:	e7cb      	b.n	8013e04 <__ieee754_atanhf+0x1c>
 8013e6c:	00000000 	.word	0x00000000
 8013e70:	7149f2ca 	.word	0x7149f2ca

08013e74 <__ieee754_coshf>:
 8013e74:	b510      	push	{r4, lr}
 8013e76:	ee10 4a10 	vmov	r4, s0
 8013e7a:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
 8013e7e:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 8013e82:	ed2d 8b02 	vpush	{d8}
 8013e86:	db04      	blt.n	8013e92 <__ieee754_coshf+0x1e>
 8013e88:	ee20 0a00 	vmul.f32	s0, s0, s0
 8013e8c:	ecbd 8b02 	vpop	{d8}
 8013e90:	bd10      	pop	{r4, pc}
 8013e92:	4b25      	ldr	r3, [pc, #148]	; (8013f28 <__ieee754_coshf+0xb4>)
 8013e94:	429c      	cmp	r4, r3
 8013e96:	dc15      	bgt.n	8013ec4 <__ieee754_coshf+0x50>
 8013e98:	f7fe fefc 	bl	8012c94 <fabsf>
 8013e9c:	f000 fed8 	bl	8014c50 <expm1f>
 8013ea0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013ea4:	f1b4 5f10 	cmp.w	r4, #603979776	; 0x24000000
 8013ea8:	eef0 7a40 	vmov.f32	s15, s0
 8013eac:	ee30 0a07 	vadd.f32	s0, s0, s14
 8013eb0:	dbec      	blt.n	8013e8c <__ieee754_coshf+0x18>
 8013eb2:	ee30 0a00 	vadd.f32	s0, s0, s0
 8013eb6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8013eba:	eec7 6a80 	vdiv.f32	s13, s15, s0
 8013ebe:	ee36 0a87 	vadd.f32	s0, s13, s14
 8013ec2:	e7e3      	b.n	8013e8c <__ieee754_coshf+0x18>
 8013ec4:	4b19      	ldr	r3, [pc, #100]	; (8013f2c <__ieee754_coshf+0xb8>)
 8013ec6:	429c      	cmp	r4, r3
 8013ec8:	dc0c      	bgt.n	8013ee4 <__ieee754_coshf+0x70>
 8013eca:	f7fe fee3 	bl	8012c94 <fabsf>
 8013ece:	f7fe fe63 	bl	8012b98 <expf>
 8013ed2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8013ed6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013eda:	eee0 7a07 	vfma.f32	s15, s0, s14
 8013ede:	eeb0 0a67 	vmov.f32	s0, s15
 8013ee2:	e7d3      	b.n	8013e8c <__ieee754_coshf+0x18>
 8013ee4:	4b12      	ldr	r3, [pc, #72]	; (8013f30 <__ieee754_coshf+0xbc>)
 8013ee6:	429c      	cmp	r4, r3
 8013ee8:	dc08      	bgt.n	8013efc <__ieee754_coshf+0x88>
 8013eea:	f7fe fed3 	bl	8012c94 <fabsf>
 8013eee:	f7fe fe53 	bl	8012b98 <expf>
 8013ef2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8013ef6:	ee20 0a27 	vmul.f32	s0, s0, s15
 8013efa:	e7c7      	b.n	8013e8c <__ieee754_coshf+0x18>
 8013efc:	4b0d      	ldr	r3, [pc, #52]	; (8013f34 <__ieee754_coshf+0xc0>)
 8013efe:	429c      	cmp	r4, r3
 8013f00:	dc0c      	bgt.n	8013f1c <__ieee754_coshf+0xa8>
 8013f02:	f7fe fec7 	bl	8012c94 <fabsf>
 8013f06:	eeb6 8a00 	vmov.f32	s16, #96	; 0x3f000000  0.5
 8013f0a:	ee20 0a08 	vmul.f32	s0, s0, s16
 8013f0e:	f7fe fe43 	bl	8012b98 <expf>
 8013f12:	ee20 8a08 	vmul.f32	s16, s0, s16
 8013f16:	ee28 0a00 	vmul.f32	s0, s16, s0
 8013f1a:	e7b7      	b.n	8013e8c <__ieee754_coshf+0x18>
 8013f1c:	ed9f 0a06 	vldr	s0, [pc, #24]	; 8013f38 <__ieee754_coshf+0xc4>
 8013f20:	ee20 0a00 	vmul.f32	s0, s0, s0
 8013f24:	e7b2      	b.n	8013e8c <__ieee754_coshf+0x18>
 8013f26:	bf00      	nop
 8013f28:	3eb17217 	.word	0x3eb17217
 8013f2c:	41afffff 	.word	0x41afffff
 8013f30:	42b17217 	.word	0x42b17217
 8013f34:	42b2d4fc 	.word	0x42b2d4fc
 8013f38:	7149f2ca 	.word	0x7149f2ca

08013f3c <__ieee754_fmodf>:
 8013f3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f3e:	ee10 6a90 	vmov	r6, s1
 8013f42:	f036 4500 	bics.w	r5, r6, #2147483648	; 0x80000000
 8013f46:	ee10 3a10 	vmov	r3, s0
 8013f4a:	d009      	beq.n	8013f60 <__ieee754_fmodf+0x24>
 8013f4c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8013f50:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8013f54:	ee10 7a10 	vmov	r7, s0
 8013f58:	da02      	bge.n	8013f60 <__ieee754_fmodf+0x24>
 8013f5a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8013f5e:	dd0a      	ble.n	8013f76 <__ieee754_fmodf+0x3a>
 8013f60:	ee07 3a90 	vmov	s15, r3
 8013f64:	ee67 0aa0 	vmul.f32	s1, s15, s1
 8013f68:	eec0 7aa0 	vdiv.f32	s15, s1, s1
 8013f6c:	ee17 3a90 	vmov	r3, s15
 8013f70:	ee00 3a10 	vmov	s0, r3
 8013f74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013f76:	42a9      	cmp	r1, r5
 8013f78:	dbfa      	blt.n	8013f70 <__ieee754_fmodf+0x34>
 8013f7a:	f003 4400 	and.w	r4, r3, #2147483648	; 0x80000000
 8013f7e:	d105      	bne.n	8013f8c <__ieee754_fmodf+0x50>
 8013f80:	4a30      	ldr	r2, [pc, #192]	; (8014044 <__ieee754_fmodf+0x108>)
 8013f82:	0fe3      	lsrs	r3, r4, #31
 8013f84:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8013f88:	681b      	ldr	r3, [r3, #0]
 8013f8a:	e7f1      	b.n	8013f70 <__ieee754_fmodf+0x34>
 8013f8c:	4b2e      	ldr	r3, [pc, #184]	; (8014048 <__ieee754_fmodf+0x10c>)
 8013f8e:	4299      	cmp	r1, r3
 8013f90:	dc3e      	bgt.n	8014010 <__ieee754_fmodf+0xd4>
 8013f92:	020a      	lsls	r2, r1, #8
 8013f94:	f06f 007d 	mvn.w	r0, #125	; 0x7d
 8013f98:	2a00      	cmp	r2, #0
 8013f9a:	dc36      	bgt.n	801400a <__ieee754_fmodf+0xce>
 8013f9c:	429d      	cmp	r5, r3
 8013f9e:	dc3a      	bgt.n	8014016 <__ieee754_fmodf+0xda>
 8013fa0:	022b      	lsls	r3, r5, #8
 8013fa2:	f06f 027d 	mvn.w	r2, #125	; 0x7d
 8013fa6:	005b      	lsls	r3, r3, #1
 8013fa8:	f102 32ff 	add.w	r2, r2, #4294967295
 8013fac:	d5fb      	bpl.n	8013fa6 <__ieee754_fmodf+0x6a>
 8013fae:	f110 0f7e 	cmn.w	r0, #126	; 0x7e
 8013fb2:	bfbb      	ittet	lt
 8013fb4:	f06f 037d 	mvnlt.w	r3, #125	; 0x7d
 8013fb8:	1a1b      	sublt	r3, r3, r0
 8013fba:	f3c7 0116 	ubfxge	r1, r7, #0, #23
 8013fbe:	4099      	lsllt	r1, r3
 8013fc0:	bfa8      	it	ge
 8013fc2:	f441 0100 	orrge.w	r1, r1, #8388608	; 0x800000
 8013fc6:	f112 0f7e 	cmn.w	r2, #126	; 0x7e
 8013fca:	bfb5      	itete	lt
 8013fcc:	f06f 037d 	mvnlt.w	r3, #125	; 0x7d
 8013fd0:	f3c6 0516 	ubfxge	r5, r6, #0, #23
 8013fd4:	1a9b      	sublt	r3, r3, r2
 8013fd6:	f445 0500 	orrge.w	r5, r5, #8388608	; 0x800000
 8013fda:	bfb8      	it	lt
 8013fdc:	409d      	lsllt	r5, r3
 8013fde:	1a80      	subs	r0, r0, r2
 8013fe0:	1b4b      	subs	r3, r1, r5
 8013fe2:	b9d8      	cbnz	r0, 801401c <__ieee754_fmodf+0xe0>
 8013fe4:	ea33 0323 	bics.w	r3, r3, r3, asr #32
 8013fe8:	bf28      	it	cs
 8013fea:	460b      	movcs	r3, r1
 8013fec:	2b00      	cmp	r3, #0
 8013fee:	d0c7      	beq.n	8013f80 <__ieee754_fmodf+0x44>
 8013ff0:	4915      	ldr	r1, [pc, #84]	; (8014048 <__ieee754_fmodf+0x10c>)
 8013ff2:	428b      	cmp	r3, r1
 8013ff4:	dd1a      	ble.n	801402c <__ieee754_fmodf+0xf0>
 8013ff6:	f112 0f7e 	cmn.w	r2, #126	; 0x7e
 8013ffa:	db1a      	blt.n	8014032 <__ieee754_fmodf+0xf6>
 8013ffc:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8014000:	4323      	orrs	r3, r4
 8014002:	327f      	adds	r2, #127	; 0x7f
 8014004:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8014008:	e7b2      	b.n	8013f70 <__ieee754_fmodf+0x34>
 801400a:	3801      	subs	r0, #1
 801400c:	0052      	lsls	r2, r2, #1
 801400e:	e7c3      	b.n	8013f98 <__ieee754_fmodf+0x5c>
 8014010:	15c8      	asrs	r0, r1, #23
 8014012:	387f      	subs	r0, #127	; 0x7f
 8014014:	e7c2      	b.n	8013f9c <__ieee754_fmodf+0x60>
 8014016:	15ea      	asrs	r2, r5, #23
 8014018:	3a7f      	subs	r2, #127	; 0x7f
 801401a:	e7c8      	b.n	8013fae <__ieee754_fmodf+0x72>
 801401c:	2b00      	cmp	r3, #0
 801401e:	da02      	bge.n	8014026 <__ieee754_fmodf+0xea>
 8014020:	0049      	lsls	r1, r1, #1
 8014022:	3801      	subs	r0, #1
 8014024:	e7dc      	b.n	8013fe0 <__ieee754_fmodf+0xa4>
 8014026:	d0ab      	beq.n	8013f80 <__ieee754_fmodf+0x44>
 8014028:	0059      	lsls	r1, r3, #1
 801402a:	e7fa      	b.n	8014022 <__ieee754_fmodf+0xe6>
 801402c:	005b      	lsls	r3, r3, #1
 801402e:	3a01      	subs	r2, #1
 8014030:	e7df      	b.n	8013ff2 <__ieee754_fmodf+0xb6>
 8014032:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8014036:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 801403a:	3282      	adds	r2, #130	; 0x82
 801403c:	4113      	asrs	r3, r2
 801403e:	4323      	orrs	r3, r4
 8014040:	e796      	b.n	8013f70 <__ieee754_fmodf+0x34>
 8014042:	bf00      	nop
 8014044:	080170a0 	.word	0x080170a0
 8014048:	007fffff 	.word	0x007fffff

0801404c <__ieee754_rem_pio2f>:
 801404c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801404e:	ee10 6a10 	vmov	r6, s0
 8014052:	4b86      	ldr	r3, [pc, #536]	; (801426c <__ieee754_rem_pio2f+0x220>)
 8014054:	f026 4400 	bic.w	r4, r6, #2147483648	; 0x80000000
 8014058:	429c      	cmp	r4, r3
 801405a:	b087      	sub	sp, #28
 801405c:	4605      	mov	r5, r0
 801405e:	dc05      	bgt.n	801406c <__ieee754_rem_pio2f+0x20>
 8014060:	2300      	movs	r3, #0
 8014062:	ed85 0a00 	vstr	s0, [r5]
 8014066:	6043      	str	r3, [r0, #4]
 8014068:	2000      	movs	r0, #0
 801406a:	e020      	b.n	80140ae <__ieee754_rem_pio2f+0x62>
 801406c:	4b80      	ldr	r3, [pc, #512]	; (8014270 <__ieee754_rem_pio2f+0x224>)
 801406e:	429c      	cmp	r4, r3
 8014070:	dc38      	bgt.n	80140e4 <__ieee754_rem_pio2f+0x98>
 8014072:	2e00      	cmp	r6, #0
 8014074:	f024 040f 	bic.w	r4, r4, #15
 8014078:	ed9f 7a7e 	vldr	s14, [pc, #504]	; 8014274 <__ieee754_rem_pio2f+0x228>
 801407c:	4b7e      	ldr	r3, [pc, #504]	; (8014278 <__ieee754_rem_pio2f+0x22c>)
 801407e:	dd18      	ble.n	80140b2 <__ieee754_rem_pio2f+0x66>
 8014080:	429c      	cmp	r4, r3
 8014082:	ee70 7a47 	vsub.f32	s15, s0, s14
 8014086:	bf09      	itett	eq
 8014088:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 801427c <__ieee754_rem_pio2f+0x230>
 801408c:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8014280 <__ieee754_rem_pio2f+0x234>
 8014090:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8014094:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8014284 <__ieee754_rem_pio2f+0x238>
 8014098:	ee77 6ac7 	vsub.f32	s13, s15, s14
 801409c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80140a0:	edc0 6a00 	vstr	s13, [r0]
 80140a4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80140a8:	edc0 7a01 	vstr	s15, [r0, #4]
 80140ac:	2001      	movs	r0, #1
 80140ae:	b007      	add	sp, #28
 80140b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80140b2:	429c      	cmp	r4, r3
 80140b4:	ee70 7a07 	vadd.f32	s15, s0, s14
 80140b8:	bf09      	itett	eq
 80140ba:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 801427c <__ieee754_rem_pio2f+0x230>
 80140be:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8014280 <__ieee754_rem_pio2f+0x234>
 80140c2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80140c6:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8014284 <__ieee754_rem_pio2f+0x238>
 80140ca:	ee77 6a87 	vadd.f32	s13, s15, s14
 80140ce:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80140d2:	edc0 6a00 	vstr	s13, [r0]
 80140d6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80140da:	edc0 7a01 	vstr	s15, [r0, #4]
 80140de:	f04f 30ff 	mov.w	r0, #4294967295
 80140e2:	e7e4      	b.n	80140ae <__ieee754_rem_pio2f+0x62>
 80140e4:	4b68      	ldr	r3, [pc, #416]	; (8014288 <__ieee754_rem_pio2f+0x23c>)
 80140e6:	429c      	cmp	r4, r3
 80140e8:	dc71      	bgt.n	80141ce <__ieee754_rem_pio2f+0x182>
 80140ea:	f7fe fdd3 	bl	8012c94 <fabsf>
 80140ee:	ed9f 7a67 	vldr	s14, [pc, #412]	; 801428c <__ieee754_rem_pio2f+0x240>
 80140f2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80140f6:	eee0 7a07 	vfma.f32	s15, s0, s14
 80140fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80140fe:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8014102:	ee17 0a90 	vmov	r0, s15
 8014106:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8014274 <__ieee754_rem_pio2f+0x228>
 801410a:	eeb1 7a46 	vneg.f32	s14, s12
 801410e:	eea7 0a27 	vfma.f32	s0, s14, s15
 8014112:	281f      	cmp	r0, #31
 8014114:	eddf 7a5a 	vldr	s15, [pc, #360]	; 8014280 <__ieee754_rem_pio2f+0x234>
 8014118:	ee66 7a27 	vmul.f32	s15, s12, s15
 801411c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8014120:	ee16 3a90 	vmov	r3, s13
 8014124:	dc1c      	bgt.n	8014160 <__ieee754_rem_pio2f+0x114>
 8014126:	1e47      	subs	r7, r0, #1
 8014128:	4959      	ldr	r1, [pc, #356]	; (8014290 <__ieee754_rem_pio2f+0x244>)
 801412a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801412e:	f024 02ff 	bic.w	r2, r4, #255	; 0xff
 8014132:	428a      	cmp	r2, r1
 8014134:	d014      	beq.n	8014160 <__ieee754_rem_pio2f+0x114>
 8014136:	602b      	str	r3, [r5, #0]
 8014138:	ed95 7a00 	vldr	s14, [r5]
 801413c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8014140:	2e00      	cmp	r6, #0
 8014142:	ee30 0a67 	vsub.f32	s0, s0, s15
 8014146:	ed85 0a01 	vstr	s0, [r5, #4]
 801414a:	dab0      	bge.n	80140ae <__ieee754_rem_pio2f+0x62>
 801414c:	eeb1 7a47 	vneg.f32	s14, s14
 8014150:	eeb1 0a40 	vneg.f32	s0, s0
 8014154:	ed85 7a00 	vstr	s14, [r5]
 8014158:	ed85 0a01 	vstr	s0, [r5, #4]
 801415c:	4240      	negs	r0, r0
 801415e:	e7a6      	b.n	80140ae <__ieee754_rem_pio2f+0x62>
 8014160:	15e4      	asrs	r4, r4, #23
 8014162:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8014166:	1aa2      	subs	r2, r4, r2
 8014168:	2a08      	cmp	r2, #8
 801416a:	dde4      	ble.n	8014136 <__ieee754_rem_pio2f+0xea>
 801416c:	eddf 7a43 	vldr	s15, [pc, #268]	; 801427c <__ieee754_rem_pio2f+0x230>
 8014170:	eef0 6a40 	vmov.f32	s13, s0
 8014174:	eee7 6a27 	vfma.f32	s13, s14, s15
 8014178:	ee30 0a66 	vsub.f32	s0, s0, s13
 801417c:	eea7 0a27 	vfma.f32	s0, s14, s15
 8014180:	eddf 7a40 	vldr	s15, [pc, #256]	; 8014284 <__ieee754_rem_pio2f+0x238>
 8014184:	ee96 0a27 	vfnms.f32	s0, s12, s15
 8014188:	ee76 5ac0 	vsub.f32	s11, s13, s0
 801418c:	eef0 7a40 	vmov.f32	s15, s0
 8014190:	ee15 3a90 	vmov	r3, s11
 8014194:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8014198:	1aa4      	subs	r4, r4, r2
 801419a:	2c19      	cmp	r4, #25
 801419c:	dc04      	bgt.n	80141a8 <__ieee754_rem_pio2f+0x15c>
 801419e:	edc5 5a00 	vstr	s11, [r5]
 80141a2:	eeb0 0a66 	vmov.f32	s0, s13
 80141a6:	e7c7      	b.n	8014138 <__ieee754_rem_pio2f+0xec>
 80141a8:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8014294 <__ieee754_rem_pio2f+0x248>
 80141ac:	eeb0 0a66 	vmov.f32	s0, s13
 80141b0:	eea7 0a25 	vfma.f32	s0, s14, s11
 80141b4:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80141b8:	eee7 7a25 	vfma.f32	s15, s14, s11
 80141bc:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8014298 <__ieee754_rem_pio2f+0x24c>
 80141c0:	eed6 7a07 	vfnms.f32	s15, s12, s14
 80141c4:	ee30 7a67 	vsub.f32	s14, s0, s15
 80141c8:	ed85 7a00 	vstr	s14, [r5]
 80141cc:	e7b4      	b.n	8014138 <__ieee754_rem_pio2f+0xec>
 80141ce:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 80141d2:	db06      	blt.n	80141e2 <__ieee754_rem_pio2f+0x196>
 80141d4:	ee70 7a40 	vsub.f32	s15, s0, s0
 80141d8:	edc0 7a01 	vstr	s15, [r0, #4]
 80141dc:	edc0 7a00 	vstr	s15, [r0]
 80141e0:	e742      	b.n	8014068 <__ieee754_rem_pio2f+0x1c>
 80141e2:	15e2      	asrs	r2, r4, #23
 80141e4:	3a86      	subs	r2, #134	; 0x86
 80141e6:	eba4 53c2 	sub.w	r3, r4, r2, lsl #23
 80141ea:	ee07 3a90 	vmov	s15, r3
 80141ee:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80141f2:	eddf 6a2a 	vldr	s13, [pc, #168]	; 801429c <__ieee754_rem_pio2f+0x250>
 80141f6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80141fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80141fe:	ed8d 7a03 	vstr	s14, [sp, #12]
 8014202:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014206:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801420a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801420e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014212:	ed8d 7a04 	vstr	s14, [sp, #16]
 8014216:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801421a:	eef5 7a40 	vcmp.f32	s15, #0.0
 801421e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014222:	edcd 7a05 	vstr	s15, [sp, #20]
 8014226:	d11e      	bne.n	8014266 <__ieee754_rem_pio2f+0x21a>
 8014228:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801422c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014230:	bf0c      	ite	eq
 8014232:	2301      	moveq	r3, #1
 8014234:	2302      	movne	r3, #2
 8014236:	491a      	ldr	r1, [pc, #104]	; (80142a0 <__ieee754_rem_pio2f+0x254>)
 8014238:	9101      	str	r1, [sp, #4]
 801423a:	2102      	movs	r1, #2
 801423c:	9100      	str	r1, [sp, #0]
 801423e:	a803      	add	r0, sp, #12
 8014240:	4629      	mov	r1, r5
 8014242:	f000 f8ff 	bl	8014444 <__kernel_rem_pio2f>
 8014246:	2e00      	cmp	r6, #0
 8014248:	f6bf af31 	bge.w	80140ae <__ieee754_rem_pio2f+0x62>
 801424c:	edd5 7a00 	vldr	s15, [r5]
 8014250:	eef1 7a67 	vneg.f32	s15, s15
 8014254:	edc5 7a00 	vstr	s15, [r5]
 8014258:	edd5 7a01 	vldr	s15, [r5, #4]
 801425c:	eef1 7a67 	vneg.f32	s15, s15
 8014260:	edc5 7a01 	vstr	s15, [r5, #4]
 8014264:	e77a      	b.n	801415c <__ieee754_rem_pio2f+0x110>
 8014266:	2303      	movs	r3, #3
 8014268:	e7e5      	b.n	8014236 <__ieee754_rem_pio2f+0x1ea>
 801426a:	bf00      	nop
 801426c:	3f490fd8 	.word	0x3f490fd8
 8014270:	4016cbe3 	.word	0x4016cbe3
 8014274:	3fc90f80 	.word	0x3fc90f80
 8014278:	3fc90fd0 	.word	0x3fc90fd0
 801427c:	37354400 	.word	0x37354400
 8014280:	37354443 	.word	0x37354443
 8014284:	2e85a308 	.word	0x2e85a308
 8014288:	43490f80 	.word	0x43490f80
 801428c:	3f22f984 	.word	0x3f22f984
 8014290:	080170a8 	.word	0x080170a8
 8014294:	2e85a300 	.word	0x2e85a300
 8014298:	248d3132 	.word	0x248d3132
 801429c:	43800000 	.word	0x43800000
 80142a0:	08017128 	.word	0x08017128

080142a4 <__ieee754_sinhf>:
 80142a4:	b510      	push	{r4, lr}
 80142a6:	ee10 3a10 	vmov	r3, s0
 80142aa:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
 80142ae:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 80142b2:	ed2d 8b02 	vpush	{d8}
 80142b6:	eef0 7a40 	vmov.f32	s15, s0
 80142ba:	db06      	blt.n	80142ca <__ieee754_sinhf+0x26>
 80142bc:	ee70 7a00 	vadd.f32	s15, s0, s0
 80142c0:	ecbd 8b02 	vpop	{d8}
 80142c4:	eeb0 0a67 	vmov.f32	s0, s15
 80142c8:	bd10      	pop	{r4, pc}
 80142ca:	2b00      	cmp	r3, #0
 80142cc:	4b28      	ldr	r3, [pc, #160]	; (8014370 <__ieee754_sinhf+0xcc>)
 80142ce:	eef6 8a00 	vmov.f32	s17, #96	; 0x3f000000  0.5
 80142d2:	eebe 8a00 	vmov.f32	s16, #224	; 0xbf000000 -0.5
 80142d6:	fe28 8a88 	vselge.f32	s16, s17, s16
 80142da:	429c      	cmp	r4, r3
 80142dc:	dc2a      	bgt.n	8014334 <__ieee754_sinhf+0x90>
 80142de:	f1b4 5f46 	cmp.w	r4, #830472192	; 0x31800000
 80142e2:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 80142e6:	da08      	bge.n	80142fa <__ieee754_sinhf+0x56>
 80142e8:	ed9f 7a22 	vldr	s14, [pc, #136]	; 8014374 <__ieee754_sinhf+0xd0>
 80142ec:	ee30 7a07 	vadd.f32	s14, s0, s14
 80142f0:	eeb4 7ae8 	vcmpe.f32	s14, s17
 80142f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142f8:	dce2      	bgt.n	80142c0 <__ieee754_sinhf+0x1c>
 80142fa:	eeb0 0a67 	vmov.f32	s0, s15
 80142fe:	f7fe fcc9 	bl	8012c94 <fabsf>
 8014302:	f000 fca5 	bl	8014c50 <expm1f>
 8014306:	f1b4 5f7e 	cmp.w	r4, #1065353216	; 0x3f800000
 801430a:	bfbb      	ittet	lt
 801430c:	ee20 7a00 	vmullt.f32	s14, s0, s0
 8014310:	ee70 8a28 	vaddlt.f32	s17, s0, s17
 8014314:	ee70 8a28 	vaddge.f32	s17, s0, s17
 8014318:	eec7 7a28 	vdivlt.f32	s15, s14, s17
 801431c:	bfad      	iteet	ge
 801431e:	eec0 7a28 	vdivge.f32	s15, s0, s17
 8014322:	eeb0 7a00 	vmovlt.f32	s14, #0	; 0x40000000  2.0
 8014326:	eed0 7a07 	vfnmslt.f32	s15, s0, s14
 801432a:	ee77 7a80 	vaddge.f32	s15, s15, s0
 801432e:	ee67 7a88 	vmul.f32	s15, s15, s16
 8014332:	e7c5      	b.n	80142c0 <__ieee754_sinhf+0x1c>
 8014334:	4b10      	ldr	r3, [pc, #64]	; (8014378 <__ieee754_sinhf+0xd4>)
 8014336:	429c      	cmp	r4, r3
 8014338:	dc06      	bgt.n	8014348 <__ieee754_sinhf+0xa4>
 801433a:	f7fe fcab 	bl	8012c94 <fabsf>
 801433e:	f7fe fc2b 	bl	8012b98 <expf>
 8014342:	ee60 7a08 	vmul.f32	s15, s0, s16
 8014346:	e7bb      	b.n	80142c0 <__ieee754_sinhf+0x1c>
 8014348:	4b0c      	ldr	r3, [pc, #48]	; (801437c <__ieee754_sinhf+0xd8>)
 801434a:	429c      	cmp	r4, r3
 801434c:	dc0a      	bgt.n	8014364 <__ieee754_sinhf+0xc0>
 801434e:	f7fe fca1 	bl	8012c94 <fabsf>
 8014352:	ee20 0a28 	vmul.f32	s0, s0, s17
 8014356:	f7fe fc1f 	bl	8012b98 <expf>
 801435a:	ee68 7a00 	vmul.f32	s15, s16, s0
 801435e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8014362:	e7ad      	b.n	80142c0 <__ieee754_sinhf+0x1c>
 8014364:	ed9f 7a03 	vldr	s14, [pc, #12]	; 8014374 <__ieee754_sinhf+0xd0>
 8014368:	ee60 7a07 	vmul.f32	s15, s0, s14
 801436c:	e7a8      	b.n	80142c0 <__ieee754_sinhf+0x1c>
 801436e:	bf00      	nop
 8014370:	41afffff 	.word	0x41afffff
 8014374:	7cf0bdc2 	.word	0x7cf0bdc2
 8014378:	42b17217 	.word	0x42b17217
 801437c:	42b2d4fc 	.word	0x42b2d4fc

08014380 <__ieee754_sqrtf>:
 8014380:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8014384:	4770      	bx	lr
	...

08014388 <__kernel_cosf>:
 8014388:	ee10 3a10 	vmov	r3, s0
 801438c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8014390:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8014394:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014398:	da05      	bge.n	80143a6 <__kernel_cosf+0x1e>
 801439a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 801439e:	ee17 2a90 	vmov	r2, s15
 80143a2:	2a00      	cmp	r2, #0
 80143a4:	d03b      	beq.n	801441e <__kernel_cosf+0x96>
 80143a6:	ee20 6a00 	vmul.f32	s12, s0, s0
 80143aa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80143ae:	eddf 5a1d 	vldr	s11, [pc, #116]	; 8014424 <__kernel_cosf+0x9c>
 80143b2:	4a1d      	ldr	r2, [pc, #116]	; (8014428 <__kernel_cosf+0xa0>)
 80143b4:	ee66 7a07 	vmul.f32	s15, s12, s14
 80143b8:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 801442c <__kernel_cosf+0xa4>
 80143bc:	eea6 7a25 	vfma.f32	s14, s12, s11
 80143c0:	4293      	cmp	r3, r2
 80143c2:	eddf 5a1b 	vldr	s11, [pc, #108]	; 8014430 <__kernel_cosf+0xa8>
 80143c6:	eee7 5a06 	vfma.f32	s11, s14, s12
 80143ca:	ed9f 7a1a 	vldr	s14, [pc, #104]	; 8014434 <__kernel_cosf+0xac>
 80143ce:	eea5 7a86 	vfma.f32	s14, s11, s12
 80143d2:	eddf 5a19 	vldr	s11, [pc, #100]	; 8014438 <__kernel_cosf+0xb0>
 80143d6:	eee7 5a06 	vfma.f32	s11, s14, s12
 80143da:	ed9f 7a18 	vldr	s14, [pc, #96]	; 801443c <__kernel_cosf+0xb4>
 80143de:	eea5 7a86 	vfma.f32	s14, s11, s12
 80143e2:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 80143e6:	ee27 7a06 	vmul.f32	s14, s14, s12
 80143ea:	eee6 0a07 	vfma.f32	s1, s12, s14
 80143ee:	dc04      	bgt.n	80143fa <__kernel_cosf+0x72>
 80143f0:	ee77 0ae0 	vsub.f32	s1, s15, s1
 80143f4:	ee36 0ae0 	vsub.f32	s0, s13, s1
 80143f8:	4770      	bx	lr
 80143fa:	4a11      	ldr	r2, [pc, #68]	; (8014440 <__kernel_cosf+0xb8>)
 80143fc:	4293      	cmp	r3, r2
 80143fe:	bfda      	itte	le
 8014400:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8014404:	ee07 3a10 	vmovle	s14, r3
 8014408:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 801440c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014410:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8014414:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8014418:	ee30 0a67 	vsub.f32	s0, s0, s15
 801441c:	4770      	bx	lr
 801441e:	eeb0 0a66 	vmov.f32	s0, s13
 8014422:	4770      	bx	lr
 8014424:	ad47d74e 	.word	0xad47d74e
 8014428:	3e999999 	.word	0x3e999999
 801442c:	310f74f6 	.word	0x310f74f6
 8014430:	b493f27c 	.word	0xb493f27c
 8014434:	37d00d01 	.word	0x37d00d01
 8014438:	bab60b61 	.word	0xbab60b61
 801443c:	3d2aaaab 	.word	0x3d2aaaab
 8014440:	3f480000 	.word	0x3f480000

08014444 <__kernel_rem_pio2f>:
 8014444:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014448:	ed2d 8b04 	vpush	{d8-d9}
 801444c:	b0d7      	sub	sp, #348	; 0x15c
 801444e:	469b      	mov	fp, r3
 8014450:	460e      	mov	r6, r1
 8014452:	4bbe      	ldr	r3, [pc, #760]	; (801474c <__kernel_rem_pio2f+0x308>)
 8014454:	9964      	ldr	r1, [sp, #400]	; 0x190
 8014456:	9002      	str	r0, [sp, #8]
 8014458:	f853 9021 	ldr.w	r9, [r3, r1, lsl #2]
 801445c:	9865      	ldr	r0, [sp, #404]	; 0x194
 801445e:	ed9f 7abf 	vldr	s14, [pc, #764]	; 801475c <__kernel_rem_pio2f+0x318>
 8014462:	1ed1      	subs	r1, r2, #3
 8014464:	2308      	movs	r3, #8
 8014466:	fb91 f1f3 	sdiv	r1, r1, r3
 801446a:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801446e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8014472:	1c4c      	adds	r4, r1, #1
 8014474:	eba2 04c4 	sub.w	r4, r2, r4, lsl #3
 8014478:	eba1 050a 	sub.w	r5, r1, sl
 801447c:	aa1a      	add	r2, sp, #104	; 0x68
 801447e:	eb09 070a 	add.w	r7, r9, sl
 8014482:	eb00 0c85 	add.w	ip, r0, r5, lsl #2
 8014486:	4696      	mov	lr, r2
 8014488:	2300      	movs	r3, #0
 801448a:	42bb      	cmp	r3, r7
 801448c:	dd0f      	ble.n	80144ae <__kernel_rem_pio2f+0x6a>
 801448e:	af42      	add	r7, sp, #264	; 0x108
 8014490:	2200      	movs	r2, #0
 8014492:	454a      	cmp	r2, r9
 8014494:	dc27      	bgt.n	80144e6 <__kernel_rem_pio2f+0xa2>
 8014496:	f10d 0c68 	add.w	ip, sp, #104	; 0x68
 801449a:	eb0b 0302 	add.w	r3, fp, r2
 801449e:	eb0c 0383 	add.w	r3, ip, r3, lsl #2
 80144a2:	9d02      	ldr	r5, [sp, #8]
 80144a4:	eddf 7aad 	vldr	s15, [pc, #692]	; 801475c <__kernel_rem_pio2f+0x318>
 80144a8:	f04f 0c00 	mov.w	ip, #0
 80144ac:	e015      	b.n	80144da <__kernel_rem_pio2f+0x96>
 80144ae:	42dd      	cmn	r5, r3
 80144b0:	bf5d      	ittte	pl
 80144b2:	f85c 2023 	ldrpl.w	r2, [ip, r3, lsl #2]
 80144b6:	ee07 2a90 	vmovpl	s15, r2
 80144ba:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80144be:	eef0 7a47 	vmovmi.f32	s15, s14
 80144c2:	ecee 7a01 	vstmia	lr!, {s15}
 80144c6:	3301      	adds	r3, #1
 80144c8:	e7df      	b.n	801448a <__kernel_rem_pio2f+0x46>
 80144ca:	ecf5 6a01 	vldmia	r5!, {s13}
 80144ce:	ed33 7a01 	vldmdb	r3!, {s14}
 80144d2:	eee6 7a87 	vfma.f32	s15, s13, s14
 80144d6:	f10c 0c01 	add.w	ip, ip, #1
 80144da:	45d4      	cmp	ip, sl
 80144dc:	ddf5      	ble.n	80144ca <__kernel_rem_pio2f+0x86>
 80144de:	ece7 7a01 	vstmia	r7!, {s15}
 80144e2:	3201      	adds	r2, #1
 80144e4:	e7d5      	b.n	8014492 <__kernel_rem_pio2f+0x4e>
 80144e6:	ab06      	add	r3, sp, #24
 80144e8:	eb03 0389 	add.w	r3, r3, r9, lsl #2
 80144ec:	9304      	str	r3, [sp, #16]
 80144ee:	eddf 8a9a 	vldr	s17, [pc, #616]	; 8014758 <__kernel_rem_pio2f+0x314>
 80144f2:	ed9f 9a98 	vldr	s18, [pc, #608]	; 8014754 <__kernel_rem_pio2f+0x310>
 80144f6:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80144fa:	9303      	str	r3, [sp, #12]
 80144fc:	464d      	mov	r5, r9
 80144fe:	ab56      	add	r3, sp, #344	; 0x158
 8014500:	f105 4780 	add.w	r7, r5, #1073741824	; 0x40000000
 8014504:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8014508:	3f01      	subs	r7, #1
 801450a:	ed13 0a14 	vldr	s0, [r3, #-80]	; 0xffffffb0
 801450e:	00bf      	lsls	r7, r7, #2
 8014510:	ab56      	add	r3, sp, #344	; 0x158
 8014512:	19da      	adds	r2, r3, r7
 8014514:	3a4c      	subs	r2, #76	; 0x4c
 8014516:	2300      	movs	r3, #0
 8014518:	1ae9      	subs	r1, r5, r3
 801451a:	2900      	cmp	r1, #0
 801451c:	dc4c      	bgt.n	80145b8 <__kernel_rem_pio2f+0x174>
 801451e:	4620      	mov	r0, r4
 8014520:	f000 fcca 	bl	8014eb8 <scalbnf>
 8014524:	eeb0 8a40 	vmov.f32	s16, s0
 8014528:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 801452c:	ee28 0a00 	vmul.f32	s0, s16, s0
 8014530:	f7fe fbb8 	bl	8012ca4 <floorf>
 8014534:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8014538:	eea0 8a67 	vfms.f32	s16, s0, s15
 801453c:	2c00      	cmp	r4, #0
 801453e:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8014542:	edcd 7a01 	vstr	s15, [sp, #4]
 8014546:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801454a:	ee38 8a67 	vsub.f32	s16, s16, s15
 801454e:	dd48      	ble.n	80145e2 <__kernel_rem_pio2f+0x19e>
 8014550:	1e69      	subs	r1, r5, #1
 8014552:	ab06      	add	r3, sp, #24
 8014554:	f1c4 0008 	rsb	r0, r4, #8
 8014558:	f853 c021 	ldr.w	ip, [r3, r1, lsl #2]
 801455c:	9a01      	ldr	r2, [sp, #4]
 801455e:	fa4c f300 	asr.w	r3, ip, r0
 8014562:	441a      	add	r2, r3
 8014564:	4083      	lsls	r3, r0
 8014566:	9201      	str	r2, [sp, #4]
 8014568:	ebac 0203 	sub.w	r2, ip, r3
 801456c:	ab06      	add	r3, sp, #24
 801456e:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8014572:	f1c4 0307 	rsb	r3, r4, #7
 8014576:	fa42 f803 	asr.w	r8, r2, r3
 801457a:	f1b8 0f00 	cmp.w	r8, #0
 801457e:	dd41      	ble.n	8014604 <__kernel_rem_pio2f+0x1c0>
 8014580:	9b01      	ldr	r3, [sp, #4]
 8014582:	2000      	movs	r0, #0
 8014584:	3301      	adds	r3, #1
 8014586:	9301      	str	r3, [sp, #4]
 8014588:	4601      	mov	r1, r0
 801458a:	4285      	cmp	r5, r0
 801458c:	dc6d      	bgt.n	801466a <__kernel_rem_pio2f+0x226>
 801458e:	2c00      	cmp	r4, #0
 8014590:	dd04      	ble.n	801459c <__kernel_rem_pio2f+0x158>
 8014592:	2c01      	cmp	r4, #1
 8014594:	d07e      	beq.n	8014694 <__kernel_rem_pio2f+0x250>
 8014596:	2c02      	cmp	r4, #2
 8014598:	f000 8086 	beq.w	80146a8 <__kernel_rem_pio2f+0x264>
 801459c:	f1b8 0f02 	cmp.w	r8, #2
 80145a0:	d130      	bne.n	8014604 <__kernel_rem_pio2f+0x1c0>
 80145a2:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80145a6:	ee30 8a48 	vsub.f32	s16, s0, s16
 80145aa:	b359      	cbz	r1, 8014604 <__kernel_rem_pio2f+0x1c0>
 80145ac:	4620      	mov	r0, r4
 80145ae:	f000 fc83 	bl	8014eb8 <scalbnf>
 80145b2:	ee38 8a40 	vsub.f32	s16, s16, s0
 80145b6:	e025      	b.n	8014604 <__kernel_rem_pio2f+0x1c0>
 80145b8:	ee60 7a28 	vmul.f32	s15, s0, s17
 80145bc:	a806      	add	r0, sp, #24
 80145be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80145c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80145c6:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80145ca:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80145ce:	ee10 1a10 	vmov	r1, s0
 80145d2:	ed32 0a01 	vldmdb	r2!, {s0}
 80145d6:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
 80145da:	ee37 0a80 	vadd.f32	s0, s15, s0
 80145de:	3301      	adds	r3, #1
 80145e0:	e79a      	b.n	8014518 <__kernel_rem_pio2f+0xd4>
 80145e2:	d106      	bne.n	80145f2 <__kernel_rem_pio2f+0x1ae>
 80145e4:	1e6b      	subs	r3, r5, #1
 80145e6:	aa06      	add	r2, sp, #24
 80145e8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80145ec:	ea4f 2822 	mov.w	r8, r2, asr #8
 80145f0:	e7c3      	b.n	801457a <__kernel_rem_pio2f+0x136>
 80145f2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80145f6:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80145fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145fe:	da31      	bge.n	8014664 <__kernel_rem_pio2f+0x220>
 8014600:	f04f 0800 	mov.w	r8, #0
 8014604:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8014608:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801460c:	f040 80a8 	bne.w	8014760 <__kernel_rem_pio2f+0x31c>
 8014610:	1e6b      	subs	r3, r5, #1
 8014612:	4618      	mov	r0, r3
 8014614:	2200      	movs	r2, #0
 8014616:	4548      	cmp	r0, r9
 8014618:	da4d      	bge.n	80146b6 <__kernel_rem_pio2f+0x272>
 801461a:	2a00      	cmp	r2, #0
 801461c:	f000 8087 	beq.w	801472e <__kernel_rem_pio2f+0x2ea>
 8014620:	aa06      	add	r2, sp, #24
 8014622:	3c08      	subs	r4, #8
 8014624:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8014628:	2900      	cmp	r1, #0
 801462a:	f000 808d 	beq.w	8014748 <__kernel_rem_pio2f+0x304>
 801462e:	4620      	mov	r0, r4
 8014630:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8014634:	9302      	str	r3, [sp, #8]
 8014636:	f000 fc3f 	bl	8014eb8 <scalbnf>
 801463a:	9b02      	ldr	r3, [sp, #8]
 801463c:	ed9f 7a46 	vldr	s14, [pc, #280]	; 8014758 <__kernel_rem_pio2f+0x314>
 8014640:	0099      	lsls	r1, r3, #2
 8014642:	aa42      	add	r2, sp, #264	; 0x108
 8014644:	1850      	adds	r0, r2, r1
 8014646:	1d05      	adds	r5, r0, #4
 8014648:	461c      	mov	r4, r3
 801464a:	2c00      	cmp	r4, #0
 801464c:	f280 80b8 	bge.w	80147c0 <__kernel_rem_pio2f+0x37c>
 8014650:	2500      	movs	r5, #0
 8014652:	1b5c      	subs	r4, r3, r5
 8014654:	2c00      	cmp	r4, #0
 8014656:	f2c0 80d8 	blt.w	801480a <__kernel_rem_pio2f+0x3c6>
 801465a:	4f3d      	ldr	r7, [pc, #244]	; (8014750 <__kernel_rem_pio2f+0x30c>)
 801465c:	eddf 7a3f 	vldr	s15, [pc, #252]	; 801475c <__kernel_rem_pio2f+0x318>
 8014660:	2400      	movs	r4, #0
 8014662:	e0c6      	b.n	80147f2 <__kernel_rem_pio2f+0x3ae>
 8014664:	f04f 0802 	mov.w	r8, #2
 8014668:	e78a      	b.n	8014580 <__kernel_rem_pio2f+0x13c>
 801466a:	ab06      	add	r3, sp, #24
 801466c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8014670:	b949      	cbnz	r1, 8014686 <__kernel_rem_pio2f+0x242>
 8014672:	b12b      	cbz	r3, 8014680 <__kernel_rem_pio2f+0x23c>
 8014674:	aa06      	add	r2, sp, #24
 8014676:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
 801467a:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 801467e:	2301      	movs	r3, #1
 8014680:	3001      	adds	r0, #1
 8014682:	4619      	mov	r1, r3
 8014684:	e781      	b.n	801458a <__kernel_rem_pio2f+0x146>
 8014686:	aa06      	add	r2, sp, #24
 8014688:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 801468c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8014690:	460b      	mov	r3, r1
 8014692:	e7f5      	b.n	8014680 <__kernel_rem_pio2f+0x23c>
 8014694:	1e68      	subs	r0, r5, #1
 8014696:	ab06      	add	r3, sp, #24
 8014698:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 801469c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80146a0:	aa06      	add	r2, sp, #24
 80146a2:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 80146a6:	e779      	b.n	801459c <__kernel_rem_pio2f+0x158>
 80146a8:	1e68      	subs	r0, r5, #1
 80146aa:	ab06      	add	r3, sp, #24
 80146ac:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80146b0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80146b4:	e7f4      	b.n	80146a0 <__kernel_rem_pio2f+0x25c>
 80146b6:	a906      	add	r1, sp, #24
 80146b8:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80146bc:	3801      	subs	r0, #1
 80146be:	430a      	orrs	r2, r1
 80146c0:	e7a9      	b.n	8014616 <__kernel_rem_pio2f+0x1d2>
 80146c2:	f10c 0c01 	add.w	ip, ip, #1
 80146c6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80146ca:	2a00      	cmp	r2, #0
 80146cc:	d0f9      	beq.n	80146c2 <__kernel_rem_pio2f+0x27e>
 80146ce:	eb0b 0305 	add.w	r3, fp, r5
 80146d2:	aa1a      	add	r2, sp, #104	; 0x68
 80146d4:	009b      	lsls	r3, r3, #2
 80146d6:	1898      	adds	r0, r3, r2
 80146d8:	3004      	adds	r0, #4
 80146da:	1c69      	adds	r1, r5, #1
 80146dc:	3704      	adds	r7, #4
 80146de:	2200      	movs	r2, #0
 80146e0:	4465      	add	r5, ip
 80146e2:	9005      	str	r0, [sp, #20]
 80146e4:	428d      	cmp	r5, r1
 80146e6:	f6ff af0a 	blt.w	80144fe <__kernel_rem_pio2f+0xba>
 80146ea:	a81a      	add	r0, sp, #104	; 0x68
 80146ec:	eb02 0c03 	add.w	ip, r2, r3
 80146f0:	4484      	add	ip, r0
 80146f2:	9803      	ldr	r0, [sp, #12]
 80146f4:	f8dd e008 	ldr.w	lr, [sp, #8]
 80146f8:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 80146fc:	9001      	str	r0, [sp, #4]
 80146fe:	ee07 0a90 	vmov	s15, r0
 8014702:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014706:	9805      	ldr	r0, [sp, #20]
 8014708:	edcc 7a00 	vstr	s15, [ip]
 801470c:	eddf 7a13 	vldr	s15, [pc, #76]	; 801475c <__kernel_rem_pio2f+0x318>
 8014710:	eb00 0802 	add.w	r8, r0, r2
 8014714:	f04f 0c00 	mov.w	ip, #0
 8014718:	45d4      	cmp	ip, sl
 801471a:	dd0c      	ble.n	8014736 <__kernel_rem_pio2f+0x2f2>
 801471c:	eb02 0c07 	add.w	ip, r2, r7
 8014720:	a842      	add	r0, sp, #264	; 0x108
 8014722:	4484      	add	ip, r0
 8014724:	edcc 7a01 	vstr	s15, [ip, #4]
 8014728:	3101      	adds	r1, #1
 801472a:	3204      	adds	r2, #4
 801472c:	e7da      	b.n	80146e4 <__kernel_rem_pio2f+0x2a0>
 801472e:	9b04      	ldr	r3, [sp, #16]
 8014730:	f04f 0c01 	mov.w	ip, #1
 8014734:	e7c7      	b.n	80146c6 <__kernel_rem_pio2f+0x282>
 8014736:	ecfe 6a01 	vldmia	lr!, {s13}
 801473a:	ed38 7a01 	vldmdb	r8!, {s14}
 801473e:	f10c 0c01 	add.w	ip, ip, #1
 8014742:	eee6 7a87 	vfma.f32	s15, s13, s14
 8014746:	e7e7      	b.n	8014718 <__kernel_rem_pio2f+0x2d4>
 8014748:	3b01      	subs	r3, #1
 801474a:	e769      	b.n	8014620 <__kernel_rem_pio2f+0x1dc>
 801474c:	0801746c 	.word	0x0801746c
 8014750:	08017440 	.word	0x08017440
 8014754:	43800000 	.word	0x43800000
 8014758:	3b800000 	.word	0x3b800000
 801475c:	00000000 	.word	0x00000000
 8014760:	4260      	negs	r0, r4
 8014762:	eeb0 0a48 	vmov.f32	s0, s16
 8014766:	f000 fba7 	bl	8014eb8 <scalbnf>
 801476a:	ed1f 7a06 	vldr	s14, [pc, #-24]	; 8014754 <__kernel_rem_pio2f+0x310>
 801476e:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8014772:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014776:	db1a      	blt.n	80147ae <__kernel_rem_pio2f+0x36a>
 8014778:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8014758 <__kernel_rem_pio2f+0x314>
 801477c:	ee60 7a27 	vmul.f32	s15, s0, s15
 8014780:	aa06      	add	r2, sp, #24
 8014782:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014786:	a906      	add	r1, sp, #24
 8014788:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801478c:	3408      	adds	r4, #8
 801478e:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8014792:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014796:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801479a:	ee10 3a10 	vmov	r3, s0
 801479e:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
 80147a2:	1c6b      	adds	r3, r5, #1
 80147a4:	ee17 2a90 	vmov	r2, s15
 80147a8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80147ac:	e73f      	b.n	801462e <__kernel_rem_pio2f+0x1ea>
 80147ae:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80147b2:	aa06      	add	r2, sp, #24
 80147b4:	ee10 3a10 	vmov	r3, s0
 80147b8:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
 80147bc:	462b      	mov	r3, r5
 80147be:	e736      	b.n	801462e <__kernel_rem_pio2f+0x1ea>
 80147c0:	aa06      	add	r2, sp, #24
 80147c2:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 80147c6:	9202      	str	r2, [sp, #8]
 80147c8:	ee07 2a90 	vmov	s15, r2
 80147cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80147d0:	3c01      	subs	r4, #1
 80147d2:	ee67 7a80 	vmul.f32	s15, s15, s0
 80147d6:	ee20 0a07 	vmul.f32	s0, s0, s14
 80147da:	ed65 7a01 	vstmdb	r5!, {s15}
 80147de:	e734      	b.n	801464a <__kernel_rem_pio2f+0x206>
 80147e0:	eb00 0c84 	add.w	ip, r0, r4, lsl #2
 80147e4:	ecf7 6a01 	vldmia	r7!, {s13}
 80147e8:	ed9c 7a00 	vldr	s14, [ip]
 80147ec:	eee6 7a87 	vfma.f32	s15, s13, s14
 80147f0:	3401      	adds	r4, #1
 80147f2:	454c      	cmp	r4, r9
 80147f4:	dc01      	bgt.n	80147fa <__kernel_rem_pio2f+0x3b6>
 80147f6:	42a5      	cmp	r5, r4
 80147f8:	daf2      	bge.n	80147e0 <__kernel_rem_pio2f+0x39c>
 80147fa:	aa56      	add	r2, sp, #344	; 0x158
 80147fc:	eb02 0485 	add.w	r4, r2, r5, lsl #2
 8014800:	ed44 7a28 	vstr	s15, [r4, #-160]	; 0xffffff60
 8014804:	3501      	adds	r5, #1
 8014806:	3804      	subs	r0, #4
 8014808:	e723      	b.n	8014652 <__kernel_rem_pio2f+0x20e>
 801480a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801480c:	2a03      	cmp	r2, #3
 801480e:	d84d      	bhi.n	80148ac <__kernel_rem_pio2f+0x468>
 8014810:	e8df f002 	tbb	[pc, r2]
 8014814:	021f1f3e 	.word	0x021f1f3e
 8014818:	aa56      	add	r2, sp, #344	; 0x158
 801481a:	4411      	add	r1, r2
 801481c:	399c      	subs	r1, #156	; 0x9c
 801481e:	4608      	mov	r0, r1
 8014820:	461c      	mov	r4, r3
 8014822:	2c00      	cmp	r4, #0
 8014824:	dc5f      	bgt.n	80148e6 <__kernel_rem_pio2f+0x4a2>
 8014826:	4608      	mov	r0, r1
 8014828:	461c      	mov	r4, r3
 801482a:	2c01      	cmp	r4, #1
 801482c:	dc6b      	bgt.n	8014906 <__kernel_rem_pio2f+0x4c2>
 801482e:	ed5f 7a35 	vldr	s15, [pc, #-212]	; 801475c <__kernel_rem_pio2f+0x318>
 8014832:	2b01      	cmp	r3, #1
 8014834:	dc77      	bgt.n	8014926 <__kernel_rem_pio2f+0x4e2>
 8014836:	eddd 6a2e 	vldr	s13, [sp, #184]	; 0xb8
 801483a:	ed9d 7a2f 	vldr	s14, [sp, #188]	; 0xbc
 801483e:	f1b8 0f00 	cmp.w	r8, #0
 8014842:	d176      	bne.n	8014932 <__kernel_rem_pio2f+0x4ee>
 8014844:	edc6 6a00 	vstr	s13, [r6]
 8014848:	ed86 7a01 	vstr	s14, [r6, #4]
 801484c:	edc6 7a02 	vstr	s15, [r6, #8]
 8014850:	e02c      	b.n	80148ac <__kernel_rem_pio2f+0x468>
 8014852:	aa56      	add	r2, sp, #344	; 0x158
 8014854:	4411      	add	r1, r2
 8014856:	ed1f 7a3f 	vldr	s14, [pc, #-252]	; 801475c <__kernel_rem_pio2f+0x318>
 801485a:	399c      	subs	r1, #156	; 0x9c
 801485c:	4618      	mov	r0, r3
 801485e:	2800      	cmp	r0, #0
 8014860:	da32      	bge.n	80148c8 <__kernel_rem_pio2f+0x484>
 8014862:	f1b8 0f00 	cmp.w	r8, #0
 8014866:	d035      	beq.n	80148d4 <__kernel_rem_pio2f+0x490>
 8014868:	eef1 7a47 	vneg.f32	s15, s14
 801486c:	edc6 7a00 	vstr	s15, [r6]
 8014870:	eddd 7a2e 	vldr	s15, [sp, #184]	; 0xb8
 8014874:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014878:	a82f      	add	r0, sp, #188	; 0xbc
 801487a:	2101      	movs	r1, #1
 801487c:	428b      	cmp	r3, r1
 801487e:	da2c      	bge.n	80148da <__kernel_rem_pio2f+0x496>
 8014880:	f1b8 0f00 	cmp.w	r8, #0
 8014884:	d001      	beq.n	801488a <__kernel_rem_pio2f+0x446>
 8014886:	eef1 7a67 	vneg.f32	s15, s15
 801488a:	edc6 7a01 	vstr	s15, [r6, #4]
 801488e:	e00d      	b.n	80148ac <__kernel_rem_pio2f+0x468>
 8014890:	aa56      	add	r2, sp, #344	; 0x158
 8014892:	4411      	add	r1, r2
 8014894:	ed5f 7a4f 	vldr	s15, [pc, #-316]	; 801475c <__kernel_rem_pio2f+0x318>
 8014898:	399c      	subs	r1, #156	; 0x9c
 801489a:	2b00      	cmp	r3, #0
 801489c:	da0e      	bge.n	80148bc <__kernel_rem_pio2f+0x478>
 801489e:	f1b8 0f00 	cmp.w	r8, #0
 80148a2:	d001      	beq.n	80148a8 <__kernel_rem_pio2f+0x464>
 80148a4:	eef1 7a67 	vneg.f32	s15, s15
 80148a8:	edc6 7a00 	vstr	s15, [r6]
 80148ac:	9b01      	ldr	r3, [sp, #4]
 80148ae:	f003 0007 	and.w	r0, r3, #7
 80148b2:	b057      	add	sp, #348	; 0x15c
 80148b4:	ecbd 8b04 	vpop	{d8-d9}
 80148b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80148bc:	ed31 7a01 	vldmdb	r1!, {s14}
 80148c0:	3b01      	subs	r3, #1
 80148c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80148c6:	e7e8      	b.n	801489a <__kernel_rem_pio2f+0x456>
 80148c8:	ed71 7a01 	vldmdb	r1!, {s15}
 80148cc:	3801      	subs	r0, #1
 80148ce:	ee37 7a27 	vadd.f32	s14, s14, s15
 80148d2:	e7c4      	b.n	801485e <__kernel_rem_pio2f+0x41a>
 80148d4:	eef0 7a47 	vmov.f32	s15, s14
 80148d8:	e7c8      	b.n	801486c <__kernel_rem_pio2f+0x428>
 80148da:	ecb0 7a01 	vldmia	r0!, {s14}
 80148de:	3101      	adds	r1, #1
 80148e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80148e4:	e7ca      	b.n	801487c <__kernel_rem_pio2f+0x438>
 80148e6:	ed50 7a02 	vldr	s15, [r0, #-8]
 80148ea:	ed70 6a01 	vldmdb	r0!, {s13}
 80148ee:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80148f2:	3c01      	subs	r4, #1
 80148f4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80148f8:	ed00 7a01 	vstr	s14, [r0, #-4]
 80148fc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014900:	edc0 7a00 	vstr	s15, [r0]
 8014904:	e78d      	b.n	8014822 <__kernel_rem_pio2f+0x3de>
 8014906:	ed50 7a02 	vldr	s15, [r0, #-8]
 801490a:	ed70 6a01 	vldmdb	r0!, {s13}
 801490e:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8014912:	3c01      	subs	r4, #1
 8014914:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014918:	ed00 7a01 	vstr	s14, [r0, #-4]
 801491c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014920:	edc0 7a00 	vstr	s15, [r0]
 8014924:	e781      	b.n	801482a <__kernel_rem_pio2f+0x3e6>
 8014926:	ed31 7a01 	vldmdb	r1!, {s14}
 801492a:	3b01      	subs	r3, #1
 801492c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014930:	e77f      	b.n	8014832 <__kernel_rem_pio2f+0x3ee>
 8014932:	eef1 6a66 	vneg.f32	s13, s13
 8014936:	eeb1 7a47 	vneg.f32	s14, s14
 801493a:	edc6 6a00 	vstr	s13, [r6]
 801493e:	ed86 7a01 	vstr	s14, [r6, #4]
 8014942:	eef1 7a67 	vneg.f32	s15, s15
 8014946:	e781      	b.n	801484c <__kernel_rem_pio2f+0x408>

08014948 <__kernel_sinf>:
 8014948:	ee10 3a10 	vmov	r3, s0
 801494c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8014950:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8014954:	da04      	bge.n	8014960 <__kernel_sinf+0x18>
 8014956:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 801495a:	ee17 3a90 	vmov	r3, s15
 801495e:	b35b      	cbz	r3, 80149b8 <__kernel_sinf+0x70>
 8014960:	ee20 7a00 	vmul.f32	s14, s0, s0
 8014964:	eddf 7a15 	vldr	s15, [pc, #84]	; 80149bc <__kernel_sinf+0x74>
 8014968:	ed9f 6a15 	vldr	s12, [pc, #84]	; 80149c0 <__kernel_sinf+0x78>
 801496c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8014970:	eddf 7a14 	vldr	s15, [pc, #80]	; 80149c4 <__kernel_sinf+0x7c>
 8014974:	eee6 7a07 	vfma.f32	s15, s12, s14
 8014978:	ed9f 6a13 	vldr	s12, [pc, #76]	; 80149c8 <__kernel_sinf+0x80>
 801497c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8014980:	eddf 7a12 	vldr	s15, [pc, #72]	; 80149cc <__kernel_sinf+0x84>
 8014984:	ee60 6a07 	vmul.f32	s13, s0, s14
 8014988:	eee6 7a07 	vfma.f32	s15, s12, s14
 801498c:	b930      	cbnz	r0, 801499c <__kernel_sinf+0x54>
 801498e:	ed9f 6a10 	vldr	s12, [pc, #64]	; 80149d0 <__kernel_sinf+0x88>
 8014992:	eea7 6a27 	vfma.f32	s12, s14, s15
 8014996:	eea6 0a26 	vfma.f32	s0, s12, s13
 801499a:	4770      	bx	lr
 801499c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80149a0:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80149a4:	eee0 7a86 	vfma.f32	s15, s1, s12
 80149a8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80149ac:	eddf 7a09 	vldr	s15, [pc, #36]	; 80149d4 <__kernel_sinf+0x8c>
 80149b0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80149b4:	ee30 0a60 	vsub.f32	s0, s0, s1
 80149b8:	4770      	bx	lr
 80149ba:	bf00      	nop
 80149bc:	2f2ec9d3 	.word	0x2f2ec9d3
 80149c0:	b2d72f34 	.word	0xb2d72f34
 80149c4:	3638ef1b 	.word	0x3638ef1b
 80149c8:	b9500d01 	.word	0xb9500d01
 80149cc:	3c088889 	.word	0x3c088889
 80149d0:	be2aaaab 	.word	0xbe2aaaab
 80149d4:	3e2aaaab 	.word	0x3e2aaaab

080149d8 <__kernel_tanf>:
 80149d8:	b508      	push	{r3, lr}
 80149da:	ee10 3a10 	vmov	r3, s0
 80149de:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 80149e2:	f1b2 5f46 	cmp.w	r2, #830472192	; 0x31800000
 80149e6:	eef0 7a40 	vmov.f32	s15, s0
 80149ea:	da17      	bge.n	8014a1c <__kernel_tanf+0x44>
 80149ec:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80149f0:	ee17 1a10 	vmov	r1, s14
 80149f4:	bb41      	cbnz	r1, 8014a48 <__kernel_tanf+0x70>
 80149f6:	1c43      	adds	r3, r0, #1
 80149f8:	4313      	orrs	r3, r2
 80149fa:	d108      	bne.n	8014a0e <__kernel_tanf+0x36>
 80149fc:	f7fe f94a 	bl	8012c94 <fabsf>
 8014a00:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014a04:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014a08:	eeb0 0a67 	vmov.f32	s0, s15
 8014a0c:	bd08      	pop	{r3, pc}
 8014a0e:	2801      	cmp	r0, #1
 8014a10:	d0fa      	beq.n	8014a08 <__kernel_tanf+0x30>
 8014a12:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8014a16:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014a1a:	e7f5      	b.n	8014a08 <__kernel_tanf+0x30>
 8014a1c:	494e      	ldr	r1, [pc, #312]	; (8014b58 <__kernel_tanf+0x180>)
 8014a1e:	428a      	cmp	r2, r1
 8014a20:	dd12      	ble.n	8014a48 <__kernel_tanf+0x70>
 8014a22:	2b00      	cmp	r3, #0
 8014a24:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 8014b5c <__kernel_tanf+0x184>
 8014a28:	bfb8      	it	lt
 8014a2a:	eef1 7a40 	vneglt.f32	s15, s0
 8014a2e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8014a32:	ed9f 7a4b 	vldr	s14, [pc, #300]	; 8014b60 <__kernel_tanf+0x188>
 8014a36:	bfb8      	it	lt
 8014a38:	eef1 0a60 	vneglt.f32	s1, s1
 8014a3c:	ee77 0a60 	vsub.f32	s1, s14, s1
 8014a40:	ee70 7aa7 	vadd.f32	s15, s1, s15
 8014a44:	eddf 0a47 	vldr	s1, [pc, #284]	; 8014b64 <__kernel_tanf+0x18c>
 8014a48:	ed9f 6a47 	vldr	s12, [pc, #284]	; 8014b68 <__kernel_tanf+0x190>
 8014a4c:	eddf 5a47 	vldr	s11, [pc, #284]	; 8014b6c <__kernel_tanf+0x194>
 8014a50:	ed9f 5a47 	vldr	s10, [pc, #284]	; 8014b70 <__kernel_tanf+0x198>
 8014a54:	4940      	ldr	r1, [pc, #256]	; (8014b58 <__kernel_tanf+0x180>)
 8014a56:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8014a5a:	428a      	cmp	r2, r1
 8014a5c:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8014a60:	ee67 4aa6 	vmul.f32	s9, s15, s13
 8014a64:	eee7 5a06 	vfma.f32	s11, s14, s12
 8014a68:	ed9f 6a42 	vldr	s12, [pc, #264]	; 8014b74 <__kernel_tanf+0x19c>
 8014a6c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014a70:	eddf 5a41 	vldr	s11, [pc, #260]	; 8014b78 <__kernel_tanf+0x1a0>
 8014a74:	eee6 5a07 	vfma.f32	s11, s12, s14
 8014a78:	ed9f 6a40 	vldr	s12, [pc, #256]	; 8014b7c <__kernel_tanf+0x1a4>
 8014a7c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014a80:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8014b80 <__kernel_tanf+0x1a8>
 8014a84:	eee6 5a07 	vfma.f32	s11, s12, s14
 8014a88:	ed9f 6a3e 	vldr	s12, [pc, #248]	; 8014b84 <__kernel_tanf+0x1ac>
 8014a8c:	eea7 6a05 	vfma.f32	s12, s14, s10
 8014a90:	ed9f 5a3d 	vldr	s10, [pc, #244]	; 8014b88 <__kernel_tanf+0x1b0>
 8014a94:	eea6 5a07 	vfma.f32	s10, s12, s14
 8014a98:	ed9f 6a3c 	vldr	s12, [pc, #240]	; 8014b8c <__kernel_tanf+0x1b4>
 8014a9c:	eea5 6a07 	vfma.f32	s12, s10, s14
 8014aa0:	ed9f 5a3b 	vldr	s10, [pc, #236]	; 8014b90 <__kernel_tanf+0x1b8>
 8014aa4:	eea6 5a07 	vfma.f32	s10, s12, s14
 8014aa8:	ed9f 6a3a 	vldr	s12, [pc, #232]	; 8014b94 <__kernel_tanf+0x1bc>
 8014aac:	eea5 6a07 	vfma.f32	s12, s10, s14
 8014ab0:	eeb0 7a46 	vmov.f32	s14, s12
 8014ab4:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8014ab8:	eeb0 6a60 	vmov.f32	s12, s1
 8014abc:	eea7 6a24 	vfma.f32	s12, s14, s9
 8014ac0:	ed9f 7a35 	vldr	s14, [pc, #212]	; 8014b98 <__kernel_tanf+0x1c0>
 8014ac4:	eee6 0a26 	vfma.f32	s1, s12, s13
 8014ac8:	eee4 0a87 	vfma.f32	s1, s9, s14
 8014acc:	ee77 6aa0 	vadd.f32	s13, s15, s1
 8014ad0:	dd1d      	ble.n	8014b0e <__kernel_tanf+0x136>
 8014ad2:	ee07 0a10 	vmov	s14, r0
 8014ad6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014ada:	ee66 5aa6 	vmul.f32	s11, s13, s13
 8014ade:	ee76 6a87 	vadd.f32	s13, s13, s14
 8014ae2:	179b      	asrs	r3, r3, #30
 8014ae4:	ee85 6aa6 	vdiv.f32	s12, s11, s13
 8014ae8:	f003 0302 	and.w	r3, r3, #2
 8014aec:	f1c3 0301 	rsb	r3, r3, #1
 8014af0:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8014af4:	ee76 0a60 	vsub.f32	s1, s12, s1
 8014af8:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8014afc:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8014b00:	ee07 3a90 	vmov	s15, r3
 8014b04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014b08:	ee67 7a27 	vmul.f32	s15, s14, s15
 8014b0c:	e77c      	b.n	8014a08 <__kernel_tanf+0x30>
 8014b0e:	2801      	cmp	r0, #1
 8014b10:	d01f      	beq.n	8014b52 <__kernel_tanf+0x17a>
 8014b12:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8014b16:	eec7 5a26 	vdiv.f32	s11, s14, s13
 8014b1a:	4b20      	ldr	r3, [pc, #128]	; (8014b9c <__kernel_tanf+0x1c4>)
 8014b1c:	ee16 2a90 	vmov	r2, s13
 8014b20:	401a      	ands	r2, r3
 8014b22:	ee06 2a10 	vmov	s12, r2
 8014b26:	ee15 2a90 	vmov	r2, s11
 8014b2a:	4013      	ands	r3, r2
 8014b2c:	ee07 3a10 	vmov	s14, r3
 8014b30:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014b34:	eee6 6a07 	vfma.f32	s13, s12, s14
 8014b38:	ee76 7a67 	vsub.f32	s15, s12, s15
 8014b3c:	ee70 0ae7 	vsub.f32	s1, s1, s15
 8014b40:	eef0 7a66 	vmov.f32	s15, s13
 8014b44:	eee7 7a20 	vfma.f32	s15, s14, s1
 8014b48:	eea7 7aa5 	vfma.f32	s14, s15, s11
 8014b4c:	eef0 7a47 	vmov.f32	s15, s14
 8014b50:	e75a      	b.n	8014a08 <__kernel_tanf+0x30>
 8014b52:	eef0 7a66 	vmov.f32	s15, s13
 8014b56:	e757      	b.n	8014a08 <__kernel_tanf+0x30>
 8014b58:	3f2ca13f 	.word	0x3f2ca13f
 8014b5c:	3f490fda 	.word	0x3f490fda
 8014b60:	33222168 	.word	0x33222168
 8014b64:	00000000 	.word	0x00000000
 8014b68:	37d95384 	.word	0x37d95384
 8014b6c:	3895c07a 	.word	0x3895c07a
 8014b70:	b79bae5f 	.word	0xb79bae5f
 8014b74:	398137b9 	.word	0x398137b9
 8014b78:	3abede48 	.word	0x3abede48
 8014b7c:	3c11371f 	.word	0x3c11371f
 8014b80:	3d5d0dd1 	.word	0x3d5d0dd1
 8014b84:	38a3f445 	.word	0x38a3f445
 8014b88:	3a1a26c8 	.word	0x3a1a26c8
 8014b8c:	3b6b6916 	.word	0x3b6b6916
 8014b90:	3cb327a4 	.word	0x3cb327a4
 8014b94:	3e088889 	.word	0x3e088889
 8014b98:	3eaaaaab 	.word	0x3eaaaaab
 8014b9c:	fffff000 	.word	0xfffff000

08014ba0 <with_errnof>:
 8014ba0:	b510      	push	{r4, lr}
 8014ba2:	ed2d 8b02 	vpush	{d8}
 8014ba6:	eeb0 8a40 	vmov.f32	s16, s0
 8014baa:	4604      	mov	r4, r0
 8014bac:	f7fb f8ca 	bl	800fd44 <__errno>
 8014bb0:	eeb0 0a48 	vmov.f32	s0, s16
 8014bb4:	ecbd 8b02 	vpop	{d8}
 8014bb8:	6004      	str	r4, [r0, #0]
 8014bba:	bd10      	pop	{r4, pc}

08014bbc <xflowf>:
 8014bbc:	b130      	cbz	r0, 8014bcc <xflowf+0x10>
 8014bbe:	eef1 7a40 	vneg.f32	s15, s0
 8014bc2:	2022      	movs	r0, #34	; 0x22
 8014bc4:	ee27 0a80 	vmul.f32	s0, s15, s0
 8014bc8:	f7ff bfea 	b.w	8014ba0 <with_errnof>
 8014bcc:	eef0 7a40 	vmov.f32	s15, s0
 8014bd0:	e7f7      	b.n	8014bc2 <xflowf+0x6>
	...

08014bd4 <__math_uflowf>:
 8014bd4:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8014bdc <__math_uflowf+0x8>
 8014bd8:	f7ff bff0 	b.w	8014bbc <xflowf>
 8014bdc:	10000000 	.word	0x10000000

08014be0 <__math_may_uflowf>:
 8014be0:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8014be8 <__math_may_uflowf+0x8>
 8014be4:	f7ff bfea 	b.w	8014bbc <xflowf>
 8014be8:	1a200000 	.word	0x1a200000

08014bec <__math_oflowf>:
 8014bec:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8014bf4 <__math_oflowf+0x8>
 8014bf0:	f7ff bfe4 	b.w	8014bbc <xflowf>
 8014bf4:	70000000 	.word	0x70000000

08014bf8 <__math_divzerof>:
 8014bf8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8014bfc:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8014c00:	2800      	cmp	r0, #0
 8014c02:	fe40 7a27 	vseleq.f32	s15, s0, s15
 8014c06:	ed9f 0a03 	vldr	s0, [pc, #12]	; 8014c14 <__math_divzerof+0x1c>
 8014c0a:	2022      	movs	r0, #34	; 0x22
 8014c0c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8014c10:	f7ff bfc6 	b.w	8014ba0 <with_errnof>
 8014c14:	00000000 	.word	0x00000000

08014c18 <__math_invalidf>:
 8014c18:	eef0 7a40 	vmov.f32	s15, s0
 8014c1c:	ee30 7a40 	vsub.f32	s14, s0, s0
 8014c20:	eef4 7a67 	vcmp.f32	s15, s15
 8014c24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014c28:	ee87 0a07 	vdiv.f32	s0, s14, s14
 8014c2c:	d602      	bvs.n	8014c34 <__math_invalidf+0x1c>
 8014c2e:	2021      	movs	r0, #33	; 0x21
 8014c30:	f7ff bfb6 	b.w	8014ba0 <with_errnof>
 8014c34:	4770      	bx	lr

08014c36 <matherr>:
 8014c36:	2000      	movs	r0, #0
 8014c38:	4770      	bx	lr
 8014c3a:	0000      	movs	r0, r0
 8014c3c:	0000      	movs	r0, r0
	...

08014c40 <nan>:
 8014c40:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8014c48 <nan+0x8>
 8014c44:	4770      	bx	lr
 8014c46:	bf00      	nop
 8014c48:	00000000 	.word	0x00000000
 8014c4c:	7ff80000 	.word	0x7ff80000

08014c50 <expm1f>:
 8014c50:	ee10 2a10 	vmov	r2, s0
 8014c54:	4984      	ldr	r1, [pc, #528]	; (8014e68 <expm1f+0x218>)
 8014c56:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
 8014c5a:	428b      	cmp	r3, r1
 8014c5c:	d923      	bls.n	8014ca6 <expm1f+0x56>
 8014c5e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8014c62:	d902      	bls.n	8014c6a <expm1f+0x1a>
 8014c64:	ee30 0a00 	vadd.f32	s0, s0, s0
 8014c68:	4770      	bx	lr
 8014c6a:	d105      	bne.n	8014c78 <expm1f+0x28>
 8014c6c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8014c70:	2a00      	cmp	r2, #0
 8014c72:	fe20 0a27 	vselge.f32	s0, s0, s15
 8014c76:	4770      	bx	lr
 8014c78:	2a00      	cmp	r2, #0
 8014c7a:	db08      	blt.n	8014c8e <expm1f+0x3e>
 8014c7c:	4a7b      	ldr	r2, [pc, #492]	; (8014e6c <expm1f+0x21c>)
 8014c7e:	4293      	cmp	r3, r2
 8014c80:	f240 80ea 	bls.w	8014e58 <expm1f+0x208>
 8014c84:	ed9f 0a7a 	vldr	s0, [pc, #488]	; 8014e70 <expm1f+0x220>
 8014c88:	ee20 0a00 	vmul.f32	s0, s0, s0
 8014c8c:	4770      	bx	lr
 8014c8e:	eddf 7a79 	vldr	s15, [pc, #484]	; 8014e74 <expm1f+0x224>
 8014c92:	ee70 7a27 	vadd.f32	s15, s0, s15
 8014c96:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014c9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014c9e:	d554      	bpl.n	8014d4a <expm1f+0xfa>
 8014ca0:	eebf 0a00 	vmov.f32	s0, #240	; 0xbf800000 -1.0
 8014ca4:	4770      	bx	lr
 8014ca6:	4974      	ldr	r1, [pc, #464]	; (8014e78 <expm1f+0x228>)
 8014ca8:	428b      	cmp	r3, r1
 8014caa:	d96c      	bls.n	8014d86 <expm1f+0x136>
 8014cac:	4973      	ldr	r1, [pc, #460]	; (8014e7c <expm1f+0x22c>)
 8014cae:	428b      	cmp	r3, r1
 8014cb0:	d84b      	bhi.n	8014d4a <expm1f+0xfa>
 8014cb2:	ed9f 7a73 	vldr	s14, [pc, #460]	; 8014e80 <expm1f+0x230>
 8014cb6:	2a00      	cmp	r2, #0
 8014cb8:	bfa7      	ittee	ge
 8014cba:	ee30 7a47 	vsubge.f32	s14, s0, s14
 8014cbe:	eddf 7a71 	vldrge	s15, [pc, #452]	; 8014e84 <expm1f+0x234>
 8014cc2:	eddf 7a71 	vldrlt	s15, [pc, #452]	; 8014e88 <expm1f+0x238>
 8014cc6:	ee30 7a07 	vaddlt.f32	s14, s0, s14
 8014cca:	bfac      	ite	ge
 8014ccc:	2301      	movge	r3, #1
 8014cce:	f04f 33ff 	movlt.w	r3, #4294967295
 8014cd2:	ee37 0a67 	vsub.f32	s0, s14, s15
 8014cd6:	ee37 7a40 	vsub.f32	s14, s14, s0
 8014cda:	ee77 7a67 	vsub.f32	s15, s14, s15
 8014cde:	eef6 5a00 	vmov.f32	s11, #96	; 0x3f000000  0.5
 8014ce2:	ee20 5a25 	vmul.f32	s10, s0, s11
 8014ce6:	eddf 6a69 	vldr	s13, [pc, #420]	; 8014e8c <expm1f+0x23c>
 8014cea:	ed9f 6a69 	vldr	s12, [pc, #420]	; 8014e90 <expm1f+0x240>
 8014cee:	ee20 7a05 	vmul.f32	s14, s0, s10
 8014cf2:	eea7 6a26 	vfma.f32	s12, s14, s13
 8014cf6:	eddf 6a67 	vldr	s13, [pc, #412]	; 8014e94 <expm1f+0x244>
 8014cfa:	eee6 6a07 	vfma.f32	s13, s12, s14
 8014cfe:	ed9f 6a66 	vldr	s12, [pc, #408]	; 8014e98 <expm1f+0x248>
 8014d02:	eea6 6a87 	vfma.f32	s12, s13, s14
 8014d06:	eddf 6a65 	vldr	s13, [pc, #404]	; 8014e9c <expm1f+0x24c>
 8014d0a:	eee6 6a07 	vfma.f32	s13, s12, s14
 8014d0e:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8014d12:	eef0 4a46 	vmov.f32	s9, s12
 8014d16:	eee6 4a87 	vfma.f32	s9, s13, s14
 8014d1a:	eef0 6a64 	vmov.f32	s13, s9
 8014d1e:	eef0 4a08 	vmov.f32	s9, #8	; 0x40400000  3.0
 8014d22:	eee5 4a66 	vfms.f32	s9, s10, s13
 8014d26:	ee36 5ae4 	vsub.f32	s10, s13, s9
 8014d2a:	eef1 6a08 	vmov.f32	s13, #24	; 0x40c00000  6.0
 8014d2e:	eee0 6a64 	vfms.f32	s13, s0, s9
 8014d32:	eef0 4a66 	vmov.f32	s9, s13
 8014d36:	eec5 6a24 	vdiv.f32	s13, s10, s9
 8014d3a:	ee66 6a87 	vmul.f32	s13, s13, s14
 8014d3e:	bb83      	cbnz	r3, 8014da2 <expm1f+0x152>
 8014d40:	eef0 7a47 	vmov.f32	s15, s14
 8014d44:	eed0 7a26 	vfnms.f32	s15, s0, s13
 8014d48:	e026      	b.n	8014d98 <expm1f+0x148>
 8014d4a:	eddf 7a55 	vldr	s15, [pc, #340]	; 8014ea0 <expm1f+0x250>
 8014d4e:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8014d52:	ee20 7a27 	vmul.f32	s14, s0, s15
 8014d56:	eefe 7a00 	vmov.f32	s15, #224	; 0xbf000000 -0.5
 8014d5a:	2a00      	cmp	r2, #0
 8014d5c:	fe66 7aa7 	vselge.f32	s15, s13, s15
 8014d60:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014d64:	ed9f 7a46 	vldr	s14, [pc, #280]	; 8014e80 <expm1f+0x230>
 8014d68:	eddf 6a46 	vldr	s13, [pc, #280]	; 8014e84 <expm1f+0x234>
 8014d6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014d70:	ee17 3a90 	vmov	r3, s15
 8014d74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014d78:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8014d7c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014d80:	eeb0 7a40 	vmov.f32	s14, s0
 8014d84:	e7a5      	b.n	8014cd2 <expm1f+0x82>
 8014d86:	f1b3 5f4c 	cmp.w	r3, #855638016	; 0x33000000
 8014d8a:	d208      	bcs.n	8014d9e <expm1f+0x14e>
 8014d8c:	eddf 7a38 	vldr	s15, [pc, #224]	; 8014e70 <expm1f+0x220>
 8014d90:	ee70 7a27 	vadd.f32	s15, s0, s15
 8014d94:	ee77 7ae7 	vsub.f32	s15, s15, s15
 8014d98:	ee30 0a67 	vsub.f32	s0, s0, s15
 8014d9c:	4770      	bx	lr
 8014d9e:	2300      	movs	r3, #0
 8014da0:	e79d      	b.n	8014cde <expm1f+0x8e>
 8014da2:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8014da6:	1c5a      	adds	r2, r3, #1
 8014da8:	eed6 7a80 	vfnms.f32	s15, s13, s0
 8014dac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014db0:	d106      	bne.n	8014dc0 <expm1f+0x170>
 8014db2:	ee70 7a67 	vsub.f32	s15, s0, s15
 8014db6:	eebe 0a00 	vmov.f32	s0, #224	; 0xbf000000 -0.5
 8014dba:	eea7 0aa5 	vfma.f32	s0, s15, s11
 8014dbe:	4770      	bx	lr
 8014dc0:	2b01      	cmp	r3, #1
 8014dc2:	d118      	bne.n	8014df6 <expm1f+0x1a6>
 8014dc4:	eebd 7a00 	vmov.f32	s14, #208	; 0xbe800000 -0.250
 8014dc8:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8014dcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014dd0:	bf41      	itttt	mi
 8014dd2:	ee30 0a25 	vaddmi.f32	s0, s0, s11
 8014dd6:	ee37 0ac0 	vsubmi.f32	s0, s15, s0
 8014dda:	eef8 7a00 	vmovmi.f32	s15, #128	; 0xc0000000 -2.0
 8014dde:	ee20 0a27 	vmulmi.f32	s0, s0, s15
 8014de2:	bf5f      	itttt	pl
 8014de4:	ee30 0a67 	vsubpl.f32	s0, s0, s15
 8014de8:	eef0 7a00 	vmovpl.f32	s15, #0	; 0x40000000  2.0
 8014dec:	eea0 6a27 	vfmapl.f32	s12, s0, s15
 8014df0:	eeb0 0a46 	vmovpl.f32	s0, s12
 8014df4:	4770      	bx	lr
 8014df6:	1c5a      	adds	r2, r3, #1
 8014df8:	2a39      	cmp	r2, #57	; 0x39
 8014dfa:	ea4f 51c3 	mov.w	r1, r3, lsl #23
 8014dfe:	d90b      	bls.n	8014e18 <expm1f+0x1c8>
 8014e00:	ee37 0ac0 	vsub.f32	s0, s15, s0
 8014e04:	ee36 0a40 	vsub.f32	s0, s12, s0
 8014e08:	ee10 3a10 	vmov	r3, s0
 8014e0c:	440b      	add	r3, r1
 8014e0e:	ee00 3a10 	vmov	s0, r3
 8014e12:	ee30 0a46 	vsub.f32	s0, s0, s12
 8014e16:	4770      	bx	lr
 8014e18:	2b16      	cmp	r3, #22
 8014e1a:	dc11      	bgt.n	8014e40 <expm1f+0x1f0>
 8014e1c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8014e20:	fa42 f303 	asr.w	r3, r2, r3
 8014e24:	f1c3 537e 	rsb	r3, r3, #1065353216	; 0x3f800000
 8014e28:	ee37 0ac0 	vsub.f32	s0, s15, s0
 8014e2c:	ee07 3a90 	vmov	s15, r3
 8014e30:	ee37 0ac0 	vsub.f32	s0, s15, s0
 8014e34:	ee10 3a10 	vmov	r3, s0
 8014e38:	440b      	add	r3, r1
 8014e3a:	ee00 3a10 	vmov	s0, r3
 8014e3e:	4770      	bx	lr
 8014e40:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8014e44:	05db      	lsls	r3, r3, #23
 8014e46:	ee07 3a10 	vmov	s14, r3
 8014e4a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014e4e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8014e52:	ee30 0a06 	vadd.f32	s0, s0, s12
 8014e56:	e7ed      	b.n	8014e34 <expm1f+0x1e4>
 8014e58:	eddf 7a11 	vldr	s15, [pc, #68]	; 8014ea0 <expm1f+0x250>
 8014e5c:	ee20 7a27 	vmul.f32	s14, s0, s15
 8014e60:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8014e64:	e77c      	b.n	8014d60 <expm1f+0x110>
 8014e66:	bf00      	nop
 8014e68:	4195b843 	.word	0x4195b843
 8014e6c:	42b17217 	.word	0x42b17217
 8014e70:	7149f2ca 	.word	0x7149f2ca
 8014e74:	0da24260 	.word	0x0da24260
 8014e78:	3eb17218 	.word	0x3eb17218
 8014e7c:	3f851591 	.word	0x3f851591
 8014e80:	3f317180 	.word	0x3f317180
 8014e84:	3717f7d1 	.word	0x3717f7d1
 8014e88:	b717f7d1 	.word	0xb717f7d1
 8014e8c:	b457edbb 	.word	0xb457edbb
 8014e90:	36867e54 	.word	0x36867e54
 8014e94:	b8a670cd 	.word	0xb8a670cd
 8014e98:	3ad00d01 	.word	0x3ad00d01
 8014e9c:	bd088889 	.word	0xbd088889
 8014ea0:	3fb8aa3b 	.word	0x3fb8aa3b

08014ea4 <finitef>:
 8014ea4:	ee10 3a10 	vmov	r3, s0
 8014ea8:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
 8014eac:	f1b0 4fff 	cmp.w	r0, #2139095040	; 0x7f800000
 8014eb0:	bfac      	ite	ge
 8014eb2:	2000      	movge	r0, #0
 8014eb4:	2001      	movlt	r0, #1
 8014eb6:	4770      	bx	lr

08014eb8 <scalbnf>:
 8014eb8:	b508      	push	{r3, lr}
 8014eba:	ee10 2a10 	vmov	r2, s0
 8014ebe:	f032 4300 	bics.w	r3, r2, #2147483648	; 0x80000000
 8014ec2:	ed2d 8b02 	vpush	{d8}
 8014ec6:	eef0 0a40 	vmov.f32	s1, s0
 8014eca:	d004      	beq.n	8014ed6 <scalbnf+0x1e>
 8014ecc:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8014ed0:	d306      	bcc.n	8014ee0 <scalbnf+0x28>
 8014ed2:	ee70 0a00 	vadd.f32	s1, s0, s0
 8014ed6:	ecbd 8b02 	vpop	{d8}
 8014eda:	eeb0 0a60 	vmov.f32	s0, s1
 8014ede:	bd08      	pop	{r3, pc}
 8014ee0:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8014ee4:	d21c      	bcs.n	8014f20 <scalbnf+0x68>
 8014ee6:	4b1f      	ldr	r3, [pc, #124]	; (8014f64 <scalbnf+0xac>)
 8014ee8:	eddf 7a1f 	vldr	s15, [pc, #124]	; 8014f68 <scalbnf+0xb0>
 8014eec:	4298      	cmp	r0, r3
 8014eee:	ee60 0a27 	vmul.f32	s1, s0, s15
 8014ef2:	db10      	blt.n	8014f16 <scalbnf+0x5e>
 8014ef4:	ee10 2a90 	vmov	r2, s1
 8014ef8:	f3c2 53c7 	ubfx	r3, r2, #23, #8
 8014efc:	3b19      	subs	r3, #25
 8014efe:	4403      	add	r3, r0
 8014f00:	2bfe      	cmp	r3, #254	; 0xfe
 8014f02:	dd0f      	ble.n	8014f24 <scalbnf+0x6c>
 8014f04:	ed9f 8a19 	vldr	s16, [pc, #100]	; 8014f6c <scalbnf+0xb4>
 8014f08:	eeb0 0a48 	vmov.f32	s0, s16
 8014f0c:	f000 f834 	bl	8014f78 <copysignf>
 8014f10:	ee60 0a08 	vmul.f32	s1, s0, s16
 8014f14:	e7df      	b.n	8014ed6 <scalbnf+0x1e>
 8014f16:	eddf 7a16 	vldr	s15, [pc, #88]	; 8014f70 <scalbnf+0xb8>
 8014f1a:	ee60 0aa7 	vmul.f32	s1, s1, s15
 8014f1e:	e7da      	b.n	8014ed6 <scalbnf+0x1e>
 8014f20:	0ddb      	lsrs	r3, r3, #23
 8014f22:	e7ec      	b.n	8014efe <scalbnf+0x46>
 8014f24:	2b00      	cmp	r3, #0
 8014f26:	dd06      	ble.n	8014f36 <scalbnf+0x7e>
 8014f28:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
 8014f2c:	ea42 53c3 	orr.w	r3, r2, r3, lsl #23
 8014f30:	ee00 3a90 	vmov	s1, r3
 8014f34:	e7cf      	b.n	8014ed6 <scalbnf+0x1e>
 8014f36:	f113 0f16 	cmn.w	r3, #22
 8014f3a:	da06      	bge.n	8014f4a <scalbnf+0x92>
 8014f3c:	f24c 3350 	movw	r3, #50000	; 0xc350
 8014f40:	4298      	cmp	r0, r3
 8014f42:	dcdf      	bgt.n	8014f04 <scalbnf+0x4c>
 8014f44:	ed9f 8a0a 	vldr	s16, [pc, #40]	; 8014f70 <scalbnf+0xb8>
 8014f48:	e7de      	b.n	8014f08 <scalbnf+0x50>
 8014f4a:	3319      	adds	r3, #25
 8014f4c:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
 8014f50:	ea42 53c3 	orr.w	r3, r2, r3, lsl #23
 8014f54:	eddf 7a07 	vldr	s15, [pc, #28]	; 8014f74 <scalbnf+0xbc>
 8014f58:	ee07 3a10 	vmov	s14, r3
 8014f5c:	ee67 0a27 	vmul.f32	s1, s14, s15
 8014f60:	e7b9      	b.n	8014ed6 <scalbnf+0x1e>
 8014f62:	bf00      	nop
 8014f64:	ffff3cb0 	.word	0xffff3cb0
 8014f68:	4c000000 	.word	0x4c000000
 8014f6c:	7149f2ca 	.word	0x7149f2ca
 8014f70:	0da24260 	.word	0x0da24260
 8014f74:	33000000 	.word	0x33000000

08014f78 <copysignf>:
 8014f78:	ee10 3a10 	vmov	r3, s0
 8014f7c:	ee10 2a90 	vmov	r2, s1
 8014f80:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8014f84:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 8014f88:	4313      	orrs	r3, r2
 8014f8a:	ee00 3a10 	vmov	s0, r3
 8014f8e:	4770      	bx	lr

08014f90 <_init>:
 8014f90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014f92:	bf00      	nop
 8014f94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8014f96:	bc08      	pop	{r3}
 8014f98:	469e      	mov	lr, r3
 8014f9a:	4770      	bx	lr

08014f9c <_fini>:
 8014f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014f9e:	bf00      	nop
 8014fa0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8014fa2:	bc08      	pop	{r3}
 8014fa4:	469e      	mov	lr, r3
 8014fa6:	4770      	bx	lr
